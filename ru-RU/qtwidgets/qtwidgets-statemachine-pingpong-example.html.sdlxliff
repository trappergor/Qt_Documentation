<?xml version="1.0" encoding="utf-8"?><xliff xmlns:sdl="http://sdl.com/FileTypes/SdlXliff/1.0" xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2" sdl:version="1.0"><file original="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtwidgets\qtwidgets-statemachine-pingpong-example.html" datatype="x-sdlfilterframework2" source-language="en-US" target-language="ru-RU"><header><reference><internal-file form="base64">UEsDBBQAAAAIAFdAgkkT7GrLYAkAABApAAARAAAAYXNnNWdicWcuM3JuLmh0bWztWm1z27gR/p5f
geOlidSapJ1Meh3rJUltp3MzaeLknN50pjM3EAlROIMEDYCSNWn+e3cBUKJk6iUn5y6duy+2CCwW
+/osCG7/+W0uyJQpzWUxCE6i44CwIpEpL7JB8OHqVfi34PnwQf+b87dnV/++vCATkwt4xn9EUCRi
RYADjKbDB4T0c2YoUJkyZDcVnw6CM1kYVpjwal6ygCTuaRAYdmtiZNMjyYQqzcygMmPYjsS4XxiS
EmQoZZFFN6lMSBha9oYbwYaXMEUuYY78YKhhmlzc0rwUjPyXvDPkR55mzGjyLPquH7sFuFTw4poo
JgaBNnPB9IQxExADYnlpEq0DMlFs7CliOR7DIhZqjswjOx9bXjpRvDTNxT/TKXWjAVIQMuNFKmeR
LISkKRmQcVUkBqzc6X4EfaocrBCBmBeC4U/99/kVzd7QnHUCFDToRtywvHPcjcA0L41RfFQZmET5
giOyKqEVrdv71EPZYicGWDF2XumPZDqHfymfkkRQrQcBTjAVEJ4OghsD8vgBq1yDLqe88PqsD4dK
VkXKUj+9SlDQKc8oqjuiakGB/qMjcEffKJDHpGTYp97iURRbQWJdlaVUhqVhKagZS5XrkBZpCJEz
5lmlLFcdYeh8e2PCZ+F3wRCcbp1Nh+DwdLjK+cbMXECE4BF2a1faJT5OVpdtCi1HEYPg8Mcrgf9q
jUcVF6lPpGCpIBp4ZQriIjUTSLXj4z8FhAqeQd4pnk1MrUZ0Qt6zMVOQh4yc+1CxWlsZlrZsClP7
IAYneH+5n02v+OQLVkcxgIJWQoJ+PmtdpHnKrGtbBsN6H6v9+uDQCVaLNzmpV9tMDbY4YHIC9Lqk
xWK/auQXQdDDuAeOhw8falya02QCusU1kIQpc6kBprR40pTdzgVDAmFTQBbigKFcaORNgbQcXk24
JswDjUUEm7iEErsbopghswk4jpiZdIMaAC/Pq4In8EBGc1JKbVBBNrVrjSRmwhwt8fJG5Gox5JgK
Ka9hH03GUgg506f9uESRFu4CXky9xFgCcXmeEa2SQcBzmjG9VN/LHpVFhpEHIIxwhrysdoz0AfjZ
EOmZ6sf2gUDq1eOyOe7Vo6BtSRUVggk/dkR4xB59e/uE9VC5uaWxErKUAJRWwtCCyUqLueU+40IQ
Q6/BbIoWmtv8JpirJYM/hQE6OSYMrCOBn4q89htFdqazbNHc1sJjruDXkrqmtX4gFeiGIqq5FXmz
wo6rYhrm0qY/aWPNCm9kCHFj1yW00qy5QYvYEBFWaAhDNtskcM8aTksii9oaaoFESVlCstoq1ciV
azafSQVobZ99vhBMtgtrgtMN5GU1Ejyp6VdosPoBaNn1dQIS8nHjziusTj1iLSTodNdlaOHf2UWw
Mi9LBuVCQlqfnvp5PIUczOSDBq+10/yljUVR5SMsrk/8ZLe7AHGw1yd4gMq9p8Pkb+4w+ftx2NOt
DoPMU8whEeB9Umkj8xrYEfNSNgY4T498Fi8i/S60Lmzqpw5PaqYOCBBbeA/KaKY6uxiTDQ75s5+H
qgIGaRr+dKewHb8IfbRZaCWhWsMBc03uduopV6aiYou5ppLXrACPL7CK7AzYXcp3ybufzi/OXv/0
9l8X799/f37hZfzYMIc/LnS6G3iF25PjUWZ6tamh4LiUbrcBVKI7BaPT7fYawoxLxQsz7mg4w1dm
w5ZHrdpreLeBE8nw0U0lTQ9r3fP/FO6htka9U0vmLYrp5Uoxtbx9Bi6OaFB6qbHlVS8K9p2sbDuS
4bGuaAzjQdAdaA7P1KvFoeeAjH05AivSxCyZHZS+SzadL5hLIymFw8srps3BOcPuJM1KurSLpJip
VG0s0mEH5xIKDkbbQDjYzmewb9n+4ieUZsbdHzg24ur/DyHPmaBzlu4LlMtj0mehYe2JZ8fH6764
X5wF+b75pTjbhJl2vF2+yjnQBcSE7bPMvgTCe5M/JsF7Hfp+AxYf2SNSG2ivnZdIZ8bNBKZT9BFy
BfORHN65uGYJvKrp7g5cb8jbFPVAeJdfIbzLP+D9dwvvT/+A9/uCd/6Vw/svPkbLLwfvcl94518Z
vLsA5svoxYvxznYSqrLksxzoOOCN7545smMaBJh2HyxTpi0lz6RiL8tS4P30sqoQWpadfeS3W9ir
q00b2Lfzfzp3LI1nH3u7lu1phkzJqiSfBbltGb3zbmEXwS7QvvTX5O6zxiIZrfgHI5hm5u3oZ6jV
9hPiFmCw263DwhoS2OjuLr5YkhHLeKExrxPFqL/vXs00zGS69iXAqbYlx5a3RTsvg7ZS7e9kfzdl
BVt4wF/D/2oucPu1Q/M9yULTdFMx3vSy0jwU7pHT+97iyftx3M7sXHOp/JVdKre4VP4mLuV3XbrM
8jfs1hxt/BK1xzc/CwR4t20rMzJqy338ZglzXBF3MevmIvJG1pdxq8XZ8e7zoYHKwoxg+C7FhxH5
EQu5rpLJ6tmjWcudOlpWKqmPATNZPDaAXoTdchDW6qVY6K/uenBiFfM1CR7r1XNsAwXtJzxglqCa
aX14WTtyPMYvvo1GhfqDIUKqo4ZIAqtNOOgC4oNDEjjEgBwzNMcMhKZgJ0sM0wnVbAeA+o03BFC0
jB6bLmt5st9iSIPvC7AHFQfwAJfCYbkdWDa8r8ExZAdXdsuSjpXkUzO8X/ECnDR3IeEiEYwJNoAg
aDsoOsK6lgGplbbpZLo8JPlvxkLKsuUiGPaGsPVf6CvslRK8rRel2aEQLj7R28YacK9vUmltY4iR
KAIi17gC7D9vj+UPJbfus2jAAsLGXrHVyrdvYL/FixcvWhn4nq07nSkrT3d+tfStjCXghW8jAgvb
fzRRspjnxDaAYJdZOfddNI8S+A2o6SmG5MnxyV9tT8U7Q85kDnEzJ69NGiGflf4a251mG618C0Ii
KgwZ7OmAjERswlhI6r3wBQeZOIjDrgAoFXzKiJwVTOmoP1JD1Bb3Tlc2AotOeYM1xBGEFys0DGFX
lXKwxFTuXqLgwSrtXYz9dadxPJvNoqyoIqmy2C/X8TgV3qv/ePOBvFJsrYkIGb12xHXjHzmJnqKD
Ea7tpZGeuNc43Ndy+EGOzQz1f4VNX5bPQjuwqgPWhfpCZtJBOQBrCnGhrq0aLT6w0QAGgIwV9gxZ
pLFUxDZ6gKEr9AeUHEAHkUJYQ+14CXjqphvMbRuKQnwwc/SIs1mrU4hLzTrYfG9c7Bob/wdQSwEC
MwAUAAAACABXQIJJE+xqy2AJAAAQKQAAEQAAAAAAAAAAAAAAAAAAAAAAYXNnNWdicWcuM3JuLmh0
bWxQSwUGAAAAAAEAAQA/AAAAjwkAAAAA
</internal-file></reference><sdl:ref-files><sdl:ref-file uid="0" id="Html.DependencyFileId" name="ftoioonn.wu3.html" o-path="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtwidgets\qtwidgets-statemachine-pingpong-example.html" date="12/02/2016 08:02:46" expected-use="Generation"/></sdl:ref-files><file-info xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><value key="SDL:FileId">ac496cd9-ade4-4964-bcce-d01cd0062a02</value><value key="SDL:CreationDate">09/06/2019 14:36:04</value><value key="SDL:OriginalFilePath">D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtwidgets\qtwidgets-statemachine-pingpong-example.html</value><value key="SDL:OriginalEncoding">utf-8</value><value key="SDL:QuickInsertsList">qBold;qItalic;qUnderline;qSubscript;qSuperscript;qSmallCaps</value><value key="NeedsSegmentRenumbering">False</value><value key="HtmlEntityFound">True</value><value key="HeadEntityFound">True</value><value key="MetaEntityFound">True</value><value key="BodyEntityFound">True</value><value key="HtmlVersion">html5</value><value key="OperatingSystem">Linux</value><value key="ParagraphTextDirections"></value><sniff-info><detected-encoding detection-level="Certain" encoding="utf-8"/><detected-source-lang detection-level="Likely" lang="en-US"/></sniff-info></file-info><sdl:filetype-info><sdl:filetype-id>Html 5 2.0.0.0</sdl:filetype-id></sdl:filetype-info><fmt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><fmt-def id="1"/><fmt-def id="2"><value key="TextColor">Blue</value><value key="Underline">True</value></fmt-def><fmt-def id="3"><value key="Italic">True</value></fmt-def></fmt-defs><cxt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><cxt-def id="1" type="LocationDetails" purpose="Location"><props><value key="StartsAt">-1</value><value key="EndsAt">39</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="2" type="LocationDetails" purpose="Location"><props><value key="StartsAt">81</value><value key="EndsAt">176</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="3" type="sdl:meta" color="Control"><fmt id="1"/></cxt-def><cxt-def id="4" type="sdl:html-control" color="Control"><fmt id="1"/></cxt-def><cxt-def id="5" type="LocationDetails" purpose="Location"><props><value key="StartsAt">176</value><value key="EndsAt">224</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="6" type="sdl:title" color="Control"><fmt id="1"/></cxt-def><cxt-def id="7" type="LocationDetails" purpose="Location"><props><value key="StartsAt">636</value><value key="EndsAt">721</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="8" type="x-tm-table-cell"><fmt id="1"/></cxt-def><cxt-def id="9" type="sdl:table-row" color="Control"><fmt id="1"/></cxt-def><cxt-def id="10" type="sdl:table" color="Control"><fmt id="1"/></cxt-def><cxt-def id="11" type="div" code="DIV" name="Div" descr="A div section" color=""><fmt id="1"/></cxt-def><cxt-def id="12" type="sdl:body" color="Control"><fmt id="1"/></cxt-def><cxt-def id="13" type="sdl:link" color="Control"><fmt id="1"/></cxt-def><cxt-def id="14" type="LocationDetails" purpose="Location"><props><value key="StartsAt">726</value><value key="EndsAt">776</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="15" type="LocationDetails" purpose="Location"><props><value key="StartsAt">781</value><value key="EndsAt">810</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="16" type="LocationDetails" purpose="Location"><props><value key="StartsAt">861</value><value key="EndsAt">942</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="17" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1153</value><value key="EndsAt">1195</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="18" type="x-tm-heading"><fmt id="1"/></cxt-def><cxt-def id="19" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1195</value><value key="EndsAt">1278</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="20" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1278</value><value key="EndsAt">1321</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="21" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1321</value><value key="EndsAt">1463</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="22" type="sdl:paragraph" color="Control"><fmt id="1"/></cxt-def><cxt-def id="23" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1468</value><value key="EndsAt">1539</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="24" type="Attribute" code="ATT" name="Attribute" descr="alt attribute"><props><value key="TranslatesAttribute">alt</value><value key="InlineTranslatesAttribute">alt</value></props></cxt-def><cxt-def id="25" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1543</value><value key="EndsAt">1717</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="26" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1722</value><value key="EndsAt">1987</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="27" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1992</value><value key="EndsAt">2877</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="28" type="pre" code="PRE" name="Pre" descr="A preformated text section" color=""><fmt id="1"/></cxt-def><cxt-def id="29" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2884</value><value key="EndsAt">2968</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="30" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2973</value><value key="EndsAt">3767</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="31" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3774</value><value key="EndsAt">3906</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="32" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3911</value><value key="EndsAt">5151</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="33" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5158</value><value key="EndsAt">5409</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="34" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5414</value><value key="EndsAt">6654</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="35" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6661</value><value key="EndsAt">6912</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="36" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6917</value><value key="EndsAt">7688</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="37" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7695</value><value key="EndsAt">7780</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="38" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7785</value><value key="EndsAt">8686</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="39" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8693</value><value key="EndsAt">9125</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="40" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9130</value><value key="EndsAt">9421</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="41" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9428</value><value key="EndsAt">9547</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="42" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9552</value><value key="EndsAt">9561</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="43" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9571</value><value key="EndsAt">9665</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="44" type="x-tm-listitem"><fmt id="1"/></cxt-def><cxt-def id="45" type="sdl:unordered-list" color="Control"><fmt id="1"/></cxt-def><cxt-def id="46" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9671</value><value key="EndsAt">9773</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="47" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9785</value><value key="EndsAt">9834</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="48" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9913</value><value key="EndsAt">9946</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="49" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9946</value><value key="EndsAt">10484</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def></cxt-defs><node-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><node-def id="1" parent="2"><cxt id="3"/></node-def><node-def id="2"><cxt id="4"/></node-def><node-def id="3" parent="1"><cxt id="3"/></node-def><node-def id="4" parent="3"><cxt id="6"/></node-def><node-def id="5" parent="6"><cxt id="9"/></node-def><node-def id="6" parent="7"><cxt id="10"/></node-def><node-def id="7" parent="8"><cxt id="11"/></node-def><node-def id="8" parent="9"><cxt id="11"/></node-def><node-def id="9" parent="10"><cxt id="11"/></node-def><node-def id="10" parent="11"><cxt id="11"/></node-def><node-def id="11" parent="12"><cxt id="12"/></node-def><node-def id="12" parent="3"><cxt id="13"/></node-def><node-def id="13" parent="5"><cxt id="8"/></node-def><node-def id="14" parent="5"><cxt id="8"/></node-def><node-def id="15" parent="5"><cxt id="8"/></node-def><node-def id="16" parent="17"><cxt id="9"/></node-def><node-def id="17" parent="7"><cxt id="10"/></node-def><node-def id="18" parent="16"><cxt id="8"/></node-def><node-def id="19" parent="20"><cxt id="11"/></node-def><node-def id="20" parent="21"><cxt id="11"/></node-def><node-def id="21" parent="9"><cxt id="11"/></node-def><node-def id="22" parent="19"><cxt id="18"/></node-def><node-def id="23" parent="19"><cxt id="11"/></node-def><node-def id="24" parent="23"><cxt id="22"/></node-def><node-def id="25" parent="23"><cxt id="22"/></node-def><node-def id="26" parent="23"><cxt id="22"/></node-def><node-def id="27" parent="23"><cxt id="22"/></node-def><node-def id="28" parent="23"><cxt id="28"/></node-def><node-def id="29" parent="23"><cxt id="22"/></node-def><node-def id="30" parent="23"><cxt id="28"/></node-def><node-def id="31" parent="23"><cxt id="22"/></node-def><node-def id="32" parent="23"><cxt id="28"/></node-def><node-def id="33" parent="23"><cxt id="22"/></node-def><node-def id="34" parent="23"><cxt id="28"/></node-def><node-def id="35" parent="23"><cxt id="22"/></node-def><node-def id="36" parent="23"><cxt id="28"/></node-def><node-def id="37" parent="23"><cxt id="22"/></node-def><node-def id="38" parent="23"><cxt id="28"/></node-def><node-def id="39" parent="23"><cxt id="22"/></node-def><node-def id="40" parent="23"><cxt id="28"/></node-def><node-def id="41" parent="23"><cxt id="22"/></node-def><node-def id="42" parent="23"><cxt id="22"/></node-def><node-def id="43" parent="23"><cxt id="45"/></node-def><node-def id="44" parent="43"><cxt id="44"/></node-def><node-def id="45" parent="43"><cxt id="44"/></node-def><node-def id="46" parent="11"><cxt id="11"/></node-def><node-def id="47" parent="46"><cxt id="22"/></node-def></node-defs><tag-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><tag id="4"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdoc/supported-platforms-and-configurations.html#qt-5-7&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="7"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-index.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="10"><bpt name="span" word-end="false">&lt;span class=&quot;subtitle&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="14"><bpt name="a" word-end="false">&lt;a name=&quot;details&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="18"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="21"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="24"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="27"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="30"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="33"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="36"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="39"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="42"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="45"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="48"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="51"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="54"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="57"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="60"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="63"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="66"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="69"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="72"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="75"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="78"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="81"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="84"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="87"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="90"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="93"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="96"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="99"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="102"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="105"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="108"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="111"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="114"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="117"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="120"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="123"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="126"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="129"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="132"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="135"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="138"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="141"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="144"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="147"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="150"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="153"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="156"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="159"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="162"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="165"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="168"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="171"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="174"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="177"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="180"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="183"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="186"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="189"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="192"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="195"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="198"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="201"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="204"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="207"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="210"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="213"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="216"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="219"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="222"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="225"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="228"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="231"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="234"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="237"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="240"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="243"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="246"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="249"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="252"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="255"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="258"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="261"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="264"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="267"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="270"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="273"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="276"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="279"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="282"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="285"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="288"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="291"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="294"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="297"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="300"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="303"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="306"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="309"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="312"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="315"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="318"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="321"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="324"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="327"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="330"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="333"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="336"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="339"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="342"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="345"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="348"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="351"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="354"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="357"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="360"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="363"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="366"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="369"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="372"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="375"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="378"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="381"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="384"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="387"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="390"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="393"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="396"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="399"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="402"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="405"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="408"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="411"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="414"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="417"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="420"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="423"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="426"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="429"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="432"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="435"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="438"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="441"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="444"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="447"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="450"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="453"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="456"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="459"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="462"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="465"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="468"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="471"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="474"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="477"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="480"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="483"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="486"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="489"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="492"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="495"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="498"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-statemachine-pingpong-main-cpp.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="501"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-statemachine-pingpong-pingpong-pro.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="507"><bpt name="a" word-end="false">&lt;a href=&quot;http://www.gnu.org/licenses/fdl.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="0"><ph name="xml" word-end="false">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</ph><props><value key="ProcessingInstructionTag">xml</value></props></tag><tag id="1"><ph name="Comment" word-end="false">&lt;!-- pingpong.qdoc --&gt;</ph></tag><tag id="11"><ph name="Comment" word-end="false">&lt;!-- $$$statemachine/pingpong-description --&gt;</ph></tag><tag id="15"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/pingpong-example.png&quot; alt=&quot;<sub xid="4af41579-7a6d-4c80-ab43-01db818b2b58"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="502"><ph name="Comment" word-end="false">&lt;!-- @@@statemachine/pingpong --&gt;</ph></tag><tag id="503"><ph name="copy" word-end="false" seg-hint="IncludeWithText">&amp;copy;</ph><props><value key="PlaceholderForMappedEntity">true</value></props></tag><tag id="504"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="508"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag></tag-defs></header><body><group><sdl:cxts><sdl:cxt id="1"/></sdl:cxts><trans-unit id="23597100-6128-4155-9603-28bd599ce6f7"><source><x id="0"/>
</source><seg-source><x id="0"/>
</seg-source><target><x id="0"/>
</target></trans-unit></group><group><sdl:cxts><sdl:cxt id="2"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="3"/></sdl:cxts><trans-unit id="9856ced2-29fb-48d7-b7f8-35722b687ca8"><source><x id="1"/></source><seg-source><x id="1"/></seg-source><target><x id="1"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="5"/><sdl:cxt id="6"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="4"/></sdl:cxts><trans-unit id="ae5c4b4b-48ed-4d75-860d-c42b6f77cc82"><source>Ping Pong States Example | Qt Widgets 5.7</source><seg-source><mrk mtype="seg" mid="1">Ping Pong States Example | Qt Widgets 5.7</mrk></seg-source><target><mrk mtype="seg" mid="1"/></target><sdl:seg-defs><sdl:seg id="1"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="13"/></sdl:cxts><trans-unit id="ebe1ce8f-af9a-4453-a012-ce31c6c53fa1"><source><g id="4">Qt 5.7</g></source><seg-source><g id="4"><mrk mtype="seg" mid="2">Qt 5.7</mrk></g></seg-source><target><g id="4"><mrk mtype="seg" mid="2">Qt 5.7</mrk></g></target><sdl:seg-defs><sdl:seg id="2" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/19/2019 12:14:40</sdl:value><sdl:value key="modified_on">03/19/2019 12:14:40</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">-1724339963</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="14"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="14"/></sdl:cxts><trans-unit id="9e88177a-16f8-4b6c-9f94-52a27b9ef4e2"><source><g id="7">Qt Widgets</g></source><seg-source><g id="7"><mrk mtype="seg" mid="3">Qt Widgets</mrk></g></seg-source><target><g id="7"><mrk mtype="seg" mid="3"/></g></target><sdl:seg-defs><sdl:seg id="3"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="15"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="15"/></sdl:cxts><trans-unit id="ea9dcfbc-631d-4805-87dc-47e719f41760"><source>Ping Pong States Example</source><seg-source><mrk mtype="seg" mid="4">Ping Pong States Example</mrk></seg-source><target><mrk mtype="seg" mid="4"/></target><sdl:seg-defs><sdl:seg id="4"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="16"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="18"/></sdl:cxts><trans-unit id="4e999582-4de5-405a-aefc-20f165e9a002"><source>Qt 5.7.1 Reference Documentation</source><seg-source><mrk mtype="seg" mid="5">Qt 5.7.1 Reference Documentation</mrk></seg-source><target><mrk mtype="seg" mid="5"/></target><sdl:seg-defs><sdl:seg id="5"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="17"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="22"/></sdl:cxts><trans-unit id="ef241167-8b6f-4961-a931-219ed319aca8"><source>Ping Pong States Example</source><seg-source><mrk mtype="seg" mid="6">Ping Pong States Example</mrk></seg-source><target><mrk mtype="seg" mid="6"/></target><sdl:seg-defs><sdl:seg id="6"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="19"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="19"/></sdl:cxts><trans-unit id="65bbef64-805b-4490-b1c4-f4a0ad894dd8"><source><g id="10"/> <x id="11"/></source><seg-source><g id="10"/> <x id="11"/></seg-source><target><g id="10"/> <x id="11"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="20"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="23"/></sdl:cxts><trans-unit id="08b5c08f-5987-46ae-8843-de1c6cbc2656"><source><g id="14"/></source><seg-source><g id="14"/></seg-source><target><g id="14"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="24"/></sdl:cxts><trans-unit id="a9076361-5ac9-4b44-8fe8-dde2715729b2"><source>This example implements a statechart where two states communicate by posting events to the state machine. The state chart looks as follows:</source><seg-source><mrk mtype="seg" mid="7">This example implements a statechart where two states communicate by posting events to the state machine.</mrk> <mrk mtype="seg" mid="8">The state chart looks as follows:</mrk></seg-source><target><mrk mtype="seg" mid="7"/> <mrk mtype="seg" mid="8"/></target><sdl:seg-defs><sdl:seg id="7"/><sdl:seg id="8"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="23"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="25"/></sdl:cxts><trans-unit id="4a000194-e0f1-47fe-acd6-f218252bc698"><source><x id="15" xid="4af41579-7a6d-4c80-ab43-01db818b2b58"/></source><seg-source><x id="15" xid="4af41579-7a6d-4c80-ab43-01db818b2b58"/></seg-source><target><x id="15" xid="4af41579-7a6d-4c80-ab43-01db818b2b58"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="24"/></sdl:cxts><trans-unit id="4af41579-7a6d-4c80-ab43-01db818b2b58"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="25"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="26"/></sdl:cxts><trans-unit id="lockTU_1b9e69cd-77d9-485c-8805-3594719b50e4" translate="no" sdl:locktype="Structure"><source><g id="18">pinger</g></source></trans-unit><trans-unit id="lockTU_625e0f38-0b98-4090-9b87-3b1eefe92eda" translate="no" sdl:locktype="Structure"><source><g id="21">ponger</g></source></trans-unit><trans-unit id="lockTU_a7c20ac7-1344-4e28-846c-cf112f0401c4" translate="no" sdl:locktype="Structure"><source><g id="18">pinger</g></source></trans-unit><trans-unit id="lockTU_10b11462-5f27-4e87-8bfe-b87daa07c1b1" translate="no" sdl:locktype="Structure"><source><g id="21">ponger</g></source></trans-unit><trans-unit id="1de89a11-59a2-485e-944c-103a8d152f0b"><source>The <x id="locked1" xid="lockTU_a7c20ac7-1344-4e28-846c-cf112f0401c4"/> and <x id="locked2" xid="lockTU_10b11462-5f27-4e87-8bfe-b87daa07c1b1"/> states are parallel states, i.e. they are entered simultaneously and will take transitions independently of eachother.</source><seg-source><mrk mtype="seg" mid="9">The <x id="locked3" xid="lockTU_1b9e69cd-77d9-485c-8805-3594719b50e4"/> and <x id="locked4" xid="lockTU_625e0f38-0b98-4090-9b87-3b1eefe92eda"/> states are parallel states, i.e. they are entered simultaneously and will take transitions independently of eachother.</mrk></seg-source><target><mrk mtype="seg" mid="9"/></target><sdl:seg-defs><sdl:seg id="9"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="26"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="27"/></sdl:cxts><trans-unit id="lockTU_e7ef13ea-3178-4949-a5c4-8ac04143f40d" translate="no" sdl:locktype="Structure"><source><g id="24">pinger</g></source></trans-unit><trans-unit id="lockTU_f007e82a-b578-49b4-8359-c101c97edfb1" translate="no" sdl:locktype="Structure"><source><g id="27">ping</g></source></trans-unit><trans-unit id="lockTU_c9274fc4-dbc8-4b30-9bee-0dfc5635bfd5" translate="no" sdl:locktype="Structure"><source><g id="30">ponger</g></source></trans-unit><trans-unit id="lockTU_b74054d1-f1a9-4b8d-a265-d56613b9eae0" translate="no" sdl:locktype="Structure"><source><g id="33">pong</g></source></trans-unit><trans-unit id="lockTU_1f03e209-fff2-47cf-bbed-874f65839e41" translate="no" sdl:locktype="Structure"><source><g id="36">pinger</g></source></trans-unit><trans-unit id="lockTU_190b41d1-e14d-4eb9-a53c-b43b5e037939" translate="no" sdl:locktype="Structure"><source><g id="39">ping</g></source></trans-unit><trans-unit id="lockTU_5de9f12f-ecfb-4ace-b4a7-b0dbcc0b0405" translate="no" sdl:locktype="Structure"><source><g id="24">pinger</g></source></trans-unit><trans-unit id="lockTU_e972062f-0dcc-42df-bfa8-fb178a9cef2d" translate="no" sdl:locktype="Structure"><source><g id="27">ping</g></source></trans-unit><trans-unit id="lockTU_ba1b2831-3943-4309-809a-5dc574149671" translate="no" sdl:locktype="Structure"><source><g id="30">ponger</g></source></trans-unit><trans-unit id="lockTU_aa57874f-9389-4b15-9213-2633e61592b9" translate="no" sdl:locktype="Structure"><source><g id="33">pong</g></source></trans-unit><trans-unit id="lockTU_89769dcd-4bc3-4a1a-940a-578f3d4f2b53" translate="no" sdl:locktype="Structure"><source><g id="36">pinger</g></source></trans-unit><trans-unit id="lockTU_256a1f49-26af-4bf6-9004-46843739bdec" translate="no" sdl:locktype="Structure"><source><g id="39">ping</g></source></trans-unit><trans-unit id="7976a2ea-d00b-4c74-86c2-1d3d16cfa6f8"><source>The <x id="locked5" xid="lockTU_5de9f12f-ecfb-4ace-b4a7-b0dbcc0b0405"/> state will post the first <x id="locked6" xid="lockTU_e972062f-0dcc-42df-bfa8-fb178a9cef2d"/> event upon entry; the <x id="locked7" xid="lockTU_ba1b2831-3943-4309-809a-5dc574149671"/> state will respond by posting a <x id="locked8" xid="lockTU_aa57874f-9389-4b15-9213-2633e61592b9"/> event; this will cause the <x id="locked9" xid="lockTU_89769dcd-4bc3-4a1a-940a-578f3d4f2b53"/> state to post a new <x id="locked10" xid="lockTU_256a1f49-26af-4bf6-9004-46843739bdec"/> event; and so on.</source><seg-source><mrk mtype="seg" mid="10">The <x id="locked11" xid="lockTU_e7ef13ea-3178-4949-a5c4-8ac04143f40d"/> state will post the first <x id="locked12" xid="lockTU_f007e82a-b578-49b4-8359-c101c97edfb1"/> event upon entry; the <x id="locked13" xid="lockTU_c9274fc4-dbc8-4b30-9bee-0dfc5635bfd5"/> state will respond by posting a <x id="locked14" xid="lockTU_b74054d1-f1a9-4b8d-a265-d56613b9eae0"/> event; this will cause the <x id="locked15" xid="lockTU_1f03e209-fff2-47cf-bbed-874f65839e41"/> state to post a new <x id="locked16" xid="lockTU_190b41d1-e14d-4eb9-a53c-b43b5e037939"/> event; and so on.</mrk></seg-source><target><mrk mtype="seg" mid="10"/></target><sdl:seg-defs><sdl:seg id="10"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="27"/><sdl:cxt id="28"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="28"/></sdl:cxts><trans-unit id="a4b99ec2-c3c9-47bd-be8a-d65947b9a534"><source><g id="42">class</g> PingEvent : <g id="45">public</g> <g id="48">QEvent</g> { <g id="51">public</g>: PingEvent() : <g id="54">QEvent</g>(<g id="57">QEvent</g><g id="60">::</g>Type(<g id="63">QEvent</g><g id="66">::</g>User<g id="69">+</g><g id="72">2</g>)) {} }; <g id="75">class</g> PongEvent : <g id="78">public</g> <g id="81">QEvent</g> { <g id="84">public</g>: PongEvent() : <g id="87">QEvent</g>(<g id="90">QEvent</g><g id="93">::</g>Type(<g id="96">QEvent</g><g id="99">::</g>User<g id="102">+</g><g id="105">3</g>)) {} };</source><seg-source><mrk mtype="seg" mid="11"><g id="42">class</g> PingEvent : <g id="45">public</g> <g id="48">QEvent</g> { <g id="51">public</g>:</mrk> <mrk mtype="seg" mid="12">PingEvent() :</mrk> <mrk mtype="seg" mid="13"><g id="54">QEvent</g>(<g id="57">QEvent</g><g id="60">::</g>Type(<g id="63">QEvent</g><g id="66">::</g>User<g id="69">+</g><g id="72">2</g>)) {} }; <g id="75">class</g> PongEvent : <g id="78">public</g> <g id="81">QEvent</g> { <g id="84">public</g>:</mrk> <mrk mtype="seg" mid="14">PongEvent() :</mrk> <mrk mtype="seg" mid="15"><g id="87">QEvent</g>(<g id="90">QEvent</g><g id="93">::</g>Type(<g id="96">QEvent</g><g id="99">::</g>User<g id="102">+</g><g id="105">3</g>)) {} };</mrk></seg-source><target><mrk mtype="seg" mid="11"/> <mrk mtype="seg" mid="12"/> <mrk mtype="seg" mid="13"/> <mrk mtype="seg" mid="14"/> <mrk mtype="seg" mid="15"/></target><sdl:seg-defs><sdl:seg id="11"/><sdl:seg id="12"/><sdl:seg id="13"/><sdl:seg id="14"/><sdl:seg id="15"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="29"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="29"/></sdl:cxts><trans-unit id="lockTU_73d703e1-f475-4254-91af-532ece5eb009" translate="no" sdl:locktype="Structure"><source><g id="108">PingEvent</g></source></trans-unit><trans-unit id="lockTU_3bba731b-bf03-49d8-b1d9-86108e1093ee" translate="no" sdl:locktype="Structure"><source><g id="111">PongEvent</g></source></trans-unit><trans-unit id="lockTU_a3bb3d9e-54db-49c7-aafa-b7798031e97d" translate="no" sdl:locktype="Structure"><source><g id="108">PingEvent</g></source></trans-unit><trans-unit id="lockTU_71f6e6f1-81f7-4eb8-8b32-ae7673e66abe" translate="no" sdl:locktype="Structure"><source><g id="111">PongEvent</g></source></trans-unit><trans-unit id="8c2a4417-4f94-47ad-a886-4751ff187cf1"><source>Two custom events are defined, <x id="locked17" xid="lockTU_a3bb3d9e-54db-49c7-aafa-b7798031e97d"/> and <x id="locked18" xid="lockTU_71f6e6f1-81f7-4eb8-8b32-ae7673e66abe"/>.</source><seg-source><mrk mtype="seg" mid="16">Two custom events are defined, <x id="locked19" xid="lockTU_73d703e1-f475-4254-91af-532ece5eb009"/> and <x id="locked20" xid="lockTU_3bba731b-bf03-49d8-b1d9-86108e1093ee"/>.</mrk></seg-source><target><mrk mtype="seg" mid="16"/></target><sdl:seg-defs><sdl:seg id="16"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="30"/><sdl:cxt id="28"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="30"/></sdl:cxts><trans-unit id="de3e444c-9628-491d-a48f-16fb6a81517b"><source><g id="114">class</g> Pinger : <g id="117">public</g> <g id="120">QState</g> { <g id="123">public</g>: Pinger(<g id="126">QState</g> <g id="129">*</g>parent) : <g id="132">QState</g>(parent) {} <g id="135">protected</g>: <g id="138">virtual</g> <g id="141">void</g> onEntry(<g id="144">QEvent</g> <g id="147">*</g>) Q_DECL_OVERRIDE { machine()<g id="150">-</g><g id="153">&gt;</g>postEvent(<g id="156">new</g> PingEvent()); fprintf(stdout<g id="159">,</g> <g id="162">&quot;ping?\n&quot;</g>); } };</source><seg-source><mrk mtype="seg" mid="17"><g id="114">class</g> Pinger : <g id="117">public</g> <g id="120">QState</g> { <g id="123">public</g>:</mrk> <mrk mtype="seg" mid="18">Pinger(<g id="126">QState</g> <g id="129">*</g>parent) :</mrk> <mrk mtype="seg" mid="19"><g id="132">QState</g>(parent) {} <g id="135">protected</g>:</mrk> <mrk mtype="seg" mid="20"><g id="138">virtual</g> <g id="141">void</g> onEntry(<g id="144">QEvent</g> <g id="147">*</g>) Q_DECL_OVERRIDE { machine()<g id="150">-</g><g id="153">&gt;</g>postEvent(<g id="156">new</g> PingEvent()); fprintf(stdout<g id="159">,</g> <g id="162">&quot;ping?\n&quot;</g>); } };</mrk></seg-source><target><mrk mtype="seg" mid="17"/> <mrk mtype="seg" mid="18"/> <mrk mtype="seg" mid="19"/> <mrk mtype="seg" mid="20"/></target><sdl:seg-defs><sdl:seg id="17"/><sdl:seg id="18"/><sdl:seg id="19"/><sdl:seg id="20"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="31"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="lockTU_7c4ad48d-bfe0-4a1c-a982-b2d01c108edd" translate="no" sdl:locktype="Structure"><source><g id="165">Pinger</g></source></trans-unit><trans-unit id="lockTU_c6f13910-43b7-40b6-bb31-2176450f0db8" translate="no" sdl:locktype="Structure"><source><g id="168">PingEvent</g></source></trans-unit><trans-unit id="lockTU_32c91d85-e690-4a4a-8144-0377b2a6b758" translate="no" sdl:locktype="Structure"><source><g id="165">Pinger</g></source></trans-unit><trans-unit id="lockTU_083b2de5-2fdf-45bf-8ef3-aee423a2d801" translate="no" sdl:locktype="Structure"><source><g id="168">PingEvent</g></source></trans-unit><trans-unit id="efbfb095-f120-4d66-88c8-bdf324cf646c"><source>The <x id="locked21" xid="lockTU_32c91d85-e690-4a4a-8144-0377b2a6b758"/> class defines a state that posts a <x id="locked22" xid="lockTU_083b2de5-2fdf-45bf-8ef3-aee423a2d801"/> to the state machine when the state is entered.</source><seg-source><mrk mtype="seg" mid="21">The <x id="locked23" xid="lockTU_7c4ad48d-bfe0-4a1c-a982-b2d01c108edd"/> class defines a state that posts a <x id="locked24" xid="lockTU_c6f13910-43b7-40b6-bb31-2176450f0db8"/> to the state machine when the state is entered.</mrk></seg-source><target><mrk mtype="seg" mid="21"/></target><sdl:seg-defs><sdl:seg id="21"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="32"/><sdl:cxt id="28"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="32"/></sdl:cxts><trans-unit id="62d86ad6-7937-4028-ba81-73ee338b67d4"><source><g id="171">class</g> PingTransition : <g id="174">public</g> <g id="177">QAbstractTransition</g> { <g id="180">public</g>: PingTransition() {} <g id="183">protected</g>: <g id="186">virtual</g> bool eventTest(<g id="189">QEvent</g> <g id="192">*</g>e) Q_DECL_OVERRIDE { <g id="195">return</g> (e<g id="198">-</g><g id="201">&gt;</g>type() <g id="204">=</g><g id="207">=</g> <g id="210">QEvent</g><g id="213">::</g>User<g id="216">+</g><g id="219">2</g>); } <g id="222">virtual</g> <g id="225">void</g> onTransition(<g id="228">QEvent</g> <g id="231">*</g>) Q_DECL_OVERRIDE { machine()<g id="234">-</g><g id="237">&gt;</g>postDelayedEvent(<g id="240">new</g> PongEvent()<g id="243">,</g> <g id="246">500</g>); fprintf(stdout<g id="249">,</g> <g id="252">&quot;pong!\n&quot;</g>); } };</source><seg-source><mrk mtype="seg" mid="22"><g id="171">class</g> PingTransition : <g id="174">public</g> <g id="177">QAbstractTransition</g> { <g id="180">public</g>:</mrk> <mrk mtype="seg" mid="23">PingTransition() {} <g id="183">protected</g>:</mrk> <mrk mtype="seg" mid="24"><g id="186">virtual</g> bool eventTest(<g id="189">QEvent</g> <g id="192">*</g>e) Q_DECL_OVERRIDE { <g id="195">return</g> (e<g id="198">-</g><g id="201">&gt;</g>type() <g id="204">=</g><g id="207">=</g> <g id="210">QEvent</g><g id="213">::</g>User<g id="216">+</g><g id="219">2</g>); } <g id="222">virtual</g> <g id="225">void</g> onTransition(<g id="228">QEvent</g> <g id="231">*</g>) Q_DECL_OVERRIDE { machine()<g id="234">-</g><g id="237">&gt;</g>postDelayedEvent(<g id="240">new</g> PongEvent()<g id="243">,</g> <g id="246">500</g>); fprintf(stdout<g id="249">,</g> <g id="252">&quot;pong!\n&quot;</g>); } };</mrk></seg-source><target><mrk mtype="seg" mid="22"/> <mrk mtype="seg" mid="23"/> <mrk mtype="seg" mid="24"/></target><sdl:seg-defs><sdl:seg id="22"/><sdl:seg id="23"/><sdl:seg id="24"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="33"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="33"/></sdl:cxts><trans-unit id="lockTU_de5e77ad-e67a-4afc-aa91-927cf09d32f8" translate="no" sdl:locktype="Structure"><source><g id="255">PingTransition</g></source></trans-unit><trans-unit id="lockTU_78e3f70d-d612-45fb-a0db-88791419bab5" translate="no" sdl:locktype="Structure"><source><g id="258">PingEvent</g></source></trans-unit><trans-unit id="lockTU_811db4ac-205d-41b5-8691-b214f2bc54ce" translate="no" sdl:locktype="Structure"><source><g id="261">PongEvent</g></source></trans-unit><trans-unit id="lockTU_bea32f74-117d-4cf5-8a12-d5c76a2daef5" translate="no" sdl:locktype="Structure"><source><g id="255">PingTransition</g></source></trans-unit><trans-unit id="lockTU_8785ee0e-5da4-4d73-9f17-36ee95771e61" translate="no" sdl:locktype="Structure"><source><g id="258">PingEvent</g></source></trans-unit><trans-unit id="lockTU_8c749114-b7f3-4159-aff0-3e745d333c45" translate="no" sdl:locktype="Structure"><source><g id="261">PongEvent</g></source></trans-unit><trans-unit id="c8cd14aa-9033-4fd5-b852-e17c28f7e97a"><source>The <x id="locked25" xid="lockTU_bea32f74-117d-4cf5-8a12-d5c76a2daef5"/> class defines a transition that is triggered by events of type <x id="locked26" xid="lockTU_8785ee0e-5da4-4d73-9f17-36ee95771e61"/>, and that posts a <x id="locked27" xid="lockTU_8c749114-b7f3-4159-aff0-3e745d333c45"/> (with a delay of 500 milliseconds) to the state machine when the transition is triggered.</source><seg-source><mrk mtype="seg" mid="25">The <x id="locked28" xid="lockTU_de5e77ad-e67a-4afc-aa91-927cf09d32f8"/> class defines a transition that is triggered by events of type <x id="locked29" xid="lockTU_78e3f70d-d612-45fb-a0db-88791419bab5"/>, and that posts a <x id="locked30" xid="lockTU_811db4ac-205d-41b5-8691-b214f2bc54ce"/> (with a delay of 500 milliseconds) to the state machine when the transition is triggered.</mrk></seg-source><target><mrk mtype="seg" mid="25"/></target><sdl:seg-defs><sdl:seg id="25"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="34"/><sdl:cxt id="28"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="34"/></sdl:cxts><trans-unit id="13e4cbe3-0adf-43b7-92fc-a1f33d2e58c2"><source><g id="264">class</g> PongTransition : <g id="267">public</g> <g id="270">QAbstractTransition</g> { <g id="273">public</g>: PongTransition() {} <g id="276">protected</g>: <g id="279">virtual</g> bool eventTest(<g id="282">QEvent</g> <g id="285">*</g>e) Q_DECL_OVERRIDE { <g id="288">return</g> (e<g id="291">-</g><g id="294">&gt;</g>type() <g id="297">=</g><g id="300">=</g> <g id="303">QEvent</g><g id="306">::</g>User<g id="309">+</g><g id="312">3</g>); } <g id="315">virtual</g> <g id="318">void</g> onTransition(<g id="321">QEvent</g> <g id="324">*</g>) Q_DECL_OVERRIDE { machine()<g id="327">-</g><g id="330">&gt;</g>postDelayedEvent(<g id="333">new</g> PingEvent()<g id="336">,</g> <g id="339">500</g>); fprintf(stdout<g id="342">,</g> <g id="345">&quot;ping?\n&quot;</g>); } };</source><seg-source><mrk mtype="seg" mid="26"><g id="264">class</g> PongTransition : <g id="267">public</g> <g id="270">QAbstractTransition</g> { <g id="273">public</g>:</mrk> <mrk mtype="seg" mid="27">PongTransition() {} <g id="276">protected</g>:</mrk> <mrk mtype="seg" mid="28"><g id="279">virtual</g> bool eventTest(<g id="282">QEvent</g> <g id="285">*</g>e) Q_DECL_OVERRIDE { <g id="288">return</g> (e<g id="291">-</g><g id="294">&gt;</g>type() <g id="297">=</g><g id="300">=</g> <g id="303">QEvent</g><g id="306">::</g>User<g id="309">+</g><g id="312">3</g>); } <g id="315">virtual</g> <g id="318">void</g> onTransition(<g id="321">QEvent</g> <g id="324">*</g>) Q_DECL_OVERRIDE { machine()<g id="327">-</g><g id="330">&gt;</g>postDelayedEvent(<g id="333">new</g> PingEvent()<g id="336">,</g> <g id="339">500</g>); fprintf(stdout<g id="342">,</g> <g id="345">&quot;ping?\n&quot;</g>); } };</mrk></seg-source><target><mrk mtype="seg" mid="26"/> <mrk mtype="seg" mid="27"/> <mrk mtype="seg" mid="28"/></target><sdl:seg-defs><sdl:seg id="26"/><sdl:seg id="27"/><sdl:seg id="28"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="35"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="35"/></sdl:cxts><trans-unit id="lockTU_7bdf2339-1880-4121-931b-35d9bd4948e8" translate="no" sdl:locktype="Structure"><source><g id="348">PongTransition</g></source></trans-unit><trans-unit id="lockTU_ec6ed7dc-3707-43d3-968a-1ffb89a6fc94" translate="no" sdl:locktype="Structure"><source><g id="351">PongEvent</g></source></trans-unit><trans-unit id="lockTU_f59faf01-6971-4328-a804-dcdb858d93b2" translate="no" sdl:locktype="Structure"><source><g id="354">PingEvent</g></source></trans-unit><trans-unit id="lockTU_f3cd3e46-7fd1-438d-9d45-c6d913d9d84f" translate="no" sdl:locktype="Structure"><source><g id="348">PongTransition</g></source></trans-unit><trans-unit id="lockTU_dffaf878-071d-467f-ba99-bc0f65f7ee4f" translate="no" sdl:locktype="Structure"><source><g id="351">PongEvent</g></source></trans-unit><trans-unit id="lockTU_9ed17990-798e-487e-84ce-5c81f7e29612" translate="no" sdl:locktype="Structure"><source><g id="354">PingEvent</g></source></trans-unit><trans-unit id="3cdc7282-40bb-49b1-b5bf-13d2c0b7f666"><source>The <x id="locked31" xid="lockTU_f3cd3e46-7fd1-438d-9d45-c6d913d9d84f"/> class defines a transition that is triggered by events of type <x id="locked32" xid="lockTU_dffaf878-071d-467f-ba99-bc0f65f7ee4f"/>, and that posts a <x id="locked33" xid="lockTU_9ed17990-798e-487e-84ce-5c81f7e29612"/> (with a delay of 500 milliseconds) to the state machine when the transition is triggered.</source><seg-source><mrk mtype="seg" mid="29">The <x id="locked34" xid="lockTU_7bdf2339-1880-4121-931b-35d9bd4948e8"/> class defines a transition that is triggered by events of type <x id="locked35" xid="lockTU_ec6ed7dc-3707-43d3-968a-1ffb89a6fc94"/>, and that posts a <x id="locked36" xid="lockTU_f59faf01-6971-4328-a804-dcdb858d93b2"/> (with a delay of 500 milliseconds) to the state machine when the transition is triggered.</mrk></seg-source><target><mrk mtype="seg" mid="29"/></target><sdl:seg-defs><sdl:seg id="29"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="36"/><sdl:cxt id="28"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="e574b2ea-54c4-4de9-9442-cdda196ec835"><source><g id="357">int</g> main(<g id="360">int</g> argc<g id="363">,</g> <g id="366">char</g> <g id="369">*</g><g id="372">*</g>argv) { <g id="375">QCoreApplication</g> app(argc<g id="378">,</g> argv); <g id="381">QStateMachine</g> machine; <g id="384">QState</g> <g id="387">*</g>group <g id="390">=</g> <g id="393">new</g> <g id="396">QState</g>(<g id="399">QState</g><g id="402">::</g>ParallelStates); group<g id="405">-</g><g id="408">&gt;</g>setObjectName(<g id="411">&quot;group&quot;</g>);</source><seg-source><mrk mtype="seg" mid="30"><g id="357">int</g> main(<g id="360">int</g> argc<g id="363">,</g> <g id="366">char</g> <g id="369">*</g><g id="372">*</g>argv) { <g id="375">QCoreApplication</g> app(argc<g id="378">,</g> argv); <g id="381">QStateMachine</g> machine; <g id="384">QState</g> <g id="387">*</g>group <g id="390">=</g> <g id="393">new</g> <g id="396">QState</g>(<g id="399">QState</g><g id="402">::</g>ParallelStates); group<g id="405">-</g><g id="408">&gt;</g>setObjectName(<g id="411">&quot;group&quot;</g>);</mrk></seg-source><target><mrk mtype="seg" mid="30"/></target><sdl:seg-defs><sdl:seg id="30"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="37"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="37"/></sdl:cxts><trans-unit id="ff11b843-7378-46e1-90d6-576270d8f9f7"><source>The main() function begins by creating a state machine and a parallel state group.</source><seg-source><mrk mtype="seg" mid="31">The main() function begins by creating a state machine and a parallel state group.</mrk></seg-source><target><mrk mtype="seg" mid="31"/></target><sdl:seg-defs><sdl:seg id="31"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="38"/><sdl:cxt id="28"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="38"/></sdl:cxts><trans-unit id="cd79b2c8-68d2-4522-af15-80abf3f29b24"><source>Pinger <g id="414">*</g>pinger <g id="417">=</g> <g id="420">new</g> Pinger(group); pinger<g id="423">-</g><g id="426">&gt;</g>setObjectName(<g id="429">&quot;pinger&quot;</g>); pinger<g id="432">-</g><g id="435">&gt;</g>addTransition(<g id="438">new</g> PongTransition()); <g id="441">QState</g> <g id="444">*</g>ponger <g id="447">=</g> <g id="450">new</g> <g id="453">QState</g>(group); ponger<g id="456">-</g><g id="459">&gt;</g>setObjectName(<g id="462">&quot;ponger&quot;</g>); ponger<g id="465">-</g><g id="468">&gt;</g>addTransition(<g id="471">new</g> PingTransition());</source><seg-source><mrk mtype="seg" mid="32">Pinger <g id="414">*</g>pinger <g id="417">=</g> <g id="420">new</g> Pinger(group); pinger<g id="423">-</g><g id="426">&gt;</g>setObjectName(<g id="429">&quot;pinger&quot;</g>); pinger<g id="432">-</g><g id="435">&gt;</g>addTransition(<g id="438">new</g> PongTransition()); <g id="441">QState</g> <g id="444">*</g>ponger <g id="447">=</g> <g id="450">new</g> <g id="453">QState</g>(group); ponger<g id="456">-</g><g id="459">&gt;</g>setObjectName(<g id="462">&quot;ponger&quot;</g>); ponger<g id="465">-</g><g id="468">&gt;</g>addTransition(<g id="471">new</g> PingTransition());</mrk></seg-source><target><mrk mtype="seg" mid="32"/></target><sdl:seg-defs><sdl:seg id="32"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="39"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="39"/></sdl:cxts><trans-unit id="lockTU_123712e2-9bea-44aa-a5bd-def2d50dcbb9" translate="no" sdl:locktype="Structure"><source><g id="474">pinger</g></source></trans-unit><trans-unit id="lockTU_e8528c47-09ca-4c38-9c60-f164616b7506" translate="no" sdl:locktype="Structure"><source><g id="477">ponger</g></source></trans-unit><trans-unit id="lockTU_80b5a056-b097-4b7a-be2f-922ea74b356e" translate="no" sdl:locktype="Structure"><source><g id="474">pinger</g></source></trans-unit><trans-unit id="lockTU_099d1950-7b08-4066-987f-6fc26bed10b2" translate="no" sdl:locktype="Structure"><source><g id="477">ponger</g></source></trans-unit><trans-unit id="29d87857-f603-4faf-b85e-7b744744369c"><source>Next, the <x id="locked37" xid="lockTU_80b5a056-b097-4b7a-be2f-922ea74b356e"/> and <x id="locked38" xid="lockTU_099d1950-7b08-4066-987f-6fc26bed10b2"/> states are created, with the parallel state group as their parent state. Note that the transitions are <g id="480">targetless</g>. When such a transition is triggered, the source state won&apos;t be exited and re-entered; only the transition&apos;s onTransition() function will be called, and the state machine&apos;s configuration will remain the same, which is precisely what we want in this case.</source><seg-source><mrk mtype="seg" mid="33">Next, the <x id="locked39" xid="lockTU_123712e2-9bea-44aa-a5bd-def2d50dcbb9"/> and <x id="locked40" xid="lockTU_e8528c47-09ca-4c38-9c60-f164616b7506"/> states are created, with the parallel state group as their parent state.</mrk> <mrk mtype="seg" mid="34">Note that the transitions are <g id="480">targetless</g>.</mrk> <mrk mtype="seg" mid="35">When such a transition is triggered, the source state won&apos;t be exited and re-entered; only the transition&apos;s onTransition() function will be called, and the state machine&apos;s configuration will remain the same, which is precisely what we want in this case.</mrk></seg-source><target><mrk mtype="seg" mid="33"/> <mrk mtype="seg" mid="34"/> <mrk mtype="seg" mid="35"/></target><sdl:seg-defs><sdl:seg id="33"/><sdl:seg id="34"/><sdl:seg id="35"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="40"/><sdl:cxt id="28"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="40"/></sdl:cxts><trans-unit id="f0d6677f-07dd-4b62-ae23-67ca8ee00c26"><source>machine<g id="483">.</g>addState(group); machine<g id="486">.</g>setInitialState(group); machine<g id="489">.</g>start(); <g id="492">return</g> app<g id="495">.</g>exec(); }</source><seg-source><mrk mtype="seg" mid="36">machine<g id="483">.</g>addState(group); machine<g id="486">.</g>setInitialState(group); machine<g id="489">.</g>start(); <g id="492">return</g> app<g id="495">.</g>exec(); }</mrk></seg-source><target><mrk mtype="seg" mid="36"/></target><sdl:seg-defs><sdl:seg id="36"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="41"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="41"/></sdl:cxts><trans-unit id="6ca1117f-b5aa-4c4e-8eb9-9687f142dd5f"><source>Finally, the group is added to the state machine, the machine is started, and the application event loop is entered.</source><seg-source><mrk mtype="seg" mid="37">Finally, the group is added to the state machine, the machine is started, and the application event loop is entered.</mrk></seg-source><target><mrk mtype="seg" mid="37"/></target><sdl:seg-defs><sdl:seg id="37"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="42"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="42"/></sdl:cxts><trans-unit id="2ff1b324-e566-44bb-8e9e-fbff8d67271e"><source>Files:</source><seg-source><mrk mtype="seg" mid="38">Files:</mrk></seg-source><target><mrk mtype="seg" mid="38">Файлы:</mrk></target><sdl:seg-defs><sdl:seg id="38" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100"><sdl:value key="created_by">TRAPP</sdl:value><sdl:value key="created_on">03/15/2019 00:04:31</sdl:value><sdl:value key="modified_on">03/15/2019 00:04:31</sdl:value><sdl:value key="last_modified_by">TRAPP</sdl:value><sdl:value key="SDL:OriginalTranslationHash">874853416</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="43"/><sdl:cxt id="44"/><sdl:cxt id="45"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="44"/></sdl:cxts><trans-unit id="525918e3-d7dc-4e2a-b21d-744d3a2a87ce"><source><g id="498">statemachine/pingpong/main.cpp</g></source><seg-source><g id="498"><mrk mtype="seg" mid="39">statemachine/pingpong/main.cpp</mrk></g></seg-source><target><g id="498"><mrk mtype="seg" mid="39"/></g></target><sdl:seg-defs><sdl:seg id="39"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="46"/><sdl:cxt id="44"/><sdl:cxt id="45"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="45"/></sdl:cxts><trans-unit id="b3b87537-4895-4327-89c1-b95df85b55b5"><source><g id="501">statemachine/pingpong/pingpong.pro</g></source><seg-source><g id="501"><mrk mtype="seg" mid="40">statemachine/pingpong/pingpong.pro</mrk></g></seg-source><target><g id="501"><mrk mtype="seg" mid="40"/></g></target><sdl:seg-defs><sdl:seg id="40"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="47"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="19"/></sdl:cxts><trans-unit id="97652499-fd3d-4e39-a019-6a6cb669af85"><source><x id="502"/></source><seg-source><x id="502"/></seg-source><target><x id="502"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="48"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="47"/></sdl:cxts><trans-unit id="80b7ef57-3b28-4b44-ba44-d17515954d9e"><source><x id="503"/></source><seg-source><x id="503"/></seg-source><target><x id="503"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="49"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="47"/></sdl:cxts><trans-unit id="f9c8b593-6392-45a8-99fd-605a97a73b7f"><source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="504"/> The documentation provided herein is licensed under the terms of the <g id="507">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="508"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</source><seg-source><mrk mtype="seg" mid="41">2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.</mrk><x id="504"/> <mrk mtype="seg" mid="42">The documentation provided herein is licensed under the terms of the <g id="507">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.</mrk><x id="508"/> <mrk mtype="seg" mid="43">Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide.</mrk> <mrk mtype="seg" mid="44">All other trademarks are property of their respective owners.</mrk></seg-source><target><mrk mtype="seg" mid="41"/><x id="504"/> <mrk mtype="seg" mid="42">Документация, представленная здесь, лицензирована в соответствии с условиями <g id="507">Лицензии свободной документации GNU версии 1.3</g> , опубликованной Фондом свободного программного обеспечения.</mrk><x id="508"/> <mrk mtype="seg" mid="43">Qt и соответствующие логотипы являются товарными знаками The Qt Company Ltd. в Финляндии и/или других странах мира.</mrk> <mrk mtype="seg" mid="44">Все остальные товарные знаки являются собственностью соответствующих владельцев.</mrk></target><sdl:seg-defs><sdl:seg id="41"/><sdl:seg id="42" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/18/2019 08:01:56</sdl:value><sdl:value key="modified_on">04/23/2019 08:53:32</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">460311339</sdl:value></sdl:seg><sdl:seg id="43" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/18/2019 08:02:00</sdl:value><sdl:value key="modified_on">04/23/2019 08:53:35</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">998242797</sdl:value></sdl:seg><sdl:seg id="44" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/18/2019 08:02:06</sdl:value><sdl:value key="modified_on">04/23/2019 08:53:37</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">1633633558</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group></body></file></xliff>