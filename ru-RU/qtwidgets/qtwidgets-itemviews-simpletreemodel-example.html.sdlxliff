<?xml version="1.0" encoding="utf-8"?><xliff xmlns:sdl="http://sdl.com/FileTypes/SdlXliff/1.0" xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2" sdl:version="1.0"><file original="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtwidgets\qtwidgets-itemviews-simpletreemodel-example.html" datatype="x-sdlfilterframework2" source-language="en-US" target-language="ru-RU"><header><reference><internal-file form="base64">UEsDBBQAAAAIAFdAgkkaOt1JpBoAAAyGAAARAAAANHk0ZDJydXkudGV0Lmh0bWztPWtzGzeS3/0r
ECa3kW5F0s7W3l7JkjaOZCe+SuJN7MR1VVflAmdAEuvhDD0Yimb2cr/9+gFgMC9ySNGx88iHWCTx
aHQ3+oVu4OLvbxeJuFW50Vl6OXgwuj8QKo2yWKezy8EPL54M/3Pw96t7Fx/dPLt+8d//eCzmxSKB
z/iPSCQ2UukAv1AyvronxMVCFRJaFcuherPSt5eD6ywtVFoMX2yWaiAi/nQ5KNTbYozDPBTRXOZG
FZerYgrTiTHONxwKoxfLRBW5UossVsnoTZxFYjikWQpdJOrqObUQL6CJ+AbbiMdvJX31v+K7QrzU
8UwVRvx19LeLMffAvolOX4tcJZcDU2wSZeZKFQNRAHgWqsiYgZjnampbjLPpFDqpIUM0ot/HNJaJ
cr0sws7/lLeSvx1gCyHWOo2z9ShLk0zG4lJMV2lUALZPTv8FC1otABsjAPNxovBP88XmhZx9Kxfq
ZICADk5HulCLk/unI0DRo6LI9WRVwI8I3+BMVCEk0E4f/vwQYRszGIDNMVPnYpLFG/gn1rciSqQx
lwP8QeUDoePLwZsC4LFf0OKCdgupU7ue+tfDPFulsYrtz9UGqbzVM4nLncjct0ACygmQ46LIAZ4i
FlcX0mJ8NBoTIGOzWi6zvFDxcJnIYprlCzOUaTwEDprq2SqnUc0IWejjN8Xwr8O/Da6A6ERseQUE
j6+qI78p1swQQ6CIeks9qYvlk45uilkKegEdbrVaG9vzKXwWP+IXju1qQ3SyJzcZw+LhfxYR+I/D
2mSlk9huykGJJCRS5SfgrbiYw7a9f//fBkImegZ7ONezeeFQMXogvldTlcOeVuLGshthjmAo6REC
4+g4BkJamvOfIWXtRh5Uv0UmHLQ2FMgr162djI4Vs0f4bZFFJFj+gqRIYUPYr+wYFtfw872LFYqk
RHsg1K1KHgxKEn4cKwO4cewTqWVhBlc39KWAL8W1/ZLHTPSO4VAmITcMqcUwVlOd6oKIhcQmxrjG
n8SN/+mwoYmDPM0awz+t/LzHFCRRO8BnVr0D/OHgbQsIJzhoBSAJC1BQw9VyWMzVMJaFhD1Nf9Pc
g6vn3EL8sBTwrbiBFkKn9DfNHkw0Ju5pMrjlyqFjdNp+9S+vuKPrPn/guRfVzWCbCJg/gA5mKVM/
4Wpie4Hohu+tGvzkk0+85BnXdCLQjoU84I5UY7gA+m1wJfz2iUE168Tg+BKaLv0OhZWo/BGKD/hN
L2bC5NHlQC/kTDWntPJwtExnKHNAlaMyvBgvry6WIHU+NYLajRFgIfNoDtBHxSpXYplnt4A/I6Qw
BWw7mcdiLTcCZLug5YkiAzGR6uUKJL4CgqHUJ8ZA4kmBhBYmW+WROhMrgwQG9MmJKXIZFTyvyKZE
ZmoL4xH4erqhfe6m1T8paoSz60JoACmKlDEqHglLMhrMgJ2wzJVB+UUDSgSeZTXMg3QxZzSyTJJs
Xa6Ch4M5YGjqeKslwup5mHGJ7YeAllkuFwtYDmsznnpwRWpqOJEAFlJMmI2BCUfASIDMmUpVDrNu
zhyoEYw/UYAXFSMINcgt9yNGEXRYBfIkYG7FxJlseA2IVCWjOS2Ol1Lwspcyx9HwqxIFQN4kZkSM
kAeAra6+UFOEUBbw7ZK2IfTxgsBNTVCfWfSvQdPP0TjEDZZjl/VcAbx5SUtohSZBomF5CGwqwNxS
eSoTzxLAR64bDzvL7OyAF9Q/wP8pdF9rIAzjg3lGF0Yl05F4mjLJLI+fiTXwiE6SEHrkRTevxx5M
Mc8AEQQpmCYMObSNtYlWwAlz4A5otJTRa9hV3G6aZ4uWdVg8lru2RXfxDp5/RkKpv3abf0YEeuFw
GixgLgtcLXBPlXkQSWWzyuaSr5VpYyq0UQpe3QW4EsprrYsxfRTZ5J8gEsxIPEZGa2/jITCEcmRG
kgE0A+4b3ncoiIGowBugJWA/wBfJagGfARyEsobMmjDzC2OMVswP5PBBzTCjTafRLgELFoSWNbmK
bDlwTbI4HlgLsi5JSxnq521IUW9+Tlp0x3PX7WI8uQrpiHujgD0Xe95MNqLC4Swtt5KDeQA2uUDH
g4TIzG4mRPwyo7FZHtWkx0h8WYoj1U3UeShIkKaWiEDhubwFkSHS1WICM9Yki/gqWyN9z2hFeZYV
niPwi5oow1nSLJyGZmGRkOI4wF3WKI5FtipQ6JS48nJsC3d6tgt1lJzAWChLBHgskWqH7iHCgQvO
FXxMuXkDUlA8IDAYGbB68KJQjqFoCifMwVnTQGlwOXVCfLqgPemlFfdyPKCk0TCcW95zjU5BKeur
2ws4ZkVstGuHiRPohXYL60EQ0ouFzC37lbL01In6VMK6YRjUzcizzWVBTw/VSDwBqc5KPNLFphTJ
KKkksKopEJKq/xjBuOM3tzLXErxr6+j9yB9JlXqWL4FwQhmmo9l5mY6IBAtjzjtv97z3Zs0/3pEI
GAnDbTtGLJRMecudodJKgQkMWzROJ6H2Z23L4g4WznwDq4sJKBnHOZoZVirD9/BxmaUYvalsEB7r
xAAEbYhyFhR24S1AdkgE/FWop2SFgP393SPbDDcCCaTz86AJ4vXk9JS4AHg718AuSHI05XJSua1z
03ylQ/6xE2D/YOTBtDQVTXF+XvuV5xyJF8hCzPvrXLeyPcGlUgO4d5IOmChAtfuaRAPinTQfaA3G
JMmn8itnAhDPWEL7nfUSF0sEWoJxtwS2KxoKFyhDUsLTlVFZsY4Ya8AQ4IMtYDK5yFYpsTuYDLkU
KIuIhdEu2tQWg+t1RnBGYjzKFsAcqFJrWnGLP1sxNA7zewOjo0OYUhe0lLEXbBWQ39MMjVFzblGa
exUcLZegfin2FvhOr9UGTEjQvPTZ+k/CTQSt/9XZY7magGixXc5d7KO1qXrLUqg+/kkHLGDO+raV
JhgvBM7+WvvfKz9nSxC0IJYGV39KiodtLewAXqRtHWPmxxBdTUBEuzbIMx3NzuoL7xrv321DVmzb
Wl62QsaKb3B13/56+rCNLuUo/2fbeYJAh7YejLbbTMduWtihKo2v0dY46bsqskzKGfbqdtICj/YU
RK3fvtZGSxrtGuXByanYzX89ByWdd5RRa7xJouikz+zHWw0gc69V7M/Vls86BEuub0Gib5Msh8gB
Lz23A9lDGCxeERPhYObhscA7iphavEI1g1G7fWmzeFVSB/v+DAQCHZIrr4O8tpECDDMdies//5m/
BP+/EHGm0HsAUzUFnamdH9tiubAN6azLZ/SJjcvchboE+uAyYWVskqzgOWByF6WhqEFpxjpUmTNn
d6MtY01R3ELsMHV4HZnRzoBuOh5oJSl/+mQ8iOzAu9DPVKF5rpzitZH1QHkHApN3gNPiwaLALmXT
gwzbIMwCel3nsFLafQgXKntcD6Oc+scriv+kuECy8kc+IhyAwcLUT46DBD9YCeZ+LRfNYboSIrSN
JojmFpTKdFMLbzkwnjba4oiB62o9JOCpLELjj0NO3pHA9Vr0UyzLQh4KXws6k7uMgaUV38RG/HgF
4SQkbE/9ulsxSNKxiT/ePq24y8vgokWaW9Cnob9KgwUu7agSaOdNWPd4Aw6neXw0g6YIIQsNxxJq
Jy7cL1b2gpdFEJEnCJ6a4U0QcAoJP9fLNSt93nJnWhvfOM/ALjtbpy0x0A7Dun4Yss243vPkJzCy
/eYCOQSMlqXgGpRBYe882gVYSlTYrM63Ac+Nug3yHYrp/LxupP1hNW+zL06t14L/hVptpyXNTR/6
rm5v7OwYW337c6gyHznOR/YhRnDRhpLrQQglWTqzsXaO5yCkFKeZtO/m5u7r2LMj8dJpEQL9U/QT
QwaPQKirmMJLixVsVpDrqlAhrBzTZuefnXz4Uuc4U4aRKjzmwR1yfnfm7u2gBNRtMy4KmcwyMD/m
C5ficEPLepSAsVH+TQGQ0I47bRAwCPO1UA6FbaiNmxqb/HiKBC4zPpizUoHNkSIwKpzuDyeg0HQu
MSkBlOZa5nFfn77prPUlwiFOHUJb3XIBh7Z3HVWmO6ERGuh/XMZXAduoXEgMU+wXLQw6RjQVlBEN
ZvpWpRRO1XwEEQaEMSbqz6jctmrJc3HnxsOuQ1xire5DETBubkEnaIkHlMhrZ6UNs5D569DmgBFQ
SvzpzSorHj7if4KQpFecvFLLimUonwOEzjIRl+K+N4GwIY/3hR3W47M6WnXu9mEfNCwrbn69fegt
gLoRffiv00r1+4TpbwJ8kFRqwZZZqkhP8cwzMLCqlpezUAIW6iHIdu2Hvnutb1QjlHetep9x0uab
7th+tzJZqRMXOfm57u+1niiJuUpiZz9PMYEtpGuLD7Gf0ArWvhce+0de3h06I4ahFZdl/NZm0TBf
g+60uQ6hJohBReULcExq3hFQyoba1VtkXTxxkVbeVd2G+naquCzBZsI8QVPZElnE3pk96S8P2YL9
smunHIeufYNQOwmqp27qk9AcPPU5fH05IfCj2mEf9raM92ArOpZ4Nt1m9L+K5PuIg3WAhPzsws8d
4eQOFG8NZTf21bdZoew5oEyKebaazWsa54REU/VE+5R01KrIMAwRkXmG54czOj4JdQUw+v2zljNW
dxJOnuFk03L8/aI1puFOfQMdhIMVYLyzlci4KAftDm6E8Yl3LFz3jGvvLV19/OEw2XodhD/IG2lD
IQd16rg7wzwcOjeOb8GpxeSijuNwlHsuWsk+tLz6FG1SnehiQ9lJLmoJrpJGmzNWU7lKCkEqFhjI
nTMTtM4YMZhCQYJdpjO1n0CtnxL0JehRTxPeFbXZMLFwtOrTagwG9WfdFKmF435Bwy485dgbQ7Ug
fIe8M+Satqb0uPPvJKHIsM0O4mHParYGtbIu1U8qz3gMtKelwfABiDHF4a9aCMDOMgdPIHEWDPZh
QzwqQJqRL7ZWQQJg0bSDzs+7oqYt8cCu1OtGMPCQHO3Ws/aKrfZOD9sZrPM+J+2t0qCRYdLcod+9
evbFfz2+fnHvXR3o07yHxiafF3h4ceS4YdtE7rhp60TVgOIvdwTPKNx6Br/7eLg/0ssEoT0QT/bo
AZivuLWJ6qNfgGdvHl9//erZj4+///7pzeNtZ6077F8vnXGHPEnkDDYv/v+XR92xF17jB65Du9mt
5o0iQXvIHuqL62e5dgctIiv/3jFl4JfV/9vNVvvt1T3Xc6PNMpGb798B+zb5iZhld3zobjuRbaxD
CfJL7p1DRHHXfJht+a7JZw2bX7t4qTIbO4J/kH17AtjvDT93T+QKz6oM+CNLgu3mDqYN25PBiXcf
ZGIRrjnyYfTe2Y7o0XUlYaGb5dwQoxc6kXS6vMgwMEupymY1oRbKdEUz2nPW230IecUun4tvYN3E
kPIi+MBrJJ7hh7CUqaglUrjDIvaqasRtxqQph4WPbiJ/Js5gYpGZjGPNwZu1L4vE+sbyXBv6RIkC
BK+WLWey1DDbqHiHf7kz4eQupbrW16zXZ5SA+lQ6zrrCILxLSJ8ooQAFWG/5CM/acmVWSXHWQDvX
mGGRZz6j2vUwLa6sRKv68xQPMHOkAUVSuCqT8uFVomawlXcdkDHf9Mhj+c06i+5Y4XwvP/2kmbry
YWTwoDQK00ndZ7Hn/K0tqoMYoio0oPPkF1gZxX/uIvSxpnzOBViVScN175+O71k6VetG7YNDpQ8Q
1IRjvDtQCu6ILk52bpGTLYv+n7Sy3tPTXfvEYaIZmLUJukufsBDKo6ys0yljlniCWZ6fcDUS/UA6
xicT3qqczmqsc1vWm0GLW5VqrEekcKVMTEZlZLrgbBF3gwfXcoWlR7UKXj9XIIXLrOFK5nFZ4ov1
tQs50ymW7VlLDFVgthzS3QsukyftOCSibz41nZBhtms1dchmjW32UKmEGJLsmLvCp8phENgogBxm
wIMwVgYqtdkbqDDdTTsh3IG6rRSGVQPStrrfJergrQowsqTC5FzZbLN4m5I+hrLpH3XbGatniOv7
oCNvjIvTSInHZT1ZuU45LXy1fT2rG0gK28hG6+09DNqWjOPNCx7ZnnEoY90dzQuq6UvlzJs5y6tv
+KoDyvOr1OTbNGAKNjTNseBsy5XHlZdOVAwDbIo7j8jJtzigqUGl5OKpK61DSpIYiGmcenmdZ4YN
NQ2KjZnldU4ntEHiM0dbjU9KghZ2IwZFfQDAlO8fwMLzuFInihj2qUKScexOS3RNoPnUd5+G5opN
W5KQZE0OtIsBStH01zO4ssUSPjJ0be7/XEWva/c00HpoebZGOCuoBzAubFtbrtkABPNOkTiE35yk
2kOmxVobLqwM8tTDSk0u6gh2Ky3fiiZzWJ1q7QvkQhl6BEDYNpEutxblj4Q/LiMhVAPZSax1oKVY
SFpFUFYhEy1TTrnpvArgTIDisfWosxXIU+jpZk83osF2wfy5ipS+VfXZuUtblWzPA+JmOKG3zPxw
Qo/vIcR4em/fIOc+GUgdYHxkG8ylIahPeqC3HwLtovbNduoZMNo7uhGebx8JZzzkriwq8yNuqJMK
IvaoDQi1/ZZj0cSoZtD80GJeP6zByEH0vrK8+uG3LsQPLPPdo1DjKIl4nIXbWT3cxo4ezn33VHDn
w/H2dwnNIax5VFHQagezT1Cx2VxIyvgAX5CSau+QkEHScfs1HZXLcKoWC3Xii3uKxuUJ5+cdyeW2
xO3gaz5C8tZsmMB79F5w7bKSifLZa+SxsVG6acNfxeat2CllYqG9l+tFzVILrzrj+0VaaxKDC6DY
46t4HdsvQ2LfjlNkmjeLbK+VxCtHNue/mJ3zIZ/RHdGo2JaxsVU/vk9Dob82+BB1Zi+Ut6jMQ42p
nUjy6Lyzxmxc4tCLRfuD2tcSe9eMuq9GP6JRwuUa+3hG9aSzfl5BexgXlA+FX9tyP9fK3wPHEZCq
dqkoaKuPfEAQtBGpObqs0tDVxr4GrkW/dIWkdHBNG1avrlUlHNOM8LggcxmgRZe8V5CWojNE5NYL
xnheAoECa7t1tjNlwjL+oNQGi+L5J7IBUFvjJVxADLwOM7u113oGVQoeg3Ujp7Xk50xMVkRETlxF
K4si6JyhNXULwMXed8GwatJ6Bf6mfYHBTBvf67y47FBrylKIrhFDfpGmWhjdwTDt5VAdBRUcbd1U
6gzb6+AcV7UbQ+0BQS7VqkT37CgBdut8WYlcNmOWd6rD6mUlvce8nz0NpUOCEHvpr51VKrhV6oUy
Pa5GaOQM30W3NQun/gi0/C4CLX045dihk+uOwqz6Hal8HmW8lqvczNSz2o3up0UX2gX0g6tk+nSv
lNbivdILuqnI3TlEF63zwW5YWVs5R3pk6hq3W5ec1WR316nTWcclSL6YjY5ELdxxeQLjDat3rwLe
b3bjsd3lw+XY3rL41y1Z7i4iwv34ruKTTmMcH9qKRLuxNab+0rDaUSg+VNBSb4rvIvgMlG5JaM7Y
t2KXiy6Tb9je7HHw/cD+YLbTAWiver17lWkvgfFbrkr6NUfmqvTcJ4Czrbjmo56hm2PV3rxLROxz
7dHvKjS5h5GpjyGNSYT0AdZ5XafdFdN0PoQxLfs2WvXep/D2MI5FPLV16shtQwXidxDyXxmNCGNR
km0+jPmsbSaie6nAGoAHXrWPxmiLDanKd2NeKq8xWAtwaWOrBRxG8ziN63VKN3tWMsHpLgWb67+n
yti/ELO3VvmAKzZ/lUphz0jBbqnald7ej7CM7C33JwW1rd1Xg5WFDZzcxQnCeCVB9TbFA92ng02i
33Rhbu/63GPvpQD6ux4s3QWhXwEcP2HuXtJHqvRo0quY+QO1t47mkJEJYLfD6Z2FU9Pkawia2l1P
UbZKYr5CZaLCPF1+VE9PKRe1wNOIc6E0F+D5ZGIrZ4IqCAr3z/H1PpRd9OZUFmjtbeKt/hzXzocc
KxVrx3j30VatNWyNnSV9+M4KJbTblHW6FbVyF1ZY/uG7LfFtY3o1UL0txFTjjZ30ektEgHIVCx+o
YQPrNYcj2jey6CDJ1ZWEL3bZO50nWXD5t69XzOjNJvfQTXAZ/Lf8DFOyadymk+WvDbOGP87UVLyy
6SxpfKk6rpMP36e0BRQTBZyokYv4paCpOw3kohjLSvaCUn7ihtOAyIJcZHnlYcjQeJyomU5d8rlH
d/nyob/jnjpv0ZdfWi56Xkh8gLhTT3zFj/pN5UInGrblT0psslVOwPK54RbJJfiFPpVbefC1BArM
cVr3Q3PC71epr3zsNTa+b5JovgzReYbQ9wcDPz1Fn2iKD5V1LYy8JhkV+y9mNBoFIqkFxddZmrJE
FI9jzqvCzdeAxLXDFyHtc97+WbomVKVvyu8u+Fde8KL49ob4KEPVMAimfGb3WeO/b/jOtcivgnbM
Phhyq74Ohmgsfi75Vm2ftR9MWMt1gP1nnxxVAe/7sFrJ/cUaPLpV0nji4Yl7+GwpNQXwvWiyjw5g
WfmZT/yzbzKC5SJSINxp8HyclzK8xfkxPBqCh+SmNijYcp9g8FyBv/qba0dsfyynIHD4fuqYUih4
rXhSDQhyYqTejQ79cwXyZ2XsgjC5rwxr1q799W3pR5sT0HjQoOtiMRal/jIxV4lj01KQXFhxV2ZT
6hQfqI1s0XvribwnqB21lPZtV6c+0U0673VPdPkowXJpnfvOx4jHrvEIGldecj5wznn/Ged3nM/W
wfdcJGu9u6+S/5rvMedd1okP4PZaIja84+rqn0E67Zy29nkEfY4IwZs82hsC6NP1UDi+zP355593
jkWvcXtvgzs1PjX+anmGfApeCAY3qNWS/5FRnqWbBT+7eTm4zpabHC/YB68jgr/B77AtrsRn9x/8
B6n87wpQNYslHhV/XcQjHOfGFsU6LyEFMTlZOW0WJSs07kHRKs0XWrDYsXOhjMJBbDkji10sAMvW
oOTM6GKSXzlzI65M5F++sUNrlMQRSFD4apXG1hzEg2KfZxY+kjAviuX5eLxer0ezdDXK8tnYdjfj
aeyuAfny2x/EE1RG1UWincWN0aA1+NWD0V8oTimNoJsDzby8eJVGeJ5NizWu/wlezmmtTru67wpr
xfrlJ9ks41N4sPFjhbfk0zJaaEDcAAh4otOEcuDTeBxUk66QHorexk5iYHgw2h9hHTI/Ll0Ozif+
6HkWG6QI46yVKMK+YGqZbZLFG/wXUXZ17/8BUEsBAjMAFAAAAAgAV0CCSRo63UmkGgAADIYAABEA
AAAAAAAAAAAAAAAAAAAAADR5NGQycnV5LnRldC5odG1sUEsFBgAAAAABAAEAPwAAANMaAAAAAA==
</internal-file></reference><sdl:ref-files><sdl:ref-file uid="0" id="Html.DependencyFileId" name="viniptty.bzh.html" o-path="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtwidgets\qtwidgets-itemviews-simpletreemodel-example.html" date="12/02/2016 08:02:47" expected-use="Generation"/></sdl:ref-files><file-info xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><value key="SDL:FileId">c9cd8090-68bc-46de-a350-eb354220fc4c</value><value key="SDL:CreationDate">09/06/2019 14:34:48</value><value key="SDL:OriginalFilePath">D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtwidgets\qtwidgets-itemviews-simpletreemodel-example.html</value><value key="SDL:OriginalEncoding">utf-8</value><value key="SDL:QuickInsertsList">qBold;qItalic;qUnderline;qSubscript;qSuperscript;qSmallCaps</value><value key="NeedsSegmentRenumbering">False</value><value key="HtmlEntityFound">True</value><value key="HeadEntityFound">True</value><value key="MetaEntityFound">True</value><value key="BodyEntityFound">True</value><value key="HtmlVersion">html5</value><value key="OperatingSystem">Linux</value><value key="ParagraphTextDirections"></value><sniff-info><detected-encoding detection-level="Certain" encoding="utf-8"/><detected-source-lang detection-level="Likely" lang="en-US"/></sniff-info></file-info><sdl:filetype-info><sdl:filetype-id>Html 5 2.0.0.0</sdl:filetype-id></sdl:filetype-info><fmt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><fmt-def id="1"/><fmt-def id="2"><value key="TextColor">Blue</value><value key="Underline">True</value></fmt-def><fmt-def id="3"><value key="Bold">True</value></fmt-def></fmt-defs><cxt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><cxt-def id="1" type="LocationDetails" purpose="Location"><props><value key="StartsAt">-1</value><value key="EndsAt">39</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="2" type="LocationDetails" purpose="Location"><props><value key="StartsAt">81</value><value key="EndsAt">183</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="3" type="sdl:meta" color="Control"><fmt id="1"/></cxt-def><cxt-def id="4" type="sdl:html-control" color="Control"><fmt id="1"/></cxt-def><cxt-def id="5" type="LocationDetails" purpose="Location"><props><value key="StartsAt">183</value><value key="EndsAt">232</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="6" type="sdl:title" color="Control"><fmt id="1"/></cxt-def><cxt-def id="7" type="LocationDetails" purpose="Location"><props><value key="StartsAt">644</value><value key="EndsAt">729</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="8" type="x-tm-table-cell"><fmt id="1"/></cxt-def><cxt-def id="9" type="sdl:table-row" color="Control"><fmt id="1"/></cxt-def><cxt-def id="10" type="sdl:table" color="Control"><fmt id="1"/></cxt-def><cxt-def id="11" type="div" code="DIV" name="Div" descr="A div section" color=""><fmt id="1"/></cxt-def><cxt-def id="12" type="sdl:body" color="Control"><fmt id="1"/></cxt-def><cxt-def id="13" type="sdl:link" color="Control"><fmt id="1"/></cxt-def><cxt-def id="14" type="LocationDetails" purpose="Location"><props><value key="StartsAt">734</value><value key="EndsAt">784</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="15" type="LocationDetails" purpose="Location"><props><value key="StartsAt">789</value><value key="EndsAt">851</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="16" type="LocationDetails" purpose="Location"><props><value key="StartsAt">856</value><value key="EndsAt">886</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="17" type="LocationDetails" purpose="Location"><props><value key="StartsAt">937</value><value key="EndsAt">1018</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="18" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1185</value><value key="EndsAt">1215</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="19" type="x-tm-heading"><fmt id="1"/></cxt-def><cxt-def id="20" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1226</value><value key="EndsAt">1299</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="21" type="x-tm-listitem"><fmt id="1"/></cxt-def><cxt-def id="22" type="sdl:unordered-list" color="Control"><fmt id="1"/></cxt-def><cxt-def id="23" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1305</value><value key="EndsAt">1390</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="24" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1396</value><value key="EndsAt">1489</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="25" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1495</value><value key="EndsAt">1582</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="26" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1588</value><value key="EndsAt">1683</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="27" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1689</value><value key="EndsAt">1788</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="28" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1870</value><value key="EndsAt">1913</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="29" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1913</value><value key="EndsAt">2000</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="30" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2000</value><value key="EndsAt">2043</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="31" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2043</value><value key="EndsAt">2121</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="32" type="sdl:paragraph" color="Control"><fmt id="1"/></cxt-def><cxt-def id="33" type="Attribute" code="ATT" name="Attribute" descr="alt attribute"><props><value key="TranslatesAttribute">alt</value><value key="InlineTranslatesAttribute">alt</value></props></cxt-def><cxt-def id="34" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2125</value><value key="EndsAt">2637</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="35" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2642</value><value key="EndsAt">2965</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="36" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2965</value><value key="EndsAt">3005</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="37" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3005</value><value key="EndsAt">3053</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="38" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3059</value><value key="EndsAt">3298</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="39" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3298</value><value key="EndsAt">3342</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="40" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3415</value><value key="EndsAt">3471</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="41" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3476</value><value key="EndsAt">3515</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="42" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3515</value><value key="EndsAt">3861</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="43" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3866</value><value key="EndsAt">4084</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="44" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4089</value><value key="EndsAt">4398</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="45" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4429</value><value key="EndsAt">4942</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="46" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4947</value><value key="EndsAt">5112</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="47" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5112</value><value key="EndsAt">5158</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="48" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5158</value><value key="EndsAt">5218</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="49" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5224</value><value key="EndsAt">5281</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="50" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5286</value><value key="EndsAt">6885</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="51" type="pre" code="PRE" name="Pre" descr="A preformated text section" color=""><fmt id="1"/></cxt-def><cxt-def id="52" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6892</value><value key="EndsAt">7194</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="53" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7204</value><value key="EndsAt">7333</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="54" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7339</value><value key="EndsAt">7468</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="55" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7474</value><value key="EndsAt">7655</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="56" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7661</value><value key="EndsAt">7781</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="57" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7793</value><value key="EndsAt">8017</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="58" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8017</value><value key="EndsAt">8067</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="59" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8067</value><value key="EndsAt">8135</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="60" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8141</value><value key="EndsAt">8242</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="61" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8247</value><value key="EndsAt">8728</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="62" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8735</value><value key="EndsAt">8975</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="63" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8980</value><value key="EndsAt">9177</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="64" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9184</value><value key="EndsAt">9333</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="65" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9338</value><value key="EndsAt">9560</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="66" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9567</value><value key="EndsAt">10061</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="67" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10066</value><value key="EndsAt">10200</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="68" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10205</value><value key="EndsAt">10453</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="69" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10460</value><value key="EndsAt">10538</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="70" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10543</value><value key="EndsAt">10785</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="71" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10792</value><value key="EndsAt">10908</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="72" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10913</value><value key="EndsAt">11010</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="73" type="LocationDetails" purpose="Location"><props><value key="StartsAt">11015</value><value key="EndsAt">11641</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="74" type="LocationDetails" purpose="Location"><props><value key="StartsAt">11648</value><value key="EndsAt">11796</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="75" type="LocationDetails" purpose="Location"><props><value key="StartsAt">11801</value><value key="EndsAt">11911</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="76" type="LocationDetails" purpose="Location"><props><value key="StartsAt">11916</value><value key="EndsAt">12157</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="77" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12164</value><value key="EndsAt">12371</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="78" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12376</value><value key="EndsAt">12657</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="79" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12664</value><value key="EndsAt">12721</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="80" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12726</value><value key="EndsAt">12905</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="81" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12912</value><value key="EndsAt">13153</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="82" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13153</value><value key="EndsAt">13200</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="83" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13200</value><value key="EndsAt">13262</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="84" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13268</value><value key="EndsAt">13326</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="85" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13331</value><value key="EndsAt">16490</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="86" type="LocationDetails" purpose="Location"><props><value key="StartsAt">16497</value><value key="EndsAt">16833</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="87" type="LocationDetails" purpose="Location"><props><value key="StartsAt">16833</value><value key="EndsAt">16884</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="88" type="LocationDetails" purpose="Location"><props><value key="StartsAt">16884</value><value key="EndsAt">16954</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="89" type="LocationDetails" purpose="Location"><props><value key="StartsAt">16960</value><value key="EndsAt">17145</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="90" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17150</value><value key="EndsAt">18186</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="91" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18193</value><value key="EndsAt">18489</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="92" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18494</value><value key="EndsAt">18673</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="93" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18678</value><value key="EndsAt">18790</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="94" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18795</value><value key="EndsAt">18961</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="95" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18968</value><value key="EndsAt">19112</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="96" type="LocationDetails" purpose="Location"><props><value key="StartsAt">19117</value><value key="EndsAt">19520</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="97" type="LocationDetails" purpose="Location"><props><value key="StartsAt">19525</value><value key="EndsAt">20084</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="98" type="LocationDetails" purpose="Location"><props><value key="StartsAt">20089</value><value key="EndsAt">21785</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="99" type="LocationDetails" purpose="Location"><props><value key="StartsAt">21792</value><value key="EndsAt">22243</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="100" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22248</value><value key="EndsAt">22364</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="101" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22369</value><value key="EndsAt">23761</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="102" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23768</value><value key="EndsAt">24030</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="103" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24035</value><value key="EndsAt">24491</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="104" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24496</value><value key="EndsAt">24714</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="105" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24719</value><value key="EndsAt">25878</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="106" type="LocationDetails" purpose="Location"><props><value key="StartsAt">25885</value><value key="EndsAt">26253</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="107" type="LocationDetails" purpose="Location"><props><value key="StartsAt">26258</value><value key="EndsAt">27112</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="108" type="LocationDetails" purpose="Location"><props><value key="StartsAt">27119</value><value key="EndsAt">27321</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="109" type="LocationDetails" purpose="Location"><props><value key="StartsAt">27326</value><value key="EndsAt">28571</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="110" type="LocationDetails" purpose="Location"><props><value key="StartsAt">28578</value><value key="EndsAt">28805</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="111" type="LocationDetails" purpose="Location"><props><value key="StartsAt">28810</value><value key="EndsAt">28908</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="112" type="LocationDetails" purpose="Location"><props><value key="StartsAt">28913</value><value key="EndsAt">29537</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="113" type="LocationDetails" purpose="Location"><props><value key="StartsAt">29544</value><value key="EndsAt">29644</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="114" type="LocationDetails" purpose="Location"><props><value key="StartsAt">29649</value><value key="EndsAt">30666</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="115" type="LocationDetails" purpose="Location"><props><value key="StartsAt">30673</value><value key="EndsAt">30833</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="116" type="LocationDetails" purpose="Location"><props><value key="StartsAt">30833</value><value key="EndsAt">30886</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="117" type="LocationDetails" purpose="Location"><props><value key="StartsAt">30886</value><value key="EndsAt">30960</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="118" type="LocationDetails" purpose="Location"><props><value key="StartsAt">30966</value><value key="EndsAt">31426</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="119" type="LocationDetails" purpose="Location"><props><value key="StartsAt">31431</value><value key="EndsAt">31484</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="120" type="LocationDetails" purpose="Location"><props><value key="StartsAt">31489</value><value key="EndsAt">31837</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="121" type="LocationDetails" purpose="Location"><props><value key="StartsAt">31844</value><value key="EndsAt">32189</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="122" type="LocationDetails" purpose="Location"><props><value key="StartsAt">32196</value><value key="EndsAt">32253</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="123" type="LocationDetails" purpose="Location"><props><value key="StartsAt">32263</value><value key="EndsAt">32406</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="124" type="LocationDetails" purpose="Location"><props><value key="StartsAt">32412</value><value key="EndsAt">32566</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="125" type="LocationDetails" purpose="Location"><props><value key="StartsAt">32578</value><value key="EndsAt">32727</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="126" type="LocationDetails" purpose="Location"><props><value key="StartsAt">32732</value><value key="EndsAt">32741</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="127" type="LocationDetails" purpose="Location"><props><value key="StartsAt">32751</value><value key="EndsAt">32861</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="128" type="LocationDetails" purpose="Location"><props><value key="StartsAt">32867</value><value key="EndsAt">32973</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="129" type="LocationDetails" purpose="Location"><props><value key="StartsAt">32979</value><value key="EndsAt">33091</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="130" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33097</value><value key="EndsAt">33205</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="131" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33211</value><value key="EndsAt">33313</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="132" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33319</value><value key="EndsAt">33443</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="133" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33449</value><value key="EndsAt">33573</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="134" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33585</value><value key="EndsAt">33638</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="135" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33717</value><value key="EndsAt">33750</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="136" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33750</value><value key="EndsAt">34288</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def></cxt-defs><node-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><node-def id="1" parent="2"><cxt id="3"/></node-def><node-def id="2"><cxt id="4"/></node-def><node-def id="3" parent="1"><cxt id="3"/></node-def><node-def id="4" parent="3"><cxt id="6"/></node-def><node-def id="5" parent="6"><cxt id="9"/></node-def><node-def id="6" parent="7"><cxt id="10"/></node-def><node-def id="7" parent="8"><cxt id="11"/></node-def><node-def id="8" parent="9"><cxt id="11"/></node-def><node-def id="9" parent="10"><cxt id="11"/></node-def><node-def id="10" parent="11"><cxt id="11"/></node-def><node-def id="11" parent="12"><cxt id="12"/></node-def><node-def id="12" parent="3"><cxt id="13"/></node-def><node-def id="13" parent="5"><cxt id="8"/></node-def><node-def id="14" parent="5"><cxt id="8"/></node-def><node-def id="15" parent="5"><cxt id="8"/></node-def><node-def id="16" parent="5"><cxt id="8"/></node-def><node-def id="17" parent="18"><cxt id="9"/></node-def><node-def id="18" parent="7"><cxt id="10"/></node-def><node-def id="19" parent="17"><cxt id="8"/></node-def><node-def id="20" parent="21"><cxt id="11"/></node-def><node-def id="21" parent="22"><cxt id="11"/></node-def><node-def id="22" parent="23"><cxt id="11"/></node-def><node-def id="23" parent="24"><cxt id="11"/></node-def><node-def id="24" parent="9"><cxt id="11"/></node-def><node-def id="25" parent="20"><cxt id="19"/></node-def><node-def id="26" parent="20"><cxt id="22"/></node-def><node-def id="27" parent="26"><cxt id="21"/></node-def><node-def id="28" parent="26"><cxt id="21"/></node-def><node-def id="29" parent="26"><cxt id="21"/></node-def><node-def id="30" parent="26"><cxt id="21"/></node-def><node-def id="31" parent="26"><cxt id="21"/></node-def><node-def id="32" parent="26"><cxt id="21"/></node-def><node-def id="33" parent="22"><cxt id="19"/></node-def><node-def id="34" parent="22"><cxt id="11"/></node-def><node-def id="35" parent="34"><cxt id="32"/></node-def><node-def id="36" parent="34"><cxt id="32"/></node-def><node-def id="37" parent="34"><cxt id="32"/></node-def><node-def id="38" parent="34"><cxt id="19"/></node-def><node-def id="39" parent="34"><cxt id="32"/></node-def><node-def id="40" parent="41"><cxt id="9"/></node-def><node-def id="41" parent="42"><cxt id="10"/></node-def><node-def id="42" parent="34"><cxt id="11"/></node-def><node-def id="43" parent="40"><cxt id="8"/></node-def><node-def id="44" parent="40"><cxt id="8"/></node-def><node-def id="45" parent="44"><cxt id="32"/></node-def><node-def id="46" parent="44"><cxt id="32"/></node-def><node-def id="47" parent="44"><cxt id="32"/></node-def><node-def id="48" parent="34"><cxt id="32"/></node-def><node-def id="49" parent="34"><cxt id="32"/></node-def><node-def id="50" parent="34"><cxt id="19"/></node-def><node-def id="51" parent="34"><cxt id="32"/></node-def><node-def id="52" parent="34"><cxt id="51"/></node-def><node-def id="53" parent="34"><cxt id="32"/></node-def><node-def id="54" parent="34"><cxt id="22"/></node-def><node-def id="55" parent="54"><cxt id="21"/></node-def><node-def id="56" parent="54"><cxt id="21"/></node-def><node-def id="57" parent="54"><cxt id="21"/></node-def><node-def id="58" parent="54"><cxt id="21"/></node-def><node-def id="59" parent="34"><cxt id="32"/></node-def><node-def id="60" parent="34"><cxt id="19"/></node-def><node-def id="61" parent="34"><cxt id="32"/></node-def><node-def id="62" parent="34"><cxt id="51"/></node-def><node-def id="63" parent="34"><cxt id="32"/></node-def><node-def id="64" parent="34"><cxt id="51"/></node-def><node-def id="65" parent="34"><cxt id="32"/></node-def><node-def id="66" parent="34"><cxt id="51"/></node-def><node-def id="67" parent="34"><cxt id="32"/></node-def><node-def id="68" parent="34"><cxt id="32"/></node-def><node-def id="69" parent="34"><cxt id="51"/></node-def><node-def id="70" parent="34"><cxt id="32"/></node-def><node-def id="71" parent="34"><cxt id="51"/></node-def><node-def id="72" parent="34"><cxt id="32"/></node-def><node-def id="73" parent="34"><cxt id="32"/></node-def><node-def id="74" parent="34"><cxt id="51"/></node-def><node-def id="75" parent="34"><cxt id="32"/></node-def><node-def id="76" parent="34"><cxt id="32"/></node-def><node-def id="77" parent="34"><cxt id="51"/></node-def><node-def id="78" parent="34"><cxt id="32"/></node-def><node-def id="79" parent="34"><cxt id="51"/></node-def><node-def id="80" parent="34"><cxt id="32"/></node-def><node-def id="81" parent="34"><cxt id="51"/></node-def><node-def id="82" parent="34"><cxt id="32"/></node-def><node-def id="83" parent="34"><cxt id="19"/></node-def><node-def id="84" parent="34"><cxt id="32"/></node-def><node-def id="85" parent="34"><cxt id="51"/></node-def><node-def id="86" parent="34"><cxt id="32"/></node-def><node-def id="87" parent="34"><cxt id="19"/></node-def><node-def id="88" parent="34"><cxt id="32"/></node-def><node-def id="89" parent="34"><cxt id="51"/></node-def><node-def id="90" parent="34"><cxt id="32"/></node-def><node-def id="91" parent="34"><cxt id="32"/></node-def><node-def id="92" parent="34"><cxt id="32"/></node-def><node-def id="93" parent="34"><cxt id="51"/></node-def><node-def id="94" parent="34"><cxt id="32"/></node-def><node-def id="95" parent="34"><cxt id="32"/></node-def><node-def id="96" parent="34"><cxt id="32"/></node-def><node-def id="97" parent="34"><cxt id="51"/></node-def><node-def id="98" parent="34"><cxt id="32"/></node-def><node-def id="99" parent="34"><cxt id="32"/></node-def><node-def id="100" parent="34"><cxt id="51"/></node-def><node-def id="101" parent="34"><cxt id="32"/></node-def><node-def id="102" parent="34"><cxt id="32"/></node-def><node-def id="103" parent="34"><cxt id="32"/></node-def><node-def id="104" parent="34"><cxt id="51"/></node-def><node-def id="105" parent="34"><cxt id="32"/></node-def><node-def id="106" parent="34"><cxt id="51"/></node-def><node-def id="107" parent="34"><cxt id="32"/></node-def><node-def id="108" parent="34"><cxt id="51"/></node-def><node-def id="109" parent="34"><cxt id="32"/></node-def><node-def id="110" parent="34"><cxt id="32"/></node-def><node-def id="111" parent="34"><cxt id="51"/></node-def><node-def id="112" parent="34"><cxt id="32"/></node-def><node-def id="113" parent="34"><cxt id="51"/></node-def><node-def id="114" parent="34"><cxt id="32"/></node-def><node-def id="115" parent="34"><cxt id="19"/></node-def><node-def id="116" parent="34"><cxt id="32"/></node-def><node-def id="117" parent="34"><cxt id="32"/></node-def><node-def id="118" parent="34"><cxt id="51"/></node-def><node-def id="119" parent="34"><cxt id="51"/></node-def><node-def id="120" parent="34"><cxt id="32"/></node-def><node-def id="121" parent="34"><cxt id="22"/></node-def><node-def id="122" parent="121"><cxt id="21"/></node-def><node-def id="123" parent="121"><cxt id="21"/></node-def><node-def id="124" parent="34"><cxt id="32"/></node-def><node-def id="125" parent="34"><cxt id="32"/></node-def><node-def id="126" parent="34"><cxt id="22"/></node-def><node-def id="127" parent="126"><cxt id="21"/></node-def><node-def id="128" parent="126"><cxt id="21"/></node-def><node-def id="129" parent="126"><cxt id="21"/></node-def><node-def id="130" parent="126"><cxt id="21"/></node-def><node-def id="131" parent="126"><cxt id="21"/></node-def><node-def id="132" parent="126"><cxt id="21"/></node-def><node-def id="133" parent="126"><cxt id="21"/></node-def><node-def id="134" parent="11"><cxt id="11"/></node-def><node-def id="135" parent="134"><cxt id="32"/></node-def></node-defs><tag-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><tag id="4"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdoc/supported-platforms-and-configurations.html#qt-5-7&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="7"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-index.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="10"><bpt name="a" word-end="false">&lt;a href=&quot;examples-itemviews.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="13"><bpt name="a" word-end="false">&lt;a name=&quot;toc&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="16"><bpt name="a" word-end="false">&lt;a href=&quot;#design-and-concepts&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="19"><bpt name="a" word-end="false">&lt;a href=&quot;#treeitem-class-definition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="22"><bpt name="a" word-end="false">&lt;a href=&quot;#treeitem-class-implementation&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="25"><bpt name="a" word-end="false">&lt;a href=&quot;#treemodel-class-definition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="28"><bpt name="a" word-end="false">&lt;a href=&quot;#treemodel-class-implementation&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="31"><bpt name="a" word-end="false">&lt;a href=&quot;#setting-up-the-data-in-the-model&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="34"><bpt name="span" word-end="false">&lt;span class=&quot;subtitle&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="38"><bpt name="a" word-end="false">&lt;a name=&quot;details&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="42"><bpt name="a" word-end="false">&lt;a href=&quot;model-view-programming.html#models&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="45"><bpt name="a" word-end="false">&lt;a name=&quot;design-and-concepts&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="48"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="51"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="54"><bpt name="a" word-end="false">&lt;a name=&quot;simpletreemodelstructure&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="58"><bpt name="b" word-end="false">&lt;b&gt;</bpt><bpt-props><value key="FormattingItemBold">True</value><value key="StartTag">b</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="b" word-end="false">&lt;/b&gt;</ept><fmt id="3"/></tag><tag id="61"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="64"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="67"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="70"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qvariant.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="73"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qabstractitemmodel.html#createIndex-1&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="76"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qmodelindex.html#internalPointer&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="79"><bpt name="a" word-end="false">&lt;a name=&quot;treeitem-class-definition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="82"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="85"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="88"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="91"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="94"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="97"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="100"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="103"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="106"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="109"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="112"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="115"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="118"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="121"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="124"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="127"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="130"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="133"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="136"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="139"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="142"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="145"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="148"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="151"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="154"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="157"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="160"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="163"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="166"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="169"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="172"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="175"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="178"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="181"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="184"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="187"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="190"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="193"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="196"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="199"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="202"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="205"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="208"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="211"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="214"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="217"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="220"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="223"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="226"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="229"><bpt name="a" word-end="false">&lt;a name=&quot;treeitem-class-implementation&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="232"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="235"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="238"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="241"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="244"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="247"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="250"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="253"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="256"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="259"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="262"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="265"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="268"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="271"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="274"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qtalgorithms.html#qDeleteAll&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="277"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="280"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="283"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="286"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="289"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-itemviews-simpletreemodel-example.html#simpletreemodelstructure&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="292"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="295"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="298"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="301"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="304"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="307"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="310"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="313"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="316"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="319"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="322"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="325"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="328"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="331"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="334"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="337"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="340"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="343"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="346"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="349"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="352"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="355"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="358"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="361"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="364"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="367"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="370"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="373"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="376"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="379"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="382"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="385"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="388"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="391"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="394"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="397"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="400"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="403"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="406"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="409"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="412"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="415"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="418"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="421"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="424"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="427"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="430"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="433"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="436"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="439"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="442"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="445"><bpt name="a" word-end="false">&lt;a name=&quot;treemodel-class-definition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="448"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="451"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="454"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="457"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="460"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="463"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="466"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="469"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="472"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="475"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="478"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="481"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="484"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="487"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="490"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="493"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="496"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="499"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="502"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="505"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="508"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="511"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="514"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="517"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="520"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="523"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="526"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="529"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="532"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="535"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="538"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="541"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="544"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="547"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="550"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="553"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="556"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="559"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="562"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="565"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="568"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="571"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="574"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="577"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="580"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="583"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="586"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="589"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="592"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="595"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="598"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="601"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="604"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="607"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="610"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="613"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="616"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="619"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="622"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="625"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="628"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="631"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="634"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="637"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="640"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="643"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="646"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="649"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="652"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="655"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="658"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="661"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="664"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="667"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="670"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="673"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="676"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="679"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qabstractitemmodel.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="682"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="685"><bpt name="a" word-end="false">&lt;a name=&quot;treemodel-class-implementation&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="688"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="691"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="694"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="697"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="700"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="703"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="706"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="709"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="712"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="715"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="718"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="721"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="724"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="727"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="730"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="733"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="736"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="739"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="742"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="745"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="748"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="751"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="754"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="757"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="760"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="763"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="766"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="769"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="772"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="775"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qmodelindex.html#internalPointer&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="778"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="781"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="784"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="787"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="790"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="793"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="796"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="799"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="802"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="805"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="808"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="811"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="814"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="817"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="820"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="823"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="826"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="829"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="832"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="835"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="838"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="841"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="844"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="847"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="850"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="853"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="856"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="859"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="862"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="865"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="868"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="871"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="874"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="877"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="880"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="883"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="886"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="889"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="892"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="895"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="898"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="901"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="904"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qabstractitemmodel.html#createIndex-1&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="907"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="910"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="913"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="916"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="919"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="922"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="925"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="928"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="931"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="934"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="937"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="940"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="943"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="946"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="949"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="952"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="955"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="958"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="961"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="964"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="967"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="970"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="973"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="976"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="979"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="982"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="985"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="988"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="991"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="994"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="997"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1000"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1003"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1006"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1009"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1012"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1015"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1018"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qabstractitemmodel.html#createIndex-1&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1021"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1024"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1027"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1030"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1033"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1036"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1039"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1042"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1045"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1048"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1051"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1054"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1057"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1060"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1063"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1066"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1069"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1072"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1075"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1078"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1081"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1084"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1087"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1090"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1093"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1096"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1099"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1102"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1105"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1108"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1111"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1114"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1117"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1120"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1123"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1126"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1129"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1132"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1135"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1138"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1141"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1144"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1147"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1150"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1153"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1156"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1159"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1162"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1165"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1168"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1171"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1174"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1177"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1180"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1183"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1186"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1189"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1192"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1195"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1198"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1201"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1204"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1207"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1210"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1213"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1216"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1219"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1222"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1225"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1228"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1231"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1234"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1237"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1240"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1243"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1246"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1249"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1252"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1255"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1258"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1261"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1264"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1267"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1270"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1273"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1276"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1279"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qt.html#ItemDataRole-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1282"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qvariant.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1285"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1288"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1291"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1294"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1297"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1300"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1303"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1306"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1309"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1312"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1315"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1318"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1321"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1324"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1327"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1330"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1333"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1336"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1339"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1342"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1345"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1348"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1351"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1354"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1357"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1360"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1363"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1366"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1369"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1372"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1375"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1378"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1381"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1384"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1387"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1390"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1393"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1396"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1399"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1402"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1405"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1408"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1411"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1414"><bpt name="a" word-end="false">&lt;a name=&quot;setting-up-the-data-in-the-model&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1417"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1420"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1423"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1426"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1429"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1432"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1435"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1438"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1441"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-itemviews-simpletreemodel-treeitem-cpp.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1444"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-itemviews-simpletreemodel-treeitem-h.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1447"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-itemviews-simpletreemodel-treemodel-cpp.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1450"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-itemviews-simpletreemodel-treemodel-h.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1453"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-itemviews-simpletreemodel-main-cpp.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1456"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-itemviews-simpletreemodel-simpletreemodel-pro.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1459"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-itemviews-simpletreemodel-simpletreemodel-qrc.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1465"><bpt name="a" word-end="false">&lt;a href=&quot;http://www.gnu.org/licenses/fdl.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="0"><ph name="xml" word-end="false">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</ph><props><value key="ProcessingInstructionTag">xml</value></props></tag><tag id="1"><ph name="Comment" word-end="false">&lt;!-- simpletreemodel.qdoc --&gt;</ph></tag><tag id="35"><ph name="Comment" word-end="false">&lt;!-- $$$itemviews/simpletreemodel-description --&gt;</ph></tag><tag id="39"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/simpletreemodel-example.png&quot; alt=&quot;<sub xid="b88a18a8-331e-48c0-b0a3-bd6df7d524e7"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="55"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/treemodel-structure.png&quot; alt=&quot;<sub xid="2e42e5c9-2d28-41a5-abee-67a633b06a51"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="1460"><ph name="Comment" word-end="false">&lt;!-- @@@itemviews/simpletreemodel --&gt;</ph></tag><tag id="1461"><ph name="copy" word-end="false" seg-hint="IncludeWithText">&amp;copy;</ph><props><value key="PlaceholderForMappedEntity">true</value></props></tag><tag id="1462"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="1466"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag></tag-defs></header><body><group><sdl:cxts><sdl:cxt id="1"/></sdl:cxts><trans-unit id="5d6161a8-f04f-43c8-a419-08a5d4838719"><source><x id="0"/>
</source><seg-source><x id="0"/>
</seg-source><target><x id="0"/>
</target></trans-unit></group><group><sdl:cxts><sdl:cxt id="2"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="3"/></sdl:cxts><trans-unit id="f0d11e1c-c35f-4c2d-b7d5-855152cae666"><source><x id="1"/></source><seg-source><x id="1"/></seg-source><target><x id="1"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="5"/><sdl:cxt id="6"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="4"/></sdl:cxts><trans-unit id="b9040fab-d2ad-448c-90cb-866a1d51dc3c"><source>Simple Tree Model Example | Qt Widgets 5.7</source><seg-source><mrk mtype="seg" mid="1">Simple Tree Model Example | Qt Widgets 5.7</mrk></seg-source><target><mrk mtype="seg" mid="1"/></target><sdl:seg-defs><sdl:seg id="1"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="13"/></sdl:cxts><trans-unit id="b86f94e9-925f-4055-ac22-032acb30effd"><source><g id="4">Qt 5.7</g></source><seg-source><g id="4"><mrk mtype="seg" mid="2">Qt 5.7</mrk></g></seg-source><target><g id="4"><mrk mtype="seg" mid="2">Qt 5.7</mrk></g></target><sdl:seg-defs><sdl:seg id="2" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/19/2019 12:14:40</sdl:value><sdl:value key="modified_on">03/19/2019 12:14:40</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">-1724339963</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="14"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="14"/></sdl:cxts><trans-unit id="87469a5d-bb96-4a59-96a1-c45fc73a9a05"><source><g id="7">Qt Widgets</g></source><seg-source><g id="7"><mrk mtype="seg" mid="3">Qt Widgets</mrk></g></seg-source><target><g id="7"><mrk mtype="seg" mid="3"/></g></target><sdl:seg-defs><sdl:seg id="3"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="15"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="15"/></sdl:cxts><trans-unit id="70f609b2-0cda-4ec2-bc28-fa7ec2b3fa1f"><source><g id="10">Item Views Examples</g></source><seg-source><g id="10"><mrk mtype="seg" mid="4">Item Views Examples</mrk></g></seg-source><target><g id="10"><mrk mtype="seg" mid="4"/></g></target><sdl:seg-defs><sdl:seg id="4"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="16"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="16"/></sdl:cxts><trans-unit id="278badd5-8d09-42a0-9552-87feb5627921"><source>Simple Tree Model Example</source><seg-source><mrk mtype="seg" mid="5">Simple Tree Model Example</mrk></seg-source><target><mrk mtype="seg" mid="5"/></target><sdl:seg-defs><sdl:seg id="5"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="17"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="19"/></sdl:cxts><trans-unit id="c4aeeb91-6537-49ea-9d97-4e27a5ff7bcf"><source>Qt 5.7.1 Reference Documentation</source><seg-source><mrk mtype="seg" mid="6">Qt 5.7.1 Reference Documentation</mrk></seg-source><target><mrk mtype="seg" mid="6"/></target><sdl:seg-defs><sdl:seg id="6"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="18"/><sdl:cxt id="19"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="25"/></sdl:cxts><trans-unit id="f5e82c63-7603-4a69-93aa-c413e27cbde7"><source><g id="13">Contents</g></source><seg-source><g id="13"><mrk mtype="seg" mid="7">Contents</mrk></g></seg-source><target><g id="13"><mrk mtype="seg" mid="7">Содержание</mrk></g></target><sdl:seg-defs><sdl:seg id="7" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">TRAPP</sdl:value><sdl:value key="created_on">03/15/2019 00:04:32</sdl:value><sdl:value key="modified_on">03/15/2019 00:04:32</sdl:value><sdl:value key="last_modified_by">TRAPP</sdl:value><sdl:value key="SDL:OriginalTranslationHash">-1819472995</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="27"/></sdl:cxts><trans-unit id="04d4477c-1aeb-4be1-9e22-08a3732107a4"><source><g id="16">Design and Concepts</g></source><seg-source><g id="16"><mrk mtype="seg" mid="8">Design and Concepts</mrk></g></seg-source><target><g id="16"><mrk mtype="seg" mid="8"/></g></target><sdl:seg-defs><sdl:seg id="8"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="23"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="28"/></sdl:cxts><trans-unit id="0c0341f3-8f23-4f48-95e4-e442ff0abc09"><source><g id="19">TreeItem Class Definition</g></source><seg-source><g id="19"><mrk mtype="seg" mid="9">TreeItem Class Definition</mrk></g></seg-source><target><g id="19"><mrk mtype="seg" mid="9"/></g></target><sdl:seg-defs><sdl:seg id="9"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="24"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="29"/></sdl:cxts><trans-unit id="7576bd0f-10f6-483d-b743-8f1e8470e756"><source><g id="22">TreeItem Class Implementation</g></source><seg-source><g id="22"><mrk mtype="seg" mid="10">TreeItem Class Implementation</mrk></g></seg-source><target><g id="22"><mrk mtype="seg" mid="10"/></g></target><sdl:seg-defs><sdl:seg id="10"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="25"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="30"/></sdl:cxts><trans-unit id="56373136-1ff4-4b27-998f-53bf6f824d13"><source><g id="25">TreeModel Class Definition</g></source><seg-source><g id="25"><mrk mtype="seg" mid="11">TreeModel Class Definition</mrk></g></seg-source><target><g id="25"><mrk mtype="seg" mid="11"/></g></target><sdl:seg-defs><sdl:seg id="11"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="26"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="571e4cae-3481-4e98-894c-aae85d72f0b7"><source><g id="28">TreeModel Class Implementation</g></source><seg-source><g id="28"><mrk mtype="seg" mid="12">TreeModel Class Implementation</mrk></g></seg-source><target><g id="28"><mrk mtype="seg" mid="12"/></g></target><sdl:seg-defs><sdl:seg id="12"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="27"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="32"/></sdl:cxts><trans-unit id="9055e5d9-359e-4f86-9b93-6e1dcf0df79d"><source><g id="31">Setting Up the Data in the Model</g></source><seg-source><g id="31"><mrk mtype="seg" mid="13">Setting Up the Data in the Model</mrk></g></seg-source><target><g id="31"><mrk mtype="seg" mid="13"/></g></target><sdl:seg-defs><sdl:seg id="13"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="28"/><sdl:cxt id="19"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="33"/></sdl:cxts><trans-unit id="144f57ce-b779-4a15-b495-7a6f7baae8e2"><source>Simple Tree Model Example</source><seg-source><mrk mtype="seg" mid="14">Simple Tree Model Example</mrk></seg-source><target><mrk mtype="seg" mid="14"/></target><sdl:seg-defs><sdl:seg id="14"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="22"/></sdl:cxts><trans-unit id="b7286888-64cf-4ce5-9502-d416d7427973"><source><g id="34"/> <x id="35"/></source><seg-source><g id="34"/> <x id="35"/></seg-source><target><g id="34"/> <x id="35"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="30"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="34"/></sdl:cxts><trans-unit id="828505e7-437e-4bbe-b238-4a7c933ee22c"><source><g id="38"/></source><seg-source><g id="38"/></seg-source><target><g id="38"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="31"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="35"/></sdl:cxts><trans-unit id="a85808b3-fee3-4ad7-a7f0-1d9835e417d7"><source><x id="39" xid="b88a18a8-331e-48c0-b0a3-bd6df7d524e7"/></source><seg-source><x id="39" xid="b88a18a8-331e-48c0-b0a3-bd6df7d524e7"/></seg-source><target><x id="39" xid="b88a18a8-331e-48c0-b0a3-bd6df7d524e7"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="33"/></sdl:cxts><trans-unit id="b88a18a8-331e-48c0-b0a3-bd6df7d524e7"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="34"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="70d542c5-5c5b-4f06-ab35-b42ce2947a09"><source>Qt&apos;s model/view architecture provides a standard way for views to manipulate information in a data source, using an abstract model of the data to simplify and standardize the way it is accessed. Simple models represent data as a table of items, and allow views to access this data via an <g id="42">index-based</g> system. More generally, models can be used to represent data in the form of a tree structure by allowing each item to act as a parent to a table of child items.</source><seg-source><mrk mtype="seg" mid="15">Qt&apos;s model/view architecture provides a standard way for views to manipulate information in a data source, using an abstract model of the data to simplify and standardize the way it is accessed.</mrk> <mrk mtype="seg" mid="16">Simple models represent data as a table of items, and allow views to access this data via an <g id="42">index-based</g> system.</mrk> <mrk mtype="seg" mid="17">More generally, models can be used to represent data in the form of a tree structure by allowing each item to act as a parent to a table of child items.</mrk></seg-source><target><mrk mtype="seg" mid="15"/> <mrk mtype="seg" mid="16"/> <mrk mtype="seg" mid="17"/></target><sdl:seg-defs><sdl:seg id="15"/><sdl:seg id="16"/><sdl:seg id="17"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="35"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="37"/></sdl:cxts><trans-unit id="c4b2ca3f-888e-434a-868c-b72f51b77921"><source>Before attempting to implement a tree model, it is worth considering whether the data is supplied by an external source, or whether it is going to be maintained within the model itself. In this example, we will implement an internal structure to hold data rather than discuss how to package data from an external source.</source><seg-source><mrk mtype="seg" mid="18">Before attempting to implement a tree model, it is worth considering whether the data is supplied by an external source, or whether it is going to be maintained within the model itself.</mrk> <mrk mtype="seg" mid="19">In this example, we will implement an internal structure to hold data rather than discuss how to package data from an external source.</mrk></seg-source><target><mrk mtype="seg" mid="18"/> <mrk mtype="seg" mid="19"/></target><sdl:seg-defs><sdl:seg id="18"/><sdl:seg id="19"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="36"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="34"/></sdl:cxts><trans-unit id="152f42f0-1726-4fe2-b54d-8c7279efe7aa"><source><g id="45"/></source><seg-source><g id="45"/></seg-source><target><g id="45"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="37"/><sdl:cxt id="19"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="38"/></sdl:cxts><trans-unit id="1ee51950-c207-4170-86bf-eabfaf7ba06d"><source>Design and Concepts</source><seg-source><mrk mtype="seg" mid="20">Design and Concepts</mrk></seg-source><target><mrk mtype="seg" mid="20"/></target><sdl:seg-defs><sdl:seg id="20"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="38"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="39"/></sdl:cxts><trans-unit id="lockTU_ec463315-8d00-4f9e-aae7-06e6dd003ee2" translate="no" sdl:locktype="Structure"><source><g id="48">TreeItem</g></source></trans-unit><trans-unit id="lockTU_8adc3669-3e4d-4906-b25a-b13be5410dde" translate="no" sdl:locktype="Structure"><source><g id="51">TreeItem</g></source></trans-unit><trans-unit id="lockTU_88fa7434-7553-4aca-b6b6-dbb0e30a0def" translate="no" sdl:locktype="Structure"><source><g id="48">TreeItem</g></source></trans-unit><trans-unit id="lockTU_d34e8314-b56c-4973-a34a-23423b9c2fa1" translate="no" sdl:locktype="Structure"><source><g id="51">TreeItem</g></source></trans-unit><trans-unit id="d03f6955-c099-41da-aecd-4f17475ae2c8"><source>The data structure that we use to represent the structure of the data takes the form of a tree built from <x id="locked1" xid="lockTU_88fa7434-7553-4aca-b6b6-dbb0e30a0def"/> objects. Each <x id="locked2" xid="lockTU_d34e8314-b56c-4973-a34a-23423b9c2fa1"/> represents an item in a tree view, and contains several columns of data.</source><seg-source><mrk mtype="seg" mid="21">The data structure that we use to represent the structure of the data takes the form of a tree built from <x id="locked3" xid="lockTU_ec463315-8d00-4f9e-aae7-06e6dd003ee2"/> objects.</mrk> <mrk mtype="seg" mid="22">Each <x id="locked4" xid="lockTU_8adc3669-3e4d-4906-b25a-b13be5410dde"/> represents an item in a tree view, and contains several columns of data.</mrk></seg-source><target><mrk mtype="seg" mid="21"/> <mrk mtype="seg" mid="22"/></target><sdl:seg-defs><sdl:seg id="21"/><sdl:seg id="22"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="39"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="34"/></sdl:cxts><trans-unit id="9a128f8d-0797-4a35-99b6-69fcb259b96b"><source><g id="54"/></source><seg-source><g id="54"/></seg-source><target><g id="54"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="40"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="d09261d8-06ec-44e0-97aa-d38ea663f43a"><source><x id="55" xid="2e42e5c9-2d28-41a5-abee-67a633b06a51"/></source><seg-source><x id="55" xid="2e42e5c9-2d28-41a5-abee-67a633b06a51"/></seg-source><target><x id="55" xid="2e42e5c9-2d28-41a5-abee-67a633b06a51"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="33"/></sdl:cxts><trans-unit id="2e42e5c9-2d28-41a5-abee-67a633b06a51"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="44"/></sdl:cxts><trans-unit id="4c791fc5-ad51-44c6-ab7e-862660f1c9be"><source><g id="58">Simple Tree Model Structure</g></source><seg-source><g id="58"><mrk mtype="seg" mid="23">Simple Tree Model Structure</mrk></g></seg-source><target><g id="58"><mrk mtype="seg" mid="23"/></g></target><sdl:seg-defs><sdl:seg id="23"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="42"/><sdl:cxt id="32"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="45"/></sdl:cxts><trans-unit id="lockTU_7fe21867-9dae-43fa-8eb6-99f2ba7bbfac" translate="no" sdl:locktype="Structure"><source><g id="61">TreeItem</g></source></trans-unit><trans-unit id="lockTU_03d32e82-9047-4ab4-aced-d442c18830e0" translate="no" sdl:locktype="Structure"><source><g id="64">TreeItem</g></source></trans-unit><trans-unit id="lockTU_6e97e866-5839-4ac4-b6c2-cb55013f8595" translate="no" sdl:locktype="Structure"><source><g id="61">TreeItem</g></source></trans-unit><trans-unit id="lockTU_79a5ceb3-ce87-452b-b839-baf7d9cd037f" translate="no" sdl:locktype="Structure"><source><g id="64">TreeItem</g></source></trans-unit><trans-unit id="e375703a-255e-4a7b-a48f-d543fbafd5f6"><source>The data is stored internally in the model using <x id="locked5" xid="lockTU_6e97e866-5839-4ac4-b6c2-cb55013f8595"/> objects that are linked together in a pointer-based tree structure. Generally, each <x id="locked6" xid="lockTU_79a5ceb3-ce87-452b-b839-baf7d9cd037f"/> has a parent item, and can have a number of child items. However, the root item in the tree structure has no parent item and it is never referenced outside the model.</source><seg-source><mrk mtype="seg" mid="24">The data is stored internally in the model using <x id="locked7" xid="lockTU_7fe21867-9dae-43fa-8eb6-99f2ba7bbfac"/> objects that are linked together in a pointer-based tree structure.</mrk> <mrk mtype="seg" mid="25">Generally, each <x id="locked8" xid="lockTU_03d32e82-9047-4ab4-aced-d442c18830e0"/> has a parent item, and can have a number of child items.</mrk> <mrk mtype="seg" mid="26">However, the root item in the tree structure has no parent item and it is never referenced outside the model.</mrk></seg-source><target><mrk mtype="seg" mid="24"/> <mrk mtype="seg" mid="25"/> <mrk mtype="seg" mid="26"/></target><sdl:seg-defs><sdl:seg id="24"/><sdl:seg id="25"/><sdl:seg id="26"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="43"/><sdl:cxt id="32"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="46"/></sdl:cxts><trans-unit id="lockTU_43d23c35-8fb0-4cbd-a2e4-07e89896f57f" translate="no" sdl:locktype="Structure"><source><g id="67">TreeItem</g></source></trans-unit><trans-unit id="lockTU_c1ac9c15-3c9a-45cc-9c92-2cea3c11afc2" translate="no" sdl:locktype="Structure"><source><g id="67">TreeItem</g></source></trans-unit><trans-unit id="cb5df765-ad23-48b3-926e-d7f9a5b82842"><source>Each <x id="locked9" xid="lockTU_c1ac9c15-3c9a-45cc-9c92-2cea3c11afc2"/> contains information about its place in the tree structure; it can return its parent item and its row number. Having this information readily available makes implementing the model easier.</source><seg-source><mrk mtype="seg" mid="27">Each <x id="locked10" xid="lockTU_43d23c35-8fb0-4cbd-a2e4-07e89896f57f"/> contains information about its place in the tree structure; it can return its parent item and its row number.</mrk> <mrk mtype="seg" mid="28">Having this information readily available makes implementing the model easier.</mrk></seg-source><target><mrk mtype="seg" mid="27"/> <mrk mtype="seg" mid="28"/></target><sdl:seg-defs><sdl:seg id="27"/><sdl:seg id="28"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="44"/><sdl:cxt id="32"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="47"/></sdl:cxts><trans-unit id="bd37e986-5ecc-4330-8678-cca9e62f46f9"><source>Since each item in a tree view usually contains several columns of data (a title and a summary in this example), it is natural to store this information in each item. For simplicity, we will use a list of <g id="70">QVariant</g> objects to store the data for each column in the item.</source><seg-source><mrk mtype="seg" mid="29">Since each item in a tree view usually contains several columns of data (a title and a summary in this example), it is natural to store this information in each item.</mrk> <mrk mtype="seg" mid="30">For simplicity, we will use a list of <g id="70">QVariant</g> objects to store the data for each column in the item.</mrk></seg-source><target><mrk mtype="seg" mid="29"/> <mrk mtype="seg" mid="30"/></target><sdl:seg-defs><sdl:seg id="29"/><sdl:seg id="30"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="45"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="48"/></sdl:cxts><trans-unit id="1b944e6b-cd6e-4f85-8f6d-fab6126a73fd"><source>The use of a pointer-based tree structure means that, when passing a model index to a view, we can record the address of the corresponding item in the index (see <g id="73">QAbstractItemModel::createIndex</g>()) and retrieve it later with <g id="76">QModelIndex::internalPointer</g>(). This makes writing the model easier and ensures that all model indexes that refer to the same item have the same internal data pointer.</source><seg-source><mrk mtype="seg" mid="31">The use of a pointer-based tree structure means that, when passing a model index to a view, we can record the address of the corresponding item in the index (see <g id="73">QAbstractItemModel::createIndex</g>()) and retrieve it later with <g id="76">QModelIndex::internalPointer</g>().</mrk> <mrk mtype="seg" mid="32">This makes writing the model easier and ensures that all model indexes that refer to the same item have the same internal data pointer.</mrk></seg-source><target><mrk mtype="seg" mid="31"/> <mrk mtype="seg" mid="32"/></target><sdl:seg-defs><sdl:seg id="31"/><sdl:seg id="32"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="46"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="49"/></sdl:cxts><trans-unit id="1950c150-889c-492e-9b15-34203ecfa627"><source>With the appropriate data structure in place, we can create a tree model with a minimal amount of extra code to supply model indexes and data to other components.</source><seg-source><mrk mtype="seg" mid="33">With the appropriate data structure in place, we can create a tree model with a minimal amount of extra code to supply model indexes and data to other components.</mrk></seg-source><target><mrk mtype="seg" mid="33"/></target><sdl:seg-defs><sdl:seg id="33"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="47"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="34"/></sdl:cxts><trans-unit id="71aac9c9-7e4c-4354-b3cd-2e178739e9dc"><source><g id="79"/></source><seg-source><g id="79"/></seg-source><target><g id="79"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="48"/><sdl:cxt id="19"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="50"/></sdl:cxts><trans-unit id="26892437-e41d-4934-8156-8a716baef195"><source>TreeItem Class Definition</source><seg-source><mrk mtype="seg" mid="34">TreeItem Class Definition</mrk></seg-source><target><mrk mtype="seg" mid="34"/></target><sdl:seg-defs><sdl:seg id="34"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="49"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="51"/></sdl:cxts><trans-unit id="lockTU_e42e8541-a0ec-4a67-a29f-11e03d7f7b24" translate="no" sdl:locktype="Structure"><source><g id="82">TreeItem</g></source></trans-unit><trans-unit id="lockTU_494fd632-31de-46b6-9e06-55592b4226c3" translate="no" sdl:locktype="Structure"><source><g id="82">TreeItem</g></source></trans-unit><trans-unit id="d1affad6-2fa9-4ba1-8b62-243180d1b414"><source>The <x id="locked11" xid="lockTU_494fd632-31de-46b6-9e06-55592b4226c3"/> class is defined as follows:</source><seg-source><mrk mtype="seg" mid="35">The <x id="locked12" xid="lockTU_e42e8541-a0ec-4a67-a29f-11e03d7f7b24"/> class is defined as follows:</mrk></seg-source><target><mrk mtype="seg" mid="35"/></target><sdl:seg-defs><sdl:seg id="35"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="50"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="52"/></sdl:cxts><trans-unit id="9c8e8ac7-7093-412a-a030-d5bc506fe7f6"><source><g id="85">class</g> TreeItem { <g id="88">public</g>: <g id="91">explicit</g> TreeItem(<g id="94">const</g> <g id="97">QList</g><g id="100">&lt;</g><g id="103">QVariant</g><g id="106">&gt;</g> <g id="109">&amp;</g>data<g id="112">,</g> TreeItem <g id="115">*</g>parentItem <g id="118">=</g> <g id="121">0</g>); <g id="124">~</g>TreeItem(); <g id="127">void</g> appendChild(TreeItem <g id="130">*</g>child); TreeItem <g id="133">*</g>child(<g id="136">int</g> row); <g id="139">int</g> childCount() <g id="142">const</g>; <g id="145">int</g> columnCount() <g id="148">const</g>; <g id="151">QVariant</g> data(<g id="154">int</g> column) <g id="157">const</g>; <g id="160">int</g> row() <g id="163">const</g>; TreeItem <g id="166">*</g>parentItem(); <g id="169">private</g>: <g id="172">QList</g><g id="175">&lt;</g>TreeItem<g id="178">*</g><g id="181">&gt;</g> m_childItems; <g id="184">QList</g><g id="187">&lt;</g><g id="190">QVariant</g><g id="193">&gt;</g> m_itemData; TreeItem <g id="196">*</g>m_parentItem; };</source><seg-source><mrk mtype="seg" mid="36"><g id="85">class</g> TreeItem { <g id="88">public</g>:</mrk> <mrk mtype="seg" mid="37"><g id="91">explicit</g> TreeItem(<g id="94">const</g> <g id="97">QList</g><g id="100">&lt;</g><g id="103">QVariant</g><g id="106">&gt;</g> <g id="109">&amp;</g>data<g id="112">,</g> TreeItem <g id="115">*</g>parentItem <g id="118">=</g> <g id="121">0</g>); <g id="124">~</g>TreeItem(); <g id="127">void</g> appendChild(TreeItem <g id="130">*</g>child); TreeItem <g id="133">*</g>child(<g id="136">int</g> row); <g id="139">int</g> childCount() <g id="142">const</g>; <g id="145">int</g> columnCount() <g id="148">const</g>; <g id="151">QVariant</g> data(<g id="154">int</g> column) <g id="157">const</g>; <g id="160">int</g> row() <g id="163">const</g>; TreeItem <g id="166">*</g>parentItem(); <g id="169">private</g>:</mrk> <mrk mtype="seg" mid="38"><g id="172">QList</g><g id="175">&lt;</g>TreeItem<g id="178">*</g><g id="181">&gt;</g> m_childItems; <g id="184">QList</g><g id="187">&lt;</g><g id="190">QVariant</g><g id="193">&gt;</g> m_itemData; TreeItem <g id="196">*</g>m_parentItem; };</mrk></seg-source><target><mrk mtype="seg" mid="36"/> <mrk mtype="seg" mid="37"/> <mrk mtype="seg" mid="38"/></target><sdl:seg-defs><sdl:seg id="36"/><sdl:seg id="37"/><sdl:seg id="38"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="52"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="53"/></sdl:cxts><trans-unit id="964c0342-137c-498c-a152-1a6aa15df075"><source>The class is a basic C++ class. It does not inherit from <g id="199">QObject</g> or provide signals and slots. It is used to hold a list of QVariants, containing column data, and information about its position in the tree structure. The functions provide the following features:</source><seg-source><mrk mtype="seg" mid="39">The class is a basic C++ class.</mrk> <mrk mtype="seg" mid="40">It does not inherit from <g id="199">QObject</g> or provide signals and slots.</mrk> <mrk mtype="seg" mid="41">It is used to hold a list of QVariants, containing column data, and information about its position in the tree structure.</mrk> <mrk mtype="seg" mid="42">The functions provide the following features:</mrk></seg-source><target><mrk mtype="seg" mid="39"/> <mrk mtype="seg" mid="40"/> <mrk mtype="seg" mid="41"/> <mrk mtype="seg" mid="42"/></target><sdl:seg-defs><sdl:seg id="39"/><sdl:seg id="40"/><sdl:seg id="41"/><sdl:seg id="42"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="53"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="55"/></sdl:cxts><trans-unit id="lockTU_3d7e028b-d8ec-49b0-a771-208e14872b81" translate="no" sdl:locktype="Structure"><source><g id="202">appendChildItem()</g></source></trans-unit><trans-unit id="lockTU_00f05bf2-f6ac-447f-8cb7-4842d3ba162e" translate="no" sdl:locktype="Structure"><source><g id="202">appendChildItem()</g></source></trans-unit><trans-unit id="1497fc15-3ecb-456c-b276-ddba401b6dfe"><source>The <x id="locked13" xid="lockTU_00f05bf2-f6ac-447f-8cb7-4842d3ba162e"/> is used to add data when the model is first constructed and is not used during normal use.</source><seg-source><mrk mtype="seg" mid="43">The <x id="locked14" xid="lockTU_3d7e028b-d8ec-49b0-a771-208e14872b81"/> is used to add data when the model is first constructed and is not used during normal use.</mrk></seg-source><target><mrk mtype="seg" mid="43"/></target><sdl:seg-defs><sdl:seg id="43"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="54"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="56"/></sdl:cxts><trans-unit id="lockTU_b41cbed5-3776-47c6-b855-796aee2ca845" translate="no" sdl:locktype="Structure"><source><g id="205">child()</g></source></trans-unit><trans-unit id="lockTU_a46213c9-9d35-4ff9-b400-d6e73c517144" translate="no" sdl:locktype="Structure"><source><g id="208">childCount()</g></source></trans-unit><trans-unit id="lockTU_eddae31c-1aac-436a-a949-f6a17d9648e0" translate="no" sdl:locktype="Structure"><source><g id="205">child()</g></source></trans-unit><trans-unit id="lockTU_6d366351-6d73-466a-8b50-04c079a5ada8" translate="no" sdl:locktype="Structure"><source><g id="208">childCount()</g></source></trans-unit><trans-unit id="c4b2c129-5032-48ef-a3d5-8f7faa4c6bff"><source>The <x id="locked15" xid="lockTU_eddae31c-1aac-436a-a949-f6a17d9648e0"/> and <x id="locked16" xid="lockTU_6d366351-6d73-466a-8b50-04c079a5ada8"/> functions allow the model to obtain information about any child items.</source><seg-source><mrk mtype="seg" mid="44">The <x id="locked17" xid="lockTU_b41cbed5-3776-47c6-b855-796aee2ca845"/> and <x id="locked18" xid="lockTU_a46213c9-9d35-4ff9-b400-d6e73c517144"/> functions allow the model to obtain information about any child items.</mrk></seg-source><target><mrk mtype="seg" mid="44"/></target><sdl:seg-defs><sdl:seg id="44"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="55"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="57"/></sdl:cxts><trans-unit id="lockTU_256625c2-0255-424a-9278-c3ac736faef8" translate="no" sdl:locktype="Structure"><source><g id="211">columnCount()</g></source></trans-unit><trans-unit id="lockTU_27ea0b9d-223a-48bc-bd64-cf02cb0c3f5c" translate="no" sdl:locktype="Structure"><source><g id="211">columnCount()</g></source></trans-unit><trans-unit id="91fc57cd-a0d4-4aac-8ddc-2e0b14c83b52"><source>Information about the number of columns associated with the item is provided by <x id="locked19" xid="lockTU_27ea0b9d-223a-48bc-bd64-cf02cb0c3f5c"/>, and the data in each column can be obtained with the data() function.</source><seg-source><mrk mtype="seg" mid="45">Information about the number of columns associated with the item is provided by <x id="locked20" xid="lockTU_256625c2-0255-424a-9278-c3ac736faef8"/>, and the data in each column can be obtained with the data() function.</mrk></seg-source><target><mrk mtype="seg" mid="45"/></target><sdl:seg-defs><sdl:seg id="45"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="56"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="58"/></sdl:cxts><trans-unit id="lockTU_3787b056-3dbe-4cd2-9a58-ef3cbf688178" translate="no" sdl:locktype="Structure"><source><g id="214">row()</g></source></trans-unit><trans-unit id="lockTU_f7470a00-916d-41a6-b432-50e4aec2058a" translate="no" sdl:locktype="Structure"><source><g id="217">parent()</g></source></trans-unit><trans-unit id="lockTU_5265f0dd-626e-4ad3-8429-27a83924fce0" translate="no" sdl:locktype="Structure"><source><g id="214">row()</g></source></trans-unit><trans-unit id="lockTU_fb02826c-6094-454d-a64e-08b05628033b" translate="no" sdl:locktype="Structure"><source><g id="217">parent()</g></source></trans-unit><trans-unit id="a4681a81-b5c8-495b-87e7-1baa0290cbc5"><source>The <x id="locked21" xid="lockTU_5265f0dd-626e-4ad3-8429-27a83924fce0"/> and <x id="locked22" xid="lockTU_fb02826c-6094-454d-a64e-08b05628033b"/> functions are used to obtain the item&apos;s row number and parent item.</source><seg-source><mrk mtype="seg" mid="46">The <x id="locked23" xid="lockTU_3787b056-3dbe-4cd2-9a58-ef3cbf688178"/> and <x id="locked24" xid="lockTU_f7470a00-916d-41a6-b432-50e4aec2058a"/> functions are used to obtain the item&apos;s row number and parent item.</mrk></seg-source><target><mrk mtype="seg" mid="46"/></target><sdl:seg-defs><sdl:seg id="46"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="57"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="59"/></sdl:cxts><trans-unit id="lockTU_1d93d555-f382-4591-807a-da2babe5cdd2" translate="no" sdl:locktype="Structure"><source><g id="220">parentItem</g></source></trans-unit><trans-unit id="lockTU_af9ef1bb-a202-4148-a2d9-25b74f11e8dc" translate="no" sdl:locktype="Structure"><source><g id="223">itemData</g></source></trans-unit><trans-unit id="lockTU_cd531990-c8e6-4fcc-9512-3c47ee7274e5" translate="no" sdl:locktype="Structure"><source><g id="226">childItems</g></source></trans-unit><trans-unit id="lockTU_d445fcec-0772-413e-a9c8-6e5ca3e8dcc0" translate="no" sdl:locktype="Structure"><source><g id="220">parentItem</g></source></trans-unit><trans-unit id="lockTU_04207360-54bb-4f8e-9a06-084a41d9f0ca" translate="no" sdl:locktype="Structure"><source><g id="223">itemData</g></source></trans-unit><trans-unit id="lockTU_0e347e54-50c5-434a-833d-18a8804d7a4d" translate="no" sdl:locktype="Structure"><source><g id="226">childItems</g></source></trans-unit><trans-unit id="1c83be39-8a62-430b-8398-1c231da74441"><source>The parent item and column data are stored in the <x id="locked25" xid="lockTU_d445fcec-0772-413e-a9c8-6e5ca3e8dcc0"/> and <x id="locked26" xid="lockTU_04207360-54bb-4f8e-9a06-084a41d9f0ca"/> private member variables. The <x id="locked27" xid="lockTU_0e347e54-50c5-434a-833d-18a8804d7a4d"/> variable contains a list of pointers to the item&apos;s own child items.</source><seg-source><mrk mtype="seg" mid="47">The parent item and column data are stored in the <x id="locked28" xid="lockTU_1d93d555-f382-4591-807a-da2babe5cdd2"/> and <x id="locked29" xid="lockTU_af9ef1bb-a202-4148-a2d9-25b74f11e8dc"/> private member variables.</mrk> <mrk mtype="seg" mid="48">The <x id="locked30" xid="lockTU_cd531990-c8e6-4fcc-9512-3c47ee7274e5"/> variable contains a list of pointers to the item&apos;s own child items.</mrk></seg-source><target><mrk mtype="seg" mid="47"/> <mrk mtype="seg" mid="48"/></target><sdl:seg-defs><sdl:seg id="47"/><sdl:seg id="48"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="58"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="34"/></sdl:cxts><trans-unit id="3a92ac96-0911-41f2-ad3e-ef3d4cc9f766"><source><g id="229"/></source><seg-source><g id="229"/></seg-source><target><g id="229"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="59"/><sdl:cxt id="19"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="60"/></sdl:cxts><trans-unit id="4c4e35ca-5b23-470a-be96-533a5968572f"><source>TreeItem Class Implementation</source><seg-source><mrk mtype="seg" mid="49">TreeItem Class Implementation</mrk></seg-source><target><mrk mtype="seg" mid="49"/></target><sdl:seg-defs><sdl:seg id="49"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="60"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="61"/></sdl:cxts><trans-unit id="cb43a303-38ee-4b96-b375-750e416669f9"><source>The constructor is only used to record the item&apos;s parent and the data associated with each column.</source><seg-source><mrk mtype="seg" mid="50">The constructor is only used to record the item&apos;s parent and the data associated with each column.</mrk></seg-source><target><mrk mtype="seg" mid="50"/></target><sdl:seg-defs><sdl:seg id="50"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="61"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="62"/></sdl:cxts><trans-unit id="183df700-0c1f-4824-8967-7c9f805f73a5"><source>TreeItem<g id="232">::</g>TreeItem(<g id="235">const</g> <g id="238">QList</g><g id="241">&lt;</g><g id="244">QVariant</g><g id="247">&gt;</g> <g id="250">&amp;</g>data<g id="253">,</g> TreeItem <g id="256">*</g>parent) { m_parentItem <g id="259">=</g> parent; m_itemData <g id="262">=</g> data; }</source><seg-source><mrk mtype="seg" mid="51">TreeItem<g id="232">::</g>TreeItem(<g id="235">const</g> <g id="238">QList</g><g id="241">&lt;</g><g id="244">QVariant</g><g id="247">&gt;</g> <g id="250">&amp;</g>data<g id="253">,</g> TreeItem <g id="256">*</g>parent) { m_parentItem <g id="259">=</g> parent; m_itemData <g id="262">=</g> data; }</mrk></seg-source><target><mrk mtype="seg" mid="51"/></target><sdl:seg-defs><sdl:seg id="51"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="62"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="63"/></sdl:cxts><trans-unit id="lockTU_b2d03e5a-849f-478b-874d-c2bdc117142d" translate="no" sdl:locktype="Structure"><source><g id="265">childItems</g></source></trans-unit><trans-unit id="lockTU_7788d216-937f-4438-a7de-9aba158b83f8" translate="no" sdl:locktype="Structure"><source><g id="265">childItems</g></source></trans-unit><trans-unit id="9e85bffe-f05c-49b7-83f4-590c7b092c17"><source>A pointer to each of the child items belonging to this item will be stored in the <x id="locked31" xid="lockTU_7788d216-937f-4438-a7de-9aba158b83f8"/> private member variable. When the class&apos;s destructor is called, it must delete each of these to ensure that their memory is reused:</source><seg-source><mrk mtype="seg" mid="52">A pointer to each of the child items belonging to this item will be stored in the <x id="locked32" xid="lockTU_b2d03e5a-849f-478b-874d-c2bdc117142d"/> private member variable.</mrk> <mrk mtype="seg" mid="53">When the class&apos;s destructor is called, it must delete each of these to ensure that their memory is reused:</mrk></seg-source><target><mrk mtype="seg" mid="52"/> <mrk mtype="seg" mid="53"/></target><sdl:seg-defs><sdl:seg id="52"/><sdl:seg id="53"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="63"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="64"/></sdl:cxts><trans-unit id="c3515936-c0a5-4600-a60e-a820adc1020d"><source>TreeItem<g id="268">::</g><g id="271">~</g>TreeItem() { <g id="274">qDeleteAll</g>(m_childItems); }</source><seg-source><mrk mtype="seg" mid="54">TreeItem<g id="268">::</g><g id="271">~</g>TreeItem() { <g id="274">qDeleteAll</g>(m_childItems); }</mrk></seg-source><target><mrk mtype="seg" mid="54"/></target><sdl:seg-defs><sdl:seg id="54"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="64"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="65"/></sdl:cxts><trans-unit id="1a9cb412-1231-4a68-b185-c2f1d2b0e7ea"><source>Since each of the child items are constructed when the model is initially populated with data, the function to add child items is straightforward:</source><seg-source><mrk mtype="seg" mid="55">Since each of the child items are constructed when the model is initially populated with data, the function to add child items is straightforward:</mrk></seg-source><target><mrk mtype="seg" mid="55"/></target><sdl:seg-defs><sdl:seg id="55"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="65"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="66"/></sdl:cxts><trans-unit id="0e81099c-2a84-4c6e-ae2d-e1c2f09df212"><source><g id="277">void</g> TreeItem<g id="280">::</g>appendChild(TreeItem <g id="283">*</g>item) { m_childItems<g id="286">.</g>append(item); }</source><seg-source><mrk mtype="seg" mid="56"><g id="277">void</g> TreeItem<g id="280">::</g>appendChild(TreeItem <g id="283">*</g>item) { m_childItems<g id="286">.</g>append(item); }</mrk></seg-source><target><mrk mtype="seg" mid="56"/></target><sdl:seg-defs><sdl:seg id="56"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="66"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="67"/></sdl:cxts><trans-unit id="lockTU_b4092dfb-3257-4142-bf78-baa8669f6639" translate="no" sdl:locktype="Structure"><source><g id="292">row = 0</g></source></trans-unit><trans-unit id="lockTU_ae78f3a0-927a-4b9a-b227-704775b23e78" translate="no" sdl:locktype="Structure"><source><g id="295">row = 1</g></source></trans-unit><trans-unit id="lockTU_84fec698-27d6-41c9-9109-4a39b7f1d887" translate="no" sdl:locktype="Structure"><source><g id="298">row = 1</g></source></trans-unit><trans-unit id="lockTU_a9b08502-02d5-427a-b2e3-cfc782b41f6e" translate="no" sdl:locktype="Structure"><source><g id="292">row = 0</g></source></trans-unit><trans-unit id="lockTU_b83633fd-6972-497c-adf2-3698448f328f" translate="no" sdl:locktype="Structure"><source><g id="295">row = 1</g></source></trans-unit><trans-unit id="lockTU_6d683b4b-2d60-4f2d-956a-62e7babf2be4" translate="no" sdl:locktype="Structure"><source><g id="298">row = 1</g></source></trans-unit><trans-unit id="0a20d6a4-458f-4759-8a85-8cf196a7ba52"><source>Each item is able to return any of its child items when given a suitable row number. For example, in the <g id="289">above diagram</g>, the item marked with the letter &quot;A&quot; corresponds to the child of the root item with <x id="locked33" xid="lockTU_a9b08502-02d5-427a-b2e3-cfc782b41f6e"/>, the &quot;B&quot; item is a child of the &quot;A&quot; item with <x id="locked34" xid="lockTU_b83633fd-6972-497c-adf2-3698448f328f"/>, and the &quot;C&quot; item is a child of the root item with <x id="locked35" xid="lockTU_6d683b4b-2d60-4f2d-956a-62e7babf2be4"/>.</source><seg-source><mrk mtype="seg" mid="57">Each item is able to return any of its child items when given a suitable row number.</mrk> <mrk mtype="seg" mid="58">For example, in the <g id="289">above diagram</g>, the item marked with the letter &quot;A&quot; corresponds to the child of the root item with <x id="locked36" xid="lockTU_b4092dfb-3257-4142-bf78-baa8669f6639"/>, the &quot;B&quot; item is a child of the &quot;A&quot; item with <x id="locked37" xid="lockTU_ae78f3a0-927a-4b9a-b227-704775b23e78"/>, and the &quot;C&quot; item is a child of the root item with <x id="locked38" xid="lockTU_84fec698-27d6-41c9-9109-4a39b7f1d887"/>.</mrk></seg-source><target><mrk mtype="seg" mid="57"/> <mrk mtype="seg" mid="58"/></target><sdl:seg-defs><sdl:seg id="57"/><sdl:seg id="58"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="67"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="68"/></sdl:cxts><trans-unit id="lockTU_deb18bd3-b6a5-4d7e-bc33-e02d865260fd" translate="no" sdl:locktype="Structure"><source><g id="301">child()</g></source></trans-unit><trans-unit id="lockTU_28034875-33dd-47f0-a9dd-a42364a44b27" translate="no" sdl:locktype="Structure"><source><g id="301">child()</g></source></trans-unit><trans-unit id="def9180a-4745-44ae-9280-b2184975359c"><source>The <x id="locked39" xid="lockTU_28034875-33dd-47f0-a9dd-a42364a44b27"/> function returns the child that corresponds to the specified row number in the item&apos;s list of child items:</source><seg-source><mrk mtype="seg" mid="59">The <x id="locked40" xid="lockTU_deb18bd3-b6a5-4d7e-bc33-e02d865260fd"/> function returns the child that corresponds to the specified row number in the item&apos;s list of child items:</mrk></seg-source><target><mrk mtype="seg" mid="59"/></target><sdl:seg-defs><sdl:seg id="59"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="68"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="69"/></sdl:cxts><trans-unit id="65618e6a-49b9-4558-b825-7860d346fd20"><source>TreeItem <g id="304">*</g>TreeItem<g id="307">::</g>child(<g id="310">int</g> row) { <g id="313">return</g> m_childItems<g id="316">.</g>value(row); }</source><seg-source><mrk mtype="seg" mid="60">TreeItem <g id="304">*</g>TreeItem<g id="307">::</g>child(<g id="310">int</g> row) { <g id="313">return</g> m_childItems<g id="316">.</g>value(row); }</mrk></seg-source><target><mrk mtype="seg" mid="60"/></target><sdl:seg-defs><sdl:seg id="60"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="69"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="70"/></sdl:cxts><trans-unit id="lockTU_5b6c7d1e-e040-416b-88ca-f2d56c6c8f17" translate="no" sdl:locktype="Structure"><source><g id="319">childCount()</g></source></trans-unit><trans-unit id="lockTU_28d14cfc-23af-4ee3-a31e-5f9af1b7d077" translate="no" sdl:locktype="Structure"><source><g id="319">childCount()</g></source></trans-unit><trans-unit id="8f837749-eafb-409d-9fa2-12fed419f220"><source>The number of child items held can be found with <x id="locked41" xid="lockTU_28d14cfc-23af-4ee3-a31e-5f9af1b7d077"/>:</source><seg-source><mrk mtype="seg" mid="61">The number of child items held can be found with <x id="locked42" xid="lockTU_5b6c7d1e-e040-416b-88ca-f2d56c6c8f17"/>:</mrk></seg-source><target><mrk mtype="seg" mid="61"/></target><sdl:seg-defs><sdl:seg id="61"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="70"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="71"/></sdl:cxts><trans-unit id="30eda0a7-81f9-4260-a05f-4cc15dd2b020"><source><g id="322">int</g> TreeItem<g id="325">::</g>childCount() <g id="328">const</g> { <g id="331">return</g> m_childItems<g id="334">.</g>count(); }</source><seg-source><mrk mtype="seg" mid="62"><g id="322">int</g> TreeItem<g id="325">::</g>childCount() <g id="328">const</g> { <g id="331">return</g> m_childItems<g id="334">.</g>count(); }</mrk></seg-source><target><mrk mtype="seg" mid="62"/></target><sdl:seg-defs><sdl:seg id="62"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="71"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="72"/></sdl:cxts><trans-unit id="lockTU_d873d845-02d5-4307-a3ac-92e6a836b467" translate="no" sdl:locktype="Structure"><source><g id="337">TreeModel</g></source></trans-unit><trans-unit id="lockTU_a334abd6-45be-40a4-bdda-af85f0e00bae" translate="no" sdl:locktype="Structure"><source><g id="337">TreeModel</g></source></trans-unit><trans-unit id="88a1343e-be39-4229-9478-00d5b4708564"><source>The <x id="locked43" xid="lockTU_a334abd6-45be-40a4-bdda-af85f0e00bae"/> uses this function to determine the number of rows that exist for a given parent item.</source><seg-source><mrk mtype="seg" mid="63">The <x id="locked44" xid="lockTU_d873d845-02d5-4307-a3ac-92e6a836b467"/> uses this function to determine the number of rows that exist for a given parent item.</mrk></seg-source><target><mrk mtype="seg" mid="63"/></target><sdl:seg-defs><sdl:seg id="63"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="72"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="73"/></sdl:cxts><trans-unit id="lockTU_59f7e267-151c-441b-a934-87e3184aecc3" translate="no" sdl:locktype="Structure"><source><g id="340">row()</g></source></trans-unit><trans-unit id="lockTU_0df46b5e-1142-416e-a164-0edc1ec5226e" translate="no" sdl:locktype="Structure"><source><g id="340">row()</g></source></trans-unit><trans-unit id="f5fa4631-2029-49d4-8774-7e3e3cf6d799"><source>The <x id="locked45" xid="lockTU_0df46b5e-1142-416e-a164-0edc1ec5226e"/> function reports the item&apos;s location within its parent&apos;s list of items:</source><seg-source><mrk mtype="seg" mid="64">The <x id="locked46" xid="lockTU_59f7e267-151c-441b-a934-87e3184aecc3"/> function reports the item&apos;s location within its parent&apos;s list of items:</mrk></seg-source><target><mrk mtype="seg" mid="64"/></target><sdl:seg-defs><sdl:seg id="64"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="73"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="74"/></sdl:cxts><trans-unit id="0a60fb9a-d461-456c-8ba7-cb6816f6f51f"><source><g id="343">int</g> TreeItem<g id="346">::</g>row() <g id="349">const</g> { <g id="352">if</g> (m_parentItem) <g id="355">return</g> m_parentItem<g id="358">-</g><g id="361">&gt;</g>m_childItems<g id="364">.</g>indexOf(<g id="367">const_cast</g><g id="370">&lt;</g>TreeItem<g id="373">*</g><g id="376">&gt;</g>(<g id="379">this</g>)); <g id="382">return</g> <g id="385">0</g>; }</source><seg-source><mrk mtype="seg" mid="65"><g id="343">int</g> TreeItem<g id="346">::</g>row() <g id="349">const</g> { <g id="352">if</g> (m_parentItem) <g id="355">return</g> m_parentItem<g id="358">-</g><g id="361">&gt;</g>m_childItems<g id="364">.</g>indexOf(<g id="367">const_cast</g><g id="370">&lt;</g>TreeItem<g id="373">*</g><g id="376">&gt;</g>(<g id="379">this</g>)); <g id="382">return</g> <g id="385">0</g>; }</mrk></seg-source><target><mrk mtype="seg" mid="65"/></target><sdl:seg-defs><sdl:seg id="65"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="74"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="75"/></sdl:cxts><trans-unit id="d9968c5a-e47e-4bfc-84b5-3be3262cce61"><source>Note that, although the root item (with no parent item) is automatically assigned a row number of 0, this information is never used by the model.</source><seg-source><mrk mtype="seg" mid="66">Note that, although the root item (with no parent item) is automatically assigned a row number of 0, this information is never used by the model.</mrk></seg-source><target><mrk mtype="seg" mid="66"/></target><sdl:seg-defs><sdl:seg id="66"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="75"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="76"/></sdl:cxts><trans-unit id="lockTU_70403eba-7b58-4810-993e-4d9467f3a688" translate="no" sdl:locktype="Structure"><source><g id="388">columnCount()</g></source></trans-unit><trans-unit id="lockTU_3d6ad569-aa25-448b-86d0-8ef8efa26e2d" translate="no" sdl:locktype="Structure"><source><g id="388">columnCount()</g></source></trans-unit><trans-unit id="3bceaa18-c9ed-4f9c-a5be-f1e861c99a77"><source>The number of columns of data in the item is trivially returned by the <x id="locked47" xid="lockTU_3d6ad569-aa25-448b-86d0-8ef8efa26e2d"/> function.</source><seg-source><mrk mtype="seg" mid="67">The number of columns of data in the item is trivially returned by the <x id="locked48" xid="lockTU_70403eba-7b58-4810-993e-4d9467f3a688"/> function.</mrk></seg-source><target><mrk mtype="seg" mid="67"/></target><sdl:seg-defs><sdl:seg id="67"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="76"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="77"/></sdl:cxts><trans-unit id="f757a9ed-a0a4-4b3e-ad88-4325c5628289"><source><g id="391">int</g> TreeItem<g id="394">::</g>columnCount() <g id="397">const</g> { <g id="400">return</g> m_itemData<g id="403">.</g>count(); }</source><seg-source><mrk mtype="seg" mid="68"><g id="391">int</g> TreeItem<g id="394">::</g>columnCount() <g id="397">const</g> { <g id="400">return</g> m_itemData<g id="403">.</g>count(); }</mrk></seg-source><target><mrk mtype="seg" mid="68"/></target><sdl:seg-defs><sdl:seg id="68"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="77"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="78"/></sdl:cxts><trans-unit id="lockTU_ab6c9b5f-f644-4737-9407-d00036920b45" translate="no" sdl:locktype="Structure"><source><g id="406">data()</g></source></trans-unit><trans-unit id="lockTU_1f3f0f68-617a-4e9b-bcfc-13213be318e8" translate="no" sdl:locktype="Structure"><source><g id="406">data()</g></source></trans-unit><trans-unit id="4ed03dc8-ddcf-44bd-9610-f3e15a6a8a6c"><source>Column data is returned by the <x id="locked49" xid="lockTU_1f3f0f68-617a-4e9b-bcfc-13213be318e8"/> function, taking advantage of <g id="409">QList</g>&apos;s ability to provide sensible default values if the column number is out of range:</source><seg-source><mrk mtype="seg" mid="69">Column data is returned by the <x id="locked50" xid="lockTU_ab6c9b5f-f644-4737-9407-d00036920b45"/> function, taking advantage of <g id="409">QList</g>&apos;s ability to provide sensible default values if the column number is out of range:</mrk></seg-source><target><mrk mtype="seg" mid="69"/></target><sdl:seg-defs><sdl:seg id="69"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="78"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="79"/></sdl:cxts><trans-unit id="8a18e9b7-2fce-4015-82b1-40900d080369"><source><g id="412">QVariant</g> TreeItem<g id="415">::</g>data(<g id="418">int</g> column) <g id="421">const</g> { <g id="424">return</g> m_itemData<g id="427">.</g>value(column); }</source><seg-source><mrk mtype="seg" mid="70"><g id="412">QVariant</g> TreeItem<g id="415">::</g>data(<g id="418">int</g> column) <g id="421">const</g> { <g id="424">return</g> m_itemData<g id="427">.</g>value(column); }</mrk></seg-source><target><mrk mtype="seg" mid="70"/></target><sdl:seg-defs><sdl:seg id="70"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="79"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="80"/></sdl:cxts><trans-unit id="lockTU_44d71eba-0451-4b8e-bdf6-4b09c5d970ff" translate="no" sdl:locktype="Structure"><source><g id="430">parent()</g></source></trans-unit><trans-unit id="lockTU_ac5fffdc-0a21-4c50-a2b8-858be8e0d895" translate="no" sdl:locktype="Structure"><source><g id="430">parent()</g></source></trans-unit><trans-unit id="bbdbb5ea-56b9-48be-a4f2-0c2c0576ffa5"><source>The item&apos;s parent is found with <x id="locked51" xid="lockTU_ac5fffdc-0a21-4c50-a2b8-858be8e0d895"/>:</source><seg-source><mrk mtype="seg" mid="71">The item&apos;s parent is found with <x id="locked52" xid="lockTU_44d71eba-0451-4b8e-bdf6-4b09c5d970ff"/>:</mrk></seg-source><target><mrk mtype="seg" mid="71"/></target><sdl:seg-defs><sdl:seg id="71"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="80"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="81"/></sdl:cxts><trans-unit id="0dedc9e8-7cc9-43b0-84f7-0cb7573801f3"><source>TreeItem <g id="433">*</g>TreeItem<g id="436">::</g>parentItem() { <g id="439">return</g> m_parentItem; }</source><seg-source><mrk mtype="seg" mid="72">TreeItem <g id="433">*</g>TreeItem<g id="436">::</g>parentItem() { <g id="439">return</g> m_parentItem; }</mrk></seg-source><target><mrk mtype="seg" mid="72"/></target><sdl:seg-defs><sdl:seg id="72"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="81"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="82"/></sdl:cxts><trans-unit id="lockTU_b0de325b-0bc6-430c-af4e-5408a3893479" translate="no" sdl:locktype="Structure"><source><g id="442">TreeModel::parent()</g></source></trans-unit><trans-unit id="lockTU_4da6b357-71a5-4ae2-af97-d11297cffcc7" translate="no" sdl:locktype="Structure"><source><g id="442">TreeModel::parent()</g></source></trans-unit><trans-unit id="5643f227-9720-408b-b943-96d5c5fa897b"><source>Note that, since the root item in the model will not have a parent, this function will return zero in that case. We need to ensure that the model handles this case correctly when we implement the <x id="locked53" xid="lockTU_4da6b357-71a5-4ae2-af97-d11297cffcc7"/> function.</source><seg-source><mrk mtype="seg" mid="73">Note that, since the root item in the model will not have a parent, this function will return zero in that case.</mrk> <mrk mtype="seg" mid="74">We need to ensure that the model handles this case correctly when we implement the <x id="locked54" xid="lockTU_b0de325b-0bc6-430c-af4e-5408a3893479"/> function.</mrk></seg-source><target><mrk mtype="seg" mid="73"/> <mrk mtype="seg" mid="74"/></target><sdl:seg-defs><sdl:seg id="73"/><sdl:seg id="74"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="82"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="34"/></sdl:cxts><trans-unit id="1e992034-fe1e-402f-b046-a3fcfd7b7970"><source><g id="445"/></source><seg-source><g id="445"/></seg-source><target><g id="445"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="83"/><sdl:cxt id="19"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="83"/></sdl:cxts><trans-unit id="6ded43ef-4570-42a3-9bae-743b01260b11"><source>TreeModel Class Definition</source><seg-source><mrk mtype="seg" mid="75">TreeModel Class Definition</mrk></seg-source><target><mrk mtype="seg" mid="75"/></target><sdl:seg-defs><sdl:seg id="75"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="84"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="84"/></sdl:cxts><trans-unit id="lockTU_cf100ff9-7d9d-492c-85ab-debf34b4bf9a" translate="no" sdl:locktype="Structure"><source><g id="448">TreeModel</g></source></trans-unit><trans-unit id="lockTU_5cff8576-6e96-4767-952d-9c6f41b18cbd" translate="no" sdl:locktype="Structure"><source><g id="448">TreeModel</g></source></trans-unit><trans-unit id="44363934-8bb9-413f-81da-f67ad2cb5091"><source>The <x id="locked55" xid="lockTU_5cff8576-6e96-4767-952d-9c6f41b18cbd"/> class is defined as follows:</source><seg-source><mrk mtype="seg" mid="76">The <x id="locked56" xid="lockTU_cf100ff9-7d9d-492c-85ab-debf34b4bf9a"/> class is defined as follows:</mrk></seg-source><target><mrk mtype="seg" mid="76"/></target><sdl:seg-defs><sdl:seg id="76"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="85"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="85"/></sdl:cxts><trans-unit id="7b1f6667-f672-4b8d-a12c-9ebf57f4e77d"><source><g id="451">class</g> TreeModel : <g id="454">public</g> <g id="457">QAbstractItemModel</g> { Q_OBJECT <g id="460">public</g>: <g id="463">explicit</g> TreeModel(<g id="466">const</g> <g id="469">QString</g> <g id="472">&amp;</g>data<g id="475">,</g> <g id="478">QObject</g> <g id="481">*</g>parent <g id="484">=</g> <g id="487">0</g>); <g id="490">~</g>TreeModel(); <g id="493">QVariant</g> data(<g id="496">const</g> <g id="499">QModelIndex</g> <g id="502">&amp;</g>index<g id="505">,</g> <g id="508">int</g> role) <g id="511">const</g> Q_DECL_OVERRIDE; <g id="514">Qt</g><g id="517">::</g>ItemFlags flags(<g id="520">const</g> <g id="523">QModelIndex</g> <g id="526">&amp;</g>index) <g id="529">const</g> Q_DECL_OVERRIDE; <g id="532">QVariant</g> headerData(<g id="535">int</g> section<g id="538">,</g> <g id="541">Qt</g><g id="544">::</g>Orientation orientation<g id="547">,</g> <g id="550">int</g> role <g id="553">=</g> <g id="556">Qt</g><g id="559">::</g>DisplayRole) <g id="562">const</g> Q_DECL_OVERRIDE; <g id="565">QModelIndex</g> index(<g id="568">int</g> row<g id="571">,</g> <g id="574">int</g> column<g id="577">,</g> <g id="580">const</g> <g id="583">QModelIndex</g> <g id="586">&amp;</g>parent <g id="589">=</g> <g id="592">QModelIndex</g>()) <g id="595">const</g> Q_DECL_OVERRIDE; <g id="598">QModelIndex</g> parent(<g id="601">const</g> <g id="604">QModelIndex</g> <g id="607">&amp;</g>index) <g id="610">const</g> Q_DECL_OVERRIDE; <g id="613">int</g> rowCount(<g id="616">const</g> <g id="619">QModelIndex</g> <g id="622">&amp;</g>parent <g id="625">=</g> <g id="628">QModelIndex</g>()) <g id="631">const</g> Q_DECL_OVERRIDE; <g id="634">int</g> columnCount(<g id="637">const</g> <g id="640">QModelIndex</g> <g id="643">&amp;</g>parent <g id="646">=</g> <g id="649">QModelIndex</g>()) <g id="652">const</g> Q_DECL_OVERRIDE; <g id="655">private</g>: <g id="658">void</g> setupModelData(<g id="661">const</g> <g id="664">QStringList</g> <g id="667">&amp;</g>lines<g id="670">,</g> TreeItem <g id="673">*</g>parent); TreeItem <g id="676">*</g>rootItem; };</source><seg-source><mrk mtype="seg" mid="77"><g id="451">class</g> TreeModel : <g id="454">public</g> <g id="457">QAbstractItemModel</g> { Q_OBJECT <g id="460">public</g>:</mrk> <mrk mtype="seg" mid="78"><g id="463">explicit</g> TreeModel(<g id="466">const</g> <g id="469">QString</g> <g id="472">&amp;</g>data<g id="475">,</g> <g id="478">QObject</g> <g id="481">*</g>parent <g id="484">=</g> <g id="487">0</g>); <g id="490">~</g>TreeModel(); <g id="493">QVariant</g> data(<g id="496">const</g> <g id="499">QModelIndex</g> <g id="502">&amp;</g>index<g id="505">,</g> <g id="508">int</g> role) <g id="511">const</g> Q_DECL_OVERRIDE; <g id="514">Qt</g><g id="517">::</g>ItemFlags flags(<g id="520">const</g> <g id="523">QModelIndex</g> <g id="526">&amp;</g>index) <g id="529">const</g> Q_DECL_OVERRIDE; <g id="532">QVariant</g> headerData(<g id="535">int</g> section<g id="538">,</g> <g id="541">Qt</g><g id="544">::</g>Orientation orientation<g id="547">,</g> <g id="550">int</g> role <g id="553">=</g> <g id="556">Qt</g><g id="559">::</g>DisplayRole) <g id="562">const</g> Q_DECL_OVERRIDE; <g id="565">QModelIndex</g> index(<g id="568">int</g> row<g id="571">,</g> <g id="574">int</g> column<g id="577">,</g> <g id="580">const</g> <g id="583">QModelIndex</g> <g id="586">&amp;</g>parent <g id="589">=</g> <g id="592">QModelIndex</g>()) <g id="595">const</g> Q_DECL_OVERRIDE; <g id="598">QModelIndex</g> parent(<g id="601">const</g> <g id="604">QModelIndex</g> <g id="607">&amp;</g>index) <g id="610">const</g> Q_DECL_OVERRIDE; <g id="613">int</g> rowCount(<g id="616">const</g> <g id="619">QModelIndex</g> <g id="622">&amp;</g>parent <g id="625">=</g> <g id="628">QModelIndex</g>()) <g id="631">const</g> Q_DECL_OVERRIDE; <g id="634">int</g> columnCount(<g id="637">const</g> <g id="640">QModelIndex</g> <g id="643">&amp;</g>parent <g id="646">=</g> <g id="649">QModelIndex</g>()) <g id="652">const</g> Q_DECL_OVERRIDE; <g id="655">private</g>:</mrk> <mrk mtype="seg" mid="79"><g id="658">void</g> setupModelData(<g id="661">const</g> <g id="664">QStringList</g> <g id="667">&amp;</g>lines<g id="670">,</g> TreeItem <g id="673">*</g>parent); TreeItem <g id="676">*</g>rootItem; };</mrk></seg-source><target><mrk mtype="seg" mid="77"/> <mrk mtype="seg" mid="78"/> <mrk mtype="seg" mid="79"/></target><sdl:seg-defs><sdl:seg id="77"/><sdl:seg id="78"/><sdl:seg id="79"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="86"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="86"/></sdl:cxts><trans-unit id="lockTU_fbe30ad9-0eb1-4d92-977c-f3fde8128767" translate="no" sdl:locktype="Structure"><source><g id="682">setupModelData()</g></source></trans-unit><trans-unit id="lockTU_c723d52e-8b14-47c5-89fb-4d2a2d0f998f" translate="no" sdl:locktype="Structure"><source><g id="682">setupModelData()</g></source></trans-unit><trans-unit id="d6d3d26b-51c2-479e-a143-063cc2cf5d86"><source>This class is similar to most other subclasses of <g id="679">QAbstractItemModel</g> that provide read-only models. Only the form of the constructor and the <x id="locked57" xid="lockTU_c723d52e-8b14-47c5-89fb-4d2a2d0f998f"/> function are specific to this model. In addition, we provide a destructor to clean up when the model is destroyed.</source><seg-source><mrk mtype="seg" mid="80">This class is similar to most other subclasses of <g id="679">QAbstractItemModel</g> that provide read-only models.</mrk> <mrk mtype="seg" mid="81">Only the form of the constructor and the <x id="locked58" xid="lockTU_fbe30ad9-0eb1-4d92-977c-f3fde8128767"/> function are specific to this model.</mrk> <mrk mtype="seg" mid="82">In addition, we provide a destructor to clean up when the model is destroyed.</mrk></seg-source><target><mrk mtype="seg" mid="80"/> <mrk mtype="seg" mid="81"/> <mrk mtype="seg" mid="82"/></target><sdl:seg-defs><sdl:seg id="80"/><sdl:seg id="81"/><sdl:seg id="82"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="87"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="34"/></sdl:cxts><trans-unit id="1aa59b03-c2a2-499e-8449-02f4843f9663"><source><g id="685"/></source><seg-source><g id="685"/></seg-source><target><g id="685"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="88"/><sdl:cxt id="19"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="87"/></sdl:cxts><trans-unit id="10552881-5c84-47db-a9f7-a6f3ec40947c"><source>TreeModel Class Implementation</source><seg-source><mrk mtype="seg" mid="83">TreeModel Class Implementation</mrk></seg-source><target><mrk mtype="seg" mid="83"/></target><sdl:seg-defs><sdl:seg id="83"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="89"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="88"/></sdl:cxts><trans-unit id="0a6903b5-9aa7-4949-9ea2-b9b4e41e0998"><source>For simplicity, the model does not allow its data to be edited. As a result, the constructor takes an argument containing the data that the model will share with views and delegates:</source><seg-source><mrk mtype="seg" mid="84">For simplicity, the model does not allow its data to be edited.</mrk> <mrk mtype="seg" mid="85">As a result, the constructor takes an argument containing the data that the model will share with views and delegates:</mrk></seg-source><target><mrk mtype="seg" mid="84"/> <mrk mtype="seg" mid="85"/></target><sdl:seg-defs><sdl:seg id="84"/><sdl:seg id="85"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="90"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="89"/></sdl:cxts><trans-unit id="751d84d8-56c1-4637-b1e9-25a812f3a517"><source>TreeModel<g id="688">::</g>TreeModel(<g id="691">const</g> <g id="694">QString</g> <g id="697">&amp;</g>data<g id="700">,</g> <g id="703">QObject</g> <g id="706">*</g>parent) : <g id="709">QAbstractItemModel</g>(parent) { <g id="712">QList</g><g id="715">&lt;</g><g id="718">QVariant</g><g id="721">&gt;</g> rootData; rootData <g id="724">&lt;</g><g id="727">&lt;</g> <g id="730">&quot;Title&quot;</g> <g id="733">&lt;</g><g id="736">&lt;</g> <g id="739">&quot;Summary&quot;</g>; rootItem <g id="742">=</g> <g id="745">new</g> TreeItem(rootData); setupModelData(data<g id="748">.</g>split(<g id="751">QString</g>(<g id="754">&quot;\n&quot;</g>))<g id="757">,</g> rootItem); }</source><seg-source><mrk mtype="seg" mid="86">TreeModel<g id="688">::</g>TreeModel(<g id="691">const</g> <g id="694">QString</g> <g id="697">&amp;</g>data<g id="700">,</g> <g id="703">QObject</g> <g id="706">*</g>parent) :</mrk> <mrk mtype="seg" mid="87"><g id="709">QAbstractItemModel</g>(parent) { <g id="712">QList</g><g id="715">&lt;</g><g id="718">QVariant</g><g id="721">&gt;</g> rootData; rootData <g id="724">&lt;</g><g id="727">&lt;</g> <g id="730">&quot;Title&quot;</g> <g id="733">&lt;</g><g id="736">&lt;</g> <g id="739">&quot;Summary&quot;</g>; rootItem <g id="742">=</g> <g id="745">new</g> TreeItem(rootData); setupModelData(data<g id="748">.</g>split(<g id="751">QString</g>(<g id="754">&quot;\n&quot;</g>))<g id="757">,</g> rootItem); }</mrk></seg-source><target><mrk mtype="seg" mid="86"/> <mrk mtype="seg" mid="87"/></target><sdl:seg-defs><sdl:seg id="86"/><sdl:seg id="87"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="91"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="90"/></sdl:cxts><trans-unit id="acc5ead4-cbb8-450e-9a13-1675031b1e87"><source>It is up to the constructor to create a root item for the model. This item only contains vertical header data for convenience. We also use it to reference the internal data structure that contains the model data, and it is used to represent an imaginary parent of top-level items in the model.</source><seg-source><mrk mtype="seg" mid="88">It is up to the constructor to create a root item for the model.</mrk> <mrk mtype="seg" mid="89">This item only contains vertical header data for convenience.</mrk> <mrk mtype="seg" mid="90">We also use it to reference the internal data structure that contains the model data, and it is used to represent an imaginary parent of top-level items in the model.</mrk></seg-source><target><mrk mtype="seg" mid="88"/> <mrk mtype="seg" mid="89"/> <mrk mtype="seg" mid="90"/></target><sdl:seg-defs><sdl:seg id="88"/><sdl:seg id="89"/><sdl:seg id="90"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="92"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="91"/></sdl:cxts><trans-unit id="lockTU_9b76aa29-5137-44d9-8a05-ca2d878623c9" translate="no" sdl:locktype="Structure"><source><g id="760">setupModelData()</g></source></trans-unit><trans-unit id="lockTU_5b554823-48b2-4774-bb8d-83c5de4cb3b3" translate="no" sdl:locktype="Structure"><source><g id="760">setupModelData()</g></source></trans-unit><trans-unit id="f340c4e4-7942-4b8a-9ec3-3bb9446b6936"><source>The model&apos;s internal data structure is populated with items by the <x id="locked59" xid="lockTU_5b554823-48b2-4774-bb8d-83c5de4cb3b3"/> function. We will examine this function separately at the end of this document.</source><seg-source><mrk mtype="seg" mid="91">The model&apos;s internal data structure is populated with items by the <x id="locked60" xid="lockTU_9b76aa29-5137-44d9-8a05-ca2d878623c9"/> function.</mrk> <mrk mtype="seg" mid="92">We will examine this function separately at the end of this document.</mrk></seg-source><target><mrk mtype="seg" mid="91"/> <mrk mtype="seg" mid="92"/></target><sdl:seg-defs><sdl:seg id="91"/><sdl:seg id="92"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="93"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="92"/></sdl:cxts><trans-unit id="b3344ed1-6ea6-418d-9a5a-5c24733fb2a5"><source>The destructor ensures that the root item and all of its descendants are deleted when the model is destroyed:</source><seg-source><mrk mtype="seg" mid="93">The destructor ensures that the root item and all of its descendants are deleted when the model is destroyed:</mrk></seg-source><target><mrk mtype="seg" mid="93"/></target><sdl:seg-defs><sdl:seg id="93"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="94"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="93"/></sdl:cxts><trans-unit id="964b71c7-a479-4249-b29e-c9a228655fee"><source>TreeModel<g id="763">::</g><g id="766">~</g>TreeModel() { <g id="769">delete</g> rootItem; }</source><seg-source><mrk mtype="seg" mid="94">TreeModel<g id="763">::</g><g id="766">~</g>TreeModel() { <g id="769">delete</g> rootItem; }</mrk></seg-source><target><mrk mtype="seg" mid="94"/></target><sdl:seg-defs><sdl:seg id="94"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="95"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="94"/></sdl:cxts><trans-unit id="3d7bde6c-97e1-4305-be66-f0bcc6ebf3f0"><source>Since we cannot add data to the model after it is constructed and set up, this simplifies the way that the internal tree of items is managed.</source><seg-source><mrk mtype="seg" mid="95">Since we cannot add data to the model after it is constructed and set up, this simplifies the way that the internal tree of items is managed.</mrk></seg-source><target><mrk mtype="seg" mid="95"/></target><sdl:seg-defs><sdl:seg id="95"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="96"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="95"/></sdl:cxts><trans-unit id="lockTU_876fa8d4-3c23-4af5-a2a5-db688da42ef0" translate="no" sdl:locktype="Structure"><source><g id="772">index()</g></source></trans-unit><trans-unit id="lockTU_5fae0d43-ee71-41e0-90ca-d01a22a01bbb" translate="no" sdl:locktype="Structure"><source><g id="772">index()</g></source></trans-unit><trans-unit id="fd8c593f-e32b-4975-9490-10c5888de744"><source>Models must implement an <x id="locked61" xid="lockTU_5fae0d43-ee71-41e0-90ca-d01a22a01bbb"/> function to provide indexes for views and delegates to use when accessing data. Indexes are created for other components when they are referenced by their row and column numbers, and their parent model index. If an invalid model index is specified as the parent, it is up to the model to return an index that corresponds to a top-level item in the model.</source><seg-source><mrk mtype="seg" mid="96">Models must implement an <x id="locked62" xid="lockTU_876fa8d4-3c23-4af5-a2a5-db688da42ef0"/> function to provide indexes for views and delegates to use when accessing data.</mrk> <mrk mtype="seg" mid="97">Indexes are created for other components when they are referenced by their row and column numbers, and their parent model index.</mrk> <mrk mtype="seg" mid="98">If an invalid model index is specified as the parent, it is up to the model to return an index that corresponds to a top-level item in the model.</mrk></seg-source><target><mrk mtype="seg" mid="96"/> <mrk mtype="seg" mid="97"/> <mrk mtype="seg" mid="98"/></target><sdl:seg-defs><sdl:seg id="96"/><sdl:seg id="97"/><sdl:seg id="98"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="97"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="96"/></sdl:cxts><trans-unit id="lockTU_2c18e465-7963-4a9d-b81d-dcbc309cb3e9" translate="no" sdl:locktype="Structure"><source><g id="778">TreeItem</g></source></trans-unit><trans-unit id="lockTU_432a54ca-4add-43e4-bd98-2b3fe53c11be" translate="no" sdl:locktype="Structure"><source><g id="781">TreeItem</g></source></trans-unit><trans-unit id="lockTU_fb7db26d-19a6-4986-bfc6-c1eb73a310c6" translate="no" sdl:locktype="Structure"><source><g id="778">TreeItem</g></source></trans-unit><trans-unit id="lockTU_c76d4e84-63cb-481d-a643-0315eb6ff798" translate="no" sdl:locktype="Structure"><source><g id="781">TreeItem</g></source></trans-unit><trans-unit id="91d23d07-385a-4b78-b2b8-a9c12d8ae2d4"><source>When supplied with a model index, we first check whether it is valid. If it is not, we assume that a top-level item is being referred to; otherwise, we obtain the data pointer from the model index with its <g id="775">internalPointer()</g> function and use it to reference a <x id="locked63" xid="lockTU_fb7db26d-19a6-4986-bfc6-c1eb73a310c6"/> object. Note that all the model indexes that we construct will contain a pointer to an existing <x id="locked64" xid="lockTU_c76d4e84-63cb-481d-a643-0315eb6ff798"/>, so we can guarantee that any valid model indexes that we receive will contain a valid data pointer.</source><seg-source><mrk mtype="seg" mid="99">When supplied with a model index, we first check whether it is valid.</mrk> <mrk mtype="seg" mid="100">If it is not, we assume that a top-level item is being referred to; otherwise, we obtain the data pointer from the model index with its <g id="775">internalPointer()</g> function and use it to reference a <x id="locked65" xid="lockTU_2c18e465-7963-4a9d-b81d-dcbc309cb3e9"/> object.</mrk> <mrk mtype="seg" mid="101">Note that all the model indexes that we construct will contain a pointer to an existing <x id="locked66" xid="lockTU_432a54ca-4add-43e4-bd98-2b3fe53c11be"/>, so we can guarantee that any valid model indexes that we receive will contain a valid data pointer.</mrk></seg-source><target><mrk mtype="seg" mid="99"/> <mrk mtype="seg" mid="100"/> <mrk mtype="seg" mid="101"/></target><sdl:seg-defs><sdl:seg id="99"/><sdl:seg id="100"/><sdl:seg id="101"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="98"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="97"/></sdl:cxts><trans-unit id="a80dde3e-2e4f-4450-9d07-fc3eb708a06a"><source><g id="784">QModelIndex</g> TreeModel<g id="787">::</g>index(<g id="790">int</g> row<g id="793">,</g> <g id="796">int</g> column<g id="799">,</g> <g id="802">const</g> <g id="805">QModelIndex</g> <g id="808">&amp;</g>parent) <g id="811">const</g> { <g id="814">if</g> (<g id="817">!</g>hasIndex(row<g id="820">,</g> column<g id="823">,</g> parent)) <g id="826">return</g> <g id="829">QModelIndex</g>(); TreeItem <g id="832">*</g>parentItem; <g id="835">if</g> (<g id="838">!</g>parent<g id="841">.</g>isValid()) parentItem <g id="844">=</g> rootItem; <g id="847">else</g> parentItem <g id="850">=</g> <g id="853">static_cast</g><g id="856">&lt;</g>TreeItem<g id="859">*</g><g id="862">&gt;</g>(parent<g id="865">.</g>internalPointer()); TreeItem <g id="868">*</g>childItem <g id="871">=</g> parentItem<g id="874">-</g><g id="877">&gt;</g>child(row); <g id="880">if</g> (childItem) <g id="883">return</g> createIndex(row<g id="886">,</g> column<g id="889">,</g> childItem); <g id="892">else</g> <g id="895">return</g> <g id="898">QModelIndex</g>(); }</source><seg-source><mrk mtype="seg" mid="102"><g id="784">QModelIndex</g> TreeModel<g id="787">::</g>index(<g id="790">int</g> row<g id="793">,</g> <g id="796">int</g> column<g id="799">,</g> <g id="802">const</g> <g id="805">QModelIndex</g> <g id="808">&amp;</g>parent) <g id="811">const</g> { <g id="814">if</g> (<g id="817">!</g>hasIndex(row<g id="820">,</g> column<g id="823">,</g> parent)) <g id="826">return</g> <g id="829">QModelIndex</g>(); TreeItem <g id="832">*</g>parentItem; <g id="835">if</g> (<g id="838">!</g>parent<g id="841">.</g>isValid()) parentItem <g id="844">=</g> rootItem; <g id="847">else</g> parentItem <g id="850">=</g> <g id="853">static_cast</g><g id="856">&lt;</g>TreeItem<g id="859">*</g><g id="862">&gt;</g>(parent<g id="865">.</g>internalPointer()); TreeItem <g id="868">*</g>childItem <g id="871">=</g> parentItem<g id="874">-</g><g id="877">&gt;</g>child(row); <g id="880">if</g> (childItem) <g id="883">return</g> createIndex(row<g id="886">,</g> column<g id="889">,</g> childItem); <g id="892">else</g> <g id="895">return</g> <g id="898">QModelIndex</g>(); }</mrk></seg-source><target><mrk mtype="seg" mid="102"/></target><sdl:seg-defs><sdl:seg id="102"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="99"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="98"/></sdl:cxts><trans-unit id="lockTU_02e32fd7-8f67-4e63-8f64-020008457235" translate="no" sdl:locktype="Structure"><source><g id="901">TreeItem::child()</g></source></trans-unit><trans-unit id="lockTU_a28993c3-872b-43ec-98eb-e1a4f4781494" translate="no" sdl:locktype="Structure"><source><g id="901">TreeItem::child()</g></source></trans-unit><trans-unit id="63c9b5a8-e4a4-46d8-8b20-08b802f7bb16"><source>Since the row and column arguments to this function refer to a child item of the corresponding parent item, we obtain the item using the <x id="locked67" xid="lockTU_a28993c3-872b-43ec-98eb-e1a4f4781494"/> function. The <g id="904">createIndex()</g> function is used to create a model index to be returned. We specify the row and column numbers, and a pointer to the item itself. The model index can be used later to obtain the item&apos;s data.</source><seg-source><mrk mtype="seg" mid="103">Since the row and column arguments to this function refer to a child item of the corresponding parent item, we obtain the item using the <x id="locked68" xid="lockTU_02e32fd7-8f67-4e63-8f64-020008457235"/> function.</mrk> <mrk mtype="seg" mid="104">The <g id="904">createIndex()</g> function is used to create a model index to be returned.</mrk> <mrk mtype="seg" mid="105">We specify the row and column numbers, and a pointer to the item itself.</mrk> <mrk mtype="seg" mid="106">The model index can be used later to obtain the item&apos;s data.</mrk></seg-source><target><mrk mtype="seg" mid="103"/> <mrk mtype="seg" mid="104"/> <mrk mtype="seg" mid="105"/> <mrk mtype="seg" mid="106"/></target><sdl:seg-defs><sdl:seg id="103"/><sdl:seg id="104"/><sdl:seg id="105"/><sdl:seg id="106"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="100"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="99"/></sdl:cxts><trans-unit id="lockTU_0ae9cdf1-c45a-4a28-a343-1f3092e107c8" translate="no" sdl:locktype="Structure"><source><g id="907">TreeItem</g></source></trans-unit><trans-unit id="lockTU_f8fff983-d792-49bc-858d-6a3a4b71428c" translate="no" sdl:locktype="Structure"><source><g id="910">parent()</g></source></trans-unit><trans-unit id="lockTU_4031dbf6-0f8b-405f-b39b-7e01e6a6c775" translate="no" sdl:locktype="Structure"><source><g id="907">TreeItem</g></source></trans-unit><trans-unit id="lockTU_37525af2-0308-475b-8106-18439cc23b2c" translate="no" sdl:locktype="Structure"><source><g id="910">parent()</g></source></trans-unit><trans-unit id="81c06f22-0cfd-4d7c-b439-e8a23d1e262e"><source>The way that the <x id="locked69" xid="lockTU_4031dbf6-0f8b-405f-b39b-7e01e6a6c775"/> objects are defined makes writing the <x id="locked70" xid="lockTU_37525af2-0308-475b-8106-18439cc23b2c"/> function easy:</source><seg-source><mrk mtype="seg" mid="107">The way that the <x id="locked71" xid="lockTU_0ae9cdf1-c45a-4a28-a343-1f3092e107c8"/> objects are defined makes writing the <x id="locked72" xid="lockTU_f8fff983-d792-49bc-858d-6a3a4b71428c"/> function easy:</mrk></seg-source><target><mrk mtype="seg" mid="107"/></target><sdl:seg-defs><sdl:seg id="107"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="101"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="100"/></sdl:cxts><trans-unit id="e591fc01-b177-437f-84a5-8218101712e4"><source><g id="913">QModelIndex</g> TreeModel<g id="916">::</g>parent(<g id="919">const</g> <g id="922">QModelIndex</g> <g id="925">&amp;</g>index) <g id="928">const</g> { <g id="931">if</g> (<g id="934">!</g>index<g id="937">.</g>isValid()) <g id="940">return</g> <g id="943">QModelIndex</g>(); TreeItem <g id="946">*</g>childItem <g id="949">=</g> <g id="952">static_cast</g><g id="955">&lt;</g>TreeItem<g id="958">*</g><g id="961">&gt;</g>(index<g id="964">.</g>internalPointer()); TreeItem <g id="967">*</g>parentItem <g id="970">=</g> childItem<g id="973">-</g><g id="976">&gt;</g>parentItem(); <g id="979">if</g> (parentItem <g id="982">=</g><g id="985">=</g> rootItem) <g id="988">return</g> <g id="991">QModelIndex</g>(); <g id="994">return</g> createIndex(parentItem<g id="997">-</g><g id="1000">&gt;</g>row()<g id="1003">,</g> <g id="1006">0</g><g id="1009">,</g> parentItem); }</source><seg-source><mrk mtype="seg" mid="108"><g id="913">QModelIndex</g> TreeModel<g id="916">::</g>parent(<g id="919">const</g> <g id="922">QModelIndex</g> <g id="925">&amp;</g>index) <g id="928">const</g> { <g id="931">if</g> (<g id="934">!</g>index<g id="937">.</g>isValid()) <g id="940">return</g> <g id="943">QModelIndex</g>(); TreeItem <g id="946">*</g>childItem <g id="949">=</g> <g id="952">static_cast</g><g id="955">&lt;</g>TreeItem<g id="958">*</g><g id="961">&gt;</g>(index<g id="964">.</g>internalPointer()); TreeItem <g id="967">*</g>parentItem <g id="970">=</g> childItem<g id="973">-</g><g id="976">&gt;</g>parentItem(); <g id="979">if</g> (parentItem <g id="982">=</g><g id="985">=</g> rootItem) <g id="988">return</g> <g id="991">QModelIndex</g>(); <g id="994">return</g> createIndex(parentItem<g id="997">-</g><g id="1000">&gt;</g>row()<g id="1003">,</g> <g id="1006">0</g><g id="1009">,</g> parentItem); }</mrk></seg-source><target><mrk mtype="seg" mid="108"/></target><sdl:seg-defs><sdl:seg id="108"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="102"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="101"/></sdl:cxts><trans-unit id="lockTU_53707501-00f4-48c7-9c85-860f28c78c13" translate="no" sdl:locktype="Structure"><source><g id="1012">index()</g></source></trans-unit><trans-unit id="lockTU_6daa38d8-d2ca-4501-96cf-e6005dda1d34" translate="no" sdl:locktype="Structure"><source><g id="1012">index()</g></source></trans-unit><trans-unit id="ff5460e5-6d2d-45e5-a80f-bbfe03a5773b"><source>We only need to ensure that we never return a model index corresponding to the root item. To be consistent with the way that the <x id="locked73" xid="lockTU_6daa38d8-d2ca-4501-96cf-e6005dda1d34"/> function is implemented, we return an invalid model index for the parent of any top-level items in the model.</source><seg-source><mrk mtype="seg" mid="109">We only need to ensure that we never return a model index corresponding to the root item.</mrk> <mrk mtype="seg" mid="110">To be consistent with the way that the <x id="locked74" xid="lockTU_53707501-00f4-48c7-9c85-860f28c78c13"/> function is implemented, we return an invalid model index for the parent of any top-level items in the model.</mrk></seg-source><target><mrk mtype="seg" mid="109"/> <mrk mtype="seg" mid="110"/></target><sdl:seg-defs><sdl:seg id="109"/><sdl:seg id="110"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="103"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="102"/></sdl:cxts><trans-unit id="lockTU_8813c7d7-0475-4ce2-b37f-069abf423e12" translate="no" sdl:locktype="Structure"><source><g id="1015">TreeItem::row()</g></source></trans-unit><trans-unit id="lockTU_02b0b683-0d7a-47ff-9a59-bef9c4783fbf" translate="no" sdl:locktype="Structure"><source><g id="1021">index()</g></source></trans-unit><trans-unit id="lockTU_923bcdac-d1f9-4524-ba11-63991697355e" translate="no" sdl:locktype="Structure"><source><g id="1015">TreeItem::row()</g></source></trans-unit><trans-unit id="lockTU_6e6bb789-e3e9-4025-8800-ca6a21b0b858" translate="no" sdl:locktype="Structure"><source><g id="1021">index()</g></source></trans-unit><trans-unit id="421f8b9b-8cf5-4b2d-90ca-7533ed0d58dc"><source>When creating a model index to return, we must specify the row and column numbers of the parent item within its own parent. We can easily discover the row number with the <x id="locked75" xid="lockTU_923bcdac-d1f9-4524-ba11-63991697355e"/> function, but we follow a convention of specifying 0 as the column number of the parent. The model index is created with <g id="1018">createIndex()</g> in the same way as in the <x id="locked76" xid="lockTU_6e6bb789-e3e9-4025-8800-ca6a21b0b858"/> function.</source><seg-source><mrk mtype="seg" mid="111">When creating a model index to return, we must specify the row and column numbers of the parent item within its own parent.</mrk> <mrk mtype="seg" mid="112">We can easily discover the row number with the <x id="locked77" xid="lockTU_8813c7d7-0475-4ce2-b37f-069abf423e12"/> function, but we follow a convention of specifying 0 as the column number of the parent.</mrk> <mrk mtype="seg" mid="113">The model index is created with <g id="1018">createIndex()</g> in the same way as in the <x id="locked78" xid="lockTU_02b0b683-0d7a-47ff-9a59-bef9c4783fbf"/> function.</mrk></seg-source><target><mrk mtype="seg" mid="111"/> <mrk mtype="seg" mid="112"/> <mrk mtype="seg" mid="113"/></target><sdl:seg-defs><sdl:seg id="111"/><sdl:seg id="112"/><sdl:seg id="113"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="104"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="103"/></sdl:cxts><trans-unit id="lockTU_1e84ddec-cc3f-40c8-9db4-48a6339deb70" translate="no" sdl:locktype="Structure"><source><g id="1024">rowCount()</g></source></trans-unit><trans-unit id="lockTU_3c30e23c-81a6-40fe-bcc1-6c2da1ae740e" translate="no" sdl:locktype="Structure"><source><g id="1027">TreeItem</g></source></trans-unit><trans-unit id="lockTU_0e346da6-4b6e-43fb-bf96-a6fd7b1e5661" translate="no" sdl:locktype="Structure"><source><g id="1024">rowCount()</g></source></trans-unit><trans-unit id="lockTU_f7f545dc-aa30-46f1-bdd1-feb50307326f" translate="no" sdl:locktype="Structure"><source><g id="1027">TreeItem</g></source></trans-unit><trans-unit id="681ccaad-485e-49ed-915d-4e3a59941ea0"><source>The <x id="locked79" xid="lockTU_0e346da6-4b6e-43fb-bf96-a6fd7b1e5661"/> function simply returns the number of child items for the <x id="locked80" xid="lockTU_f7f545dc-aa30-46f1-bdd1-feb50307326f"/> that corresponds to a given model index, or the number of top-level items if an invalid index is specified:</source><seg-source><mrk mtype="seg" mid="114">The <x id="locked81" xid="lockTU_1e84ddec-cc3f-40c8-9db4-48a6339deb70"/> function simply returns the number of child items for the <x id="locked82" xid="lockTU_3c30e23c-81a6-40fe-bcc1-6c2da1ae740e"/> that corresponds to a given model index, or the number of top-level items if an invalid index is specified:</mrk></seg-source><target><mrk mtype="seg" mid="114"/></target><sdl:seg-defs><sdl:seg id="114"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="105"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="104"/></sdl:cxts><trans-unit id="d5b84391-fc36-48e3-8faa-66d197b50d20"><source><g id="1030">int</g> TreeModel<g id="1033">::</g>rowCount(<g id="1036">const</g> <g id="1039">QModelIndex</g> <g id="1042">&amp;</g>parent) <g id="1045">const</g> { TreeItem <g id="1048">*</g>parentItem; <g id="1051">if</g> (parent<g id="1054">.</g>column() <g id="1057">&gt;</g> <g id="1060">0</g>) <g id="1063">return</g> <g id="1066">0</g>; <g id="1069">if</g> (<g id="1072">!</g>parent<g id="1075">.</g>isValid()) parentItem <g id="1078">=</g> rootItem; <g id="1081">else</g> parentItem <g id="1084">=</g> <g id="1087">static_cast</g><g id="1090">&lt;</g>TreeItem<g id="1093">*</g><g id="1096">&gt;</g>(parent<g id="1099">.</g>internalPointer()); <g id="1102">return</g> parentItem<g id="1105">-</g><g id="1108">&gt;</g>childCount(); }</source><seg-source><mrk mtype="seg" mid="115"><g id="1030">int</g> TreeModel<g id="1033">::</g>rowCount(<g id="1036">const</g> <g id="1039">QModelIndex</g> <g id="1042">&amp;</g>parent) <g id="1045">const</g> { TreeItem <g id="1048">*</g>parentItem; <g id="1051">if</g> (parent<g id="1054">.</g>column() <g id="1057">&gt;</g> <g id="1060">0</g>) <g id="1063">return</g> <g id="1066">0</g>; <g id="1069">if</g> (<g id="1072">!</g>parent<g id="1075">.</g>isValid()) parentItem <g id="1078">=</g> rootItem; <g id="1081">else</g> parentItem <g id="1084">=</g> <g id="1087">static_cast</g><g id="1090">&lt;</g>TreeItem<g id="1093">*</g><g id="1096">&gt;</g>(parent<g id="1099">.</g>internalPointer()); <g id="1102">return</g> parentItem<g id="1105">-</g><g id="1108">&gt;</g>childCount(); }</mrk></seg-source><target><mrk mtype="seg" mid="115"/></target><sdl:seg-defs><sdl:seg id="115"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="106"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="105"/></sdl:cxts><trans-unit id="lockTU_12e8b327-0597-41b5-b454-2d7456ef89eb" translate="no" sdl:locktype="Structure"><source><g id="1111">columnCount()</g></source></trans-unit><trans-unit id="lockTU_92432bb1-4496-4dd2-9591-ff43f5cd849a" translate="no" sdl:locktype="Structure"><source><g id="1114">columnCount()</g></source></trans-unit><trans-unit id="lockTU_614606b3-7466-459f-b332-768c6341a110" translate="no" sdl:locktype="Structure"><source><g id="1117">rowCount()</g></source></trans-unit><trans-unit id="lockTU_16fc7852-53b1-4c98-8d50-2c9c1e44ef4b" translate="no" sdl:locktype="Structure"><source><g id="1111">columnCount()</g></source></trans-unit><trans-unit id="lockTU_089fbe2d-b226-46f8-94c7-32f189304e57" translate="no" sdl:locktype="Structure"><source><g id="1114">columnCount()</g></source></trans-unit><trans-unit id="lockTU_b607eec3-2f1a-4826-b05a-644a49c1a2f2" translate="no" sdl:locktype="Structure"><source><g id="1117">rowCount()</g></source></trans-unit><trans-unit id="c3c9dbb9-4933-4b42-861e-038718dcd201"><source>Since each item manages its own column data, the <x id="locked83" xid="lockTU_16fc7852-53b1-4c98-8d50-2c9c1e44ef4b"/> function has to call the item&apos;s own <x id="locked84" xid="lockTU_089fbe2d-b226-46f8-94c7-32f189304e57"/> function to determine how many columns are present for a given model index. As with the <x id="locked85" xid="lockTU_b607eec3-2f1a-4826-b05a-644a49c1a2f2"/> function, if an invalid model index is specified, the number of columns returned is determined from the root item:</source><seg-source><mrk mtype="seg" mid="116">Since each item manages its own column data, the <x id="locked86" xid="lockTU_12e8b327-0597-41b5-b454-2d7456ef89eb"/> function has to call the item&apos;s own <x id="locked87" xid="lockTU_92432bb1-4496-4dd2-9591-ff43f5cd849a"/> function to determine how many columns are present for a given model index.</mrk> <mrk mtype="seg" mid="117">As with the <x id="locked88" xid="lockTU_614606b3-7466-459f-b332-768c6341a110"/> function, if an invalid model index is specified, the number of columns returned is determined from the root item:</mrk></seg-source><target><mrk mtype="seg" mid="116"/> <mrk mtype="seg" mid="117"/></target><sdl:seg-defs><sdl:seg id="116"/><sdl:seg id="117"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="107"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="106"/></sdl:cxts><trans-unit id="5de53e75-863b-4886-ae1c-7927724c9cb4"><source><g id="1120">int</g> TreeModel<g id="1123">::</g>columnCount(<g id="1126">const</g> <g id="1129">QModelIndex</g> <g id="1132">&amp;</g>parent) <g id="1135">const</g> { <g id="1138">if</g> (parent<g id="1141">.</g>isValid()) <g id="1144">return</g> <g id="1147">static_cast</g><g id="1150">&lt;</g>TreeItem<g id="1153">*</g><g id="1156">&gt;</g>(parent<g id="1159">.</g>internalPointer())<g id="1162">-</g><g id="1165">&gt;</g>columnCount(); <g id="1168">else</g> <g id="1171">return</g> rootItem<g id="1174">-</g><g id="1177">&gt;</g>columnCount(); }</source><seg-source><mrk mtype="seg" mid="118"><g id="1120">int</g> TreeModel<g id="1123">::</g>columnCount(<g id="1126">const</g> <g id="1129">QModelIndex</g> <g id="1132">&amp;</g>parent) <g id="1135">const</g> { <g id="1138">if</g> (parent<g id="1141">.</g>isValid()) <g id="1144">return</g> <g id="1147">static_cast</g><g id="1150">&lt;</g>TreeItem<g id="1153">*</g><g id="1156">&gt;</g>(parent<g id="1159">.</g>internalPointer())<g id="1162">-</g><g id="1165">&gt;</g>columnCount(); <g id="1168">else</g> <g id="1171">return</g> rootItem<g id="1174">-</g><g id="1177">&gt;</g>columnCount(); }</mrk></seg-source><target><mrk mtype="seg" mid="118"/></target><sdl:seg-defs><sdl:seg id="118"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="108"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="107"/></sdl:cxts><trans-unit id="lockTU_897412d5-66cc-4e46-90bb-5ff711e7b101" translate="no" sdl:locktype="Structure"><source><g id="1180">data()</g></source></trans-unit><trans-unit id="lockTU_f7db61f4-42e7-4467-a852-cad7c5f5ee72" translate="no" sdl:locktype="Structure"><source><g id="1183">TreeItem::data()</g></source></trans-unit><trans-unit id="lockTU_2badc22d-e2e9-4d02-bcd6-25e260484199" translate="no" sdl:locktype="Structure"><source><g id="1180">data()</g></source></trans-unit><trans-unit id="lockTU_ebbba80a-5458-4814-9e50-6f34bcdd8fc8" translate="no" sdl:locktype="Structure"><source><g id="1183">TreeItem::data()</g></source></trans-unit><trans-unit id="780d86de-d350-4478-91b0-1312c85dfc8a"><source>Data is obtained from the model via <x id="locked89" xid="lockTU_2badc22d-e2e9-4d02-bcd6-25e260484199"/>. Since the item manages its own columns, we need to use the column number to retrieve the data with the <x id="locked90" xid="lockTU_ebbba80a-5458-4814-9e50-6f34bcdd8fc8"/> function:</source><seg-source><mrk mtype="seg" mid="119">Data is obtained from the model via <x id="locked91" xid="lockTU_897412d5-66cc-4e46-90bb-5ff711e7b101"/>.</mrk> <mrk mtype="seg" mid="120">Since the item manages its own columns, we need to use the column number to retrieve the data with the <x id="locked92" xid="lockTU_f7db61f4-42e7-4467-a852-cad7c5f5ee72"/> function:</mrk></seg-source><target><mrk mtype="seg" mid="119"/> <mrk mtype="seg" mid="120"/></target><sdl:seg-defs><sdl:seg id="119"/><sdl:seg id="120"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="109"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="108"/></sdl:cxts><trans-unit id="94de6dce-eb00-4a46-bed6-3fa4bc060a3b"><source><g id="1186">QVariant</g> TreeModel<g id="1189">::</g>data(<g id="1192">const</g> <g id="1195">QModelIndex</g> <g id="1198">&amp;</g>index<g id="1201">,</g> <g id="1204">int</g> role) <g id="1207">const</g> { <g id="1210">if</g> (<g id="1213">!</g>index<g id="1216">.</g>isValid()) <g id="1219">return</g> <g id="1222">QVariant</g>(); <g id="1225">if</g> (role <g id="1228">!</g><g id="1231">=</g> <g id="1234">Qt</g><g id="1237">::</g>DisplayRole) <g id="1240">return</g> <g id="1243">QVariant</g>(); TreeItem <g id="1246">*</g>item <g id="1249">=</g> <g id="1252">static_cast</g><g id="1255">&lt;</g>TreeItem<g id="1258">*</g><g id="1261">&gt;</g>(index<g id="1264">.</g>internalPointer()); <g id="1267">return</g> item<g id="1270">-</g><g id="1273">&gt;</g>data(index<g id="1276">.</g>column()); }</source><seg-source><mrk mtype="seg" mid="121"><g id="1186">QVariant</g> TreeModel<g id="1189">::</g>data(<g id="1192">const</g> <g id="1195">QModelIndex</g> <g id="1198">&amp;</g>index<g id="1201">,</g> <g id="1204">int</g> role) <g id="1207">const</g> { <g id="1210">if</g> (<g id="1213">!</g>index<g id="1216">.</g>isValid()) <g id="1219">return</g> <g id="1222">QVariant</g>(); <g id="1225">if</g> (role <g id="1228">!</g><g id="1231">=</g> <g id="1234">Qt</g><g id="1237">::</g>DisplayRole) <g id="1240">return</g> <g id="1243">QVariant</g>(); TreeItem <g id="1246">*</g>item <g id="1249">=</g> <g id="1252">static_cast</g><g id="1255">&lt;</g>TreeItem<g id="1258">*</g><g id="1261">&gt;</g>(index<g id="1264">.</g>internalPointer()); <g id="1267">return</g> item<g id="1270">-</g><g id="1273">&gt;</g>data(index<g id="1276">.</g>column()); }</mrk></seg-source><target><mrk mtype="seg" mid="121"/></target><sdl:seg-defs><sdl:seg id="121"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="110"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="109"/></sdl:cxts><trans-unit id="73c6aaa5-cda2-4738-82f1-95fcd09c8dba"><source>Note that we only support the <g id="1279">DisplayRole</g> in this implementation, and we also return invalid <g id="1282">QVariant</g> objects for invalid model indexes.</source><seg-source><mrk mtype="seg" mid="122">Note that we only support the <g id="1279">DisplayRole</g> in this implementation, and we also return invalid <g id="1282">QVariant</g> objects for invalid model indexes.</mrk></seg-source><target><mrk mtype="seg" mid="122"/></target><sdl:seg-defs><sdl:seg id="122"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="111"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="110"/></sdl:cxts><trans-unit id="lockTU_3eb05226-d399-40dc-ad9c-c450039709c5" translate="no" sdl:locktype="Structure"><source><g id="1285">flags()</g></source></trans-unit><trans-unit id="lockTU_6ae39a0e-f607-479b-a258-e84b95b2b3ee" translate="no" sdl:locktype="Structure"><source><g id="1285">flags()</g></source></trans-unit><trans-unit id="8c979e74-b85c-4ba0-8778-797d1cd91082"><source>We use the <x id="locked93" xid="lockTU_6ae39a0e-f607-479b-a258-e84b95b2b3ee"/> function to ensure that views know that the model is read-only:</source><seg-source><mrk mtype="seg" mid="123">We use the <x id="locked94" xid="lockTU_3eb05226-d399-40dc-ad9c-c450039709c5"/> function to ensure that views know that the model is read-only:</mrk></seg-source><target><mrk mtype="seg" mid="123"/></target><sdl:seg-defs><sdl:seg id="123"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="112"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="111"/></sdl:cxts><trans-unit id="9674a5a9-de38-4e06-97ab-045c847a9842"><source><g id="1288">Qt</g><g id="1291">::</g>ItemFlags TreeModel<g id="1294">::</g>flags(<g id="1297">const</g> <g id="1300">QModelIndex</g> <g id="1303">&amp;</g>index) <g id="1306">const</g> { <g id="1309">if</g> (<g id="1312">!</g>index<g id="1315">.</g>isValid()) <g id="1318">return</g> <g id="1321">0</g>; <g id="1324">return</g> <g id="1327">QAbstractItemModel</g><g id="1330">::</g>flags(index); }</source><seg-source><mrk mtype="seg" mid="124"><g id="1288">Qt</g><g id="1291">::</g>ItemFlags TreeModel<g id="1294">::</g>flags(<g id="1297">const</g> <g id="1300">QModelIndex</g> <g id="1303">&amp;</g>index) <g id="1306">const</g> { <g id="1309">if</g> (<g id="1312">!</g>index<g id="1315">.</g>isValid()) <g id="1318">return</g> <g id="1321">0</g>; <g id="1324">return</g> <g id="1327">QAbstractItemModel</g><g id="1330">::</g>flags(index); }</mrk></seg-source><target><mrk mtype="seg" mid="124"/></target><sdl:seg-defs><sdl:seg id="124"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="113"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="112"/></sdl:cxts><trans-unit id="lockTU_5374fc53-6ee3-4e96-aaa7-e7c8ff35e797" translate="no" sdl:locktype="Structure"><source><g id="1333">headerData()</g></source></trans-unit><trans-unit id="lockTU_63c23505-2764-4fd0-bbef-91474225fa2a" translate="no" sdl:locktype="Structure"><source><g id="1333">headerData()</g></source></trans-unit><trans-unit id="c311e5d2-80db-41e3-8107-16c5c14d5d1c"><source>The <x id="locked95" xid="lockTU_63c23505-2764-4fd0-bbef-91474225fa2a"/> function returns data that we conveniently stored in the root item:</source><seg-source><mrk mtype="seg" mid="125">The <x id="locked96" xid="lockTU_5374fc53-6ee3-4e96-aaa7-e7c8ff35e797"/> function returns data that we conveniently stored in the root item:</mrk></seg-source><target><mrk mtype="seg" mid="125"/></target><sdl:seg-defs><sdl:seg id="125"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="114"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="113"/></sdl:cxts><trans-unit id="66edb166-c07a-4512-89b2-a832e8440cec"><source><g id="1336">QVariant</g> TreeModel<g id="1339">::</g>headerData(<g id="1342">int</g> section<g id="1345">,</g> <g id="1348">Qt</g><g id="1351">::</g>Orientation orientation<g id="1354">,</g> <g id="1357">int</g> role) <g id="1360">const</g> { <g id="1363">if</g> (orientation <g id="1366">=</g><g id="1369">=</g> <g id="1372">Qt</g><g id="1375">::</g>Horizontal <g id="1378">&amp;</g><g id="1381">&amp;</g> role <g id="1384">=</g><g id="1387">=</g> <g id="1390">Qt</g><g id="1393">::</g>DisplayRole) <g id="1396">return</g> rootItem<g id="1399">-</g><g id="1402">&gt;</g>data(section); <g id="1405">return</g> <g id="1408">QVariant</g>(); }</source><seg-source><mrk mtype="seg" mid="126"><g id="1336">QVariant</g> TreeModel<g id="1339">::</g>headerData(<g id="1342">int</g> section<g id="1345">,</g> <g id="1348">Qt</g><g id="1351">::</g>Orientation orientation<g id="1354">,</g> <g id="1357">int</g> role) <g id="1360">const</g> { <g id="1363">if</g> (orientation <g id="1366">=</g><g id="1369">=</g> <g id="1372">Qt</g><g id="1375">::</g>Horizontal <g id="1378">&amp;</g><g id="1381">&amp;</g> role <g id="1384">=</g><g id="1387">=</g> <g id="1390">Qt</g><g id="1393">::</g>DisplayRole) <g id="1396">return</g> rootItem<g id="1399">-</g><g id="1402">&gt;</g>data(section); <g id="1405">return</g> <g id="1408">QVariant</g>(); }</mrk></seg-source><target><mrk mtype="seg" mid="126"/></target><sdl:seg-defs><sdl:seg id="126"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="115"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="114"/></sdl:cxts><trans-unit id="lockTU_0ea1b976-93a2-4755-803c-4fcc2d656d94" translate="no" sdl:locktype="Structure"><source><g id="1411">headerData()</g></source></trans-unit><trans-unit id="lockTU_0cf38197-a857-4bec-a432-36710732745e" translate="no" sdl:locktype="Structure"><source><g id="1411">headerData()</g></source></trans-unit><trans-unit id="c447409c-5389-4ae9-80cd-bed6e8cec46c"><source>This information could have been supplied in a different way: either specified in the constructor, or hard coded into the <x id="locked97" xid="lockTU_0cf38197-a857-4bec-a432-36710732745e"/> function.</source><seg-source><mrk mtype="seg" mid="127">This information could have been supplied in a different way: either specified in the constructor, or hard coded into the <x id="locked98" xid="lockTU_0ea1b976-93a2-4755-803c-4fcc2d656d94"/> function.</mrk></seg-source><target><mrk mtype="seg" mid="127"/></target><sdl:seg-defs><sdl:seg id="127"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="116"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="34"/></sdl:cxts><trans-unit id="6b357fde-24d9-4023-914a-c8e3f25f313e"><source><g id="1414"/></source><seg-source><g id="1414"/></seg-source><target><g id="1414"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="117"/><sdl:cxt id="19"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="115"/></sdl:cxts><trans-unit id="b61d5e65-eef3-45c3-9b5c-cdc5d7552d58"><source>Setting Up the Data in the Model</source><seg-source><mrk mtype="seg" mid="128">Setting Up the Data in the Model</mrk></seg-source><target><mrk mtype="seg" mid="128"/></target><sdl:seg-defs><sdl:seg id="128"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="118"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="116"/></sdl:cxts><trans-unit id="lockTU_988e0672-8637-43df-b016-9909302e9c20" translate="no" sdl:locktype="Structure"><source><g id="1417">setupModelData()</g></source></trans-unit><trans-unit id="lockTU_094a78d3-032a-4371-8e92-8bddb1436e4d" translate="no" sdl:locktype="Structure"><source><g id="1417">setupModelData()</g></source></trans-unit><trans-unit id="071699d7-9e1e-414c-877a-6b6bf03d8fd5"><source>We use the <x id="locked99" xid="lockTU_094a78d3-032a-4371-8e92-8bddb1436e4d"/> function to set up the initial data in the model. This function parses a text file, extracting strings of text to use in the model, and creates item objects that record both the data and the overall model structure. Naturally, this function works in a way that is very specific to this model. We provide the following description of its behavior, and refer the reader to the example code itself for more information.</source><seg-source><mrk mtype="seg" mid="129">We use the <x id="locked100" xid="lockTU_988e0672-8637-43df-b016-9909302e9c20"/> function to set up the initial data in the model.</mrk> <mrk mtype="seg" mid="130">This function parses a text file, extracting strings of text to use in the model, and creates item objects that record both the data and the overall model structure.</mrk> <mrk mtype="seg" mid="131">Naturally, this function works in a way that is very specific to this model.</mrk> <mrk mtype="seg" mid="132">We provide the following description of its behavior, and refer the reader to the example code itself for more information.</mrk></seg-source><target><mrk mtype="seg" mid="129"/> <mrk mtype="seg" mid="130"/> <mrk mtype="seg" mid="131"/> <mrk mtype="seg" mid="132"/></target><sdl:seg-defs><sdl:seg id="129"/><sdl:seg id="130"/><sdl:seg id="131"/><sdl:seg id="132"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="119"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="117"/></sdl:cxts><trans-unit id="75f33b68-a990-4203-aca9-7a20a172c196"><source>We begin with a text file in the following format:</source><seg-source><mrk mtype="seg" mid="133">We begin with a text file in the following format:</mrk></seg-source><target><mrk mtype="seg" mid="133"/></target><sdl:seg-defs><sdl:seg id="133"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="120"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="118"/></sdl:cxts><trans-unit id="78f47fa8-d8b9-4838-a6d6-6d305415067c"><source>Getting Started How to familiarize yourself with <g id="1420">Qt</g> Designer Launching Designer Running the <g id="1423">Qt</g> Designer application The User Interface How to interact with <g id="1426">Qt</g> Designer ...</source><seg-source><mrk mtype="seg" mid="134">Getting Started How to familiarize yourself with <g id="1420">Qt</g> Designer Launching Designer Running the <g id="1423">Qt</g> Designer application The User Interface How to interact with <g id="1426">Qt</g> Designer ...</mrk></seg-source><target><mrk mtype="seg" mid="134"/></target><sdl:seg-defs><sdl:seg id="134"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="121"/><sdl:cxt id="51"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="119"/></sdl:cxts><trans-unit id="8f758fda-dda2-419c-a593-0b69a28cbfce"><source>Connection Editing Mode Connecting widgets together with <g id="1429">signals</g> and <g id="1432">slots</g> Connecting Objects Making connections in <g id="1435">Qt</g> Designer Editing Connections Changing existing connections</source><seg-source><mrk mtype="seg" mid="135">Connection Editing Mode Connecting widgets together with <g id="1429">signals</g> and <g id="1432">slots</g> Connecting Objects Making connections in <g id="1435">Qt</g> Designer Editing Connections Changing existing connections</mrk></seg-source><target><mrk mtype="seg" mid="135"/></target><sdl:seg-defs><sdl:seg id="135"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="122"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="120"/></sdl:cxts><trans-unit id="df76f532-fcc9-4467-ae1c-736e384a84ff"><source>We process the text file with the following two rules:</source><seg-source><mrk mtype="seg" mid="136">We process the text file with the following two rules:</mrk></seg-source><target><mrk mtype="seg" mid="136"/></target><sdl:seg-defs><sdl:seg id="136"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="123"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="122"/></sdl:cxts><trans-unit id="d2b94528-40cf-48af-b20c-6e30582ed928"><source>For each pair of strings on each line, create an item (or node) in a tree structure, and place each string in a column of data in the item.</source><seg-source><mrk mtype="seg" mid="137">For each pair of strings on each line, create an item (or node) in a tree structure, and place each string in a column of data in the item.</mrk></seg-source><target><mrk mtype="seg" mid="137"/></target><sdl:seg-defs><sdl:seg id="137"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="124"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="123"/></sdl:cxts><trans-unit id="ad99cf88-6dce-49e2-ab20-a5d93d71cf1d"><source>When the first string on a line is indented with respect to the first string on the previous line, make the item a child of the previous item created.</source><seg-source><mrk mtype="seg" mid="138">When the first string on a line is indented with respect to the first string on the previous line, make the item a child of the previous item created.</mrk></seg-source><target><mrk mtype="seg" mid="138"/></target><sdl:seg-defs><sdl:seg id="138"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="125"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="124"/></sdl:cxts><trans-unit id="lockTU_f19ff18f-306b-4a7e-be56-d9025d8b48ca" translate="no" sdl:locktype="Structure"><source><g id="1438">TreeItem</g></source></trans-unit><trans-unit id="lockTU_536d9303-11ae-4323-b8c7-6374b7ed1c37" translate="no" sdl:locktype="Structure"><source><g id="1438">TreeItem</g></source></trans-unit><trans-unit id="9f6dcee4-a4f1-448a-9342-efdbc6cc55d9"><source>To ensure that the model works correctly, it is only necessary to create instances of <x id="locked101" xid="lockTU_536d9303-11ae-4323-b8c7-6374b7ed1c37"/> with the correct data and parent item.</source><seg-source><mrk mtype="seg" mid="139">To ensure that the model works correctly, it is only necessary to create instances of <x id="locked102" xid="lockTU_f19ff18f-306b-4a7e-be56-d9025d8b48ca"/> with the correct data and parent item.</mrk></seg-source><target><mrk mtype="seg" mid="139"/></target><sdl:seg-defs><sdl:seg id="139"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="126"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="125"/></sdl:cxts><trans-unit id="ef9ad8fb-3561-4ba4-86e1-9cd21a2147dc"><source>Files:</source><seg-source><mrk mtype="seg" mid="140">Files:</mrk></seg-source><target><mrk mtype="seg" mid="140">Файлы:</mrk></target><sdl:seg-defs><sdl:seg id="140" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100"><sdl:value key="created_by">TRAPP</sdl:value><sdl:value key="created_on">03/15/2019 00:04:31</sdl:value><sdl:value key="modified_on">03/15/2019 00:04:31</sdl:value><sdl:value key="last_modified_by">TRAPP</sdl:value><sdl:value key="SDL:OriginalTranslationHash">874853416</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="127"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="127"/></sdl:cxts><trans-unit id="7a67a330-512b-4ae1-94ea-1ed8d13411fe"><source><g id="1441">itemviews/simpletreemodel/treeitem.cpp</g></source><seg-source><g id="1441"><mrk mtype="seg" mid="141">itemviews/simpletreemodel/treeitem.cpp</mrk></g></seg-source><target><g id="1441"><mrk mtype="seg" mid="141"/></g></target><sdl:seg-defs><sdl:seg id="141"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="128"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="128"/></sdl:cxts><trans-unit id="ae2f1081-fde3-491e-9090-1c1d32fe143f"><source><g id="1444">itemviews/simpletreemodel/treeitem.h</g></source><seg-source><g id="1444"><mrk mtype="seg" mid="142">itemviews/simpletreemodel/treeitem.h</mrk></g></seg-source><target><g id="1444"><mrk mtype="seg" mid="142"/></g></target><sdl:seg-defs><sdl:seg id="142"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="129"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="129"/></sdl:cxts><trans-unit id="7e99001c-1d3a-44ce-be9e-dfccbc48cdc6"><source><g id="1447">itemviews/simpletreemodel/treemodel.cpp</g></source><seg-source><g id="1447"><mrk mtype="seg" mid="143">itemviews/simpletreemodel/treemodel.cpp</mrk></g></seg-source><target><g id="1447"><mrk mtype="seg" mid="143"/></g></target><sdl:seg-defs><sdl:seg id="143"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="130"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="130"/></sdl:cxts><trans-unit id="2b7188bf-fa57-4ce0-8896-1bf327a5e300"><source><g id="1450">itemviews/simpletreemodel/treemodel.h</g></source><seg-source><g id="1450"><mrk mtype="seg" mid="144">itemviews/simpletreemodel/treemodel.h</mrk></g></seg-source><target><g id="1450"><mrk mtype="seg" mid="144"/></g></target><sdl:seg-defs><sdl:seg id="144"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="131"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="131"/></sdl:cxts><trans-unit id="657b8a0a-fea7-488b-bfd6-73f2870c42f7"><source><g id="1453">itemviews/simpletreemodel/main.cpp</g></source><seg-source><g id="1453"><mrk mtype="seg" mid="145">itemviews/simpletreemodel/main.cpp</mrk></g></seg-source><target><g id="1453"><mrk mtype="seg" mid="145"/></g></target><sdl:seg-defs><sdl:seg id="145"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="132"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="132"/></sdl:cxts><trans-unit id="da2c9a3f-12b8-4844-a339-75e8d29ee329"><source><g id="1456">itemviews/simpletreemodel/simpletreemodel.pro</g></source><seg-source><g id="1456"><mrk mtype="seg" mid="146">itemviews/simpletreemodel/simpletreemodel.pro</mrk></g></seg-source><target><g id="1456"><mrk mtype="seg" mid="146"/></g></target><sdl:seg-defs><sdl:seg id="146"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="133"/><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="133"/></sdl:cxts><trans-unit id="505b3085-a028-4774-af89-3fce227bbab7"><source><g id="1459">itemviews/simpletreemodel/simpletreemodel.qrc</g></source><seg-source><g id="1459"><mrk mtype="seg" mid="147">itemviews/simpletreemodel/simpletreemodel.qrc</mrk></g></seg-source><target><g id="1459"><mrk mtype="seg" mid="147"/></g></target><sdl:seg-defs><sdl:seg id="147"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="134"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="22"/></sdl:cxts><trans-unit id="5f105b4b-8036-40b5-9010-6b8616d5fea5"><source><x id="1460"/></source><seg-source><x id="1460"/></seg-source><target><x id="1460"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="135"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="135"/></sdl:cxts><trans-unit id="8dd46723-3dfc-4b34-ab22-95b8b888d8b6"><source><x id="1461"/></source><seg-source><x id="1461"/></seg-source><target><x id="1461"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="136"/><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="135"/></sdl:cxts><trans-unit id="83941513-bf44-48b6-97ed-059435b2b06e"><source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="1462"/> The documentation provided herein is licensed under the terms of the <g id="1465">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="1466"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</source><seg-source><mrk mtype="seg" mid="148">2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.</mrk><x id="1462"/> <mrk mtype="seg" mid="149">The documentation provided herein is licensed under the terms of the <g id="1465">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.</mrk><x id="1466"/> <mrk mtype="seg" mid="150">Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide.</mrk> <mrk mtype="seg" mid="151">All other trademarks are property of their respective owners.</mrk></seg-source><target><mrk mtype="seg" mid="148"/><x id="1462"/> <mrk mtype="seg" mid="149">Документация, представленная здесь, лицензирована в соответствии с условиями <g id="1465">Лицензии свободной документации GNU версии 1.3</g> , опубликованной Фондом свободного программного обеспечения.</mrk><x id="1466"/> <mrk mtype="seg" mid="150">Qt и соответствующие логотипы являются товарными знаками The Qt Company Ltd. в Финляндии и/или других странах мира.</mrk> <mrk mtype="seg" mid="151">Все остальные товарные знаки являются собственностью соответствующих владельцев.</mrk></target><sdl:seg-defs><sdl:seg id="148"/><sdl:seg id="149" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/18/2019 08:01:56</sdl:value><sdl:value key="modified_on">04/23/2019 08:53:32</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">460311339</sdl:value></sdl:seg><sdl:seg id="150" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/18/2019 08:02:00</sdl:value><sdl:value key="modified_on">04/23/2019 08:53:35</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">998242797</sdl:value></sdl:seg><sdl:seg id="151" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/18/2019 08:02:06</sdl:value><sdl:value key="modified_on">04/23/2019 08:53:37</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">1633633558</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group></body></file></xliff>