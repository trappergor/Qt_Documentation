<?xml version="1.0" encoding="utf-8"?><xliff xmlns:sdl="http://sdl.com/FileTypes/SdlXliff/1.0" xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2" sdl:version="1.0"><file original="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtwidgets\qtwidgets-graphicsview-padnavigator-example.html" datatype="x-sdlfilterframework2" source-language="en-US" target-language="ru-RU"><header><reference><internal-file form="base64">UEsDBBQAAAAIAFdAgknA8NehCToAAOtpAQARAAAAd3A1dmYyYmQudmliLmh0bWztfXt328ax+P/+
FKjS1tStSMlOnbaSrVvZllP/rmM7shPH954eH5BYkohBAMZDJNPmu//msbtYvMGn5NQ5p7UNAruz
s7Oz856H/72Yeda1iGI38B8d3BucHFjCHwWO608eHfzw9ln/rwf/fX7n4e+evnry9v3rS2uazDz4
N/5heTa+JPwDfCBs5/yOZT2cicSGt5KwLz6l7vWjgyeBnwg/6b9dhuLAGvG/Hh0kYpEc4zBn1mhq
R7FIHqXJGKazjnG+ft8Kbce3r92JnQTR4JMTjKx+n6ZI3MQT569tx3qpfrcuF/Ys9IT1b+v7xHrn
OhORxNaDwV8eHvPb+J3n+h+tSHiPDuJk6Yl4KkRyYCUAlwRnFMcH1jQSY/nGcTAew0eiH7s4+IB+
P6ax4lHkhon58c/2tc1PD/ANy5q7vhPMB4HvBQDqI2uc+qME0Nw7/BcsJp0BGgYA5qUn8K/x4+Vb
e/LSnoneAQJ6cDhwEzHrnRwOADcXSRK5wzSBHxG+gyMrDyGBdnj26xnCdsxgABqPeVseDgNnCX84
7rU18uw4fnSAP4jowHKdRwefEoBHPqDFGe/NbNeX6yk+7kdB6jvCkT/nX5A7B8sd2pF+AzfPHsJ2
PEwigCdxrPOHtsT4YHBMgBzHaRgGUSKcfujZyTiIZnHf9p0+kM7YnaQRjRoPkHa++pT0H/T/cnAO
m06bbZ/Dhjvn+ZE/JXMmiD7siFjQl/SJpJP8Z5V0xT8fA9Twf3IF+Ida7jB1PUceo4NsdYjd3E9A
FE4yhYN2cvKHA8v23AmcusidTBO1hsE960qMRQSnUFhPJZ3QkgmGDJEmMGoDjmEH5GbxX80tkUfv
IP8Uqeeg8kULN/lJ5Uex6wjeV/NpEoyIFXyNqPeBkuUjOYbEM/x852GKTMRzNRDiWnj3DrIt+4po
KxJwYOAQ9Om1viPGru8mhOIr/P0Kfn8Ov1tP8Hfrqf6dZ/Lclkng6IQhIhBYTcUcz9TPSBJrThED
DcfTmkW8oR83WYHJIysmAMAzUl5zimQq+nTcFf86OH87FUQcvUPrmXzYFV4R4YG2gbj7fpCIGGDM
Hlkv8ZEx1DHRSZmUJf31FUnTQSs+POcP1efTe5pO8UY4qDvo03vwchzavp4sHcovgLPCc3k9/f73
v59Edjh1R/G1K+bHua1wBPNgwAzdWibw9NvBuaUPiQNXpuvFOL4Nr4aE3+rrLZ4G89iC/7OWQWqN
AMg0Fta3Eg7rRwDESgJgalMRAa9JppaYDYUDXNqSPNACVgp35N3YynPeURCJ4xg4jZjZoyleenbo
SlZJjy353BpHAPU8iD4iuDCbNYoE/m5bfE1acE8hWOPUO7KcJazRHR3BtO4M3nLwl8hyYYuisT0S
g4fHIa5Z8x6Bv1wgYwR8uLOJFUejRwfw7UTEeRwLxskg9CfISkGmwMsZx5Mo1JOg1BG7MSw+GAOY
+tgfWVGAvNWfoLDB+HLxXSuZ2gmhdwg4Fx7wGYIc3wTUWnYUwRZ8FEsY0cetiPAfw8COHCugv8N4
A+t1JGL6hhYF43seTU5j4Iw2sTnakgjOiu1ZLgA5tEcfLaTmI2sO2zq1pnaMYMMpybYTFhfAw+yS
U8QYRsFiyZutbjpFH6/xJ770cO8G1ntJRIQpe5QwChA6nOyIAAtxEfSMVwGLw02ndRCk8A/6IoJz
R2AjlvUKExgEPnBneqvP8+QK8F7DRzxFeTkxUIQoLuQNPiTyI7JBaIE8fXuCyEag1YLw37QmG6TV
aCIsPwUERgjhKI2TYAasDQC+/9SS89EWiFlsgTDkXgOeYVmzGtDwxSJkyMwzwBiDVbuELKP4LaKD
vuXdo1Vdu3EKYsIvivIIuCNekxSU6L1fgmCmFs9EHfga4W+nbmzJ41I4Cw9B1hf52/ThMT3TK5Dv
mLdhzSvmdVPzSnblFV9gRNEzvlvUC+rekctRXLNNQmBmOr1Pd8Om4sT0vmbMbRizANfA4xxruMTT
LLwxnhDHRUlgyXtILAYYhzwkcvF4xod2LAyarsX8EX2bvaiOG084sBDQKPD0UdSQASghYBdOpcW8
B5ECehy/Ciw8FCN37AL4sfuLIMCAZB0X5cFR4AURAxvQ1WZ73tIcMXQXMzuk9dHyghAgCTSd1tOR
C197MfAzz8P7bQyMEokZmaG8zWN1jAGLri91K+I/E14HAacp/oXAGw7uLZgW9gGYK5wtdYZad9AR
8GeUO0ORFvVHYQhSLumAhpAAXBGuRNCF6N9SULDyZHVa80mYDj13pL7JvYP6pcEhXg1/hsGUGGJZ
/5KC//cfXj3+f5dP3up/vr569fry6u373jAIPMKndXV58ZT/9u7q+dtLuNaSZ/Cvw9qV5MA6lUPn
VtSrQQGQd9K0HPz+WeULAQiIyD0Ozv8I3OpMvjPESeOaF48qB+oOzBMknBWAIUJrgUVraeZ/TRvL
NNgIw3/J30M7wsNY89ajylH41js4P5G/Hp7duVMP1Gs6xmogPtQg6rfj96x+0OvAddSIQHk8xbr0
kweww57xGppXnSNKojjgF/iw09LhzD29fPLiw6sfL6+unj+97IgK4py9yjXaJMN0Jgp+ezdH5A2a
ml4Ry1+DYPmuWAk0Oa8SVTtNI4Wmzc5FeRvlPmo+uuWDgCw4Y9JIoXDhRIIusYZ7yvVBwcPrsSxZ
BnRHFGVLdXPY50qpmNkfQeiGm1fYMd3ieNOCzEC3LgjlgLrEFbHUeiqUxU/ypSWrdnhZyklfyx8u
1A+sbTzn6zxOonSESm1CENiGCIKCkgA6nqGeSaoQcX4lHebv+MciJr2BlE60kqn7HTQBB3d92SSz
f0VH5oBPDgqbIHfjLE2fmFzh4DzPI2iAMAU54dqNEpDZtdwK4Cv5Jq/r0FaGkpfxvhIE9FckB/U0
2w1DpK8eQO0J0hbq+lpSU8IZabYgCDqRPVdSmpISCxIhi5G14CxJoUVyEjBKlIK6SuJFxUglKW7s
LoRTIKpJ6gJN2Z5IElb4vqKr+QrE2L6Ak0pMkX49PX1H8h/hvCQDWq/Q+jF3QZIm0VdNDfcmAag1
eTsTbVHudpRITsMAa47xGZBk/Tm8myPolWXFEFRMOxEFEavTlXxW5EsI2dlK11vc9PoLOIF29K3E
j/pO4Qu//DXHq5BS5HIsOHy2NUNLRURYP2W8SJvvuSZbicRTIrOV6FRTqDY5nmdkekWMTg79JIgi
EYcBLFcZKuoJujQcy3ommNoJgcb/vGbE1N8KohRmzUH5UfunE70d8uMLtM6MbG+UemRb0wClknSz
A1kclE2r4fk7wXYpH9QpVpPadCTNb5nnWwVdywuCj3S6EqW/qfNxWn8+8hNVX+Gnp5IMv+gga+sg
u1JHDuVsp93V1578sg2l6kjXbPQYLlbFQVvH4k3s8R+HhgKtT1b1AAM5AFyqb5DOe43UoN4GjvVC
jEE2ODxbeZpnLvDCNzBCt6mGQZIEsyt0JK41HRHgRQHHRem4DbtEldue/N4qk7fM5djRx+pZ7p9o
FUAvACGzR1PxHXC9Hp6IJwFQHOxLIug5vfhr8RI0BVwyH6L1lgTtWN6J1rUduXh/sC9mHERzO3Jy
MiGdDC0TRhNyApMosrK4XxBRQAjHifzsIU/s0X2fXSDq+qWLxPVXlaRRkIeLu0oWBIAMsUvJbixr
FqBQ1wo5aAK0MQJENi0AxYG+B6cLFhL5bNFP9FXKCgP7LBzjIz4m5nc8L19efIvD2yCigzaBvgAp
MuQkQpvkarUrSjeJPTx83tJCIgN49GCjaRADvpWVdowHGyYMQi3Lv0MAQKOC310DOWQQLpAMAmSj
CmlN7WvSdwLELDvgcHj9tbgWEftdtN8AoYkEmwocPTtxGoB7jp4uRtMIyduaAfU17rs+HVI8rzgj
rPiR/4GGG9lAULGG6C4C5KOrhZcylHMr9xYIfuNxP4b1AQZNwTAS6CMAPRXjKuJEomuOQF+z1TqJ
bD8ml5mazISDNxmVNNqWzD3C24neTRgcSQ9Fq4jQA0ISaS+vQuF/+4Lek3+9fNNV9K8U51cSflYw
xxn3W/XLkUjSyC9oFb/eabVbrATwjVn7jOXDk1bDEH+lmH8aghYjetU8vlHxzovHyifOqGbKl2ea
vz9ChzEp62gkYK4FYMKRjBsPHwN4cK4ApZO2GhXmROCV9nRl8+iKpNhJ5rGdn1M4+s5mQsv2P76/
jY/LhHcRt7mhqy7iAjUOhQd6Hl7NcRav4QDpWvHURo8a/M9nMuSbj2LT1OWKMx0hl+XdMm89tRmG
zYc855uY01Yj57UZ1BcbfBeNcUv2+cOc1/KHlz+8uXzaY+i04K2fy0/U82YE95uP3R8nyZlxIwm/
cseT5kE0zbwMYIRdAPY4SuNpr81GcNtY3kYff/Pnkuq1LYQio9O8oKPSjnIjWdN6O+TuhyXj6WZ8
nRSYmEMdlDwN3FnMXBaEpdN46GHAVtE4b/D/IyuZB1bqo7baeBWg+M1SdT2Trr/t3bFCU0+Zdw4N
7rOX83QRhh7oeOye6nTopW+id9hmjKmdU/ovOs7HTo7sVFTjUmT2r12iUCmW++TG8LyS4a3IrInq
1zqv9/bKmfJM4Z1gVUDbUf74KQ2SM1BYBZtM+N+l02yGgJH53xGgpTo64Kze/XFmuWPpyJtLr0Au
6Gor7jrpo4PVTZS1IY2YOSGdFaVGOzulihfSmPkDfHoaqpNln/cOaXjAvTshGdUlvCBTw8hKYYWG
OSZOouAjav38NhmJEI6jTBfLDFmGD2UjnldDHr/L9NcWDuPGL1MMRTjUstRWTyRon6LGGjv424NN
LkDje32ktn2sqqwN5bHakUypOkXtNnvtePtK4DpQTgUb/XcLJsCh9+vXomb6fJzFfmKo+hCtdXyg
hJYeHrraYOJmLIc4jTxgbqwDSKUfngPOi25RbcwT8n127RPV0nQzOxlxFDvFsCrlFVWsMxwbTbf2
EJVWADXBKYDLRIENH82D1CPbquBVwGjKNKvidnWIPMtDNIUEeOxGcYLMcpRFalTwCPLZr6Sidg48
WtHOYgYO7MDuVwhuMoBTE7da5fDFVpucNGEfEVcfBSgaJ8LHtIU57s3ISx3RcveVvNrPk5zNrvxl
wTJ/N4a/eqkyIE/zR4BCgDYz6qEBiKKcAhzS9iJhO7DkJkc9g949ppwDw+Rn/EUkMP/DCK5KXE8n
zChRQ8UQADJHgs9gFnFdO18hnr8lGS8Xzr9Z4p4M5m8IR8eQLdg/x6EvcD2oEMmgO+E0IZ2jTWJ3
6HouRmwdZU88wQSK3hqVq5FlrViTyHWQWRGb2SzuPIeAbmHnucXIk7pCXHiNbrJAEc1NquBa1x3w
BhjuCs4A5M/rxJ7eeGR2PnegZWqkmYtKI6abRW+B6J3O1gnENcaIQCHtFAC7haC3H8Uo0Savuq32
tOy3hSFWwnm7NGp1eAV37ls4+eWQOgyXNTJRkC+TT5et9qd4Q2VhwPUMCbmME4jY8oPE8pE9Y0Ie
5flgtF3gLWdBhKQOEg86lTlIAF3vqZsonzPDwTG5aBYyQgqUA3xCopTOEmY/rUzoqU8PQy/vaKQy
DFnCktIU8cPh0upFaJdi4j3MBcCqlDYUOv1AKsjAXT2pGqsFoYvNCyawRMxxgtV/BH2U4R4Kckmz
kGgnRwYYTpChLNGxu/Q9CLNqbBJn0YUnEaozD3EI4u4kVQBOfQp1hlcMnfYIc3nRVU8CAkufQwE3
Ikge2jstGjKnKNkR7yZOWw0AF77joR880pJvVouBsUCw5J3ec8FCrwxWgHE8gf+mt3Jxkw05fiw+
KNMBqvcqP5TcTma8Q33IYeV9XJDNyI9fbQFl6XwOeBAenLcsCPvUMsMvn0XBDC+SLMswi7wOg/hZ
EL0IeIf0G6er3siYNd2c1lURk6sB29/teLii0tC2kl6b6t1wJW9H9x5k+RwtPLzGSvGgq0NjC0vd
UIHf21orvYObb+W2dmILmO4KSlkBzbGWIMpzFpXmUpVCg1Cr2D0+uvZ5IbTM1EKVjzyftUumB8U2
pWKmLCSdJ9V5N1xeYobXXIR3t82JFXD5Znc0383xVFtLBtYlmk/oN4xhc6/hFgGMLeB/0p0EgAL2
RkJZVjG2P5szi90bbJ/PvsbYQc1oC/x9LzLzroICbobb5/DZYxTt+nxjwY1Nz+2dmnCGMt/usOze
5ryv3835tN66/9LVUN/bAuvcz0rqGG+NxJZjnfAOG3NIBZBcjNgUMiekrozR6ZcH1gv3o7Ca2Dtr
DFrrAcCBd4NkvSo7ZGVJyvGoarH1W+giMdVcHvS0IHInoDL1To6sk8MG7pmTrFuMt/8JhposZyWf
UFQQxIlprgNYe8DO/fvfbBRN8mAjX9zf7m8naqfVd6Sx/a/qQNrKyjJGGgXF3Rv2CJku15OZyQ2H
85AOl6xpMpIx+dvJ6KwxWhnXPmDqOZ3mNoPgFoXoFVh5c/ZnnGxkd8vFbHewgklHXhNMT93oecLf
attZweIJ2wYUASOT+ef0mKuG8b/WoXUdeonDGjip34g6tFS+YTUA/19Y1iwHeUsY0Hzqeprd9ty2
tKupHb8Ui4Yb3WTNHV5RO9iW7UWnswP29OnJxYVJd+9WkN+KIp/wUzDJckgIVnSNNTgUsoJuR9gB
pw9XcSTiII1GgkxnaF1EO5620g0qlTLHRdcSgaB0sxzF2+faAMy19dhM6soKSQvUFjmHgE2uKU0+
FugKR8FCwWSV6At9rJig5lPttswSp86PYskAIVnTl2RkC9LEUu4db4k+POUhpOFMYx+VPsByE8DC
gZOiURUNjFgVl8yUCo8gBPloPkSL61ohNqsl/eJmlBNLW6JO1PX34M/bCfDY4uBa2j7563Y+b+E4
q2U1I7bpQY0odG+jNd//80YhyPfubfb5/RLKlFunhcfAqVQyZsdru+neNoWPzdyQZ80HbZzta4v9
ZLkhHPUDmLx8FbGnbrw/NVOA+nmZj7lr2ef/U1/V/P7P5klXJxMpKOaC6zbdw8Wme7jY0h7KxW26
hYv8Fq7sbI+6BC5VI93HCp8VARc9dRm18R/NRtezKKLAUBV/if9F9dOvFM39vz9iHFRzNv/OJn8d
xL2COWjRhqplF9/C4e5A5njVbgK0nfT8zai/jnL/sI4kX8bKbhmi+nzR8nnr8YyMckkqqLUyuPVl
MGfrnHKRJ1ncKfnNsX6yTMAn8f4oMzWSrsC1XSm6XH5GAXO6Xs7YZZeOnRk4dOlVWVdIRgHI4bm+
sawswV/CD9fCp7x/9syQ/QKFbfwWI1h1/WDWQMiDzmK+3rAsapAEdqr8gIlQERcSkiZIsmniqHZm
V5EugCOODvLkwcsqDMDbZA8tWFlBgcHK2QgxYdIIH9Q2GKqerW2pXHoBNJWEysUH4wZLDvu/VN0D
CsqlcJKsinez8bgQQECVbEmJiQJQ93T+gOeG/aGYInq4UDiF6qhEWbT8mvA3Rn/+Qozz4Px/+xRJ
SjofLPFeOdbZcWPZD0THV+vQGbIW96NgCH8f27G5ERcT2/WPWGvUIc8uZoaABqepD5emImvCNAL8
gDqXha/0PXcszBgWDHaNzFXqmNHYJBKOicnHuZD6p4JdMBQoy8JQy2WtE4N7CeOykIeq0i5mgPRr
EevoHL0KddY61pxqu/NXMZ7ftmC8FT1+HTl4vVezIw9vxMA/jUqa1bHe2QmW+C4VDNf+H5urxzAn
00wMPS4ZeeZ5E8V/z6TjPg5mYo6UNww8hz08YRbiRuP5YUrFaeDgEjNTgdRj2410jFmHICo+ihwo
TsdUr4UCm0ZYzW6U8Hzd4qlqCq4Xgq8b25TkQq/Xb2hSqqFeA5rJP7K8N55XFv7mR0cyxdXMcJ0j
aFZwLSKsts7RYGIh6xkB0xJ2hKFjM+G4cLVhDsiY6GKaZ2kYUUg3tJBxgsBx1df8Rah6O1A8oVgy
k9alUC1pmIsCKjgJ907tzp9JM54q0W4EeWY15DeLBzf2ZS9FyLceOJ4toPfZlNH+UlD6S0Hp6oLS
mwbGs0NKAYD8rboga6mbgewfRMywjgdvUFqaRDh0P6CQJ8t55XngVqpIwwWhg3/jW1rxGQf+KEQY
66YmuE01uWMqchovcUSYLSPgXZ86Y7GsgbeY7CKiShXDZSGvRbMSg2x+gXVYVRHWQgB1/V1ikEOL
kLsrjrxBJVHjLiJstZ3cJGpyH78T3iiYCSUyVvbjyjooSfku57G901hDJz9b1j+KekuR807G7Yui
8s8dmSg8aP35KPEi4YLNtizlwQ2rlETDJ3ji+oNqP3SuPuZTkDtHYuUKmVnxy3VqW6I9ACQF6s6l
UvjxwNHuz2Ap9kTksxcaDiHjVvhcmXOVuoeVazcqHxrlFF0zjMVQC4xjzCoA1jHk2Fv4xMcMkayi
oSjkrmBqKXON2GJPsIsMAA59ECW2LuaZyD5ioBkLDysnjlGV4AZTUjQmq0rPVfk9dlxTdHTlGpBH
0kiAay3P6HJyEkA3CQLn0FRscH0jajw3qa59CewQXdEcKc3FbzhPFWlgrCxP1LNuYF342CgOGQHa
ZQpZ30Oh3PWUNANaVEXBCw42xsF1BDU9eUuEZee1q7UK8XVnwbuuwtea6HHLCkn9+WQzL25rnGlJ
WLobV4Xko9pO/Q3g1PUAqAWMfLh+MbvuBPFF+G+tZPefUcbuxgsn3d9Z4aQNa+Td//ODzeJMHtxg
xO79+ye7xOsTzw2zclT6Ytlx7avKlX69w+iqe/qasFZylW4EW/mOWi+VYsOA8e1MvoLdCyWlToVe
Crr1JqV/NwzmOtkp7e1j8I4xYmPPnsSr2bdWvECoj/PbIKyb5N9bmwQbbex0FhTw34GA8y7CIuEN
5P8sMDAc+DrKAP/e3gvjNSpn5QRwvcWlQMNbVBSXxIVdAIYo7SH+dnIV4c72FJ9q7UaDZ6btJRys
pnL8RlVeVd3uETqjsdZ2ofSjrNaYwLgfrft9qng4BJrFCmfcpELM3H7ZXWa24XieqDiMWMV9FKJT
SLOGz2206DInVhEVhhmjWjUiCO+pHDjXZ+0cA8/Zf0Zju6orBPWBkFHp9FAOI/tf6xYgNnKALGOa
fkRlxJoDkkNuwI6gO7nqIVTClk3k7DmllhKdqllVePEKDtVcp/oWl2rLu+ZkbdWsqhzLBXfqzOif
HIwpAqfStmn6Q4ksOMhJJYSTWT/nHefCawv0myY4DRptpFUtRgMW2nyUKT+W3SBLDopCkZuNvJ45
xG3u9+T27Pv0epoLuOVZmCvp0NvzvdZ50oKEjMLtvjTT0MJR1pfXosaIcpX93nGhAt/d3Af4g9ua
r4uNbtA2XFVGqsmlh3ytaGBnQpfesZyvjUzTgZ/lO582DfmVgdCDcxO7h2wTBs4qfMoJostjJHy2
kOtKnmM3MfOSKLSFSivSYFm/V83RKvqjVsbaVHShXbk8B5vVCzUsmEwxVq1UPMMoa6XBfC4bwypX
oWqhKX0TKtJRlXnEHa6u1jgB3EXUAxJ/1eGJcLXgRYxlmAiL8mYubxocmcWSDVVFcniNP6nzbZ/3
ETTHEdS5rKn8ew7xLfT72+Z03Xyaxv3Sq8mZrqXofNoyxfBaQzg8XuBPKHYzngYROYZi6+dgaHFV
Lxm2THUHgDCo6iUWS80HyFaWCm0KMFO91zahMpXWDZRrDG1U5cbKvCKx0pDAzwSLI5Y/4qwJmMu1
2BKWUbjHNZWb0dXhxsX4L/N8ysJi6GRioeSIorbZcSndUKvx1fVzzEHEmhEzPT6WbgHauLzV2wj2
aqFOKa5vnMqSzah9w/Rkj9kkBT2LKzGTO1XGoRCpkze1hmxVWTl0Qmbt6GypZVwLT8aS+9lldWT5
FFsYNJ0Ukn8ToGMZtcFtjF04jMD357pOPWburhcdvib9vJYVRPLEk6sc28rcnM1pJ1dphBJtmooA
qKN0FSRm5442SLFuivpkc5BXAAwYubOLBS1+U6tZ3vxqTArZBtu6WLjxRsa09ziCBm9xi2Fb3irY
fsrBFtZma6wE1VsVesMyRm8nNVMUmerJOp6e9hX0Du+s0At83YIa5hHax3ytPHC14TQZ56UJzP+b
G0FrbaVqKfMLKxahDIHiNqt/fcwvGQUpt3Hm5yURkEQXquxVTB5IQCwQWQSYbUSZzpVwQ4p5WYKI
5LKK0mjGDVGQoJi6LF6KReJYdbpJPfg/z5X6R45XyuK4Fj2QSjDlIMqyZTmzg6FaswLwFZ5W1S4o
OT0lzmKEzingSaMhGR/1Tqy3coJ4vPfXExm2h2aFlPoYo8pwxFYC7h+C2X8Y16iiZoWOtTzigmpK
3UHMM9SwbFitseTFjtb7U2G9quM2Bi26XqLBuhYRNaTG5CDMAcKOAkr5kHYAmegouylhQh+lIwpH
Dj23ZdKUeq4/sT34LQashGhtQfT6SQkDyz3teB0GQH91f8Eoxw442MrKj4noVcjqbIgBjap+oOfJ
E6nok+DW/T6u3WZRvnyjFCKmT0/Lr8jWVmtK+4/RBNQj/duS8UgV0n/TtZRT0DtdTEp5361UV4ar
VUzdeRpI1zXkAMkcxdGs3VGchj+4xciyDl9Ogzh5ac/EdtyyozTOCslpW80WhmbEFNe3zRl+dKkj
S42xcWxnXRV3Mv0OcZcF5XdMzGgTqStiujctDZWLEYrag4O2hZ6Ioot2gXXNrSuxXpTp2yTytnpA
dPXWhYicbFDrcDUVcKNF6E67bQXYom5lgVrq5++yTV/UsfjUJiAedtFLtuLXqTS9yyIUhgBB0qY0
q1JiyWjqeo6ypsMdTKEUyseQT6j4lAfJsPtTglMQph4VVEmydnslD5h0klFhDsONyO/pe06+67mg
HAnHTZTDjC3EFNsxEpgNwjn8Y+TLrD1QzIkWKafB3Jf1XkD6q1zIV4qv9+8dGDxeRvLolHMllXLK
fsI1QhAkiVYGgbsL2iCfnjEa4G1yvwIBoHeIk8KkgdtOkwDFRNYQ1Ip4oIAybBK9iLyLtH1DsH0c
+/pwCE0kri8Tq0ySMIkEXp668KqvitV4sJK54EXMbVaEESJaHiNca7/M4CiDwhOYhvS3E8sRExC5
M62XHKf8ogEIp8ujzgyMUH2TKQK6KAuhb8ZZ/GYphyKFc+4bV3hRqXOqEjcACPBKZZPKrYxU8hX8
jdXRh+65afXHdkFmfhMHJm0jxargTUcAjXIEmKMYpb4Vz4IgmQIRrut1ytW4yWsPKxVU0cVytqMh
5KuprZa51DG89ptdxu5+s2EByi19frhLmQFIe9leLNwxEkwNEtm1L/Fk8KDSm/hOUHSgvMYyK4I6
ApnZgrzDSzhzcMCM2I3mKlUyNzPGQlLA8OF7z44mlMNo+0apo8CvulXdRJXEUtdL/hJucEvGQcVi
OHAAFSOVb+l5Ztmwx0tknmzZXM9dCWhGFiwZlbrYYPEOOuSTuTDugVxvs4xpIsLGAVc5xq1hmEXk
ipibO+gSLKpImgw53MzRnoUYtNtMKkoXdLI1MHfmCb8L4JbaidWhDrpeo9f+qEPV8mWHiuVbRNGr
0B65yfJzw1LAYNdk1RdIYBt879JGb8STNLqutgkYv3c1Cfjfpyan3gHQT9OookFTOZWpEghJGXuG
I39tUO2ETH/J+IcuRuUtVXUCs4yHlQWw6G9UAGAJ0YqdM0ONMzk2dyCzNtf6MpJULG8h4sJDkflY
ZCoBLK8/g9/cWAATdixHIqPSwC+IjEZIRnwHvAXyUkIrEQzdAvyaUVixvDS1fRK6bHFwm8ozX7MQ
GJxq2dPlgTFb8FdYhGUsIs5pQHQ7cVVFbb9vqtZ1Ny4GuOs4TKUMU9HMzQVsu8B4dsZMf8rm3DMn
7SDgdWGoi31dO+8/d0zt7YL+abchPbWIaguU6YIkyjHaG0ndEKKWu0VUkbPs/ia+d/9BNRDvbwMQ
P20zSGpdRNwCGLZLEbsQbF+lSYVs+/4zhXurdLdHdH8+YOcjz2NhKeN8UeA3cw/yZheQKbHeFyUV
6eSJyrgjo015MSBns9AvpTkYITcD6yKXWcHl7+1MB8Do8/sPcqK1TtBYkulIVz1eWVuQ+K1UGNaU
rJ/lLeIUQ7Fr0frZzgPPay/4DhHNt04YQnS9wey/PeOqPky4C4ooX3GfKPoiXK+ArN+ogF1d5S0C
ris8Dcu3UaB5XJccGf3hjnDVBF+ve8eiArPYvTj74OSkHob9SdWNYPx0S+B4f0vg2Bpp7E/q3TY1
7Rfynz5f0N9/vqBvjcz/RyzJZXuRbFbX9RMVVPaTDyM7TtbKhPqEbYa6JzdVGyAG5VKJN4G0wYPP
Cm0ng7/cBrTd++xpLSdNbYwy23H0YL3yXbHfWYkK9jvlTzez0vfVKYHlkKAmUw9C2hdjKrZOgYLL
IJUl/PFnzlHTDYSols0ksD1ZosOMb7SdQlgjlpnhdLdhmuiQSF8WLcs6bldanMjUk+UvodUKy4Ql
XC0Gvj8pRWXKoMcjWRgI+wqit1S+Dy+6WPnGnWCLLuVYpTFUtCS+elqVUlgh/6g0M94YYRQvyzCQ
5QcaUcfFzLUi/1ID079ivT5VRT6RwZz2hMoKTV1PlCJT4f5umOan5jWUduKnPpvdEOVU1x+w1DD8
+xWHf99l+Px50gPDqlllMwxnWCkwZDpXjnkVJmYPMWjJOA1EVSnhU41UzK8rGBnxCwzQxXaDIN9b
ldEHVM3Q341Z8fw5xu+C8olxG/ZH2WDTC2KhW6o00ZWMB9QruisbicnuEo4ZcDAMsBri4ITPr52Y
1slEhBQsl2Mvd2P+HAkRruo/frW4L854wpmwdWQJNSh7cPIHXdnG+F7hkPopFiMjjjSlq4AQWYvL
CeZUcgcmXXAgc5yddKzaocIgcOswHm+CzFG1etDcD8+SSrndkhnXEdwQR0e4cBTHLCvS1tRISXxK
4UXXXs9kgmlksntIzEONdmS5bAF0JxY0kTwDIti1SWg3JtkxQL4HI6NIHsssGZlOeFPYaslk64Ky
a17BXrD2xgxnuWHUbSu0phF/xcO0e9vYSQUIdcR6M9A0EsHNgFTi5tvQLF5jk6buUaw7gsLQb+oJ
Yb9QNBLAfkHJHc69KJkVqyoGE1AlCxbl05ikKmA4rGvpRC9UNoGtoaoiJSC3GM0KA45AwMOsO6XP
FZLDsFwNfAUSI0mFZq6dDiEwikhmhUU5N8Uu9T5nAECC5AxA8xOpbgC+VdyCltwwvZDrdB8ZcQ6F
PFSdx2holiijY8vfgfUu94x1Y5w7wgLUsSjhCEs+FsqCY5JgIlN6MMQXviTFD1Rv0GR8WQxdy2O5
fJNMXZJx3ZwKZJa9ltvKO34E4vhwqFNuK0ldJ+xwHcosMDunGoXIZIzymGIhRimqhOXS22oIM47j
ZGBdYt2fbDGkAJhkVkAdWgqyrCMKOsdCO9hn20Cn2WgeUxDJQDEUusQLJdPqtplIfDguNiBkzJmT
5tp1J+5MSIXC9vNtl+UurV0pJcUEKtKkzTjvDsoEvv5d7u1WUcj4ZEeKQxmoFRyttSN2XR/F5tMX
O1yeluSMtW5tCVQT6Nat4B8uGt+Wqyxkanyym6VUANXL0Le1HUGufkMbkjcCywz+fHKoyTPYpDuf
Bl5TMfLcJ9GyXPwN67qhqcorDM98mZt6YrdOTCDty8LE8k2uDQE8nEHhh8Kf4NcyU76xikM91LIt
PSaj0oWjcUCF6oLQ4pq5XIy52uabMQdtcHxLXY8pbVMCm/UNNXukYpsIFhjLlkxNcblRsYxB7ZBY
89cXupyejdGBMo0eR+Pa6ZmJme/ZXHveQlJwEShNszmYlFm8CFat4CPXfGRCSo1w7JFZKWOb1d1N
W23NVWpgfGMZmYRWpatv2wi0XkPLylpQu1vzTtJL12vGOjjZ37J3ZMH6LLZ8Z6G6n0vQQYX/fHfn
a4f2vvWoDe7oylpzv12WutcV3yrOsteVL74wlRxT2Rmil18QvR9E/4fflPf+ulds376rslIwM5X0
bVjpn4qxnXpJMSKsHIS2p4nf39TEWbLu3pe845ljkTxnMwMdnJ5hi8ibecgqzvo5H444s0Ebxukk
0HmUAdWdj5YD67sAexChei64RSq8PbXDWJWgzCJVlG2Bg3vgjCv/Qc5nUo6Os7irqvagqEKENZYQ
thsQEym8WrRPDKyLRIYnSluQ4Yyaoz9l4sYYZeTw/pXcC0nB2nTG/QTy72Hkl1EFx40wqDDEWa6F
xicVBM0wjS0K0D/Ag2cNvgbWK/QYzN1YcAVGtOlT5UXVYckM0gwMT0LWI6yie2DZSCVnJnxQ+bWk
aLPKSsJF4lPqUoykALgFYo6DwYroITuaajhLCCR7GhIN9letAnJVv8bbbIh2Xwa1acy+6GiZhX35
H7HMPtuNgbYatnavxjqlDc1mn21ZGrD01xjW2zZPntfwHhQxt5WK1FhIkM9/lRl+61NWBFFnhapu
YFpZRCrPzytDRnGTDU4iLaQlOrPPLerLTK546lI89sTCpZ7YGc0j5Qys90FK1lnOgHdVq2NkdJE7
wQKPtvkRF9mlyFbVi4Wr+JK72ef+JlTd0GBcNNFzWagY5FJB9YnnQeo5lud+FDybnoPaptRyNarn
W3NvWO7YauovTeWGY2LLcPBkcDuD3KtFeCk6lxF+eqrPESD80KyVqy+dpMCeDSv53bjA5wk55vaY
VXKX5MpWzmhZ/ExXVi6WZZCG1VUYsGQjsKT1OCplB+yaodZC99nw1JZ2Ux3/26S2LQD64RI3qw0j
WtJq9IeuTTCRSNLI/0Ix+6GYjUnmirbrhmkGh7/8wmj2SDb7YjYdoy82opyrLxxnz6SzJ65TQTwF
cWTbWooZoqTnLN5oe5m0giVue94yU686Tbufddt7mtPHchHUu9vSDnPuYkc7Tnu11+XmY9RQ/8zi
gYA91ii7VfyVe4qM7BADyDK9E1U8GiWu0D4dkQhqRiTLUMP8kWy/2dgVEuY3mkIaTIpK1EWrfcp3
I3zJBk+tgxvat2FQ030H6rRflTT7ho17piZanzx7ZAVphEbI0BOL2jTaI20tjSuNfLiFGAzo+qnA
UECyP6h+pRxbV2zaKoPyZZ96bMy5rsXwCYf0xemwOBNOcWZR/jdNJGZhENnRUk3XYl509d0qu+PG
rUID5ph2awN21mneCLtHbGFS1dmrSbz6UYzIXNK1E/GuxlglyNZq50JdXiHC+RaIIufFwQdtHe4E
Ir+H29TSa3Cs0WL1mvd8xUYRxUSxs/oBTMwjyGd1L/6peQfVz8tD61+GvNiGtP9Tn9X8/s/mWQs4
l0dSo30bqF9sivpFF9RLyDfF/qLY13DH+FefL1o+30O8e4XM/+v2I/JK3teO+F2nLlVH3G8y9O4a
Vr0O4oaAve5D4X29aV2v5iTajUEMYamH1SkWqY7cJ5mJ5DhdYadCjpPNqi6VpALiGkqgKLFi0yr3
XEk02IwvayRSEvxI1CMIKMOBfT+VMxrSGAlpKAOjlKa9IZhKmVK5kfWFcVMmZC8yzKXdxKoEi5bW
WPaVYnhsoxOZcuaMlpx5uS1LFiFBz1iTKibkJlQ0BcXnwAJkOLLoh3zNQDPLoFyNBD0sIOg61EDT
E2NZZocDHLjNJYuv6L/Xi3yFtTSyRp1qWehV/+irXpzogSfJPg1Lnnj1QZf9VXWqeydH1skhJcEm
QdhHYI+YhBRGisPTGPLhLzWVloC0te9pKCyxsEcJZ+PKfA81F0/lru3iv+Rmkkh1MjmFc4cpjKAQ
L9EUBPCfJFv9h0k2ubVvJcWzUybeLZGgzjosfn3XG7KyL3bwPdrBt2EKx01rjdjJCcQ7IR5k/19o
Z6+0synpvIAtuwWUg3LVF8r5rCjnKWzZLaCcNPxCN5+R1/aHcD2aKcgl2/Yo7km06y3aZF+rsZT0
Yd3nfyjI2F2NPeq//M39uWK3Hr39zdD7pwJ6d7YP+Xvwpvaht9w1maIOvFstqYRa86K4McTWY3Zb
FErOptuB/7wVFAPJjTozY/Qsm2bInF9WGj6NkOdcb+i5oKBm3Xia1PdREGHmTeA75FsOpF3PjmCx
ZE7CIjNDtHSyNdMZWFQleeQJO+LAcnawC0zPcj+lQk82onB0R8gUHFXYqyr9hmOwHR7P9GjH6VDZ
GB0RCoYy8HVKkSMHBUjbbGfqv6sg9Z0rMUrQVN8mKJFZrk1A2qKdftF20S9LRzT+7eSPt6wCcbTx
Qhe92oN+3MhNvinXRNnpFtxMZvlWcLz8XHC8mzbke8Hxonf4eeFoeSN0WMLR7srLNIB885VG1H87
qxhwa1ZfKBTQwYyyQTnz57DqG65ivgPElxlL9UpvoFS3AdHua0NXrTkHya86UsYQ2y+8ODiqjs0k
17VMSo9TNyGnrWwLIsXy1bs/y3T5u1bpzu9n2fMgto+p/1AksPLukZSgjfR6/gQbxvDfdEOQGhVB
VWMcpfCzj25tvilQRXgnVKqlVk7wVdeX1NbcX6juJT9I1IsD662Zzak/MStK6zLYMhKCAw4wFIK3
wclah/RV2U1Ous1nkYpyjeZCieZcUxIMFXFg3ZHnZkENq/rz34xEl8LDqpSj+Xor18J3d8OjqsBZ
pbkrfbYFnoJF7jFgyHceR2k8rezF+NpdzOzqDrR5Bnl6DHs7EfHxEI7pBzpdH+K5G3mDn8NJnm1u
fyUocz33HbH4TiTTwOl1xXqbVfllQKNuGWA4UggwBq5tHxW0PNTbe9sZEvlX/BiJBDabxj3M9ajA
SXiqklUGA5vQKoMR+fFU1e3AOCwVgGXYNmQ0llEIvtxFjs8kG04wKgnZERb2xyHR5EOwykK+9OpE
UESb4jZDTfBWSHSt68Q6bkyXDHNr3HNkcT0bE9yxRg0OzBkDWNaExqby+JwQ7xwStMgqEQzmg2ju
0KWAYVRlT8KPs7QL7BM1lNjFSyfhgjUUPrbIr1v/KsunZG9jfFfMpZCZy4u5DkCzsxsUg5d1nBZV
9h+pUva+E8zN4i6+Ma95R8hF4AwUBAYooSwOym5prYW8Jpe/cH5OMcLNKG+M9WkIOCQBDKjrEqyF
okXSxJiRvJ9pX9Ewao/aaSpF2/2MDXPHS5+u7Qwuo2RbxoHVdsseWc9icb+jrrIlNqh54GHLopIg
rF9Sv9OSPoeKx6sZFbZEeMt1MXvvpKKw8navXl5i/sZ6CZeNTstj7oJWfVm9xSFWPTb7+bHfIQte
LZRglyNRHRygsyPmxzSK7Yg+ttNU38rLz8GfcxfFuizzR1eLoEaXIFRhQK15M0IZ/rEdvQ7gClj2
NvG767EuvLm9jF+Nx6Z08I8gcn/BS3qPc34H0sYsnb3BTJ1K8nqwUUB/dUMqQHcYRMkPoYM1+ODO
6z1LPS//2PzgCeh7/B79LZPEzZeuBAgi0T9cuN6qZXPb5TzOTli7oG48LvX0vNMef5GN8O9Ge8tK
MLyh6lOsU5DHFGvo3xQwb8UiMZFCqM99FGLAfjAScYwffuWOYT/G1vdvP7x89eHV68uX374onzG5
5b21NMNXofC/faGaDWRk1gQVevvGCo6dlILEVIpesfeWFjMnE4/qfY3hX75AsDBfIrOYFFpbPE+U
sB0TL4zpMINoHsVWn+VrUzRFDuwHJCqj5Gq8bbSQeJ7o2pO2NePzT0w6KzSYQYY+1OvAdSw40SJC
fmiJKAqiWAmzYzfpu36flsciLef9UfAUSBRKpsXEZWS4tmyOa0ATo95R7jKBQ3JKdplhyAztMtvg
NO2sKlfDsIaWyxcAFmQLROzfRekZK1VShsvYnaQReYjxCjKan8GNhb2xY5mHEQknsue+athr7Ap2
2sBrLSYkwL65Y3Rdw+7BqKMpaCWo3WFjLfmMMlBwNU4eUdzOLDY1sxGR7UQRA+bVEAkAOSG3sDHt
BSh+LCLqJks6JZ8b2eUbHuDC+BleqLTdAICfEUEk+ti4l5DAhseSblixoxExZGuKHJlFBddH9TQW
8icc71MK41IRNP35WAMD9J6GuLdkxLO+V4edDhM+r9O2ik2hn6Eg4i2PGipm1osOFawHUaQ4U06D
a2Gi5tGoVqn0710ruuG7mGD6rw4WPUPOWQVSnkML7m7y3MeR2I7RO9yDAtIYptk96FGEF1QP9grP
JS3o1yKbbmJDBk4OilzOLrI46kUXy8OCpovcr0ZrPX6vaV6N8cJWnp7qXxAAUCBI0bc90w4SB/Ls
JbhzMTEGQQljrk99iIwzwwaNx3jgYXGqLsSMjEYlA8gRWf6z5kbYbpEbc8PziLs5ZbYlZXnAnMs5
G+Hxc8oDxEl4TMvDUK6IsRNPgUN8LLwLy4hnWPsiOpL9+j7CtipQbdpei5w/WILSHqnugbbl2zMB
NDMVfVxQX3UJPDhH3N15OL1vuU7l728lDgC/z+TDh8fT+925hZHeReM0vwIYGK1xDOAeibrW1Y0m
16vkL1eElLUwnIuMWvSywrDXZWkInOY13394/vL52w9Xl29e/XD15BJtwL7itZkb1uTAlv69ksGi
ntNYEv/rTbSdr0s2e7/lZlCWFWxB2mupTBHJCjYany1jYs/OXg2XI6EMiVHJZ4rcpQE5LnT+Mo6/
kp1ye4zsz4f7lJqQpnXFeRw3Yo5W2FcYLf9AFQuSQpwqfQPH3QFhE9kTPBpx61AU1yKBQYjapAuS
ykfFRYxucijvfr34usnyKtcg+Q8WdXGz/qOvUNxFVyHZh9F/yK+koeqBmhmPDctGgAOqBHPeRO0E
5Kq2XhCEBT5lyG99PwDYC3yq4vfXhsj3Eh8pLkVbLhY2SZ+0OUrAGmetaa9t17OpGRyK/Nyo1gpC
EIFB5DdmO+PgSCqMDo91fXV0TtA77OTEewGE4k+AEFx8DBeOxuOFhzLnZCovDQkYit6F+lKr95tD
4B0gBh8bGGJ6N9w6k6wv7fco8JIEieQU+JxcLt9BoxVWLVZDk1monGe/BlAwmdB9ck3JHLbB9pIl
UyqX8Y+4tDu6pUHXICOVbJ9n6V56DvZCDEKUJvLNcXObDAo7nB/cGyJDpSlojS4SmRgOuEFp2B1Z
gqUU9DDJkv0LgDKmxHe1dGsGKI6yDX0GB7PUlFEjLGEkxX1TsumbrLyvTxU87cNVKhFqfnBsfnBs
fjCADxDNRpPEteeerjbzdJN5gQj6qds+ITZOTN0NZsr9owt2zX9siN3cP6arzbwJdkk3RZ8f0n6n
Ree+2HDV+dmnK869ybr54um86Oz1DVdszDtdZdZN1kpyepdV4ovbpGNg/atRMnywrbk/RaPV5oYP
jLmVReQ5hZ/U8WwZnIJucjTuyWslPq6fUn6BPeXH4yQegTg6CNGltvInNYhaG6SqCJsOYFV9tm3Q
Pgakon4Y8Z9xR4xVfbYr0H4GQRtklBUhM77aFWBwpleFSn2yK5BIDl8RJv3N9oEKRSK0WN8ZrNJX
2wZsJmDhcvWB76HttRts1R9uHTysvhQEXteNzL1fYrTHjnsNf/yu37f+/ve/1w5m9ftZarj8qPSv
0t/UH/D/ygowDoCeogN+K+Q/7FEU+MuZBcKFB5rlkyBcUtTqwfkfgecuzwBofuPcun9y7xsy2oGi
9AQ0JEywe5E4AxznaTBKDesm6rPuMGVtz/VHXoqaCeovaC2UEbQjNVcM6gMOUm7LNfcFeqeG0Tmu
Fud2chPB1XntGkODluO5I9RIHCslBwOVvBLRLFbOCVq0pINpkoSnx8fz+Xww8dNBEE2O5efx8djx
5FX67csfrGfYaT6/SPjvBb+MDpwYH90bfE0qnR1bYTr0OFJPmh1ohDfBOJnj+p+hTCe9XXJ133Ot
MmP5XjAJYkZXZIPiakcfaRkVe0DUAAh45voeB/85x0A5nKo4gslgP1DLDCLPAZlCDKwLDPSjn43B
cS4VoYw7wjir3BSLpQNFbMPAWeKfiLLzO/8fUEsBAjMAFAAAAAgAV0CCScDw16EJOgAA62kBABEA
AAAAAAAAAAAAAAAAAAAAAHdwNXZmMmJkLnZpYi5odG1sUEsFBgAAAAABAAEAPwAAADg6AAAAAA==
</internal-file></reference><sdl:ref-files><sdl:ref-file uid="0" id="Html.DependencyFileId" name="qcqayjhf.3qd.html" o-path="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtwidgets\qtwidgets-graphicsview-padnavigator-example.html" date="12/02/2016 08:02:46" expected-use="Generation"/></sdl:ref-files><file-info xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><value key="SDL:FileId">d9af13ef-06d5-433a-9e25-220c415f949a</value><value key="SDL:CreationDate">09/06/2019 14:34:21</value><value key="SDL:OriginalFilePath">D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtwidgets\qtwidgets-graphicsview-padnavigator-example.html</value><value key="SDL:OriginalEncoding">utf-8</value><value key="SDL:QuickInsertsList">qBold;qItalic;qUnderline;qSubscript;qSuperscript;qSmallCaps</value><value key="NeedsSegmentRenumbering">False</value><value key="HtmlEntityFound">True</value><value key="HeadEntityFound">True</value><value key="MetaEntityFound">True</value><value key="BodyEntityFound">True</value><value key="HtmlVersion">html5</value><value key="OperatingSystem">Linux</value><value key="ParagraphTextDirections"></value><sniff-info><detected-encoding detection-level="Certain" encoding="utf-8"/><detected-source-lang detection-level="Likely" lang="en-US"/></sniff-info></file-info><sdl:filetype-info><sdl:filetype-id>Html 5 2.0.0.0</sdl:filetype-id></sdl:filetype-info><fmt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><fmt-def id="1"/><fmt-def id="2"><value key="TextColor">Blue</value><value key="Underline">True</value></fmt-def><fmt-def id="3"><value key="Italic">True</value></fmt-def></fmt-defs><cxt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><cxt-def id="1" type="LocationDetails" purpose="Location"><props><value key="StartsAt">-1</value><value key="EndsAt">39</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="2" type="LocationDetails" purpose="Location"><props><value key="StartsAt">81</value><value key="EndsAt">180</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="3" type="sdl:meta" color="Control"><fmt id="1"/></cxt-def><cxt-def id="4" type="sdl:html-control" color="Control"><fmt id="1"/></cxt-def><cxt-def id="5" type="LocationDetails" purpose="Location"><props><value key="StartsAt">180</value><value key="EndsAt">225</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="6" type="sdl:title" color="Control"><fmt id="1"/></cxt-def><cxt-def id="7" type="LocationDetails" purpose="Location"><props><value key="StartsAt">637</value><value key="EndsAt">722</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="8" type="x-tm-table-cell"><fmt id="1"/></cxt-def><cxt-def id="9" type="sdl:table-row" color="Control"><fmt id="1"/></cxt-def><cxt-def id="10" type="sdl:table" color="Control"><fmt id="1"/></cxt-def><cxt-def id="11" type="div" code="DIV" name="Div" descr="A div section" color=""><fmt id="1"/></cxt-def><cxt-def id="12" type="sdl:body" color="Control"><fmt id="1"/></cxt-def><cxt-def id="13" type="sdl:link" color="Control"><fmt id="1"/></cxt-def><cxt-def id="14" type="LocationDetails" purpose="Location"><props><value key="StartsAt">727</value><value key="EndsAt">777</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="15" type="LocationDetails" purpose="Location"><props><value key="StartsAt">782</value><value key="EndsAt">808</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="16" type="LocationDetails" purpose="Location"><props><value key="StartsAt">859</value><value key="EndsAt">940</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="17" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1107</value><value key="EndsAt">1137</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="18" type="x-tm-heading"><fmt id="1"/></cxt-def><cxt-def id="19" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1148</value><value key="EndsAt">1243</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="20" type="x-tm-listitem"><fmt id="1"/></cxt-def><cxt-def id="21" type="sdl:unordered-list" color="Control"><fmt id="1"/></cxt-def><cxt-def id="22" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1249</value><value key="EndsAt">1342</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="23" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1348</value><value key="EndsAt">1437</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="24" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1443</value><value key="EndsAt">1536</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="25" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1542</value><value key="EndsAt">1613</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="26" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1619</value><value key="EndsAt">1688</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="27" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1770</value><value key="EndsAt">1809</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="28" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1809</value><value key="EndsAt">1896</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="29" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1896</value><value key="EndsAt">1939</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="30" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1939</value><value key="EndsAt">2178</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="31" type="sdl:paragraph" color="Control"><fmt id="1"/></cxt-def><cxt-def id="32" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2183</value><value key="EndsAt">2258</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="33" type="Attribute" code="ATT" name="Attribute" descr="alt attribute"><props><value key="TranslatesAttribute">alt</value><value key="InlineTranslatesAttribute">alt</value></props></cxt-def><cxt-def id="34" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2262</value><value key="EndsAt">2669</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="35" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2674</value><value key="EndsAt">3038</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="36" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3043</value><value key="EndsAt">3245</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="37" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3245</value><value key="EndsAt">3296</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="38" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3296</value><value key="EndsAt">3366</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="39" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3372</value><value key="EndsAt">3792</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="40" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3797</value><value key="EndsAt">3874</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="41" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3879</value><value key="EndsAt">5523</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="42" type="pre" code="PRE" name="Pre" descr="A preformated text section" color=""><fmt id="1"/></cxt-def><cxt-def id="43" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5530</value><value key="EndsAt">5812</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="44" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5817</value><value key="EndsAt">6065</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="45" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6070</value><value key="EndsAt">6478</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="46" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6483</value><value key="EndsAt">6719</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="47" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6726</value><value key="EndsAt">6758</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="48" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6768</value><value key="EndsAt">6848</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="49" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6854</value><value key="EndsAt">6927</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="50" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6933</value><value key="EndsAt">7011</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="51" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7017</value><value key="EndsAt">7070</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="52" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7076</value><value key="EndsAt">7155</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="53" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7167</value><value key="EndsAt">7278</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="54" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7283</value><value key="EndsAt">8516</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="55" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8523</value><value key="EndsAt">9085</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="56" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9090</value><value key="EndsAt">9211</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="57" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9216</value><value key="EndsAt">9545</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="58" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9550</value><value key="EndsAt">10024</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="59" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10031</value><value key="EndsAt">10191</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="60" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10196</value><value key="EndsAt">10657</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="61" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10664</value><value key="EndsAt">10910</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="62" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10915</value><value key="EndsAt">12156</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="63" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12163</value><value key="EndsAt">12355</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="64" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12360</value><value key="EndsAt">13201</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="65" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13208</value><value key="EndsAt">13623</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="66" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13628</value><value key="EndsAt">14395</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="67" type="LocationDetails" purpose="Location"><props><value key="StartsAt">14402</value><value key="EndsAt">14683</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="68" type="LocationDetails" purpose="Location"><props><value key="StartsAt">14688</value><value key="EndsAt">15036</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="69" type="LocationDetails" purpose="Location"><props><value key="StartsAt">15043</value><value key="EndsAt">15268</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="70" type="LocationDetails" purpose="Location"><props><value key="StartsAt">15273</value><value key="EndsAt">15485</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="71" type="LocationDetails" purpose="Location"><props><value key="StartsAt">15485</value><value key="EndsAt">15535</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="72" type="LocationDetails" purpose="Location"><props><value key="StartsAt">15535</value><value key="EndsAt">15603</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="73" type="LocationDetails" purpose="Location"><props><value key="StartsAt">15609</value><value key="EndsAt">15770</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="74" type="LocationDetails" purpose="Location"><props><value key="StartsAt">15775</value><value key="EndsAt">16786</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="75" type="LocationDetails" purpose="Location"><props><value key="StartsAt">16793</value><value key="EndsAt">17074</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="76" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17079</value><value key="EndsAt">17517</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="77" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17522</value><value key="EndsAt">17708</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="78" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17713</value><value key="EndsAt">18749</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="79" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18756</value><value key="EndsAt">19092</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="80" type="LocationDetails" purpose="Location"><props><value key="StartsAt">19097</value><value key="EndsAt">20150</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="81" type="LocationDetails" purpose="Location"><props><value key="StartsAt">20157</value><value key="EndsAt">20434</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="82" type="LocationDetails" purpose="Location"><props><value key="StartsAt">20439</value><value key="EndsAt">21105</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="83" type="LocationDetails" purpose="Location"><props><value key="StartsAt">21112</value><value key="EndsAt">21280</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="84" type="LocationDetails" purpose="Location"><props><value key="StartsAt">21285</value><value key="EndsAt">22309</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="85" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22316</value><value key="EndsAt">22618</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="86" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22623</value><value key="EndsAt">22682</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="87" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22687</value><value key="EndsAt">25368</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="88" type="LocationDetails" purpose="Location"><props><value key="StartsAt">25375</value><value key="EndsAt">25693</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="89" type="LocationDetails" purpose="Location"><props><value key="StartsAt">25698</value><value key="EndsAt">26086</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="90" type="LocationDetails" purpose="Location"><props><value key="StartsAt">26091</value><value key="EndsAt">26338</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="91" type="LocationDetails" purpose="Location"><props><value key="StartsAt">26343</value><value key="EndsAt">26792</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="92" type="LocationDetails" purpose="Location"><props><value key="StartsAt">26799</value><value key="EndsAt">27069</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="93" type="LocationDetails" purpose="Location"><props><value key="StartsAt">27074</value><value key="EndsAt">27130</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="94" type="LocationDetails" purpose="Location"><props><value key="StartsAt">27130</value><value key="EndsAt">27178</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="95" type="LocationDetails" purpose="Location"><props><value key="StartsAt">27178</value><value key="EndsAt">27242</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="96" type="LocationDetails" purpose="Location"><props><value key="StartsAt">27248</value><value key="EndsAt">27562</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="97" type="LocationDetails" purpose="Location"><props><value key="StartsAt">27567</value><value key="EndsAt">28624</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="98" type="LocationDetails" purpose="Location"><props><value key="StartsAt">28631</value><value key="EndsAt">29133</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="99" type="LocationDetails" purpose="Location"><props><value key="StartsAt">29138</value><value key="EndsAt">29174</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="100" type="LocationDetails" purpose="Location"><props><value key="StartsAt">29179</value><value key="EndsAt">29798</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="101" type="LocationDetails" purpose="Location"><props><value key="StartsAt">29805</value><value key="EndsAt">30358</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="102" type="LocationDetails" purpose="Location"><props><value key="StartsAt">30363</value><value key="EndsAt">30552</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="103" type="LocationDetails" purpose="Location"><props><value key="StartsAt">30557</value><value key="EndsAt">31006</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="104" type="LocationDetails" purpose="Location"><props><value key="StartsAt">31013</value><value key="EndsAt">31083</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="105" type="LocationDetails" purpose="Location"><props><value key="StartsAt">31088</value><value key="EndsAt">34146</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="106" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34153</value><value key="EndsAt">34544</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="107" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34549</value><value key="EndsAt">34635</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="108" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34635</value><value key="EndsAt">34685</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="109" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34685</value><value key="EndsAt">34753</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="110" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34759</value><value key="EndsAt">34976</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="111" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34981</value><value key="EndsAt">35801</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="112" type="LocationDetails" purpose="Location"><props><value key="StartsAt">35808</value><value key="EndsAt">36049</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="113" type="LocationDetails" purpose="Location"><props><value key="StartsAt">36054</value><value key="EndsAt">36216</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="114" type="LocationDetails" purpose="Location"><props><value key="StartsAt">36221</value><value key="EndsAt">36418</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="115" type="LocationDetails" purpose="Location"><props><value key="StartsAt">36423</value><value key="EndsAt">36773</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="116" type="LocationDetails" purpose="Location"><props><value key="StartsAt">36780</value><value key="EndsAt">37144</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="117" type="LocationDetails" purpose="Location"><props><value key="StartsAt">37149</value><value key="EndsAt">37252</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="118" type="LocationDetails" purpose="Location"><props><value key="StartsAt">37257</value><value key="EndsAt">37578</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="119" type="LocationDetails" purpose="Location"><props><value key="StartsAt">37585</value><value key="EndsAt">37828</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="120" type="LocationDetails" purpose="Location"><props><value key="StartsAt">37833</value><value key="EndsAt">39704</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="121" type="LocationDetails" purpose="Location"><props><value key="StartsAt">39711</value><value key="EndsAt">39815</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="122" type="LocationDetails" purpose="Location"><props><value key="StartsAt">39820</value><value key="EndsAt">39969</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="123" type="LocationDetails" purpose="Location"><props><value key="StartsAt">39979</value><value key="EndsAt">40216</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="124" type="LocationDetails" purpose="Location"><props><value key="StartsAt">40222</value><value key="EndsAt">40474</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="125" type="LocationDetails" purpose="Location"><props><value key="StartsAt">40480</value><value key="EndsAt">40724</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="126" type="LocationDetails" purpose="Location"><props><value key="StartsAt">40736</value><value key="EndsAt">40882</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="127" type="LocationDetails" purpose="Location"><props><value key="StartsAt">40887</value><value key="EndsAt">42928</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="128" type="LocationDetails" purpose="Location"><props><value key="StartsAt">42935</value><value key="EndsAt">43508</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="129" type="LocationDetails" purpose="Location"><props><value key="StartsAt">43513</value><value key="EndsAt">43894</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="130" type="LocationDetails" purpose="Location"><props><value key="StartsAt">43899</value><value key="EndsAt">44026</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="131" type="LocationDetails" purpose="Location"><props><value key="StartsAt">44031</value><value key="EndsAt">44824</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="132" type="LocationDetails" purpose="Location"><props><value key="StartsAt">44831</value><value key="EndsAt">45227</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="133" type="LocationDetails" purpose="Location"><props><value key="StartsAt">45232</value><value key="EndsAt">45293</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="134" type="LocationDetails" purpose="Location"><props><value key="StartsAt">45298</value><value key="EndsAt">46415</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="135" type="LocationDetails" purpose="Location"><props><value key="StartsAt">46422</value><value key="EndsAt">46838</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="136" type="LocationDetails" purpose="Location"><props><value key="StartsAt">46843</value><value key="EndsAt">46939</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="137" type="LocationDetails" purpose="Location"><props><value key="StartsAt">46944</value><value key="EndsAt">49476</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="138" type="LocationDetails" purpose="Location"><props><value key="StartsAt">49483</value><value key="EndsAt">49845</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="139" type="LocationDetails" purpose="Location"><props><value key="StartsAt">49850</value><value key="EndsAt">54059</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="140" type="LocationDetails" purpose="Location"><props><value key="StartsAt">54066</value><value key="EndsAt">54388</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="141" type="LocationDetails" purpose="Location"><props><value key="StartsAt">54398</value><value key="EndsAt">54484</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="142" type="LocationDetails" purpose="Location"><props><value key="StartsAt">54490</value><value key="EndsAt">54587</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="143" type="LocationDetails" purpose="Location"><props><value key="StartsAt">54593</value><value key="EndsAt">54682</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="144" type="LocationDetails" purpose="Location"><props><value key="StartsAt">54688</value><value key="EndsAt">54777</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="145" type="LocationDetails" purpose="Location"><props><value key="StartsAt">54783</value><value key="EndsAt">54900</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="146" type="LocationDetails" purpose="Location"><props><value key="StartsAt">54912</value><value key="EndsAt">55052</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="147" type="LocationDetails" purpose="Location"><props><value key="StartsAt">55057</value><value key="EndsAt">55420</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="148" type="LocationDetails" purpose="Location"><props><value key="StartsAt">55425</value><value key="EndsAt">57745</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="149" type="LocationDetails" purpose="Location"><props><value key="StartsAt">57752</value><value key="EndsAt">58119</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="150" type="LocationDetails" purpose="Location"><props><value key="StartsAt">58124</value><value key="EndsAt">58454</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="151" type="LocationDetails" purpose="Location"><props><value key="StartsAt">58459</value><value key="EndsAt">58588</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="152" type="LocationDetails" purpose="Location"><props><value key="StartsAt">58593</value><value key="EndsAt">59696</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="153" type="LocationDetails" purpose="Location"><props><value key="StartsAt">59703</value><value key="EndsAt">60008</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="154" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60018</value><value key="EndsAt">60099</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="155" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60105</value><value key="EndsAt">60248</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="156" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60254</value><value key="EndsAt">60448</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="157" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60460</value><value key="EndsAt">64279</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="158" type="LocationDetails" purpose="Location"><props><value key="StartsAt">64286</value><value key="EndsAt">64783</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="159" type="LocationDetails" purpose="Location"><props><value key="StartsAt">64788</value><value key="EndsAt">64948</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="160" type="LocationDetails" purpose="Location"><props><value key="StartsAt">64953</value><value key="EndsAt">65767</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="161" type="LocationDetails" purpose="Location"><props><value key="StartsAt">65774</value><value key="EndsAt">66210</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="162" type="LocationDetails" purpose="Location"><props><value key="StartsAt">66215</value><value key="EndsAt">66357</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="163" type="LocationDetails" purpose="Location"><props><value key="StartsAt">66362</value><value key="EndsAt">69588</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="164" type="LocationDetails" purpose="Location"><props><value key="StartsAt">69595</value><value key="EndsAt">70041</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="165" type="LocationDetails" purpose="Location"><props><value key="StartsAt">70046</value><value key="EndsAt">70118</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="166" type="LocationDetails" purpose="Location"><props><value key="StartsAt">70123</value><value key="EndsAt">72339</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="167" type="LocationDetails" purpose="Location"><props><value key="StartsAt">72346</value><value key="EndsAt">72621</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="168" type="LocationDetails" purpose="Location"><props><value key="StartsAt">72626</value><value key="EndsAt">72850</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="169" type="LocationDetails" purpose="Location"><props><value key="StartsAt">72855</value><value key="EndsAt">73111</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="170" type="LocationDetails" purpose="Location"><props><value key="StartsAt">73116</value><value key="EndsAt">77721</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="171" type="LocationDetails" purpose="Location"><props><value key="StartsAt">77728</value><value key="EndsAt">78035</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="172" type="LocationDetails" purpose="Location"><props><value key="StartsAt">78040</value><value key="EndsAt">80720</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="173" type="LocationDetails" purpose="Location"><props><value key="StartsAt">80727</value><value key="EndsAt">81255</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="174" type="LocationDetails" purpose="Location"><props><value key="StartsAt">81260</value><value key="EndsAt">82223</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="175" type="LocationDetails" purpose="Location"><props><value key="StartsAt">82230</value><value key="EndsAt">82668</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="176" type="LocationDetails" purpose="Location"><props><value key="StartsAt">82673</value><value key="EndsAt">82765</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="177" type="LocationDetails" purpose="Location"><props><value key="StartsAt">82770</value><value key="EndsAt">83937</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="178" type="LocationDetails" purpose="Location"><props><value key="StartsAt">83944</value><value key="EndsAt">84096</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="179" type="LocationDetails" purpose="Location"><props><value key="StartsAt">84101</value><value key="EndsAt">85261</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="180" type="LocationDetails" purpose="Location"><props><value key="StartsAt">85268</value><value key="EndsAt">85315</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="181" type="LocationDetails" purpose="Location"><props><value key="StartsAt">85325</value><value key="EndsAt">85403</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="182" type="LocationDetails" purpose="Location"><props><value key="StartsAt">85409</value><value key="EndsAt">85545</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="183" type="LocationDetails" purpose="Location"><props><value key="StartsAt">85551</value><value key="EndsAt">85842</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="184" type="LocationDetails" purpose="Location"><props><value key="StartsAt">85848</value><value key="EndsAt">86011</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="185" type="LocationDetails" purpose="Location"><props><value key="StartsAt">86017</value><value key="EndsAt">86074</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="186" type="LocationDetails" purpose="Location"><props><value key="StartsAt">86080</value><value key="EndsAt">86153</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="187" type="LocationDetails" purpose="Location"><props><value key="StartsAt">86165</value><value key="EndsAt">86203</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="188" type="LocationDetails" purpose="Location"><props><value key="StartsAt">86208</value><value key="EndsAt">86708</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="189" type="LocationDetails" purpose="Location"><props><value key="StartsAt">86715</value><value key="EndsAt">86973</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="190" type="LocationDetails" purpose="Location"><props><value key="StartsAt">86978</value><value key="EndsAt">87188</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="191" type="LocationDetails" purpose="Location"><props><value key="StartsAt">87188</value><value key="EndsAt">87226</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="192" type="LocationDetails" purpose="Location"><props><value key="StartsAt">87226</value><value key="EndsAt">87272</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="193" type="LocationDetails" purpose="Location"><props><value key="StartsAt">87278</value><value key="EndsAt">87962</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="194" type="LocationDetails" purpose="Location"><props><value key="StartsAt">87969</value><value key="EndsAt">88278</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="195" type="LocationDetails" purpose="Location"><props><value key="StartsAt">88283</value><value key="EndsAt">88380</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="196" type="LocationDetails" purpose="Location"><props><value key="StartsAt">88380</value><value key="EndsAt">88418</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="197" type="LocationDetails" purpose="Location"><props><value key="StartsAt">88418</value><value key="EndsAt">88462</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="198" type="LocationDetails" purpose="Location"><props><value key="StartsAt">88468</value><value key="EndsAt">88606</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="199" type="LocationDetails" purpose="Location"><props><value key="StartsAt">88611</value><value key="EndsAt">88947</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="200" type="LocationDetails" purpose="Location"><props><value key="StartsAt">88952</value><value key="EndsAt">89071</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="201" type="LocationDetails" purpose="Location"><props><value key="StartsAt">89076</value><value key="EndsAt">89085</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="202" type="LocationDetails" purpose="Location"><props><value key="StartsAt">89095</value><value key="EndsAt">89213</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="203" type="LocationDetails" purpose="Location"><props><value key="StartsAt">89219</value><value key="EndsAt">89333</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="204" type="LocationDetails" purpose="Location"><props><value key="StartsAt">89339</value><value key="EndsAt">89439</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="205" type="LocationDetails" purpose="Location"><props><value key="StartsAt">89445</value><value key="EndsAt">89563</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="206" type="LocationDetails" purpose="Location"><props><value key="StartsAt">89569</value><value key="EndsAt">89683</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="207" type="LocationDetails" purpose="Location"><props><value key="StartsAt">89689</value><value key="EndsAt">89809</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="208" type="LocationDetails" purpose="Location"><props><value key="StartsAt">89815</value><value key="EndsAt">89931</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="209" type="LocationDetails" purpose="Location"><props><value key="StartsAt">89937</value><value key="EndsAt">90051</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="210" type="LocationDetails" purpose="Location"><props><value key="StartsAt">90057</value><value key="EndsAt">90167</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="211" type="LocationDetails" purpose="Location"><props><value key="StartsAt">90173</value><value key="EndsAt">90275</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="212" type="LocationDetails" purpose="Location"><props><value key="StartsAt">90281</value><value key="EndsAt">90399</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="213" type="LocationDetails" purpose="Location"><props><value key="StartsAt">90405</value><value key="EndsAt">90523</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="214" type="LocationDetails" purpose="Location"><props><value key="StartsAt">90535</value><value key="EndsAt">90545</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="215" type="LocationDetails" purpose="Location"><props><value key="StartsAt">90555</value><value key="EndsAt">90696</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="216" type="LocationDetails" purpose="Location"><props><value key="StartsAt">90702</value><value key="EndsAt">90851</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="217" type="LocationDetails" purpose="Location"><props><value key="StartsAt">90857</value><value key="EndsAt">91006</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="218" type="LocationDetails" purpose="Location"><props><value key="StartsAt">91012</value><value key="EndsAt">91159</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="219" type="LocationDetails" purpose="Location"><props><value key="StartsAt">91165</value><value key="EndsAt">91306</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="220" type="LocationDetails" purpose="Location"><props><value key="StartsAt">91312</value><value key="EndsAt">91455</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="221" type="LocationDetails" purpose="Location"><props><value key="StartsAt">91461</value><value key="EndsAt">91608</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="222" type="LocationDetails" purpose="Location"><props><value key="StartsAt">91614</value><value key="EndsAt">91767</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="223" type="LocationDetails" purpose="Location"><props><value key="StartsAt">91773</value><value key="EndsAt">91908</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="224" type="LocationDetails" purpose="Location"><props><value key="StartsAt">91920</value><value key="EndsAt">91973</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="225" type="LocationDetails" purpose="Location"><props><value key="StartsAt">92052</value><value key="EndsAt">92085</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="226" type="LocationDetails" purpose="Location"><props><value key="StartsAt">92085</value><value key="EndsAt">92623</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def></cxt-defs><node-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><node-def id="1" parent="2"><cxt id="3"/></node-def><node-def id="2"><cxt id="4"/></node-def><node-def id="3" parent="1"><cxt id="3"/></node-def><node-def id="4" parent="3"><cxt id="6"/></node-def><node-def id="5" parent="6"><cxt id="9"/></node-def><node-def id="6" parent="7"><cxt id="10"/></node-def><node-def id="7" parent="8"><cxt id="11"/></node-def><node-def id="8" parent="9"><cxt id="11"/></node-def><node-def id="9" parent="10"><cxt id="11"/></node-def><node-def id="10" parent="11"><cxt id="11"/></node-def><node-def id="11" parent="12"><cxt id="12"/></node-def><node-def id="12" parent="3"><cxt id="13"/></node-def><node-def id="13" parent="5"><cxt id="8"/></node-def><node-def id="14" parent="5"><cxt id="8"/></node-def><node-def id="15" parent="5"><cxt id="8"/></node-def><node-def id="16" parent="17"><cxt id="9"/></node-def><node-def id="17" parent="7"><cxt id="10"/></node-def><node-def id="18" parent="16"><cxt id="8"/></node-def><node-def id="19" parent="20"><cxt id="11"/></node-def><node-def id="20" parent="21"><cxt id="11"/></node-def><node-def id="21" parent="22"><cxt id="11"/></node-def><node-def id="22" parent="23"><cxt id="11"/></node-def><node-def id="23" parent="9"><cxt id="11"/></node-def><node-def id="24" parent="19"><cxt id="18"/></node-def><node-def id="25" parent="19"><cxt id="21"/></node-def><node-def id="26" parent="25"><cxt id="20"/></node-def><node-def id="27" parent="25"><cxt id="20"/></node-def><node-def id="28" parent="25"><cxt id="20"/></node-def><node-def id="29" parent="25"><cxt id="20"/></node-def><node-def id="30" parent="25"><cxt id="20"/></node-def><node-def id="31" parent="25"><cxt id="20"/></node-def><node-def id="32" parent="21"><cxt id="18"/></node-def><node-def id="33" parent="21"><cxt id="11"/></node-def><node-def id="34" parent="33"><cxt id="31"/></node-def><node-def id="35" parent="33"><cxt id="31"/></node-def><node-def id="36" parent="33"><cxt id="31"/></node-def><node-def id="37" parent="33"><cxt id="31"/></node-def><node-def id="38" parent="33"><cxt id="31"/></node-def><node-def id="39" parent="33"><cxt id="18"/></node-def><node-def id="40" parent="33"><cxt id="31"/></node-def><node-def id="41" parent="33"><cxt id="31"/></node-def><node-def id="42" parent="33"><cxt id="42"/></node-def><node-def id="43" parent="33"><cxt id="31"/></node-def><node-def id="44" parent="33"><cxt id="31"/></node-def><node-def id="45" parent="33"><cxt id="31"/></node-def><node-def id="46" parent="33"><cxt id="42"/></node-def><node-def id="47" parent="33"><cxt id="31"/></node-def><node-def id="48" parent="33"><cxt id="21"/></node-def><node-def id="49" parent="48"><cxt id="20"/></node-def><node-def id="50" parent="48"><cxt id="20"/></node-def><node-def id="51" parent="48"><cxt id="20"/></node-def><node-def id="52" parent="48"><cxt id="20"/></node-def><node-def id="53" parent="48"><cxt id="20"/></node-def><node-def id="54" parent="33"><cxt id="31"/></node-def><node-def id="55" parent="33"><cxt id="42"/></node-def><node-def id="56" parent="33"><cxt id="31"/></node-def><node-def id="57" parent="33"><cxt id="31"/></node-def><node-def id="58" parent="33"><cxt id="31"/></node-def><node-def id="59" parent="33"><cxt id="42"/></node-def><node-def id="60" parent="33"><cxt id="31"/></node-def><node-def id="61" parent="33"><cxt id="42"/></node-def><node-def id="62" parent="33"><cxt id="31"/></node-def><node-def id="63" parent="33"><cxt id="42"/></node-def><node-def id="64" parent="33"><cxt id="31"/></node-def><node-def id="65" parent="33"><cxt id="42"/></node-def><node-def id="66" parent="33"><cxt id="31"/></node-def><node-def id="67" parent="33"><cxt id="42"/></node-def><node-def id="68" parent="33"><cxt id="31"/></node-def><node-def id="69" parent="33"><cxt id="42"/></node-def><node-def id="70" parent="33"><cxt id="31"/></node-def><node-def id="71" parent="33"><cxt id="31"/></node-def><node-def id="72" parent="33"><cxt id="18"/></node-def><node-def id="73" parent="33"><cxt id="31"/></node-def><node-def id="74" parent="33"><cxt id="42"/></node-def><node-def id="75" parent="33"><cxt id="31"/></node-def><node-def id="76" parent="33"><cxt id="31"/></node-def><node-def id="77" parent="33"><cxt id="31"/></node-def><node-def id="78" parent="33"><cxt id="42"/></node-def><node-def id="79" parent="33"><cxt id="31"/></node-def><node-def id="80" parent="33"><cxt id="42"/></node-def><node-def id="81" parent="33"><cxt id="31"/></node-def><node-def id="82" parent="33"><cxt id="42"/></node-def><node-def id="83" parent="33"><cxt id="31"/></node-def><node-def id="84" parent="33"><cxt id="42"/></node-def><node-def id="85" parent="33"><cxt id="31"/></node-def><node-def id="86" parent="33"><cxt id="31"/></node-def><node-def id="87" parent="33"><cxt id="42"/></node-def><node-def id="88" parent="33"><cxt id="31"/></node-def><node-def id="89" parent="33"><cxt id="31"/></node-def><node-def id="90" parent="33"><cxt id="31"/></node-def><node-def id="91" parent="33"><cxt id="42"/></node-def><node-def id="92" parent="33"><cxt id="31"/></node-def><node-def id="93" parent="33"><cxt id="31"/></node-def><node-def id="94" parent="33"><cxt id="18"/></node-def><node-def id="95" parent="33"><cxt id="31"/></node-def><node-def id="96" parent="33"><cxt id="42"/></node-def><node-def id="97" parent="33"><cxt id="31"/></node-def><node-def id="98" parent="33"><cxt id="31"/></node-def><node-def id="99" parent="33"><cxt id="42"/></node-def><node-def id="100" parent="33"><cxt id="31"/></node-def><node-def id="101" parent="33"><cxt id="31"/></node-def><node-def id="102" parent="33"><cxt id="42"/></node-def><node-def id="103" parent="33"><cxt id="31"/></node-def><node-def id="104" parent="33"><cxt id="42"/></node-def><node-def id="105" parent="33"><cxt id="31"/></node-def><node-def id="106" parent="33"><cxt id="31"/></node-def><node-def id="107" parent="33"><cxt id="18"/></node-def><node-def id="108" parent="33"><cxt id="31"/></node-def><node-def id="109" parent="33"><cxt id="42"/></node-def><node-def id="110" parent="33"><cxt id="31"/></node-def><node-def id="111" parent="33"><cxt id="31"/></node-def><node-def id="112" parent="33"><cxt id="31"/></node-def><node-def id="113" parent="33"><cxt id="42"/></node-def><node-def id="114" parent="33"><cxt id="31"/></node-def><node-def id="115" parent="33"><cxt id="31"/></node-def><node-def id="116" parent="33"><cxt id="42"/></node-def><node-def id="117" parent="33"><cxt id="31"/></node-def><node-def id="118" parent="33"><cxt id="42"/></node-def><node-def id="119" parent="33"><cxt id="31"/></node-def><node-def id="120" parent="33"><cxt id="31"/></node-def><node-def id="121" parent="33"><cxt id="21"/></node-def><node-def id="122" parent="121"><cxt id="20"/></node-def><node-def id="123" parent="121"><cxt id="20"/></node-def><node-def id="124" parent="121"><cxt id="20"/></node-def><node-def id="125" parent="33"><cxt id="31"/></node-def><node-def id="126" parent="33"><cxt id="42"/></node-def><node-def id="127" parent="33"><cxt id="31"/></node-def><node-def id="128" parent="33"><cxt id="31"/></node-def><node-def id="129" parent="33"><cxt id="31"/></node-def><node-def id="130" parent="33"><cxt id="42"/></node-def><node-def id="131" parent="33"><cxt id="31"/></node-def><node-def id="132" parent="33"><cxt id="31"/></node-def><node-def id="133" parent="33"><cxt id="42"/></node-def><node-def id="134" parent="33"><cxt id="31"/></node-def><node-def id="135" parent="33"><cxt id="31"/></node-def><node-def id="136" parent="33"><cxt id="42"/></node-def><node-def id="137" parent="33"><cxt id="31"/></node-def><node-def id="138" parent="33"><cxt id="42"/></node-def><node-def id="139" parent="33"><cxt id="31"/></node-def><node-def id="140" parent="33"><cxt id="21"/></node-def><node-def id="141" parent="140"><cxt id="20"/></node-def><node-def id="142" parent="140"><cxt id="20"/></node-def><node-def id="143" parent="140"><cxt id="20"/></node-def><node-def id="144" parent="140"><cxt id="20"/></node-def><node-def id="145" parent="140"><cxt id="20"/></node-def><node-def id="146" parent="33"><cxt id="31"/></node-def><node-def id="147" parent="33"><cxt id="31"/></node-def><node-def id="148" parent="33"><cxt id="42"/></node-def><node-def id="149" parent="33"><cxt id="31"/></node-def><node-def id="150" parent="33"><cxt id="31"/></node-def><node-def id="151" parent="33"><cxt id="31"/></node-def><node-def id="152" parent="33"><cxt id="42"/></node-def><node-def id="153" parent="33"><cxt id="31"/></node-def><node-def id="154" parent="33"><cxt id="21"/></node-def><node-def id="155" parent="154"><cxt id="20"/></node-def><node-def id="156" parent="154"><cxt id="20"/></node-def><node-def id="157" parent="154"><cxt id="20"/></node-def><node-def id="158" parent="33"><cxt id="42"/></node-def><node-def id="159" parent="33"><cxt id="31"/></node-def><node-def id="160" parent="33"><cxt id="31"/></node-def><node-def id="161" parent="33"><cxt id="42"/></node-def><node-def id="162" parent="33"><cxt id="31"/></node-def><node-def id="163" parent="33"><cxt id="31"/></node-def><node-def id="164" parent="33"><cxt id="42"/></node-def><node-def id="165" parent="33"><cxt id="31"/></node-def><node-def id="166" parent="33"><cxt id="31"/></node-def><node-def id="167" parent="33"><cxt id="42"/></node-def><node-def id="168" parent="33"><cxt id="31"/></node-def><node-def id="169" parent="33"><cxt id="31"/></node-def><node-def id="170" parent="33"><cxt id="31"/></node-def><node-def id="171" parent="33"><cxt id="42"/></node-def><node-def id="172" parent="33"><cxt id="31"/></node-def><node-def id="173" parent="33"><cxt id="42"/></node-def><node-def id="174" parent="33"><cxt id="31"/></node-def><node-def id="175" parent="33"><cxt id="42"/></node-def><node-def id="176" parent="33"><cxt id="31"/></node-def><node-def id="177" parent="33"><cxt id="31"/></node-def><node-def id="178" parent="33"><cxt id="42"/></node-def><node-def id="179" parent="33"><cxt id="31"/></node-def><node-def id="180" parent="33"><cxt id="42"/></node-def><node-def id="181" parent="33"><cxt id="31"/></node-def><node-def id="182" parent="33"><cxt id="21"/></node-def><node-def id="183" parent="182"><cxt id="20"/></node-def><node-def id="184" parent="182"><cxt id="20"/></node-def><node-def id="185" parent="182"><cxt id="20"/></node-def><node-def id="186" parent="182"><cxt id="20"/></node-def><node-def id="187" parent="182"><cxt id="20"/></node-def><node-def id="188" parent="182"><cxt id="20"/></node-def><node-def id="189" parent="33"><cxt id="31"/></node-def><node-def id="190" parent="33"><cxt id="42"/></node-def><node-def id="191" parent="33"><cxt id="31"/></node-def><node-def id="192" parent="33"><cxt id="31"/></node-def><node-def id="193" parent="33"><cxt id="18"/></node-def><node-def id="194" parent="33"><cxt id="42"/></node-def><node-def id="195" parent="33"><cxt id="31"/></node-def><node-def id="196" parent="33"><cxt id="31"/></node-def><node-def id="197" parent="33"><cxt id="18"/></node-def><node-def id="198" parent="33"><cxt id="31"/></node-def><node-def id="199" parent="33"><cxt id="31"/></node-def><node-def id="200" parent="33"><cxt id="31"/></node-def><node-def id="201" parent="33"><cxt id="31"/></node-def><node-def id="202" parent="33"><cxt id="21"/></node-def><node-def id="203" parent="202"><cxt id="20"/></node-def><node-def id="204" parent="202"><cxt id="20"/></node-def><node-def id="205" parent="202"><cxt id="20"/></node-def><node-def id="206" parent="202"><cxt id="20"/></node-def><node-def id="207" parent="202"><cxt id="20"/></node-def><node-def id="208" parent="202"><cxt id="20"/></node-def><node-def id="209" parent="202"><cxt id="20"/></node-def><node-def id="210" parent="202"><cxt id="20"/></node-def><node-def id="211" parent="202"><cxt id="20"/></node-def><node-def id="212" parent="202"><cxt id="20"/></node-def><node-def id="213" parent="202"><cxt id="20"/></node-def><node-def id="214" parent="202"><cxt id="20"/></node-def><node-def id="215" parent="33"><cxt id="31"/></node-def><node-def id="216" parent="33"><cxt id="21"/></node-def><node-def id="217" parent="216"><cxt id="20"/></node-def><node-def id="218" parent="216"><cxt id="20"/></node-def><node-def id="219" parent="216"><cxt id="20"/></node-def><node-def id="220" parent="216"><cxt id="20"/></node-def><node-def id="221" parent="216"><cxt id="20"/></node-def><node-def id="222" parent="216"><cxt id="20"/></node-def><node-def id="223" parent="216"><cxt id="20"/></node-def><node-def id="224" parent="216"><cxt id="20"/></node-def><node-def id="225" parent="216"><cxt id="20"/></node-def><node-def id="226" parent="11"><cxt id="11"/></node-def><node-def id="227" parent="226"><cxt id="31"/></node-def></node-defs><tag-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><tag id="4"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdoc/supported-platforms-and-configurations.html#qt-5-7&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="7"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-index.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="10"><bpt name="a" word-end="false">&lt;a name=&quot;toc&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="13"><bpt name="a" word-end="false">&lt;a href=&quot;#roundrectitem-class-definition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="16"><bpt name="a" word-end="false">&lt;a href=&quot;#flippablepad-class-definition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="19"><bpt name="a" word-end="false">&lt;a href=&quot;#splashitem-class-definition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="22"><bpt name="a" word-end="false">&lt;a href=&quot;#padnavigator-class-definition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="25"><bpt name="a" word-end="false">&lt;a href=&quot;#the-main-function&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="28"><bpt name="a" word-end="false">&lt;a href=&quot;#performance-notes&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="31"><bpt name="span" word-end="false">&lt;span class=&quot;subtitle&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="35"><bpt name="a" word-end="false">&lt;a name=&quot;details&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="38"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/statemachine-api.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="42"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsproxywidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="45"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsscene.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="48"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="51"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsview.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="54"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="57"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="60"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="63"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="66"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="69"><bpt name="a" word-end="false">&lt;a name=&quot;roundrectitem-class-definition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="72"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="75"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="78"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="81"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="84"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="87"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="90"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="93"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="96"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="99"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="102"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="105"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="108"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="111"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="114"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="117"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="120"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="123"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="126"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="129"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="132"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="135"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="138"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="141"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="144"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="147"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="150"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="153"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="156"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="159"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="162"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="165"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="168"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="171"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="174"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="177"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="180"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="183"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="186"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="189"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="192"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="195"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="198"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="201"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="204"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qpropertyanimation.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="207"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#paint&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="210"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#boundingRect&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="213"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="216"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="219"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="222"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="225"><bpt name="a" word-end="false">&lt;a href=&quot;../qtgui/qpalette.html#ColorRole-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="228"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="231"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="234"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="237"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="240"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="243"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="246"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="249"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="252"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="255"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="258"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="261"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="264"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="267"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="270"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="273"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="276"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="279"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="282"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="285"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="288"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="291"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="294"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="297"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="300"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="303"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="306"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="309"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="312"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="315"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="318"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="321"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="324"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="327"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="330"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="333"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="336"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="339"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="342"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="345"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="348"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="351"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#paint&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="354"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#CacheMode-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="357"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="360"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="363"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="366"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="369"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="372"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="375"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="378"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="381"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="384"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="387"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="390"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#update&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="393"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="396"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="399"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="402"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="405"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="408"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="411"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="414"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="417"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="420"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="423"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="426"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="429"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#paint&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="432"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#boundingRect&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="435"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="438"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="441"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="444"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="447"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="450"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="453"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="456"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="459"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="462"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="465"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="468"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="471"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="474"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="477"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="480"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="483"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="486"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="489"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="492"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="495"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="498"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="501"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="504"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="507"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="510"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="513"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="516"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="519"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="522"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="525"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="528"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#paint&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="531"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="534"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="537"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="540"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="543"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="546"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="549"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="552"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="555"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="558"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="561"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="564"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="567"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="570"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="573"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="576"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="579"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="582"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="585"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="588"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="591"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="594"><bpt name="a" word-end="false">&lt;a href=&quot;../qtgui/qpalette.html#ColorRole-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="597"><bpt name="a" word-end="false">&lt;a href=&quot;qapplication.html#palette&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="600"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="603"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="606"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="609"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="612"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="615"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="618"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="621"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="624"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="627"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="630"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="633"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="636"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="639"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="642"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="645"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="648"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="651"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="654"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="657"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="660"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="663"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="666"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="669"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="672"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="675"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="678"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="681"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="684"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="687"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#update&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="690"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="693"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="696"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="699"><bpt name="a" word-end="false">&lt;a name=&quot;flippablepad-class-definition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="702"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="705"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="708"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="711"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="714"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="717"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="720"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="723"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="726"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="729"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="732"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="735"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="738"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="741"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="744"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="747"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="750"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="753"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="756"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="759"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="762"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="765"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="768"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="771"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="774"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="777"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="780"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="783"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="786"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="789"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="792"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="795"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="798"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="801"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="804"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="807"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="810"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="813"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="816"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="819"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="822"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="825"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="828"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="831"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="834"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="837"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="840"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="843"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="846"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="849"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="852"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="855"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="858"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="861"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="864"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="867"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="870"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="873"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="876"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="879"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="882"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="885"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="888"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="891"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="894"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qsize.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="897"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qsize.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="900"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="903"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="906"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="909"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="912"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="915"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="918"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="921"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="924"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="927"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="930"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="933"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="936"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="939"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="942"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="945"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="948"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="951"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="954"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="957"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="960"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="963"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="966"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="969"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="972"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="975"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="978"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="981"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="984"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="987"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="990"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="993"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="996"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="999"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1002"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1005"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1008"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1011"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1014"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1017"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1020"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1023"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1026"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1029"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1032"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1035"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1038"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1041"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1044"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1047"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1050"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1053"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1056"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1059"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1062"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1065"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1068"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1071"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1074"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1077"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1080"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1083"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1086"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1089"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1092"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1095"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1098"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1101"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1104"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1107"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1110"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1113"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1116"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1119"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1122"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1125"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1128"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qdiriterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1131"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1134"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1137"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1140"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1143"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1146"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1149"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1152"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1155"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1158"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1161"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1164"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1167"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1170"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1173"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1176"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1179"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1182"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1185"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1188"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1191"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1194"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1197"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1200"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1203"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1206"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1209"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1212"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1215"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1218"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1221"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1224"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1227"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1230"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1233"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1236"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1239"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1242"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1245"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1248"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1251"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1254"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1257"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1260"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1263"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1266"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1269"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1272"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1275"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1278"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1281"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1284"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1287"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1290"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1293"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1296"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1299"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1302"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1305"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1308"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1311"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1314"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1317"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1320"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1323"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1326"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1329"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1332"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1335"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1338"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1341"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1344"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1347"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1350"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1353"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#zValue&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1356"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1359"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1362"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1365"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1368"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1371"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1374"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1377"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1380"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1383"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1386"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1389"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1392"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1395"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1398"><bpt name="a" word-end="false">&lt;a name=&quot;splashitem-class-definition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1401"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1404"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1407"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1410"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1413"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1416"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1419"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1422"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1425"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1428"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1431"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1434"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1437"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1440"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1443"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1446"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1449"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1452"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1455"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1458"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1461"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1464"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1467"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1470"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1473"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1476"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1479"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1482"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1485"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1488"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qpropertyanimation.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1491"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#paint&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1494"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#boundingRect&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1497"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1500"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1503"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1506"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1509"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1512"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1515"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value><value key="SDL:AutoCloned">True</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1518"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1521"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value><value key="SDL:AutoCloned">True</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1524"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1527"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1530"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#CacheMode-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1533"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#CacheMode-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1536"><bpt name="a" word-end="false">&lt;a href=&quot;../qtgui/qstatictext.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1539"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1542"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1545"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1548"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1551"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1554"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1557"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1560"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1563"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1566"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1569"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1572"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1575"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1578"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1581"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1584"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1587"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1590"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1593"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1596"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1599"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1602"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1605"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1608"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1611"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1614"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1617"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1620"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1623"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1626"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1629"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1632"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1635"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1638"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1641"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1644"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1647"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1650"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1653"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1656"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1659"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1662"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1665"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1668"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1671"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1674"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1677"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1680"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1683"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1686"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1689"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1692"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1695"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1698"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1701"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1704"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1707"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1710"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1713"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1716"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1719"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1722"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1725"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1728"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1731"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1734"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1737"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1740"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1743"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1746"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1749"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1752"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1755"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1758"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1761"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1764"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1767"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1770"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1773"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1776"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1779"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1782"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1785"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1788"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1791"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1794"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1797"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1800"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1803"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1806"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1809"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1812"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1815"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1818"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1821"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#paint&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1824"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1827"><bpt name="a" word-end="false">&lt;a name=&quot;padnavigator-class-definition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1830"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1833"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1836"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1839"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1842"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1845"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1848"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1851"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1854"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1857"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1860"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1863"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1866"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1869"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1872"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1875"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1878"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1881"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1884"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1887"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1890"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsview.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1893"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsview.html#resizeEvent&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1896"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1899"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qsize.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1902"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1905"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsproxywidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1908"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1911"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1914"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1917"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1920"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1923"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1926"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1929"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1932"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1935"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1938"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1941"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsproxywidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1944"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1947"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsview.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1950"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1953"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1956"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1959"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1962"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1965"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1968"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1971"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1974"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1977"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#zValue&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1980"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1983"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1986"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1989"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1992"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1995"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1998"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2001"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2004"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2007"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2010"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2013"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2016"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2019"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2022"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2025"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2028"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2031"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2034"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2037"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2040"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2043"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2046"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2049"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2052"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2055"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2058"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2061"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2064"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2067"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2070"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2073"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2076"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2079"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2082"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2085"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2088"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2091"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2094"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2097"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2100"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2103"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2106"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2109"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2112"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2115"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsrotation.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2118"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2121"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qt.html#Axis-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2124"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2127"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qt.html#Axis-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2130"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2133"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qt.html#Axis-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2136"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#setTransformations&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2139"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2142"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2145"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2148"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2151"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2154"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2157"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2160"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2163"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2166"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2169"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2172"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2175"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2178"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2181"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2184"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2187"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2190"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2193"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2196"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2199"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2202"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2205"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2208"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2211"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2214"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2217"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2220"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2223"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2226"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2229"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2232"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2235"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2238"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2241"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2244"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2247"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2250"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2253"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2256"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2259"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2262"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2265"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2268"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2271"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2274"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2277"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2280"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2283"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2286"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsproxywidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2289"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2292"><bpt name="a" word-end="false">&lt;a href=&quot;qwidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2295"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2298"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2301"><bpt name="a" word-end="false">&lt;a href=&quot;qwidget.html#setFocus-1&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2304"><bpt name="a" word-end="false">&lt;a href=&quot;qwidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2307"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2310"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#CacheMode-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2313"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2316"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2319"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2322"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2325"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2328"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2331"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2334"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2337"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2340"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2343"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2346"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2349"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2352"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2355"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2358"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2361"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2364"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2367"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2370"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2373"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2376"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2379"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2382"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsitem.html#zValue&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2385"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2388"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2391"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2394"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2397"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2400"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2403"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2406"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2409"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2412"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2415"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2418"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2421"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2424"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2427"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2430"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2433"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2436"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2439"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2442"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2445"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2448"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2451"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2454"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2457"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2460"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2463"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2466"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qeasingcurve.html#Type-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2469"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2472"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2475"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2478"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2481"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2484"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2487"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2490"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2493"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2496"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2499"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2502"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2505"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2508"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2511"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2514"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2517"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2520"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2523"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2526"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2529"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2532"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2535"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2538"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2541"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2544"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2547"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2550"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2553"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2556"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2559"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2562"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2565"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2568"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2571"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2574"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2577"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2580"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2583"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2586"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2589"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2592"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2595"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2598"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2601"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2604"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2607"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2610"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2613"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2616"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2619"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2622"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2625"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2628"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2631"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2634"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2637"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2640"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2643"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2646"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2649"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2652"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2655"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsrotation.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2658"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qeasingcurve.html#Type-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2661"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2664"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2667"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2670"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2673"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2676"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2679"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2682"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2685"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2688"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2691"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2694"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2697"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2700"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2703"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2706"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2709"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2712"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2715"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2718"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2721"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2724"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2727"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2730"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2733"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2736"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2739"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2742"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2745"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2748"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2751"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2754"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2757"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2760"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2763"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2766"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2769"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2772"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2775"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2778"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2781"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2784"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2787"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2790"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2793"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2796"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2799"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2802"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2805"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2808"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2811"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2814"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2817"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2820"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2823"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2826"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2829"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2832"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2835"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2838"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2841"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2844"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2847"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2850"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2853"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2856"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2859"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2862"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2865"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2868"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2871"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2874"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2877"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2880"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2883"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2886"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2889"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2892"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2895"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2898"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2901"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2904"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2907"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2910"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2913"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2916"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2919"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2922"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2925"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2928"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2931"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2934"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2937"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2940"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2943"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2946"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2949"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2952"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2955"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2958"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2961"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qeasingcurve.html#Type-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2964"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2967"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2970"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2973"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2976"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2979"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2982"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2985"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2988"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2991"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2994"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2997"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3000"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3003"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3006"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3009"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3012"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3015"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3018"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3021"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3024"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3027"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3030"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3033"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3036"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3039"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3042"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3045"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3048"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3051"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3054"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3057"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3060"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3063"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3066"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3069"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3072"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3075"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3078"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3081"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3084"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3087"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3090"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3093"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3096"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3099"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3102"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3105"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3108"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3111"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3114"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3117"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3120"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3123"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3126"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3129"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3132"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3135"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3138"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3141"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3144"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3147"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3150"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3153"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3156"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3159"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3162"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3165"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3168"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3171"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3174"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3177"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3180"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3183"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3186"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3189"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3192"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3195"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3198"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3201"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3204"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3207"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3210"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3213"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3216"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsproxywidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="3219"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3222"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3225"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3228"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3231"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3234"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3237"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3240"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3243"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3246"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3249"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3252"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3255"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3258"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3261"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3264"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3267"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3270"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3273"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3276"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3279"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3282"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3285"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3288"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3291"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3294"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3297"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3300"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3303"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3306"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3309"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3312"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3315"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3318"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3321"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3324"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3327"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3330"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3333"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3336"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3339"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3342"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3345"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3348"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3351"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3354"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3357"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3360"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3363"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3366"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3369"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3372"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3375"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3378"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3381"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3384"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3387"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3390"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3393"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3396"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3399"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3402"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3405"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3408"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3411"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3414"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3417"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3420"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3423"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3426"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3429"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3432"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3435"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3438"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3441"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3444"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3447"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3450"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3453"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3456"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3459"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3462"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3465"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3468"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3471"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3474"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3477"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3480"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3483"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3486"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3489"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3492"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3495"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3498"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3501"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3504"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3507"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3510"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3513"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3516"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3519"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3522"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3525"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3528"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3531"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3534"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3537"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3540"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3543"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3546"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qeventtransition.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="3549"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3552"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3555"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3558"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qevent.html#Type-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="3561"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3564"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3567"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3570"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3573"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3576"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3579"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3582"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3585"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3588"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3591"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3594"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3597"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3600"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3603"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3606"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3609"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3612"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3615"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3618"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3621"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3624"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3627"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3630"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3633"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3636"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3639"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3642"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3645"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3648"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3651"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3654"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3657"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3660"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3663"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3666"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3669"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3672"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3675"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3678"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3681"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3684"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3687"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3690"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3693"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3696"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3699"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3702"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3705"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3708"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3711"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3714"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3717"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3720"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3723"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3726"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3729"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3732"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3735"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3738"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3741"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3744"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3747"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3750"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3753"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3756"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3759"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3762"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3765"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3768"><bpt name="a" word-end="false">&lt;a href=&quot;qkeyeventtransition.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="3771"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qt.html#Key-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="3774"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qt.html#Key-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="3777"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3780"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3783"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3786"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3789"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3792"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3795"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3798"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3801"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3804"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3807"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3810"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3813"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3816"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3819"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3822"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3825"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3828"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3831"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3834"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3837"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3840"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3843"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3846"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3849"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3852"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3855"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3858"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3861"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3864"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3867"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3870"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3873"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3876"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3879"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3882"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3885"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3888"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3891"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3894"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3897"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3900"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3903"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3906"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3909"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3912"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3915"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3918"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3921"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3924"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3927"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3930"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3933"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3936"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3939"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3942"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3945"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3948"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3951"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3954"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="3957"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3960"><bpt name="a" word-end="false">&lt;a href=&quot;qkeyeventtransition.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="3963"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="3966"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3969"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3972"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3975"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3978"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3981"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3984"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3987"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3990"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3993"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3996"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="3999"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4002"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4005"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4008"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4011"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4014"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4017"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4020"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4023"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4026"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4029"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4032"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4035"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4038"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4041"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4044"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4047"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4050"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4053"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4056"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4059"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4062"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4065"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4068"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4071"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4074"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4077"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4080"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4083"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4086"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4089"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4092"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4095"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4098"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4101"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4104"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4107"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4110"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4113"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4116"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4119"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4122"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4125"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4128"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4131"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4134"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4137"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4140"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4143"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4146"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4149"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4152"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4155"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4158"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4161"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4164"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4167"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4170"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4173"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4176"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4179"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4182"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4185"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4188"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4191"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4194"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4197"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4200"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4203"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4206"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4209"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4212"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4215"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4218"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4221"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4224"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4227"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4230"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4233"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4236"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4239"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4242"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4245"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4248"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4251"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4254"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4257"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4260"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4263"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4266"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4269"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4272"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4275"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4278"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4281"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4284"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4287"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4290"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4293"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4296"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4299"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4302"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4305"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4308"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4311"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4314"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4317"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4320"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4323"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4326"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4329"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4332"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4335"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4338"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4341"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4344"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4347"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4350"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4353"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4356"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4359"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4362"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4365"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4368"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4371"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4374"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4377"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4380"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4383"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4386"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4389"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4392"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4395"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4398"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4401"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4404"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4407"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4410"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4413"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4416"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4419"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4422"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4425"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4428"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4431"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4434"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4437"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4440"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4443"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4446"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4449"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4452"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4455"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4458"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4461"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4464"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4467"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4470"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4473"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4476"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4479"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4482"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4485"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4488"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="4491"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="4494"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="4497"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4500"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4503"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4506"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4509"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4512"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4515"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4518"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4521"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4524"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4527"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4530"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4533"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4536"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4539"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4542"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4545"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4548"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4551"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4554"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4557"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4560"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="4563"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="4566"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4569"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4572"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4575"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4578"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4581"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4584"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4587"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4590"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4593"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4596"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4599"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4602"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4605"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4608"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4611"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4614"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4617"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4620"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4623"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4626"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4629"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4632"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4635"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4638"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4641"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4644"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4647"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4650"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4653"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4656"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4659"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4662"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4665"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4668"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4671"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4674"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4677"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4680"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4683"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4686"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4689"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4692"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4695"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4698"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4701"><bpt name="span" word-end="false">&lt;span class=&quot;preprocessor&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4704"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4707"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4710"><bpt name="span" word-end="false">&lt;span class=&quot;preprocessor&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4713"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4716"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4719"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="4722"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsview.html#ViewportUpdateMode-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4725"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsview.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4728"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4731"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4734"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4737"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4740"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4743"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4746"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4749"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4752"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4755"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4758"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4761"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsview.html#resizeEvent&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4764"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsview.html#fitInView&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4767"><bpt name="a" word-end="false">&lt;a name=&quot;the-main-function&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4770"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4773"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4776"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4779"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4782"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4785"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4788"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4791"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4794"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4797"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4800"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4803"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4806"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4809"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4812"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4815"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="4818"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="4821"><bpt name="a" word-end="false">&lt;a href=&quot;qapplication.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4824"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qdir.html#Q_INIT_RESOURCE&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4827"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="4830"><bpt name="a" word-end="false">&lt;a name=&quot;performance-notes&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4833"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsproxywidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4836"><bpt name="a" word-end="false">&lt;a href=&quot;qgraphicsproxywidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4839"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-graphicsview-padnavigator-flippablepad-cpp.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4842"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-graphicsview-padnavigator-flippablepad-h.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4845"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-graphicsview-padnavigator-form-ui.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4848"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-graphicsview-padnavigator-padnavigator-cpp.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4851"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-graphicsview-padnavigator-padnavigator-h.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4854"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-graphicsview-padnavigator-roundrectitem-cpp.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4857"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-graphicsview-padnavigator-roundrectitem-h.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4860"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-graphicsview-padnavigator-splashitem-cpp.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4863"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-graphicsview-padnavigator-splashitem-h.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4866"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-graphicsview-padnavigator-main-cpp.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4869"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-graphicsview-padnavigator-padnavigator-pro.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4872"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-graphicsview-padnavigator-padnavigator-qrc.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4875"><bpt name="a" word-end="false">&lt;a href=&quot;images/used-in-examples/graphicsview/padnavigator/images/artsfftscope.png&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4878"><bpt name="a" word-end="false">&lt;a href=&quot;images/used-in-examples/graphicsview/padnavigator/images/blue_angle_swirl.jpg&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4881"><bpt name="a" word-end="false">&lt;a href=&quot;images/used-in-examples/graphicsview/padnavigator/images/kontact_contacts.png&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4884"><bpt name="a" word-end="false">&lt;a href=&quot;images/used-in-examples/graphicsview/padnavigator/images/kontact_journal.png&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4887"><bpt name="a" word-end="false">&lt;a href=&quot;images/used-in-examples/graphicsview/padnavigator/images/kontact_mail.png&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4890"><bpt name="a" word-end="false">&lt;a href=&quot;images/used-in-examples/graphicsview/padnavigator/images/kontact_notes.png&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4893"><bpt name="a" word-end="false">&lt;a href=&quot;images/used-in-examples/graphicsview/padnavigator/images/kopeteavailable.png&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4896"><bpt name="a" word-end="false">&lt;a href=&quot;images/used-in-examples/graphicsview/padnavigator/images/metacontact_online.png&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4899"><bpt name="a" word-end="false">&lt;a href=&quot;images/used-in-examples/graphicsview/padnavigator/images/minitools.png&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="4905"><bpt name="a" word-end="false">&lt;a href=&quot;http://www.gnu.org/licenses/fdl.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="0"><ph name="xml" word-end="false">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</ph><props><value key="ProcessingInstructionTag">xml</value></props></tag><tag id="1"><ph name="Comment" word-end="false">&lt;!-- padnavigator.qdoc --&gt;</ph></tag><tag id="32"><ph name="Comment" word-end="false">&lt;!-- $$$graphicsview/padnavigator-description --&gt;</ph></tag><tag id="39"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/padnavigator-example.png&quot; alt=&quot;<sub xid="45424568-efb1-4a38-8ad0-ef20ffbb17c2"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="4900"><ph name="Comment" word-end="false">&lt;!-- @@@graphicsview/padnavigator --&gt;</ph></tag><tag id="4901"><ph name="copy" word-end="false" seg-hint="IncludeWithText">&amp;copy;</ph><props><value key="PlaceholderForMappedEntity">true</value></props></tag><tag id="4902"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="4906"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag></tag-defs></header><body><group><sdl:cxts><sdl:cxt id="1"/></sdl:cxts><trans-unit id="f7770e5a-b64f-4528-b712-9d6774a5b2ec"><source><x id="0"/>
</source><seg-source><x id="0"/>
</seg-source><target><x id="0"/>
</target></trans-unit></group><group><sdl:cxts><sdl:cxt id="2"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="3"/></sdl:cxts><trans-unit id="985e6e2e-3846-43d0-8af8-816cc42dac21"><source><x id="1"/></source><seg-source><x id="1"/></seg-source><target><x id="1"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="5"/><sdl:cxt id="6"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="4"/></sdl:cxts><trans-unit id="af5438b0-8f19-49c6-9247-bb35be121396"><source>Pad Navigator Example | Qt Widgets 5.7</source><seg-source><mrk mtype="seg" mid="1">Pad Navigator Example | Qt Widgets 5.7</mrk></seg-source><target><mrk mtype="seg" mid="1"/></target><sdl:seg-defs><sdl:seg id="1"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="13"/></sdl:cxts><trans-unit id="2977e123-6cab-40d3-b42d-e11659991101"><source><g id="4">Qt 5.7</g></source><seg-source><g id="4"><mrk mtype="seg" mid="2">Qt 5.7</mrk></g></seg-source><target><g id="4"><mrk mtype="seg" mid="2">Qt 5.7</mrk></g></target><sdl:seg-defs><sdl:seg id="2" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/19/2019 12:14:40</sdl:value><sdl:value key="modified_on">03/19/2019 12:14:40</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">-1724339963</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="14"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="14"/></sdl:cxts><trans-unit id="573f2cf7-91aa-4d73-b24a-f133b2f8e065"><source><g id="7">Qt Widgets</g></source><seg-source><g id="7"><mrk mtype="seg" mid="3">Qt Widgets</mrk></g></seg-source><target><g id="7"><mrk mtype="seg" mid="3"/></g></target><sdl:seg-defs><sdl:seg id="3"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="15"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="15"/></sdl:cxts><trans-unit id="f5b191e7-2654-4c64-8ee7-033f1b8b3253"><source>Pad Navigator Example</source><seg-source><mrk mtype="seg" mid="4">Pad Navigator Example</mrk></seg-source><target><mrk mtype="seg" mid="4"/></target><sdl:seg-defs><sdl:seg id="4"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="16"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="18"/></sdl:cxts><trans-unit id="9bebb5c7-6a0d-4117-8220-bf554edc54c8"><source>Qt 5.7.1 Reference Documentation</source><seg-source><mrk mtype="seg" mid="5">Qt 5.7.1 Reference Documentation</mrk></seg-source><target><mrk mtype="seg" mid="5"/></target><sdl:seg-defs><sdl:seg id="5"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="17"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="24"/></sdl:cxts><trans-unit id="96102346-5e96-4e18-9129-825d5583d51e"><source><g id="10">Contents</g></source><seg-source><g id="10"><mrk mtype="seg" mid="6">Contents</mrk></g></seg-source><target><g id="10"><mrk mtype="seg" mid="6">Содержание</mrk></g></target><sdl:seg-defs><sdl:seg id="6" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">TRAPP</sdl:value><sdl:value key="created_on">03/15/2019 00:04:32</sdl:value><sdl:value key="modified_on">03/15/2019 00:04:32</sdl:value><sdl:value key="last_modified_by">TRAPP</sdl:value><sdl:value key="SDL:OriginalTranslationHash">-1819472995</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="19"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="26"/></sdl:cxts><trans-unit id="d4fb9eb9-7a17-4f5f-8fc8-913e07df6865"><source><g id="13">RoundRectItem Class Definition</g></source><seg-source><g id="13"><mrk mtype="seg" mid="7">RoundRectItem Class Definition</mrk></g></seg-source><target><g id="13"><mrk mtype="seg" mid="7"/></g></target><sdl:seg-defs><sdl:seg id="7"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="22"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="27"/></sdl:cxts><trans-unit id="1ccb13a9-e5c6-4055-9a65-8fbdee175570"><source><g id="16">FlippablePad Class Definition</g></source><seg-source><g id="16"><mrk mtype="seg" mid="8">FlippablePad Class Definition</mrk></g></seg-source><target><g id="16"><mrk mtype="seg" mid="8"/></g></target><sdl:seg-defs><sdl:seg id="8"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="23"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="28"/></sdl:cxts><trans-unit id="75ad8d70-b2ef-4df0-ba4a-df56e4733823"><source><g id="19">SplashItem Class Definition</g></source><seg-source><g id="19"><mrk mtype="seg" mid="9">SplashItem Class Definition</mrk></g></seg-source><target><g id="19"><mrk mtype="seg" mid="9"/></g></target><sdl:seg-defs><sdl:seg id="9"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="24"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="29"/></sdl:cxts><trans-unit id="90bdebec-7e2b-4837-ae91-cba2f826a3f6"><source><g id="22">PadNavigator Class Definition</g></source><seg-source><g id="22"><mrk mtype="seg" mid="10">PadNavigator Class Definition</mrk></g></seg-source><target><g id="22"><mrk mtype="seg" mid="10"/></g></target><sdl:seg-defs><sdl:seg id="10"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="25"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="30"/></sdl:cxts><trans-unit id="dc53be48-02b6-4f7e-a5ac-96be33d11640"><source><g id="25">The main() Function</g></source><seg-source><g id="25"><mrk mtype="seg" mid="11">The main() Function</mrk></g></seg-source><target><g id="25"><mrk mtype="seg" mid="11"/></g></target><sdl:seg-defs><sdl:seg id="11"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="26"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="a4319351-4f01-4b23-b100-af5d1c1f427c"><source><g id="28">Performance Notes</g></source><seg-source><g id="28"><mrk mtype="seg" mid="12">Performance Notes</mrk></g></seg-source><target><g id="28"><mrk mtype="seg" mid="12"/></g></target><sdl:seg-defs><sdl:seg id="12"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="27"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="32"/></sdl:cxts><trans-unit id="41c19b83-01d5-4976-abeb-ab1d105dd668"><source>Pad Navigator Example</source><seg-source><mrk mtype="seg" mid="13">Pad Navigator Example</mrk></seg-source><target><mrk mtype="seg" mid="13"/></target><sdl:seg-defs><sdl:seg id="13"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="28"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="21"/></sdl:cxts><trans-unit id="8a362500-3d09-4388-a976-ddda7e88a76c"><source><g id="31"/> <x id="32"/></source><seg-source><g id="31"/> <x id="32"/></seg-source><target><g id="31"/> <x id="32"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="33"/></sdl:cxts><trans-unit id="eedaca0e-ea3f-4e46-bb99-8fde37956fe5"><source><g id="35"/></source><seg-source><g id="35"/></seg-source><target><g id="35"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="30"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="34"/></sdl:cxts><trans-unit id="e8c52c94-5d59-4141-af95-beaafcaaf1af"><source>The Pad Navigator Example shows how you can use Graphics View together with embedded widgets and Qt&apos;s <g id="38">state machine framework</g> to create a simple but useful, dynamic, animated user interface.</source><seg-source><mrk mtype="seg" mid="14">The Pad Navigator Example shows how you can use Graphics View together with embedded widgets and Qt&apos;s <g id="38">state machine framework</g> to create a simple but useful, dynamic, animated user interface.</mrk></seg-source><target><mrk mtype="seg" mid="14"/></target><sdl:seg-defs><sdl:seg id="14"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="32"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="35"/></sdl:cxts><trans-unit id="287a4718-d05a-44f8-9e34-af077679115c"><source><x id="39" xid="45424568-efb1-4a38-8ad0-ef20ffbb17c2"/></source><seg-source><x id="39" xid="45424568-efb1-4a38-8ad0-ef20ffbb17c2"/></seg-source><target><x id="39" xid="45424568-efb1-4a38-8ad0-ef20ffbb17c2"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="33"/></sdl:cxts><trans-unit id="45424568-efb1-4a38-8ad0-ef20ffbb17c2"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="34"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="e3c88df8-27f7-433b-a8c1-8d2f9eccc123"><source>The interface consists of a flippable, rotating pad with icons that can be selected using the arrow keys on your keyboard or keypad. Pressing enter will flip the pad around and reveal its back side, which has a form embedded into a <g id="42">QGraphicsProxyWidget</g>. You can interact with the form, and press the enter key to flip back to the front side of the pad at any time.</source><seg-source><mrk mtype="seg" mid="15">The interface consists of a flippable, rotating pad with icons that can be selected using the arrow keys on your keyboard or keypad.</mrk> <mrk mtype="seg" mid="16">Pressing enter will flip the pad around and reveal its back side, which has a form embedded into a <g id="42">QGraphicsProxyWidget</g>.</mrk> <mrk mtype="seg" mid="17">You can interact with the form, and press the enter key to flip back to the front side of the pad at any time.</mrk></seg-source><target><mrk mtype="seg" mid="15"/> <mrk mtype="seg" mid="16"/> <mrk mtype="seg" mid="17"/></target><sdl:seg-defs><sdl:seg id="15"/><sdl:seg id="16"/><sdl:seg id="17"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="35"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="37"/></sdl:cxts><trans-unit id="a7e45e15-0bec-4392-933e-c93e8ab69e6c"><source>Graphics View provides the <g id="45">QGraphicsScene</g> class for managing and interacting with a large number of custom-made 2D graphical items derived from the <g id="48">QGraphicsItem</g> class, and a <g id="51">QGraphicsView</g> widget for visualizing the items, with support for zooming and rotation.</source><seg-source><mrk mtype="seg" mid="18">Graphics View provides the <g id="45">QGraphicsScene</g> class for managing and interacting with a large number of custom-made 2D graphical items derived from the <g id="48">QGraphicsItem</g> class, and a <g id="51">QGraphicsView</g> widget for visualizing the items, with support for zooming and rotation.</mrk></seg-source><target><mrk mtype="seg" mid="18"/></target><sdl:seg-defs><sdl:seg id="18"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="36"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="38"/></sdl:cxts><trans-unit id="lockTU_78c8d2c9-9f5d-4f1b-88e5-bb8e74f604d5" translate="no" sdl:locktype="Structure"><source><g id="54">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_917ec51b-6486-4c20-839b-749efbc18805" translate="no" sdl:locktype="Structure"><source><g id="57">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_ad765765-53a0-4fdf-9668-535777f3b1b1" translate="no" sdl:locktype="Structure"><source><g id="60">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_1cfab7f7-fd41-446e-a6ad-6bc49a28d203" translate="no" sdl:locktype="Structure"><source><g id="63">SplashItem</g></source></trans-unit><trans-unit id="lockTU_24583340-edcc-47ab-8732-a9500d6616d6" translate="no" sdl:locktype="Structure"><source><g id="66">main()</g></source></trans-unit><trans-unit id="lockTU_31f98e93-2641-4e3d-89b0-2f8f4dc7c6da" translate="no" sdl:locktype="Structure"><source><g id="54">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_d29ac07a-f581-445f-856b-7333b3788f5d" translate="no" sdl:locktype="Structure"><source><g id="57">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_6643f7b4-1672-4f1a-8d42-5bf959d2d6c4" translate="no" sdl:locktype="Structure"><source><g id="60">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_fccd1555-ebc9-4369-b732-4fb54c73c64f" translate="no" sdl:locktype="Structure"><source><g id="63">SplashItem</g></source></trans-unit><trans-unit id="lockTU_0efb2560-816d-48a7-b433-712b3a1ec2e6" translate="no" sdl:locktype="Structure"><source><g id="66">main()</g></source></trans-unit><trans-unit id="ef88fd15-5d7c-4682-a8d6-a0d30eaa846d"><source>This example consists of a <x id="locked1" xid="lockTU_31f98e93-2641-4e3d-89b0-2f8f4dc7c6da"/> class, a <x id="locked2" xid="lockTU_d29ac07a-f581-445f-856b-7333b3788f5d"/> class, a <x id="locked3" xid="lockTU_6643f7b4-1672-4f1a-8d42-5bf959d2d6c4"/> class, a <x id="locked4" xid="lockTU_fccd1555-ebc9-4369-b732-4fb54c73c64f"/> class, and a <x id="locked5" xid="lockTU_0efb2560-816d-48a7-b433-712b3a1ec2e6"/> function.</source><seg-source><mrk mtype="seg" mid="19">This example consists of a <x id="locked6" xid="lockTU_78c8d2c9-9f5d-4f1b-88e5-bb8e74f604d5"/> class, a <x id="locked7" xid="lockTU_917ec51b-6486-4c20-839b-749efbc18805"/> class, a <x id="locked8" xid="lockTU_ad765765-53a0-4fdf-9668-535777f3b1b1"/> class, a <x id="locked9" xid="lockTU_1cfab7f7-fd41-446e-a6ad-6bc49a28d203"/> class, and a <x id="locked10" xid="lockTU_24583340-edcc-47ab-8732-a9500d6616d6"/> function.</mrk></seg-source><target><mrk mtype="seg" mid="19"/></target><sdl:seg-defs><sdl:seg id="19"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="37"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="33"/></sdl:cxts><trans-unit id="5b2778d7-b159-4cfc-bf01-352abdc5c2c0"><source><g id="69"/></source><seg-source><g id="69"/></seg-source><target><g id="69"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="38"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="39"/></sdl:cxts><trans-unit id="f2f8c8bf-447a-4be8-8550-9b0dd4c8d597"><source>RoundRectItem Class Definition</source><seg-source><mrk mtype="seg" mid="20">RoundRectItem Class Definition</mrk></seg-source><target><mrk mtype="seg" mid="20"/></target><sdl:seg-defs><sdl:seg id="20"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="39"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="40"/></sdl:cxts><trans-unit id="lockTU_b8be88c5-e6ec-4599-9980-3dd0ee9fc752" translate="no" sdl:locktype="Structure"><source><g id="72">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_7d0c726c-13f8-4f5f-bedf-10a21edc7897" translate="no" sdl:locktype="Structure"><source><g id="75">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_ea3ae123-52d6-4886-9346-c1bbec8f7a8d" translate="no" sdl:locktype="Structure"><source><g id="78">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_7ec03bcd-5bbf-4e18-b240-7b700b77c811" translate="no" sdl:locktype="Structure"><source><g id="72">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_40dc57b7-3a82-4882-8d1c-fefbcd6feaf6" translate="no" sdl:locktype="Structure"><source><g id="75">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_2d36a8b9-2577-44c7-97f4-7f3426c02551" translate="no" sdl:locktype="Structure"><source><g id="78">FlippablePad</g></source></trans-unit><trans-unit id="48802287-985e-495f-a84f-0cc714bc4dd6"><source>The <x id="locked11" xid="lockTU_7ec03bcd-5bbf-4e18-b240-7b700b77c811"/> class is used by itself to display the icons on the pad, and as a base class for <x id="locked12" xid="lockTU_40dc57b7-3a82-4882-8d1c-fefbcd6feaf6"/>, the class for the pad itself. The role of the class is to paint a round rectangle of a specified size and gradient color, and optionally to paint a pixmap icon on top. To support <x id="locked13" xid="lockTU_2d36a8b9-2577-44c7-97f4-7f3426c02551"/> it also allows filling its contents with a plain window background color.</source><seg-source><mrk mtype="seg" mid="21">The <x id="locked14" xid="lockTU_b8be88c5-e6ec-4599-9980-3dd0ee9fc752"/> class is used by itself to display the icons on the pad, and as a base class for <x id="locked15" xid="lockTU_7d0c726c-13f8-4f5f-bedf-10a21edc7897"/>, the class for the pad itself.</mrk> <mrk mtype="seg" mid="22">The role of the class is to paint a round rectangle of a specified size and gradient color, and optionally to paint a pixmap icon on top.</mrk> <mrk mtype="seg" mid="23">To support <x id="locked16" xid="lockTU_ea3ae123-52d6-4886-9346-c1bbec8f7a8d"/> it also allows filling its contents with a plain window background color.</mrk></seg-source><target><mrk mtype="seg" mid="21"/> <mrk mtype="seg" mid="22"/> <mrk mtype="seg" mid="23"/></target><sdl:seg-defs><sdl:seg id="21"/><sdl:seg id="22"/><sdl:seg id="23"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="40"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="41"/></sdl:cxts><trans-unit id="lockTU_fbab8c56-d2ad-47d3-84a5-6270537cd98f" translate="no" sdl:locktype="Structure"><source><g id="81">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_266446b8-60c8-4714-a126-48c7822b2f34" translate="no" sdl:locktype="Structure"><source><g id="81">RoundRectItem</g></source></trans-unit><trans-unit id="1f5422df-15c4-467f-ba0e-319773bf07f3"><source>Let&apos;s start by reviewing the <x id="locked17" xid="lockTU_266446b8-60c8-4714-a126-48c7822b2f34"/> class declaration.</source><seg-source><mrk mtype="seg" mid="24">Let&apos;s start by reviewing the <x id="locked18" xid="lockTU_fbab8c56-d2ad-47d3-84a5-6270537cd98f"/> class declaration.</mrk></seg-source><target><mrk mtype="seg" mid="24"/></target><sdl:seg-defs><sdl:seg id="24"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="41"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="42"/></sdl:cxts><trans-unit id="55434b80-edf8-480f-b347-1732b15e50bb"><source><g id="84">class</g> RoundRectItem : <g id="87">public</g> <g id="90">QGraphicsObject</g> { Q_OBJECT Q_PROPERTY(bool fill READ fill WRITE setFill) <g id="93">public</g>: RoundRectItem(<g id="96">const</g> <g id="99">QRectF</g> <g id="102">&amp;</g>bounds<g id="105">,</g> <g id="108">const</g> <g id="111">QColor</g> <g id="114">&amp;</g>color<g id="117">,</g> <g id="120">QGraphicsItem</g> <g id="123">*</g>parent <g id="126">=</g> <g id="129">0</g>); <g id="132">QPixmap</g> pixmap() <g id="135">const</g>; <g id="138">void</g> setPixmap(<g id="141">const</g> <g id="144">QPixmap</g> <g id="147">&amp;</g>pixmap); <g id="150">QRectF</g> boundingRect() <g id="153">const</g> Q_DECL_OVERRIDE; <g id="156">void</g> paint(<g id="159">QPainter</g> <g id="162">*</g>painter<g id="165">,</g> <g id="168">const</g> <g id="171">QStyleOptionGraphicsItem</g> <g id="174">*</g>option<g id="177">,</g> <g id="180">QWidget</g> <g id="183">*</g>widget <g id="186">=</g> <g id="189">0</g>) Q_DECL_OVERRIDE; bool fill() <g id="192">const</g>; <g id="195">void</g> setFill(bool fill);</source><seg-source><mrk mtype="seg" mid="25"><g id="84">class</g> RoundRectItem : <g id="87">public</g> <g id="90">QGraphicsObject</g> { Q_OBJECT Q_PROPERTY(bool fill READ fill WRITE setFill) <g id="93">public</g>:</mrk> <mrk mtype="seg" mid="26">RoundRectItem(<g id="96">const</g> <g id="99">QRectF</g> <g id="102">&amp;</g>bounds<g id="105">,</g> <g id="108">const</g> <g id="111">QColor</g> <g id="114">&amp;</g>color<g id="117">,</g> <g id="120">QGraphicsItem</g> <g id="123">*</g>parent <g id="126">=</g> <g id="129">0</g>); <g id="132">QPixmap</g> pixmap() <g id="135">const</g>; <g id="138">void</g> setPixmap(<g id="141">const</g> <g id="144">QPixmap</g> <g id="147">&amp;</g>pixmap); <g id="150">QRectF</g> boundingRect() <g id="153">const</g> Q_DECL_OVERRIDE; <g id="156">void</g> paint(<g id="159">QPainter</g> <g id="162">*</g>painter<g id="165">,</g> <g id="168">const</g> <g id="171">QStyleOptionGraphicsItem</g> <g id="174">*</g>option<g id="177">,</g> <g id="180">QWidget</g> <g id="183">*</g>widget <g id="186">=</g> <g id="189">0</g>) Q_DECL_OVERRIDE; bool fill() <g id="192">const</g>; <g id="195">void</g> setFill(bool fill);</mrk></seg-source><target><mrk mtype="seg" mid="25"/> <mrk mtype="seg" mid="26"/></target><sdl:seg-defs><sdl:seg id="25"/><sdl:seg id="26"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="43"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="lockTU_9fb57498-2011-43cf-b990-4dde97c43a02" translate="no" sdl:locktype="Structure"><source><g id="198">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_7a611586-a1ec-4fbf-af49-8b05aca691ac" translate="no" sdl:locktype="Structure"><source><g id="198">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_7d511935-7851-4df0-ad37-c8a5ee990030" translate="no" sdl:locktype="Structure"><source><g id="198">RoundRectItem</g></source></trans-unit><trans-unit id="3cbeadb7-cb14-4988-bfff-fdb448eec44f"><source><x id="locked19" xid="lockTU_7d511935-7851-4df0-ad37-c8a5ee990030"/> inherits <g id="201">QGraphicsObject</g>, which makes it easy to control its properties using <g id="204">QPropertyAnimation</g>. Its constructor takes a rectangle to determine its bounds, and a color.</source><seg-source><x id="locked20" xid="lockTU_7a611586-a1ec-4fbf-af49-8b05aca691ac"/> <mrk mtype="seg" mid="27">inherits <g id="201">QGraphicsObject</g>, which makes it easy to control its properties using <g id="204">QPropertyAnimation</g>.</mrk> <mrk mtype="seg" mid="28">Its constructor takes a rectangle to determine its bounds, and a color.</mrk></seg-source><target><x id="locked21" xid="lockTU_9fb57498-2011-43cf-b990-4dde97c43a02"/> <mrk mtype="seg" mid="27"/> <mrk mtype="seg" mid="28"/></target><sdl:seg-defs><sdl:seg id="27"/><sdl:seg id="28"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="44"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="44"/></sdl:cxts><trans-unit id="lockTU_70651e75-2b50-4752-82b3-7a39276d32c4" translate="no" sdl:locktype="Structure"><source><g id="213">pixmap</g></source></trans-unit><trans-unit id="lockTU_8d86e803-baf2-47a4-b2a4-0ee8d0660a2d" translate="no" sdl:locktype="Structure"><source><g id="216">fill</g></source></trans-unit><trans-unit id="lockTU_c1167c1a-59df-4682-b5b3-1100a15c3dd8" translate="no" sdl:locktype="Structure"><source><g id="213">pixmap</g></source></trans-unit><trans-unit id="lockTU_35957192-0a7c-406b-aab4-5b7b622810f8" translate="no" sdl:locktype="Structure"><source><g id="216">fill</g></source></trans-unit><trans-unit id="487b8bb2-f44e-4e28-9847-d96e1e141ebb"><source>Besides implementing the mandatory <g id="207">paint()</g> and <g id="210">boundingRect()</g> pure virtual functions, it also provides the <x id="locked22" xid="lockTU_c1167c1a-59df-4682-b5b3-1100a15c3dd8"/> and <x id="locked23" xid="lockTU_35957192-0a7c-406b-aab4-5b7b622810f8"/> properties.</source><seg-source><mrk mtype="seg" mid="29">Besides implementing the mandatory <g id="207">paint()</g> and <g id="210">boundingRect()</g> pure virtual functions, it also provides the <x id="locked24" xid="lockTU_70651e75-2b50-4752-82b3-7a39276d32c4"/> and <x id="locked25" xid="lockTU_8d86e803-baf2-47a4-b2a4-0ee8d0660a2d"/> properties.</mrk></seg-source><target><mrk mtype="seg" mid="29"/></target><sdl:seg-defs><sdl:seg id="29"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="45"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="45"/></sdl:cxts><trans-unit id="lockTU_7914d100-1dc2-4295-81f1-02e31d63a1cd" translate="no" sdl:locktype="Structure"><source><g id="219">pixmap</g></source></trans-unit><trans-unit id="lockTU_d8315310-e6dd-4c37-87c2-d572c7cecfb4" translate="no" sdl:locktype="Structure"><source><g id="222">fill</g></source></trans-unit><trans-unit id="lockTU_36cd5be1-2a72-44b6-af5b-936fa4cfe0a2" translate="no" sdl:locktype="Structure"><source><g id="228">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_8295e60d-20e0-48ba-b64d-fc5f1dd1f7b9" translate="no" sdl:locktype="Structure"><source><g id="219">pixmap</g></source></trans-unit><trans-unit id="lockTU_28bd6e01-c52d-4c10-8c08-3d312bfe0a96" translate="no" sdl:locktype="Structure"><source><g id="222">fill</g></source></trans-unit><trans-unit id="lockTU_a3f6d6bf-4650-4434-bd4a-a5d9a968946b" translate="no" sdl:locktype="Structure"><source><g id="228">RoundRectItem</g></source></trans-unit><trans-unit id="fac1dc13-fc02-4ba5-9573-ea4594bd4b9e"><source>The <x id="locked26" xid="lockTU_8295e60d-20e0-48ba-b64d-fc5f1dd1f7b9"/> property sets an optional pixmap that is drawn on top of the round rectangle. The <x id="locked27" xid="lockTU_28bd6e01-c52d-4c10-8c08-3d312bfe0a96"/> property will, when true, fill the round rectangle contents with a fixed <g id="225">QPalette::Window</g> background color. Otherwise the contents are filled using a gradient based on the color passed to <x id="locked28" xid="lockTU_a3f6d6bf-4650-4434-bd4a-a5d9a968946b"/>&apos;s constructor.</source><seg-source><mrk mtype="seg" mid="30">The <x id="locked29" xid="lockTU_7914d100-1dc2-4295-81f1-02e31d63a1cd"/> property sets an optional pixmap that is drawn on top of the round rectangle.</mrk> <mrk mtype="seg" mid="31">The <x id="locked30" xid="lockTU_d8315310-e6dd-4c37-87c2-d572c7cecfb4"/> property will, when true, fill the round rectangle contents with a fixed <g id="225">QPalette::Window</g> background color.</mrk> <mrk mtype="seg" mid="32">Otherwise the contents are filled using a gradient based on the color passed to <x id="locked31" xid="lockTU_36cd5be1-2a72-44b6-af5b-936fa4cfe0a2"/>&apos;s constructor.</mrk></seg-source><target><mrk mtype="seg" mid="30"/> <mrk mtype="seg" mid="31"/> <mrk mtype="seg" mid="32"/></target><sdl:seg-defs><sdl:seg id="30"/><sdl:seg id="31"/><sdl:seg id="32"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="46"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="46"/></sdl:cxts><trans-unit id="bcc65496-c232-47f6-befe-90f254fa8d6f"><source><g id="231">private</g>: <g id="234">QPixmap</g> pix; bool fillRect; <g id="237">QRectF</g> bounds; <g id="240">QLinearGradient</g> gradient; };</source><seg-source><mrk mtype="seg" mid="33"><g id="231">private</g>:</mrk> <mrk mtype="seg" mid="34"><g id="234">QPixmap</g> pix; bool fillRect; <g id="237">QRectF</g> bounds; <g id="240">QLinearGradient</g> gradient; };</mrk></seg-source><target><mrk mtype="seg" mid="33"/> <mrk mtype="seg" mid="34"/></target><sdl:seg-defs><sdl:seg id="33"/><sdl:seg id="34"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="47"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="47"/></sdl:cxts><trans-unit id="d149ece1-9c03-4d8c-b645-155f1908c432"><source>The private data members are:</source><seg-source><mrk mtype="seg" mid="35">The private data members are:</mrk></seg-source><target><mrk mtype="seg" mid="35"/></target><sdl:seg-defs><sdl:seg id="35"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="48"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="49"/></sdl:cxts><trans-unit id="lockTU_e527a45d-bd58-41ff-a7d3-8754690d7a22" translate="no" sdl:locktype="Structure"><source><g id="243">pix</g></source></trans-unit><trans-unit id="lockTU_b1330f3d-197c-488d-bd25-35123ea15827" translate="no" sdl:locktype="Structure"><source><g id="243">pix</g></source></trans-unit><trans-unit id="lockTU_47ded270-34da-429f-b3d5-0f54c2794b24" translate="no" sdl:locktype="Structure"><source><g id="243">pix</g></source></trans-unit><trans-unit id="48bfcd48-fd63-4a15-b981-70d4a40c3286"><source><x id="locked32" xid="lockTU_47ded270-34da-429f-b3d5-0f54c2794b24"/>: The optional pixmap that is drawn on top of the rectangle.</source><seg-source><x id="locked33" xid="lockTU_b1330f3d-197c-488d-bd25-35123ea15827"/><mrk mtype="seg" mid="36">:</mrk> <mrk mtype="seg" mid="37">The optional pixmap that is drawn on top of the rectangle.</mrk></seg-source><target><x id="locked34" xid="lockTU_e527a45d-bd58-41ff-a7d3-8754690d7a22"/><mrk mtype="seg" mid="36"/> <mrk mtype="seg" mid="37"/></target><sdl:seg-defs><sdl:seg id="36"/><sdl:seg id="37"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="49"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="50"/></sdl:cxts><trans-unit id="lockTU_849410a2-fcd4-43a0-bd22-dcf0accab89f" translate="no" sdl:locktype="Structure"><source><g id="246">fillRect</g></source></trans-unit><trans-unit id="lockTU_3eb3995e-c7bd-4d8f-923f-369a18df0403" translate="no" sdl:locktype="Structure"><source><g id="246">fillRect</g></source></trans-unit><trans-unit id="lockTU_b8654215-237e-46d3-930e-fb3b69a9f3c7" translate="no" sdl:locktype="Structure"><source><g id="249">fill</g></source></trans-unit><trans-unit id="lockTU_72cd72a7-db04-4a48-a3d0-f809b038ac93" translate="no" sdl:locktype="Structure"><source><g id="246">fillRect</g></source></trans-unit><trans-unit id="lockTU_41d3277d-925d-49a6-b178-b2d9dc323bae" translate="no" sdl:locktype="Structure"><source><g id="249">fill</g></source></trans-unit><trans-unit id="e4b02572-8326-44bb-8b11-73f06a504cdf"><source><x id="locked35" xid="lockTU_72cd72a7-db04-4a48-a3d0-f809b038ac93"/>: Corresponds to the <x id="locked36" xid="lockTU_41d3277d-925d-49a6-b178-b2d9dc323bae"/> property.</source><seg-source><x id="locked37" xid="lockTU_3eb3995e-c7bd-4d8f-923f-369a18df0403"/><mrk mtype="seg" mid="38">:</mrk> <mrk mtype="seg" mid="39">Corresponds to the <x id="locked38" xid="lockTU_b8654215-237e-46d3-930e-fb3b69a9f3c7"/> property.</mrk></seg-source><target><x id="locked39" xid="lockTU_849410a2-fcd4-43a0-bd22-dcf0accab89f"/><mrk mtype="seg" mid="38"/> <mrk mtype="seg" mid="39"/></target><sdl:seg-defs><sdl:seg id="38"/><sdl:seg id="39"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="50"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="51"/></sdl:cxts><trans-unit id="lockTU_b67ba681-5e77-4ba9-b146-c84e475e4867" translate="no" sdl:locktype="Structure"><source><g id="252">color</g></source></trans-unit><trans-unit id="lockTU_9f63c941-234c-4561-ab5c-c9588a24029f" translate="no" sdl:locktype="Structure"><source><g id="252">color</g></source></trans-unit><trans-unit id="lockTU_a67517ae-aa73-4b10-9c10-df7511d5faa8" translate="no" sdl:locktype="Structure"><source><g id="252">color</g></source></trans-unit><trans-unit id="13edf473-03c7-4530-a39d-9c1588deb98f"><source><x id="locked40" xid="lockTU_a67517ae-aa73-4b10-9c10-df7511d5faa8"/>: The configurable gradient color fill of the rectangle.</source><seg-source><x id="locked41" xid="lockTU_9f63c941-234c-4561-ab5c-c9588a24029f"/><mrk mtype="seg" mid="40">:</mrk> <mrk mtype="seg" mid="41">The configurable gradient color fill of the rectangle.</mrk></seg-source><target><x id="locked42" xid="lockTU_b67ba681-5e77-4ba9-b146-c84e475e4867"/><mrk mtype="seg" mid="40"/> <mrk mtype="seg" mid="41"/></target><sdl:seg-defs><sdl:seg id="40"/><sdl:seg id="41"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="51"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="52"/></sdl:cxts><trans-unit id="lockTU_bb7502ee-d2fb-49ad-9058-46c7174568af" translate="no" sdl:locktype="Structure"><source><g id="255">bounds</g></source></trans-unit><trans-unit id="lockTU_bcf405fb-f558-4208-a445-4c7aa0c3f504" translate="no" sdl:locktype="Structure"><source><g id="255">bounds</g></source></trans-unit><trans-unit id="lockTU_5868d30c-492b-4c7f-bbcf-c9619495e7a7" translate="no" sdl:locktype="Structure"><source><g id="255">bounds</g></source></trans-unit><trans-unit id="a938d603-144b-44b4-b803-985d2a7f9f10"><source><x id="locked43" xid="lockTU_5868d30c-492b-4c7f-bbcf-c9619495e7a7"/>: The bounds of the rectangle.</source><seg-source><x id="locked44" xid="lockTU_bcf405fb-f558-4208-a445-4c7aa0c3f504"/><mrk mtype="seg" mid="42">:</mrk> <mrk mtype="seg" mid="43">The bounds of the rectangle.</mrk></seg-source><target><x id="locked45" xid="lockTU_bb7502ee-d2fb-49ad-9058-46c7174568af"/><mrk mtype="seg" mid="42"/> <mrk mtype="seg" mid="43"/></target><sdl:seg-defs><sdl:seg id="42"/><sdl:seg id="43"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="52"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="53"/></sdl:cxts><trans-unit id="lockTU_8fc4c975-cb8f-4100-8e7b-9f3db5a86f38" translate="no" sdl:locktype="Structure"><source><g id="258">gradient</g></source></trans-unit><trans-unit id="lockTU_272b0c20-9e62-4b9f-8de3-e4cebd33ab1d" translate="no" sdl:locktype="Structure"><source><g id="258">gradient</g></source></trans-unit><trans-unit id="lockTU_a169fafa-be29-418a-be5f-a9bfccde5321" translate="no" sdl:locktype="Structure"><source><g id="258">gradient</g></source></trans-unit><trans-unit id="fc043bac-ea99-44ab-b5ea-980b5a4afe97"><source><x id="locked46" xid="lockTU_a169fafa-be29-418a-be5f-a9bfccde5321"/>: A precalculated gradient used to fill the rectangle.</source><seg-source><x id="locked47" xid="lockTU_272b0c20-9e62-4b9f-8de3-e4cebd33ab1d"/><mrk mtype="seg" mid="44">:</mrk> <mrk mtype="seg" mid="45">A precalculated gradient used to fill the rectangle.</mrk></seg-source><target><x id="locked48" xid="lockTU_8fc4c975-cb8f-4100-8e7b-9f3db5a86f38"/><mrk mtype="seg" mid="44"/> <mrk mtype="seg" mid="45"/></target><sdl:seg-defs><sdl:seg id="44"/><sdl:seg id="45"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="53"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="54"/></sdl:cxts><trans-unit id="lockTU_bd769d84-4ea1-44f2-a01b-177e3f5f9d75" translate="no" sdl:locktype="Structure"><source><g id="261">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_00d2bb46-a660-405a-99cb-6753666ba76d" translate="no" sdl:locktype="Structure"><source><g id="261">RoundRectItem</g></source></trans-unit><trans-unit id="643ebcfe-0ff0-44d2-9e9e-5f7609ab96bc"><source>We will now review the <x id="locked49" xid="lockTU_00d2bb46-a660-405a-99cb-6753666ba76d"/> implementation. Let&apos;s start by looking at its constructor:</source><seg-source><mrk mtype="seg" mid="46">We will now review the <x id="locked50" xid="lockTU_bd769d84-4ea1-44f2-a01b-177e3f5f9d75"/> implementation.</mrk> <mrk mtype="seg" mid="47">Let&apos;s start by looking at its constructor:</mrk></seg-source><target><mrk mtype="seg" mid="46"/> <mrk mtype="seg" mid="47"/></target><sdl:seg-defs><sdl:seg id="46"/><sdl:seg id="47"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="54"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="55"/></sdl:cxts><trans-unit id="097e989a-b48d-4200-99e3-21a94ccc4ec7"><source>RoundRectItem<g id="264">::</g>RoundRectItem(<g id="267">const</g> <g id="270">QRectF</g> <g id="273">&amp;</g>bounds<g id="276">,</g> <g id="279">const</g> <g id="282">QColor</g> <g id="285">&amp;</g>color<g id="288">,</g> <g id="291">QGraphicsItem</g> <g id="294">*</g>parent) : <g id="297">QGraphicsObject</g>(parent)<g id="300">,</g> fillRect(<g id="303">false</g>)<g id="306">,</g> bounds(bounds) { gradient<g id="309">.</g>setStart(bounds<g id="312">.</g>topLeft()); gradient<g id="315">.</g>setFinalStop(bounds<g id="318">.</g>bottomRight()); gradient<g id="321">.</g>setColorAt(<g id="324">0</g><g id="327">,</g> color); gradient<g id="330">.</g>setColorAt(<g id="333">1</g><g id="336">,</g> color<g id="339">.</g>dark(<g id="342">200</g>)); setCacheMode(ItemCoordinateCache); }</source><seg-source><mrk mtype="seg" mid="48">RoundRectItem<g id="264">::</g>RoundRectItem(<g id="267">const</g> <g id="270">QRectF</g> <g id="273">&amp;</g>bounds<g id="276">,</g> <g id="279">const</g> <g id="282">QColor</g> <g id="285">&amp;</g>color<g id="288">,</g> <g id="291">QGraphicsItem</g> <g id="294">*</g>parent) :</mrk> <mrk mtype="seg" mid="49"><g id="297">QGraphicsObject</g>(parent)<g id="300">,</g> fillRect(<g id="303">false</g>)<g id="306">,</g> bounds(bounds) { gradient<g id="309">.</g>setStart(bounds<g id="312">.</g>topLeft()); gradient<g id="315">.</g>setFinalStop(bounds<g id="318">.</g>bottomRight()); gradient<g id="321">.</g>setColorAt(<g id="324">0</g><g id="327">,</g> color); gradient<g id="330">.</g>setColorAt(<g id="333">1</g><g id="336">,</g> color<g id="339">.</g>dark(<g id="342">200</g>)); setCacheMode(ItemCoordinateCache); }</mrk></seg-source><target><mrk mtype="seg" mid="48"/> <mrk mtype="seg" mid="49"/></target><sdl:seg-defs><sdl:seg id="48"/><sdl:seg id="49"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="55"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="56"/></sdl:cxts><trans-unit id="lockTU_352e21dd-855b-4006-a2ff-4f6d74336d2c" translate="no" sdl:locktype="Structure"><source><g id="345">parent</g></source></trans-unit><trans-unit id="lockTU_43a7f181-272b-48bc-9260-643d2a7ae5d2" translate="no" sdl:locktype="Structure"><source><g id="345">parent</g></source></trans-unit><trans-unit id="c751b772-12a6-48b6-b234-db06cfad0f18"><source>The constructor initializes its member variables and forwards the <x id="locked51" xid="lockTU_43a7f181-272b-48bc-9260-643d2a7ae5d2"/> argument to <g id="348">QGraphicsObject</g>&apos;s constructor. It then constructs the linear gradient that is used in <g id="351">paint()</g> to draw the round rectangle&apos;s gradient background. The linear gradient&apos;s starting point is at the top-left corner of the bounds, and the end is at the bottom-left corner. The start color is identical to the color passed as an argument, and a slightly darker color is chosen for the final stop.</source><seg-source><mrk mtype="seg" mid="50">The constructor initializes its member variables and forwards the <x id="locked52" xid="lockTU_352e21dd-855b-4006-a2ff-4f6d74336d2c"/> argument to <g id="348">QGraphicsObject</g>&apos;s constructor.</mrk> <mrk mtype="seg" mid="51">It then constructs the linear gradient that is used in <g id="351">paint()</g> to draw the round rectangle&apos;s gradient background.</mrk> <mrk mtype="seg" mid="52">The linear gradient&apos;s starting point is at the top-left corner of the bounds, and the end is at the bottom-left corner.</mrk> <mrk mtype="seg" mid="53">The start color is identical to the color passed as an argument, and a slightly darker color is chosen for the final stop.</mrk></seg-source><target><mrk mtype="seg" mid="50"/> <mrk mtype="seg" mid="51"/> <mrk mtype="seg" mid="52"/> <mrk mtype="seg" mid="53"/></target><sdl:seg-defs><sdl:seg id="50"/><sdl:seg id="51"/><sdl:seg id="52"/><sdl:seg id="53"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="56"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="57"/></sdl:cxts><trans-unit id="e2cdfcde-37b5-4fd0-b194-cda4a65e098b"><source>We store this gradient as a member variable to avoid having to recreate the gradient every time the item is repainted.</source><seg-source><mrk mtype="seg" mid="54">We store this gradient as a member variable to avoid having to recreate the gradient every time the item is repainted.</mrk></seg-source><target><mrk mtype="seg" mid="54"/></target><sdl:seg-defs><sdl:seg id="54"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="57"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="58"/></sdl:cxts><trans-unit id="d36c7ff9-2c08-4bed-9ac1-54ff347e8c17"><source>Finally we set the cache mode <g id="354">ItemCoordinateCache</g>. This mode causes the item&apos;s rendering to be cached into an off-screen pixmap that remains persistent as we move and transform the item. This mode is ideal for this example, and works particularly well with OpenGL and OpenGL ES.</source><seg-source><mrk mtype="seg" mid="55">Finally we set the cache mode <g id="354">ItemCoordinateCache</g>.</mrk> <mrk mtype="seg" mid="56">This mode causes the item&apos;s rendering to be cached into an off-screen pixmap that remains persistent as we move and transform the item.</mrk> <mrk mtype="seg" mid="57">This mode is ideal for this example, and works particularly well with OpenGL and OpenGL ES.</mrk></seg-source><target><mrk mtype="seg" mid="55"/> <mrk mtype="seg" mid="56"/> <mrk mtype="seg" mid="57"/></target><sdl:seg-defs><sdl:seg id="55"/><sdl:seg id="56"/><sdl:seg id="57"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="58"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="59"/></sdl:cxts><trans-unit id="a4e214ab-2433-4cf5-8b57-61f4e266bf54"><source><g id="357">QPixmap</g> RoundRectItem<g id="360">::</g>pixmap() <g id="363">const</g> { <g id="366">return</g> pix; } <g id="369">void</g> RoundRectItem<g id="372">::</g>setPixmap(<g id="375">const</g> <g id="378">QPixmap</g> <g id="381">&amp;</g>pixmap) { pix <g id="384">=</g> pixmap; update(); }</source><seg-source><mrk mtype="seg" mid="58"><g id="357">QPixmap</g> RoundRectItem<g id="360">::</g>pixmap() <g id="363">const</g> { <g id="366">return</g> pix; } <g id="369">void</g> RoundRectItem<g id="372">::</g>setPixmap(<g id="375">const</g> <g id="378">QPixmap</g> <g id="381">&amp;</g>pixmap) { pix <g id="384">=</g> pixmap; update(); }</mrk></seg-source><target><mrk mtype="seg" mid="58"/></target><sdl:seg-defs><sdl:seg id="58"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="59"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="60"/></sdl:cxts><trans-unit id="lockTU_7fc21901-b207-4728-abb9-0b244de9ae7a" translate="no" sdl:locktype="Structure"><source><g id="387">pixmap</g></source></trans-unit><trans-unit id="lockTU_64c3ac5d-00fb-44bf-b33a-41c6c198584e" translate="no" sdl:locktype="Structure"><source><g id="387">pixmap</g></source></trans-unit><trans-unit id="144f00b7-162f-4f78-ba67-cafb79c4864f"><source>The <x id="locked53" xid="lockTU_64c3ac5d-00fb-44bf-b33a-41c6c198584e"/> property implementation simple returns the member pixmap, or sets it and then calls <g id="390">update()</g>.</source><seg-source><mrk mtype="seg" mid="59">The <x id="locked54" xid="lockTU_7fc21901-b207-4728-abb9-0b244de9ae7a"/> property implementation simple returns the member pixmap, or sets it and then calls <g id="390">update()</g>.</mrk></seg-source><target><mrk mtype="seg" mid="59"/></target><sdl:seg-defs><sdl:seg id="59"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="60"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="61"/></sdl:cxts><trans-unit id="091e349e-0158-4785-8960-c6ee9ed30bbb"><source><g id="393">QRectF</g> RoundRectItem<g id="396">::</g>boundingRect() <g id="399">const</g> { <g id="402">return</g> bounds<g id="405">.</g>adjusted(<g id="408">0</g><g id="411">,</g> <g id="414">0</g><g id="417">,</g> <g id="420">2</g><g id="423">,</g> <g id="426">2</g>); }</source><seg-source><mrk mtype="seg" mid="60"><g id="393">QRectF</g> RoundRectItem<g id="396">::</g>boundingRect() <g id="399">const</g> { <g id="402">return</g> bounds<g id="405">.</g>adjusted(<g id="408">0</g><g id="411">,</g> <g id="414">0</g><g id="417">,</g> <g id="420">2</g><g id="423">,</g> <g id="426">2</g>); }</mrk></seg-source><target><mrk mtype="seg" mid="60"/></target><sdl:seg-defs><sdl:seg id="60"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="61"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="62"/></sdl:cxts><trans-unit id="4111770a-5a80-44bf-884a-a9c69e4a8910"><source>As the <g id="429">paint()</g> implementation below draws a simple drop shadow down and to the right of the item, we return a slightly adjusted rectangle from <g id="432">boundingRect()</g>.</source><seg-source><mrk mtype="seg" mid="61">As the <g id="429">paint()</g> implementation below draws a simple drop shadow down and to the right of the item, we return a slightly adjusted rectangle from <g id="432">boundingRect()</g>.</mrk></seg-source><target><mrk mtype="seg" mid="61"/></target><sdl:seg-defs><sdl:seg id="61"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="62"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="63"/></sdl:cxts><trans-unit id="c606e0b8-de24-4203-9715-573dadd2199b"><source><g id="435">void</g> RoundRectItem<g id="438">::</g>paint(<g id="441">QPainter</g> <g id="444">*</g>painter<g id="447">,</g> <g id="450">const</g> <g id="453">QStyleOptionGraphicsItem</g> <g id="456">*</g>option<g id="459">,</g> <g id="462">QWidget</g> <g id="465">*</g>widget) { Q_UNUSED(option); Q_UNUSED(widget); painter<g id="468">-</g><g id="471">&gt;</g>setPen(<g id="474">Qt</g><g id="477">::</g>NoPen); painter<g id="480">-</g><g id="483">&gt;</g>setBrush(<g id="486">QColor</g>(<g id="489">0</g><g id="492">,</g> <g id="495">0</g><g id="498">,</g> <g id="501">0</g><g id="504">,</g> <g id="507">64</g>)); painter<g id="510">-</g><g id="513">&gt;</g>drawRoundRect(bounds<g id="516">.</g>translated(<g id="519">2</g><g id="522">,</g> <g id="525">2</g>));</source><seg-source><mrk mtype="seg" mid="62"><g id="435">void</g> RoundRectItem<g id="438">::</g>paint(<g id="441">QPainter</g> <g id="444">*</g>painter<g id="447">,</g> <g id="450">const</g> <g id="453">QStyleOptionGraphicsItem</g> <g id="456">*</g>option<g id="459">,</g> <g id="462">QWidget</g> <g id="465">*</g>widget) { Q_UNUSED(option); Q_UNUSED(widget); painter<g id="468">-</g><g id="471">&gt;</g>setPen(<g id="474">Qt</g><g id="477">::</g>NoPen); painter<g id="480">-</g><g id="483">&gt;</g>setBrush(<g id="486">QColor</g>(<g id="489">0</g><g id="492">,</g> <g id="495">0</g><g id="498">,</g> <g id="501">0</g><g id="504">,</g> <g id="507">64</g>)); painter<g id="510">-</g><g id="513">&gt;</g>drawRoundRect(bounds<g id="516">.</g>translated(<g id="519">2</g><g id="522">,</g> <g id="525">2</g>));</mrk></seg-source><target><mrk mtype="seg" mid="62"/></target><sdl:seg-defs><sdl:seg id="62"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="63"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="64"/></sdl:cxts><trans-unit id="8a949331-23bb-4bc4-b6e3-1bce00b88029"><source>The <g id="528">paint()</g> implementation starts by rendering a semi transparent black round rectangle drop shadow, two units down and to the right of the main item.</source><seg-source><mrk mtype="seg" mid="63">The <g id="528">paint()</g> implementation starts by rendering a semi transparent black round rectangle drop shadow, two units down and to the right of the main item.</mrk></seg-source><target><mrk mtype="seg" mid="63"/></target><sdl:seg-defs><sdl:seg id="63"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="64"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="65"/></sdl:cxts><trans-unit id="8d97b72b-17da-4cb7-8174-3c32d9bb5c16"><source><g id="531">if</g> (fillRect) painter<g id="534">-</g><g id="537">&gt;</g>setBrush(<g id="540">QApplication</g><g id="543">::</g>palette()<g id="546">.</g>brush(<g id="549">QPalette</g><g id="552">::</g>Window)); <g id="555">else</g> painter<g id="558">-</g><g id="561">&gt;</g>setBrush(gradient); painter<g id="564">-</g><g id="567">&gt;</g>setPen(<g id="570">QPen</g>(<g id="573">Qt</g><g id="576">::</g>black<g id="579">,</g> <g id="582">1</g>)); painter<g id="585">-</g><g id="588">&gt;</g>drawRoundRect(bounds);</source><seg-source><mrk mtype="seg" mid="64"><g id="531">if</g> (fillRect) painter<g id="534">-</g><g id="537">&gt;</g>setBrush(<g id="540">QApplication</g><g id="543">::</g>palette()<g id="546">.</g>brush(<g id="549">QPalette</g><g id="552">::</g>Window)); <g id="555">else</g> painter<g id="558">-</g><g id="561">&gt;</g>setBrush(gradient); painter<g id="564">-</g><g id="567">&gt;</g>setPen(<g id="570">QPen</g>(<g id="573">Qt</g><g id="576">::</g>black<g id="579">,</g> <g id="582">1</g>)); painter<g id="585">-</g><g id="588">&gt;</g>drawRoundRect(bounds);</mrk></seg-source><target><mrk mtype="seg" mid="64"/></target><sdl:seg-defs><sdl:seg id="64"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="65"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="66"/></sdl:cxts><trans-unit id="lockTU_2abc7a99-c75e-4ee4-82a3-d192d9762844" translate="no" sdl:locktype="Structure"><source><g id="591">fill</g></source></trans-unit><trans-unit id="lockTU_2425f98c-73f9-48cf-b7cb-ba0c6f148b9e" translate="no" sdl:locktype="Structure"><source><g id="591">fill</g></source></trans-unit><trans-unit id="94d0a133-b766-4442-8b2a-843f9ac97d01"><source>We then draw the &quot;foreground&quot; round rectangle itself. The fill depends on the <x id="locked55" xid="lockTU_2425f98c-73f9-48cf-b7cb-ba0c6f148b9e"/> property; if true, we will with a plain <g id="594">QPalette::Window</g> color. We get the current brush from <g id="597">QApplication::palette</g>(). We assign a single unit wide pen for the stroke, assign the brush, and then draw the rectangle.</source><seg-source><mrk mtype="seg" mid="65">We then draw the &quot;foreground&quot; round rectangle itself.</mrk> <mrk mtype="seg" mid="66">The fill depends on the <x id="locked56" xid="lockTU_2abc7a99-c75e-4ee4-82a3-d192d9762844"/> property; if true, we will with a plain <g id="594">QPalette::Window</g> color.</mrk> <mrk mtype="seg" mid="67">We get the current brush from <g id="597">QApplication::palette</g>().</mrk> <mrk mtype="seg" mid="68">We assign a single unit wide pen for the stroke, assign the brush, and then draw the rectangle.</mrk></seg-source><target><mrk mtype="seg" mid="65"/> <mrk mtype="seg" mid="66"/> <mrk mtype="seg" mid="67"/> <mrk mtype="seg" mid="68"/></target><sdl:seg-defs><sdl:seg id="65"/><sdl:seg id="66"/><sdl:seg id="67"/><sdl:seg id="68"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="66"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="67"/></sdl:cxts><trans-unit id="a2740dad-5829-416f-b0b9-2ce1c600b00e"><source><g id="600">if</g> (<g id="603">!</g>pix<g id="606">.</g>isNull()) { painter<g id="609">-</g><g id="612">&gt;</g>scale(<g id="615">1.95</g><g id="618">,</g> <g id="621">1.95</g>); painter<g id="624">-</g><g id="627">&gt;</g>drawPixmap(<g id="630">-</g>pix<g id="633">.</g>width() <g id="636">/</g> <g id="639">2</g><g id="642">,</g> <g id="645">-</g>pix<g id="648">.</g>height() <g id="651">/</g> <g id="654">2</g><g id="657">,</g> pix); } }</source><seg-source><mrk mtype="seg" mid="69"><g id="600">if</g> (<g id="603">!</g>pix<g id="606">.</g>isNull()) { painter<g id="609">-</g><g id="612">&gt;</g>scale(<g id="615">1.95</g><g id="618">,</g> <g id="621">1.95</g>); painter<g id="624">-</g><g id="627">&gt;</g>drawPixmap(<g id="630">-</g>pix<g id="633">.</g>width() <g id="636">/</g> <g id="639">2</g><g id="642">,</g> <g id="645">-</g>pix<g id="648">.</g>height() <g id="651">/</g> <g id="654">2</g><g id="657">,</g> pix); } }</mrk></seg-source><target><mrk mtype="seg" mid="69"/></target><sdl:seg-defs><sdl:seg id="69"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="67"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="68"/></sdl:cxts><trans-unit id="c8392854-5c13-4988-b6ef-018c2005053f"><source>If a pixmap has been assigned to the <g id="660">pixmap</g> property, we draw this pixmap in the center of the rectangle item. The pixmaps are scaled to match the size of the icons; in arguably a better approach would have been to store the icons with the right size in the first places.</source><seg-source><mrk mtype="seg" mid="70">If a pixmap has been assigned to the <g id="660">pixmap</g> property, we draw this pixmap in the center of the rectangle item.</mrk> <mrk mtype="seg" mid="71">The pixmaps are scaled to match the size of the icons; in arguably a better approach would have been to store the icons with the right size in the first places.</mrk></seg-source><target><mrk mtype="seg" mid="70"/> <mrk mtype="seg" mid="71"/></target><sdl:seg-defs><sdl:seg id="70"/><sdl:seg id="71"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="68"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="69"/></sdl:cxts><trans-unit id="55e0ee16-26c1-4f8c-b66c-ed2f3ec89442"><source>bool RoundRectItem<g id="663">::</g>fill() <g id="666">const</g> { <g id="669">return</g> fillRect; } <g id="672">void</g> RoundRectItem<g id="675">::</g>setFill(bool fill) { fillRect <g id="678">=</g> fill; update(); }</source><seg-source><mrk mtype="seg" mid="72">bool RoundRectItem<g id="663">::</g>fill() <g id="666">const</g> { <g id="669">return</g> fillRect; } <g id="672">void</g> RoundRectItem<g id="675">::</g>setFill(bool fill) { fillRect <g id="678">=</g> fill; update(); }</mrk></seg-source><target><mrk mtype="seg" mid="72"/></target><sdl:seg-defs><sdl:seg id="72"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="69"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="70"/></sdl:cxts><trans-unit id="lockTU_adac78b8-5a23-4a2f-a234-6858f97fa494" translate="no" sdl:locktype="Structure"><source><g id="681">fill</g></source></trans-unit><trans-unit id="lockTU_6d763ac5-3877-48ea-b1fe-19f2e3b7c51c" translate="no" sdl:locktype="Structure"><source><g id="684">fill</g></source></trans-unit><trans-unit id="lockTU_891603dc-2a51-4197-8ef2-0032d3099479" translate="no" sdl:locktype="Structure"><source><g id="681">fill</g></source></trans-unit><trans-unit id="lockTU_f3b7d995-3018-4958-9fa8-0902b9327902" translate="no" sdl:locktype="Structure"><source><g id="684">fill</g></source></trans-unit><trans-unit id="efb3fb9c-c9a5-42a0-86cd-0f06aa8cbb7f"><source>Finally, for completeness we include the <x id="locked57" xid="lockTU_891603dc-2a51-4197-8ef2-0032d3099479"/> property implementation. It returns the <x id="locked58" xid="lockTU_f3b7d995-3018-4958-9fa8-0902b9327902"/> member variable&apos;s value, and when assigned to, it calls <g id="687">update()</g>.</source><seg-source><mrk mtype="seg" mid="73">Finally, for completeness we include the <x id="locked59" xid="lockTU_adac78b8-5a23-4a2f-a234-6858f97fa494"/> property implementation.</mrk> <mrk mtype="seg" mid="74">It returns the <x id="locked60" xid="lockTU_6d763ac5-3877-48ea-b1fe-19f2e3b7c51c"/> member variable&apos;s value, and when assigned to, it calls <g id="687">update()</g>.</mrk></seg-source><target><mrk mtype="seg" mid="73"/> <mrk mtype="seg" mid="74"/></target><sdl:seg-defs><sdl:seg id="73"/><sdl:seg id="74"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="70"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="71"/></sdl:cxts><trans-unit id="lockTU_2285392b-2b36-4395-ad72-8bcf26f4e677" translate="no" sdl:locktype="Structure"><source><g id="690">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_82e53116-e87b-4af9-96fb-c63ad4236ba7" translate="no" sdl:locktype="Structure"><source><g id="693">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_b154207d-c85d-4710-8942-91864754c9ba" translate="no" sdl:locktype="Structure"><source><g id="696">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_123a9ccc-37bb-49cb-9a8e-cec9adf410dc" translate="no" sdl:locktype="Structure"><source><g id="690">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_7f3f4198-931f-4511-9f4b-be3920959130" translate="no" sdl:locktype="Structure"><source><g id="693">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_bdea043c-e535-41ed-9a7e-91a933377d23" translate="no" sdl:locktype="Structure"><source><g id="696">FlippablePad</g></source></trans-unit><trans-unit id="9d6eb197-f333-4509-babd-f67119186f77"><source>As mentioned already, <x id="locked61" xid="lockTU_123a9ccc-37bb-49cb-9a8e-cec9adf410dc"/> is the base class for <x id="locked62" xid="lockTU_7f3f4198-931f-4511-9f4b-be3920959130"/>, which is the class representing the tilting pad itself. We will proceed to reviewing <x id="locked63" xid="lockTU_bdea043c-e535-41ed-9a7e-91a933377d23"/>.</source><seg-source><mrk mtype="seg" mid="75">As mentioned already, <x id="locked64" xid="lockTU_2285392b-2b36-4395-ad72-8bcf26f4e677"/> is the base class for <x id="locked65" xid="lockTU_82e53116-e87b-4af9-96fb-c63ad4236ba7"/>, which is the class representing the tilting pad itself.</mrk> <mrk mtype="seg" mid="76">We will proceed to reviewing <x id="locked66" xid="lockTU_b154207d-c85d-4710-8942-91864754c9ba"/>.</mrk></seg-source><target><mrk mtype="seg" mid="75"/> <mrk mtype="seg" mid="76"/></target><sdl:seg-defs><sdl:seg id="75"/><sdl:seg id="76"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="71"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="33"/></sdl:cxts><trans-unit id="d25786fa-7fac-437c-b68e-f2bbd1cf70e5"><source><g id="699"/></source><seg-source><g id="699"/></seg-source><target><g id="699"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="72"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="72"/></sdl:cxts><trans-unit id="91beca5b-7034-4392-85fc-790c32e71289"><source>FlippablePad Class Definition</source><seg-source><mrk mtype="seg" mid="77">FlippablePad Class Definition</mrk></seg-source><target><mrk mtype="seg" mid="77"/></target><sdl:seg-defs><sdl:seg id="77"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="73"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="73"/></sdl:cxts><trans-unit id="lockTU_a0c42125-e1c6-4f53-ab74-0960dd1d851d" translate="no" sdl:locktype="Structure"><source><g id="702">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_3461e5d2-3b26-408d-a866-f3e7a23b71f8" translate="no" sdl:locktype="Structure"><source><g id="702">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_c8e636d7-73e0-4374-99b7-0f64a3dff974" translate="no" sdl:locktype="Structure"><source><g id="705">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_852375fd-4ded-4142-9668-58571b9711e8" translate="no" sdl:locktype="Structure"><source><g id="702">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_791c2da8-3fb5-44fb-9141-ad97c6373d68" translate="no" sdl:locktype="Structure"><source><g id="705">RoundRectItem</g></source></trans-unit><trans-unit id="d8d45d37-02ac-4f1c-9291-9c906209f273"><source><x id="locked67" xid="lockTU_852375fd-4ded-4142-9668-58571b9711e8"/> is, in addition to its inherited <x id="locked68" xid="lockTU_791c2da8-3fb5-44fb-9141-ad97c6373d68"/> responsibilities, responsible for creating and managing a grid of icons.</source><seg-source><x id="locked69" xid="lockTU_3461e5d2-3b26-408d-a866-f3e7a23b71f8"/> <mrk mtype="seg" mid="78">is, in addition to its inherited <x id="locked70" xid="lockTU_c8e636d7-73e0-4374-99b7-0f64a3dff974"/> responsibilities, responsible for creating and managing a grid of icons.</mrk></seg-source><target><x id="locked71" xid="lockTU_a0c42125-e1c6-4f53-ab74-0960dd1d851d"/> <mrk mtype="seg" mid="78"/></target><sdl:seg-defs><sdl:seg id="78"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="74"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="74"/></sdl:cxts><trans-unit id="2b90c9ed-9874-4011-b4da-7a90c56b6331"><source><g id="708">class</g> FlippablePad : <g id="711">public</g> RoundRectItem { <g id="714">public</g>: <g id="717">explicit</g> FlippablePad(<g id="720">const</g> <g id="723">QSize</g> <g id="726">&amp;</g>size<g id="729">,</g> <g id="732">QGraphicsItem</g> <g id="735">*</g>parent <g id="738">=</g> <g id="741">0</g>); RoundRectItem <g id="744">*</g>iconAt(<g id="747">int</g> column<g id="750">,</g> <g id="753">int</g> row) <g id="756">const</g>; <g id="759">private</g>: <g id="762">QVector</g><g id="765">&lt;</g><g id="768">QVector</g><g id="771">&lt;</g>RoundRectItem <g id="774">*</g><g id="777">&gt;</g> <g id="780">&gt;</g> iconGrid; };</source><seg-source><mrk mtype="seg" mid="79"><g id="708">class</g> FlippablePad : <g id="711">public</g> RoundRectItem { <g id="714">public</g>:</mrk> <mrk mtype="seg" mid="80"><g id="717">explicit</g> FlippablePad(<g id="720">const</g> <g id="723">QSize</g> <g id="726">&amp;</g>size<g id="729">,</g> <g id="732">QGraphicsItem</g> <g id="735">*</g>parent <g id="738">=</g> <g id="741">0</g>); RoundRectItem <g id="744">*</g>iconAt(<g id="747">int</g> column<g id="750">,</g> <g id="753">int</g> row) <g id="756">const</g>; <g id="759">private</g>:</mrk> <mrk mtype="seg" mid="81"><g id="762">QVector</g><g id="765">&lt;</g><g id="768">QVector</g><g id="771">&lt;</g>RoundRectItem <g id="774">*</g><g id="777">&gt;</g> <g id="780">&gt;</g> iconGrid; };</mrk></seg-source><target><mrk mtype="seg" mid="79"/> <mrk mtype="seg" mid="80"/> <mrk mtype="seg" mid="81"/></target><sdl:seg-defs><sdl:seg id="79"/><sdl:seg id="80"/><sdl:seg id="81"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="75"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="75"/></sdl:cxts><trans-unit id="lockTU_4392d513-c13e-494d-a5da-47a22f3ba9e9" translate="no" sdl:locktype="Structure"><source><g id="783">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_f7736e76-119e-4441-942c-d15f89280d9d" translate="no" sdl:locktype="Structure"><source><g id="786">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_03e2c3a5-94ab-4450-a1e1-da69bf6273f1" translate="no" sdl:locktype="Structure"><source><g id="783">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_9b93a3aa-bce1-4fff-bf0e-5c901b6d1166" translate="no" sdl:locktype="Structure"><source><g id="786">PadNavigator</g></source></trans-unit><trans-unit id="081d9f06-e3b1-470a-9b49-33b30f4e286f"><source>Its declaration is very simple: It inherits <x id="locked72" xid="lockTU_03e2c3a5-94ab-4450-a1e1-da69bf6273f1"/> and does not need any special polymorphic behavior. It&apos;s suitable to declare its own constructor, and a getter-function that allows <x id="locked73" xid="lockTU_9b93a3aa-bce1-4fff-bf0e-5c901b6d1166"/> to access the icons in the grid by (row, column).</source><seg-source><mrk mtype="seg" mid="82">Its declaration is very simple:</mrk> <mrk mtype="seg" mid="83">It inherits <x id="locked74" xid="lockTU_4392d513-c13e-494d-a5da-47a22f3ba9e9"/> and does not need any special polymorphic behavior.</mrk> <mrk mtype="seg" mid="84">It&apos;s suitable to declare its own constructor, and a getter-function that allows <x id="locked75" xid="lockTU_f7736e76-119e-4441-942c-d15f89280d9d"/> to access the icons in the grid by (row, column).</mrk></seg-source><target><mrk mtype="seg" mid="82"/> <mrk mtype="seg" mid="83"/> <mrk mtype="seg" mid="84"/></target><sdl:seg-defs><sdl:seg id="82"/><sdl:seg id="83"/><sdl:seg id="84"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="76"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="76"/></sdl:cxts><trans-unit id="lockTU_6d8b3445-af65-41f9-8af9-4c567208d617" translate="no" sdl:locktype="Structure"><source><g id="792">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_4a098956-cab2-42f9-8c9f-607b8541b6f9" translate="no" sdl:locktype="Structure"><source><g id="795">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_8842d9b8-c3a9-4fd5-aec0-a142590a5575" translate="no" sdl:locktype="Structure"><source><g id="792">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_baa961ed-9f59-4af9-ae75-1aff2fa06ded" translate="no" sdl:locktype="Structure"><source><g id="795">PadNavigator</g></source></trans-unit><trans-unit id="d85d1e56-1a1c-4feb-9228-3e933e328fe9"><source>The example has no &quot;real&quot; behavior or logic of any kind, and because of that, the icons do not need to provide any <g id="789">behavior</g> or special interactions management. In a real application, however, it would be natural for the <x id="locked76" xid="lockTU_8842d9b8-c3a9-4fd5-aec0-a142590a5575"/> and its icons to handle more of the navigation logic. In this example, we have chosen to leave this to the <x id="locked77" xid="lockTU_baa961ed-9f59-4af9-ae75-1aff2fa06ded"/> class, which we will get back to below.</source><seg-source><mrk mtype="seg" mid="85">The example has no &quot;real&quot; behavior or logic of any kind, and because of that, the icons do not need to provide any <g id="789">behavior</g> or special interactions management.</mrk> <mrk mtype="seg" mid="86">In a real application, however, it would be natural for the <x id="locked78" xid="lockTU_6d8b3445-af65-41f9-8af9-4c567208d617"/> and its icons to handle more of the navigation logic.</mrk> <mrk mtype="seg" mid="87">In this example, we have chosen to leave this to the <x id="locked79" xid="lockTU_4a098956-cab2-42f9-8c9f-607b8541b6f9"/> class, which we will get back to below.</mrk></seg-source><target><mrk mtype="seg" mid="85"/> <mrk mtype="seg" mid="86"/> <mrk mtype="seg" mid="87"/></target><sdl:seg-defs><sdl:seg id="85"/><sdl:seg id="86"/><sdl:seg id="87"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="77"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="77"/></sdl:cxts><trans-unit id="lockTU_d8a0c590-30d1-422c-9c4e-fa0189c2f0e6" translate="no" sdl:locktype="Structure"><source><g id="798">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_d1384378-1789-4649-9909-f48328704021" translate="no" sdl:locktype="Structure"><source><g id="801">boundsFromSize()</g></source></trans-unit><trans-unit id="lockTU_51b1c04c-f36c-4608-845f-15caa20859d3" translate="no" sdl:locktype="Structure"><source><g id="804">posForLocation()</g></source></trans-unit><trans-unit id="lockTU_7a101b78-fcb1-4e1f-b584-04cbc649e261" translate="no" sdl:locktype="Structure"><source><g id="798">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_6a400574-7cc4-46ef-8340-22811cbb29f1" translate="no" sdl:locktype="Structure"><source><g id="801">boundsFromSize()</g></source></trans-unit><trans-unit id="lockTU_f6eae88b-ee88-408a-8601-4070df0044a9" translate="no" sdl:locktype="Structure"><source><g id="804">posForLocation()</g></source></trans-unit><trans-unit id="7c522a01-2c99-4014-aeb3-ff24c47a5621"><source>We will now review the <x id="locked80" xid="lockTU_7a101b78-fcb1-4e1f-b584-04cbc649e261"/> implementation. This implementation starts with two helper functions: <x id="locked81" xid="lockTU_6a400574-7cc4-46ef-8340-22811cbb29f1"/> and <x id="locked82" xid="lockTU_f6eae88b-ee88-408a-8601-4070df0044a9"/>:</source><seg-source><mrk mtype="seg" mid="88">We will now review the <x id="locked83" xid="lockTU_d8a0c590-30d1-422c-9c4e-fa0189c2f0e6"/> implementation.</mrk> <mrk mtype="seg" mid="89">This implementation starts with two helper functions:</mrk> <mrk mtype="seg" mid="90"><x id="locked84" xid="lockTU_d1384378-1789-4649-9909-f48328704021"/> and <x id="locked85" xid="lockTU_51b1c04c-f36c-4608-845f-15caa20859d3"/>:</mrk></seg-source><target><mrk mtype="seg" mid="88"/> <mrk mtype="seg" mid="89"/> <mrk mtype="seg" mid="90"/></target><sdl:seg-defs><sdl:seg id="88"/><sdl:seg id="89"/><sdl:seg id="90"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="78"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="78"/></sdl:cxts><trans-unit id="b8770d17-1309-40f1-843a-a2d960034cea"><source><g id="807">static</g> <g id="810">QRectF</g> boundsFromSize(<g id="813">const</g> <g id="816">QSize</g> <g id="819">&amp;</g>size) { <g id="822">return</g> <g id="825">QRectF</g>((<g id="828">-</g>size<g id="831">.</g>width() <g id="834">/</g> <g id="837">2.0</g>) <g id="840">*</g> <g id="843">150</g><g id="846">,</g> (<g id="849">-</g>size<g id="852">.</g>height() <g id="855">/</g> <g id="858">2.0</g>) <g id="861">*</g> <g id="864">150</g><g id="867">,</g> size<g id="870">.</g>width() <g id="873">*</g> <g id="876">150</g><g id="879">,</g> size<g id="882">.</g>height() <g id="885">*</g> <g id="888">150</g>); }</source><seg-source><mrk mtype="seg" mid="91"><g id="807">static</g> <g id="810">QRectF</g> boundsFromSize(<g id="813">const</g> <g id="816">QSize</g> <g id="819">&amp;</g>size) { <g id="822">return</g> <g id="825">QRectF</g>((<g id="828">-</g>size<g id="831">.</g>width() <g id="834">/</g> <g id="837">2.0</g>) <g id="840">*</g> <g id="843">150</g><g id="846">,</g> (<g id="849">-</g>size<g id="852">.</g>height() <g id="855">/</g> <g id="858">2.0</g>) <g id="861">*</g> <g id="864">150</g><g id="867">,</g> size<g id="870">.</g>width() <g id="873">*</g> <g id="876">150</g><g id="879">,</g> size<g id="882">.</g>height() <g id="885">*</g> <g id="888">150</g>); }</mrk></seg-source><target><mrk mtype="seg" mid="91"/></target><sdl:seg-defs><sdl:seg id="91"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="79"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="79"/></sdl:cxts><trans-unit id="lockTU_2c61635a-c6f5-4790-bca5-4c5698f7f7f3" translate="no" sdl:locktype="Structure"><source><g id="891">boundsForSize()</g></source></trans-unit><trans-unit id="lockTU_7ccbec46-8b19-4632-a01e-568c37632399" translate="no" sdl:locktype="Structure"><source><g id="891">boundsForSize()</g></source></trans-unit><trans-unit id="lockTU_510d72fa-c220-427b-8f45-7daa5f1821af" translate="no" sdl:locktype="Structure"><source><g id="891">boundsForSize()</g></source></trans-unit><trans-unit id="e0205c10-f9b8-42ad-a6a5-70bdf2674cff"><source><x id="locked86" xid="lockTU_510d72fa-c220-427b-8f45-7daa5f1821af"/> takes a <g id="894">QSize</g> argument, and returns the bounding rectangle of the flippable pad item. The <g id="897">QSize</g> determines how many rows and columns the icon grid should have. Each icon is given 150x150 units of space, and this determines the bounds.</source><seg-source><x id="locked87" xid="lockTU_7ccbec46-8b19-4632-a01e-568c37632399"/> <mrk mtype="seg" mid="92">takes a <g id="894">QSize</g> argument, and returns the bounding rectangle of the flippable pad item.</mrk> <mrk mtype="seg" mid="93">The <g id="897">QSize</g> determines how many rows and columns the icon grid should have.</mrk> <mrk mtype="seg" mid="94">Each icon is given 150x150 units of space, and this determines the bounds.</mrk></seg-source><target><x id="locked88" xid="lockTU_2c61635a-c6f5-4790-bca5-4c5698f7f7f3"/> <mrk mtype="seg" mid="92"/> <mrk mtype="seg" mid="93"/> <mrk mtype="seg" mid="94"/></target><sdl:seg-defs><sdl:seg id="92"/><sdl:seg id="93"/><sdl:seg id="94"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="80"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="80"/></sdl:cxts><trans-unit id="e672b82a-5d31-4c68-94a5-72cd2ba2f587"><source><g id="900">static</g> <g id="903">QPointF</g> posForLocation(<g id="906">int</g> column<g id="909">,</g> <g id="912">int</g> row<g id="915">,</g> <g id="918">const</g> <g id="921">QSize</g> <g id="924">&amp;</g>size) { <g id="927">return</g> <g id="930">QPointF</g>(column <g id="933">*</g> <g id="936">150</g><g id="939">,</g> row <g id="942">*</g> <g id="945">150</g>) <g id="948">-</g> <g id="951">QPointF</g>((size<g id="954">.</g>width() <g id="957">-</g> <g id="960">1</g>) <g id="963">*</g> <g id="966">75</g><g id="969">,</g> (size<g id="972">.</g>height() <g id="975">-</g> <g id="978">1</g>) <g id="981">*</g> <g id="984">75</g>); }</source><seg-source><mrk mtype="seg" mid="95"><g id="900">static</g> <g id="903">QPointF</g> posForLocation(<g id="906">int</g> column<g id="909">,</g> <g id="912">int</g> row<g id="915">,</g> <g id="918">const</g> <g id="921">QSize</g> <g id="924">&amp;</g>size) { <g id="927">return</g> <g id="930">QPointF</g>(column <g id="933">*</g> <g id="936">150</g><g id="939">,</g> row <g id="942">*</g> <g id="945">150</g>) <g id="948">-</g> <g id="951">QPointF</g>((size<g id="954">.</g>width() <g id="957">-</g> <g id="960">1</g>) <g id="963">*</g> <g id="966">75</g><g id="969">,</g> (size<g id="972">.</g>height() <g id="975">-</g> <g id="978">1</g>) <g id="981">*</g> <g id="984">75</g>); }</mrk></seg-source><target><mrk mtype="seg" mid="95"/></target><sdl:seg-defs><sdl:seg id="95"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="81"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="81"/></sdl:cxts><trans-unit id="lockTU_8538fea5-a164-4699-ae83-259b1dc5f405" translate="no" sdl:locktype="Structure"><source><g id="987">posForLocation()</g></source></trans-unit><trans-unit id="lockTU_b5c7c754-424a-47c6-8d5e-acba822532d3" translate="no" sdl:locktype="Structure"><source><g id="987">posForLocation()</g></source></trans-unit><trans-unit id="lockTU_a9c9119d-07b8-4ad2-96da-9088aa0651a9" translate="no" sdl:locktype="Structure"><source><g id="990">boundsForSize()</g></source></trans-unit><trans-unit id="lockTU_1c9a5ad7-2303-43fe-81de-a5c7bda92e8e" translate="no" sdl:locktype="Structure"><source><g id="987">posForLocation()</g></source></trans-unit><trans-unit id="lockTU_537bb671-c547-4db8-ad83-c2013891501d" translate="no" sdl:locktype="Structure"><source><g id="990">boundsForSize()</g></source></trans-unit><trans-unit id="f941ab9b-52f7-4e64-b626-17ca2cee1b22"><source><x id="locked89" xid="lockTU_1c9a5ad7-2303-43fe-81de-a5c7bda92e8e"/> returns the position of an icon given its row and column position. Like <x id="locked90" xid="lockTU_537bb671-c547-4db8-ad83-c2013891501d"/>, the function assumes each icon is given 150x150 units of space, and that all icons are centered around the flippable pad item&apos;s origin (0, 0).</source><seg-source><x id="locked91" xid="lockTU_b5c7c754-424a-47c6-8d5e-acba822532d3"/> <mrk mtype="seg" mid="96">returns the position of an icon given its row and column position.</mrk> <mrk mtype="seg" mid="97">Like <x id="locked92" xid="lockTU_a9c9119d-07b8-4ad2-96da-9088aa0651a9"/>, the function assumes each icon is given 150x150 units of space, and that all icons are centered around the flippable pad item&apos;s origin (0, 0).</mrk></seg-source><target><x id="locked93" xid="lockTU_8538fea5-a164-4699-ae83-259b1dc5f405"/> <mrk mtype="seg" mid="96"/> <mrk mtype="seg" mid="97"/></target><sdl:seg-defs><sdl:seg id="96"/><sdl:seg id="97"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="82"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="82"/></sdl:cxts><trans-unit id="f4016579-923d-497a-8865-9e4c58e9ac70"><source>FlippablePad<g id="993">::</g>FlippablePad(<g id="996">const</g> <g id="999">QSize</g> <g id="1002">&amp;</g>size<g id="1005">,</g> <g id="1008">QGraphicsItem</g> <g id="1011">*</g>parent) : RoundRectItem(boundsFromSize(size)<g id="1014">,</g> <g id="1017">QColor</g>(<g id="1020">226</g><g id="1023">,</g> <g id="1026">255</g><g id="1029">,</g> <g id="1032">92</g><g id="1035">,</g> <g id="1038">64</g>)<g id="1041">,</g> parent) {</source><seg-source><mrk mtype="seg" mid="98">FlippablePad<g id="993">::</g>FlippablePad(<g id="996">const</g> <g id="999">QSize</g> <g id="1002">&amp;</g>size<g id="1005">,</g> <g id="1008">QGraphicsItem</g> <g id="1011">*</g>parent) :</mrk> <mrk mtype="seg" mid="99">RoundRectItem(boundsFromSize(size)<g id="1014">,</g> <g id="1017">QColor</g>(<g id="1020">226</g><g id="1023">,</g> <g id="1026">255</g><g id="1029">,</g> <g id="1032">92</g><g id="1035">,</g> <g id="1038">64</g>)<g id="1041">,</g> parent) {</mrk></seg-source><target><mrk mtype="seg" mid="98"/> <mrk mtype="seg" mid="99"/></target><sdl:seg-defs><sdl:seg id="98"/><sdl:seg id="99"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="83"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="83"/></sdl:cxts><trans-unit id="lockTU_b802801e-b1b0-488b-9cfb-061dfae54885" translate="no" sdl:locktype="Structure"><source><g id="1044">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_a516e201-ecf8-4908-832c-0eb75f262336" translate="no" sdl:locktype="Structure"><source><g id="1047">boundsForSize()</g></source></trans-unit><trans-unit id="lockTU_4a051798-ff8c-431e-9f59-2bf233215c93" translate="no" sdl:locktype="Structure"><source><g id="1050">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_8e1632fb-6b3c-474b-8b7b-15b52b97e26a" translate="no" sdl:locktype="Structure"><source><g id="1044">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_e103271e-7244-4d65-92a5-d269f628b5b9" translate="no" sdl:locktype="Structure"><source><g id="1047">boundsForSize()</g></source></trans-unit><trans-unit id="lockTU_378418f7-d75e-4149-a8ae-61de52a81412" translate="no" sdl:locktype="Structure"><source><g id="1050">RoundRectItem</g></source></trans-unit><trans-unit id="6143eb0c-db98-4631-a264-532efd204548"><source>The <x id="locked94" xid="lockTU_8e1632fb-6b3c-474b-8b7b-15b52b97e26a"/> constructor passes suitable bounds (using <x id="locked95" xid="lockTU_e103271e-7244-4d65-92a5-d269f628b5b9"/>) and specific color to <x id="locked96" xid="lockTU_378418f7-d75e-4149-a8ae-61de52a81412"/>&apos;s constructor.</source><seg-source><mrk mtype="seg" mid="100">The <x id="locked97" xid="lockTU_b802801e-b1b0-488b-9cfb-061dfae54885"/> constructor passes suitable bounds (using <x id="locked98" xid="lockTU_a516e201-ecf8-4908-832c-0eb75f262336"/>) and specific color to <x id="locked99" xid="lockTU_4a051798-ff8c-431e-9f59-2bf233215c93"/>&apos;s constructor.</mrk></seg-source><target><mrk mtype="seg" mid="100"/></target><sdl:seg-defs><sdl:seg id="100"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="84"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="84"/></sdl:cxts><trans-unit id="471f6289-4c36-4a14-b6d3-bd7aee4ab5da"><source><g id="1053">int</g> numIcons <g id="1056">=</g> size<g id="1059">.</g>width() <g id="1062">*</g> size<g id="1065">.</g>height(); <g id="1068">QList</g><g id="1071">&lt;</g><g id="1074">QPixmap</g><g id="1077">&gt;</g> pixmaps; <g id="1080">QDirIterator</g> it(<g id="1083">&quot;:/images&quot;</g><g id="1086">,</g> <g id="1089">QStringList</g>() <g id="1092">&lt;</g><g id="1095">&lt;</g> <g id="1098">&quot;*.png&quot;</g>); <g id="1101">while</g> (it<g id="1104">.</g>hasNext() <g id="1107">&amp;</g><g id="1110">&amp;</g> pixmaps<g id="1113">.</g>size() <g id="1116">&lt;</g> numIcons) pixmaps <g id="1119">&lt;</g><g id="1122">&lt;</g> it<g id="1125">.</g>next();</source><seg-source><mrk mtype="seg" mid="101"><g id="1053">int</g> numIcons <g id="1056">=</g> size<g id="1059">.</g>width() <g id="1062">*</g> size<g id="1065">.</g>height(); <g id="1068">QList</g><g id="1071">&lt;</g><g id="1074">QPixmap</g><g id="1077">&gt;</g> pixmaps; <g id="1080">QDirIterator</g> it(<g id="1083">&quot;:/images&quot;</g><g id="1086">,</g> <g id="1089">QStringList</g>() <g id="1092">&lt;</g><g id="1095">&lt;</g> <g id="1098">&quot;*.png&quot;</g>); <g id="1101">while</g> (it<g id="1104">.</g>hasNext() <g id="1107">&amp;</g><g id="1110">&amp;</g> pixmaps<g id="1113">.</g>size() <g id="1116">&lt;</g> numIcons) pixmaps <g id="1119">&lt;</g><g id="1122">&lt;</g> it<g id="1125">.</g>next();</mrk></seg-source><target><mrk mtype="seg" mid="101"/></target><sdl:seg-defs><sdl:seg id="101"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="85"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="85"/></sdl:cxts><trans-unit id="lockTU_3828bd7c-eaa4-4e35-96b4-7d36986ac773" translate="no" sdl:locktype="Structure"><source><g id="1131">:/images</g></source></trans-unit><trans-unit id="lockTU_4289b854-0f53-4580-a033-592211adb282" translate="no" sdl:locktype="Structure"><source><g id="1131">:/images</g></source></trans-unit><trans-unit id="8fa79973-af97-4650-968e-772952a6b8c6"><source>It then loads pixmaps from compiled-in resources to use for its icons. <g id="1128">QDirIterator</g> is very useful in this context, as it allows us to fetch all resource &quot;*.png&quot; files inside the <x id="locked100" xid="lockTU_4289b854-0f53-4580-a033-592211adb282"/> directory without explicitly naming the files.</source><seg-source><mrk mtype="seg" mid="102">It then loads pixmaps from compiled-in resources to use for its icons.</mrk> <mrk mtype="seg" mid="103"><g id="1128">QDirIterator</g> is very useful in this context, as it allows us to fetch all resource &quot;*.png&quot; files inside the <x id="locked101" xid="lockTU_3828bd7c-eaa4-4e35-96b4-7d36986ac773"/> directory without explicitly naming the files.</mrk></seg-source><target><mrk mtype="seg" mid="102"/> <mrk mtype="seg" mid="103"/></target><sdl:seg-defs><sdl:seg id="102"/><sdl:seg id="103"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="86"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="86"/></sdl:cxts><trans-unit id="1512ae2f-7796-434d-9d99-96a538014132"><source>We also make sure not to load more pixmaps than we need.</source><seg-source><mrk mtype="seg" mid="104">We also make sure not to load more pixmaps than we need.</mrk></seg-source><target><mrk mtype="seg" mid="104"/></target><sdl:seg-defs><sdl:seg id="104"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="87"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="87"/></sdl:cxts><trans-unit id="34647e6b-5545-434c-9b8c-6db500c774de"><source><g id="1134">const</g> <g id="1137">QRectF</g> iconRect(<g id="1140">-</g><g id="1143">54</g><g id="1146">,</g> <g id="1149">-</g><g id="1152">54</g><g id="1155">,</g> <g id="1158">108</g><g id="1161">,</g> <g id="1164">108</g>); <g id="1167">const</g> <g id="1170">QColor</g> iconColor(<g id="1173">214</g><g id="1176">,</g> <g id="1179">240</g><g id="1182">,</g> <g id="1185">110</g><g id="1188">,</g> <g id="1191">128</g>); iconGrid<g id="1194">.</g>resize(size<g id="1197">.</g>height()); <g id="1200">int</g> n <g id="1203">=</g> <g id="1206">0</g>; <g id="1209">for</g> (<g id="1212">int</g> y <g id="1215">=</g> <g id="1218">0</g>; y <g id="1221">&lt;</g> size<g id="1224">.</g>height(); <g id="1227">+</g><g id="1230">+</g>y) { iconGrid<g id="1233">[</g>y<g id="1236">]</g><g id="1239">.</g>resize(size<g id="1242">.</g>width()); <g id="1245">for</g> (<g id="1248">int</g> x <g id="1251">=</g> <g id="1254">0</g>; x <g id="1257">&lt;</g> size<g id="1260">.</g>width(); <g id="1263">+</g><g id="1266">+</g>x) { RoundRectItem <g id="1269">*</g>rect <g id="1272">=</g> <g id="1275">new</g> RoundRectItem(iconRect<g id="1278">,</g> iconColor<g id="1281">,</g> <g id="1284">this</g>); rect<g id="1287">-</g><g id="1290">&gt;</g>setZValue(<g id="1293">1</g>); rect<g id="1296">-</g><g id="1299">&gt;</g>setPos(posForLocation(x<g id="1302">,</g> y<g id="1305">,</g> size)); rect<g id="1308">-</g><g id="1311">&gt;</g>setPixmap(pixmaps<g id="1314">.</g>at(n<g id="1317">+</g><g id="1320">+</g> <g id="1323">%</g> pixmaps<g id="1326">.</g>size())); iconGrid<g id="1329">[</g>y<g id="1332">]</g><g id="1335">[</g>x<g id="1338">]</g> <g id="1341">=</g> rect; } } }</source><seg-source><mrk mtype="seg" mid="105"><g id="1134">const</g> <g id="1137">QRectF</g> iconRect(<g id="1140">-</g><g id="1143">54</g><g id="1146">,</g> <g id="1149">-</g><g id="1152">54</g><g id="1155">,</g> <g id="1158">108</g><g id="1161">,</g> <g id="1164">108</g>); <g id="1167">const</g> <g id="1170">QColor</g> iconColor(<g id="1173">214</g><g id="1176">,</g> <g id="1179">240</g><g id="1182">,</g> <g id="1185">110</g><g id="1188">,</g> <g id="1191">128</g>); iconGrid<g id="1194">.</g>resize(size<g id="1197">.</g>height()); <g id="1200">int</g> n <g id="1203">=</g> <g id="1206">0</g>; <g id="1209">for</g> (<g id="1212">int</g> y <g id="1215">=</g> <g id="1218">0</g>; y <g id="1221">&lt;</g> size<g id="1224">.</g>height(); <g id="1227">+</g><g id="1230">+</g>y) { iconGrid<g id="1233">[</g>y<g id="1236">]</g><g id="1239">.</g>resize(size<g id="1242">.</g>width()); <g id="1245">for</g> (<g id="1248">int</g> x <g id="1251">=</g> <g id="1254">0</g>; x <g id="1257">&lt;</g> size<g id="1260">.</g>width(); <g id="1263">+</g><g id="1266">+</g>x) { RoundRectItem <g id="1269">*</g>rect <g id="1272">=</g> <g id="1275">new</g> RoundRectItem(iconRect<g id="1278">,</g> iconColor<g id="1281">,</g> <g id="1284">this</g>); rect<g id="1287">-</g><g id="1290">&gt;</g>setZValue(<g id="1293">1</g>); rect<g id="1296">-</g><g id="1299">&gt;</g>setPos(posForLocation(x<g id="1302">,</g> y<g id="1305">,</g> size)); rect<g id="1308">-</g><g id="1311">&gt;</g>setPixmap(pixmaps<g id="1314">.</g>at(n<g id="1317">+</g><g id="1320">+</g> <g id="1323">%</g> pixmaps<g id="1326">.</g>size())); iconGrid<g id="1329">[</g>y<g id="1332">]</g><g id="1335">[</g>x<g id="1338">]</g> <g id="1341">=</g> rect; } } }</mrk></seg-source><target><mrk mtype="seg" mid="105"/></target><sdl:seg-defs><sdl:seg id="105"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="88"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="88"/></sdl:cxts><trans-unit id="lockTU_598d0382-50bf-459e-b759-287da05be18f" translate="no" sdl:locktype="Structure"><source><g id="1344">iconGrid</g></source></trans-unit><trans-unit id="lockTU_0ec557e3-c280-4787-83c1-3d98948e209f" translate="no" sdl:locktype="Structure"><source><g id="1344">iconGrid</g></source></trans-unit><trans-unit id="7eaa53e3-b577-4a01-8ae7-1005b7de8c28"><source>Now that we have the pixmaps, we can create icons, position then and assign pixmaps. We start by finding a suitable size and color for the icons, and initializing a convenient grid structure for storing the icons. This <x id="locked102" xid="lockTU_0ec557e3-c280-4787-83c1-3d98948e209f"/> is also used later to find the icon for a specific (column, row) location.</source><seg-source><mrk mtype="seg" mid="106">Now that we have the pixmaps, we can create icons, position then and assign pixmaps.</mrk> <mrk mtype="seg" mid="107">We start by finding a suitable size and color for the icons, and initializing a convenient grid structure for storing the icons.</mrk> <mrk mtype="seg" mid="108">This <x id="locked103" xid="lockTU_598d0382-50bf-459e-b759-287da05be18f"/> is also used later to find the icon for a specific (column, row) location.</mrk></seg-source><target><mrk mtype="seg" mid="106"/> <mrk mtype="seg" mid="107"/> <mrk mtype="seg" mid="108"/></target><sdl:seg-defs><sdl:seg id="106"/><sdl:seg id="107"/><sdl:seg id="108"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="89"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="89"/></sdl:cxts><trans-unit id="lockTU_757740df-2fec-4f3d-a9fb-314792253c87" translate="no" sdl:locktype="Structure"><source><g id="1347">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_a8aa50c1-9c9f-43f4-8259-acc1a682998e" translate="no" sdl:locktype="Structure"><source><g id="1350">posForLocation()</g></source></trans-unit><trans-unit id="lockTU_e7720c7a-f422-4d5d-b835-94b727bc8f23" translate="no" sdl:locktype="Structure"><source><g id="1347">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_f08aeaf1-47e2-4216-ad70-e4639ed3efd0" translate="no" sdl:locktype="Structure"><source><g id="1350">posForLocation()</g></source></trans-unit><trans-unit id="6b224911-f5c8-4dca-a55f-774c49c884e4"><source>For each row and column in our grid, we proceed to constructing each icon as an instance of <x id="locked104" xid="lockTU_e7720c7a-f422-4d5d-b835-94b727bc8f23"/>. The item is placed by using the <x id="locked105" xid="lockTU_f08aeaf1-47e2-4216-ad70-e4639ed3efd0"/> helper function. To make room for the slip-behind selection item, we give each icon a <g id="1353">Z-value</g> of 1. The pixmaps are distributed to the icons in round-robin fasion.</source><seg-source><mrk mtype="seg" mid="109">For each row and column in our grid, we proceed to constructing each icon as an instance of <x id="locked106" xid="lockTU_757740df-2fec-4f3d-a9fb-314792253c87"/>.</mrk> <mrk mtype="seg" mid="110">The item is placed by using the <x id="locked107" xid="lockTU_a8aa50c1-9c9f-43f4-8259-acc1a682998e"/> helper function.</mrk> <mrk mtype="seg" mid="111">To make room for the slip-behind selection item, we give each icon a <g id="1353">Z-value</g> of 1.</mrk> <mrk mtype="seg" mid="112">The pixmaps are distributed to the icons in round-robin fasion.</mrk></seg-source><target><mrk mtype="seg" mid="109"/> <mrk mtype="seg" mid="110"/> <mrk mtype="seg" mid="111"/> <mrk mtype="seg" mid="112"/></target><sdl:seg-defs><sdl:seg id="109"/><sdl:seg id="110"/><sdl:seg id="111"/><sdl:seg id="112"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="90"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="90"/></sdl:cxts><trans-unit id="d9342ff9-0f4f-4a23-a4e8-45cc3cf2057d"><source>Again, this approach is only suitable for example purposes. In a real-life application where each icon represents a specific action, it would be more natural to assign the pixmaps directly, or that the icons themselves provide suitable pixmaps.</source><seg-source><mrk mtype="seg" mid="113">Again, this approach is only suitable for example purposes.</mrk> <mrk mtype="seg" mid="114">In a real-life application where each icon represents a specific action, it would be more natural to assign the pixmaps directly, or that the icons themselves provide suitable pixmaps.</mrk></seg-source><target><mrk mtype="seg" mid="113"/> <mrk mtype="seg" mid="114"/></target><sdl:seg-defs><sdl:seg id="113"/><sdl:seg id="114"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="91"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="91"/></sdl:cxts><trans-unit id="0486895e-c3a2-4eb4-90df-610203375527"><source>RoundRectItem <g id="1356">*</g>FlippablePad<g id="1359">::</g>iconAt(<g id="1362">int</g> column<g id="1365">,</g> <g id="1368">int</g> row) <g id="1371">const</g> { <g id="1374">return</g> iconGrid<g id="1377">[</g>row<g id="1380">]</g><g id="1383">[</g>column<g id="1386">]</g>; }</source><seg-source><mrk mtype="seg" mid="115">RoundRectItem <g id="1356">*</g>FlippablePad<g id="1359">::</g>iconAt(<g id="1362">int</g> column<g id="1365">,</g> <g id="1368">int</g> row) <g id="1371">const</g> { <g id="1374">return</g> iconGrid<g id="1377">[</g>row<g id="1380">]</g><g id="1383">[</g>column<g id="1386">]</g>; }</mrk></seg-source><target><mrk mtype="seg" mid="115"/></target><sdl:seg-defs><sdl:seg id="115"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="92"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="92"/></sdl:cxts><trans-unit id="lockTU_bac6a804-f789-4073-bd27-c50f980806e3" translate="no" sdl:locktype="Structure"><source><g id="1389">iconAt()</g></source></trans-unit><trans-unit id="lockTU_b6211ee8-782d-4124-9fef-51edefd6ce9a" translate="no" sdl:locktype="Structure"><source><g id="1392">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_da660fc7-d8f9-4b00-aad3-bd63302a501d" translate="no" sdl:locktype="Structure"><source><g id="1389">iconAt()</g></source></trans-unit><trans-unit id="lockTU_91a0162a-5528-4fe7-92eb-dade60a78903" translate="no" sdl:locktype="Structure"><source><g id="1392">PadNavigator</g></source></trans-unit><trans-unit id="4608dde2-0492-4892-a9af-d1aea882d4d4"><source>Finally, the <x id="locked108" xid="lockTU_da660fc7-d8f9-4b00-aad3-bd63302a501d"/> function returns a pointer to the icon at a specific row and column. It makes a somewhat bold assumption that the input is valid, which is fair because the <x id="locked109" xid="lockTU_91a0162a-5528-4fe7-92eb-dade60a78903"/> class only calls this function with correct input.</source><seg-source><mrk mtype="seg" mid="116">Finally, the <x id="locked110" xid="lockTU_bac6a804-f789-4073-bd27-c50f980806e3"/> function returns a pointer to the icon at a specific row and column.</mrk> <mrk mtype="seg" mid="117">It makes a somewhat bold assumption that the input is valid, which is fair because the <x id="locked111" xid="lockTU_b6211ee8-782d-4124-9fef-51edefd6ce9a"/> class only calls this function with correct input.</mrk></seg-source><target><mrk mtype="seg" mid="116"/> <mrk mtype="seg" mid="117"/></target><sdl:seg-defs><sdl:seg id="116"/><sdl:seg id="117"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="93"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="93"/></sdl:cxts><trans-unit id="lockTU_c118dce4-1839-4a3d-be43-1e0ae9872ef5" translate="no" sdl:locktype="Structure"><source><g id="1395">SplashItem</g></source></trans-unit><trans-unit id="lockTU_19cdf39d-c124-4bce-b199-07dd6b897b97" translate="no" sdl:locktype="Structure"><source><g id="1395">SplashItem</g></source></trans-unit><trans-unit id="8f3dff01-1eba-40f4-aed2-02dbcbbbd232"><source>We will now review the <x id="locked112" xid="lockTU_19cdf39d-c124-4bce-b199-07dd6b897b97"/> class.</source><seg-source><mrk mtype="seg" mid="118">We will now review the <x id="locked113" xid="lockTU_c118dce4-1839-4a3d-be43-1e0ae9872ef5"/> class.</mrk></seg-source><target><mrk mtype="seg" mid="118"/></target><sdl:seg-defs><sdl:seg id="118"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="94"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="33"/></sdl:cxts><trans-unit id="4c6b61e9-a809-4ea3-adc5-f59142c0151a"><source><g id="1398"/></source><seg-source><g id="1398"/></seg-source><target><g id="1398"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="95"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="94"/></sdl:cxts><trans-unit id="d4133637-eb45-4918-94ed-d815da127611"><source>SplashItem Class Definition</source><seg-source><mrk mtype="seg" mid="119">SplashItem Class Definition</mrk></seg-source><target><mrk mtype="seg" mid="119"/></target><sdl:seg-defs><sdl:seg id="119"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="96"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="95"/></sdl:cxts><trans-unit id="lockTU_4d9600d8-7d59-45ed-97e9-41252d552a80" translate="no" sdl:locktype="Structure"><source><g id="1401">SplashItem</g></source></trans-unit><trans-unit id="lockTU_e8828c32-aa3c-4cb6-be18-2a2739686528" translate="no" sdl:locktype="Structure"><source><g id="1404">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_19023383-5cc0-46ed-9b82-7dd565f0fe9f" translate="no" sdl:locktype="Structure"><source><g id="1401">SplashItem</g></source></trans-unit><trans-unit id="lockTU_5e5aa9b0-71cc-46b4-9f6c-a68c35a7b3e7" translate="no" sdl:locktype="Structure"><source><g id="1404">PadNavigator</g></source></trans-unit><trans-unit id="306422d9-8e51-44d7-9b8e-3a8b5e412793"><source>The <x id="locked114" xid="lockTU_19023383-5cc0-46ed-9b82-7dd565f0fe9f"/> class represents the &quot;splash window&quot;, a semitransparent white overlay with text that appears immediately after the application has started, and disappears after pressing any key. The animation is controlled by <x id="locked115" xid="lockTU_5e5aa9b0-71cc-46b4-9f6c-a68c35a7b3e7"/>; this class is very simple by itself.</source><seg-source><mrk mtype="seg" mid="120">The <x id="locked116" xid="lockTU_4d9600d8-7d59-45ed-97e9-41252d552a80"/> class represents the &quot;splash window&quot;, a semitransparent white overlay with text that appears immediately after the application has started, and disappears after pressing any key.</mrk> <mrk mtype="seg" mid="121">The animation is controlled by <x id="locked117" xid="lockTU_e8828c32-aa3c-4cb6-be18-2a2739686528"/>; this class is very simple by itself.</mrk></seg-source><target><mrk mtype="seg" mid="120"/> <mrk mtype="seg" mid="121"/></target><sdl:seg-defs><sdl:seg id="120"/><sdl:seg id="121"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="97"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="96"/></sdl:cxts><trans-unit id="a88fc467-c149-48fa-a59b-adb4942c1ab8"><source><g id="1407">class</g> SplashItem : <g id="1410">public</g> <g id="1413">QGraphicsObject</g> { Q_OBJECT <g id="1416">public</g>: <g id="1419">explicit</g> SplashItem(<g id="1422">QGraphicsItem</g> <g id="1425">*</g>parent <g id="1428">=</g> <g id="1431">0</g>); <g id="1434">QRectF</g> boundingRect() <g id="1437">const</g> Q_DECL_OVERRIDE; <g id="1440">void</g> paint(<g id="1443">QPainter</g> <g id="1446">*</g>painter<g id="1449">,</g> <g id="1452">const</g> <g id="1455">QStyleOptionGraphicsItem</g> <g id="1458">*</g>option<g id="1461">,</g> <g id="1464">QWidget</g> <g id="1467">*</g>widget <g id="1470">=</g> <g id="1473">0</g>) Q_DECL_OVERRIDE; <g id="1476">private</g>: <g id="1479">QString</g> text; };</source><seg-source><mrk mtype="seg" mid="122"><g id="1407">class</g> SplashItem : <g id="1410">public</g> <g id="1413">QGraphicsObject</g> { Q_OBJECT <g id="1416">public</g>:</mrk> <mrk mtype="seg" mid="123"><g id="1419">explicit</g> SplashItem(<g id="1422">QGraphicsItem</g> <g id="1425">*</g>parent <g id="1428">=</g> <g id="1431">0</g>); <g id="1434">QRectF</g> boundingRect() <g id="1437">const</g> Q_DECL_OVERRIDE; <g id="1440">void</g> paint(<g id="1443">QPainter</g> <g id="1446">*</g>painter<g id="1449">,</g> <g id="1452">const</g> <g id="1455">QStyleOptionGraphicsItem</g> <g id="1458">*</g>option<g id="1461">,</g> <g id="1464">QWidget</g> <g id="1467">*</g>widget <g id="1470">=</g> <g id="1473">0</g>) Q_DECL_OVERRIDE; <g id="1476">private</g>:</mrk> <mrk mtype="seg" mid="124"><g id="1479">QString</g> text; };</mrk></seg-source><target><mrk mtype="seg" mid="122"/> <mrk mtype="seg" mid="123"/> <mrk mtype="seg" mid="124"/></target><sdl:seg-defs><sdl:seg id="122"/><sdl:seg id="123"/><sdl:seg id="124"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="98"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="97"/></sdl:cxts><trans-unit id="lockTU_692ca315-0ec1-44f5-b5c6-ea7c3acc9be2" translate="no" sdl:locktype="Structure"><source><g id="1482">SplashItem</g></source></trans-unit><trans-unit id="lockTU_3b1be7ea-b2e2-4050-ba4d-153ae46ae869" translate="no" sdl:locktype="Structure"><source><g id="1497">text</g></source></trans-unit><trans-unit id="lockTU_19777c1e-1135-4769-8bb6-27a1bf3668af" translate="no" sdl:locktype="Structure"><source><g id="1482">SplashItem</g></source></trans-unit><trans-unit id="lockTU_712ac5f6-6abc-46a3-8ac8-565f20e747fd" translate="no" sdl:locktype="Structure"><source><g id="1497">text</g></source></trans-unit><trans-unit id="485f9cef-5ee3-414e-be5b-f4e3ea95a227"><source>The class declaration shows that <x id="locked118" xid="lockTU_19777c1e-1135-4769-8bb6-27a1bf3668af"/> inherits <g id="1485">QGraphicsObject</g> to allow it to be controlled by <g id="1488">QPropertyAnimation</g>. It reimplements the mandatory <g id="1491">paint()</g> and <g id="1494">boundingRect()</g> pure virtual functions, and keeps a <x id="locked119" xid="lockTU_712ac5f6-6abc-46a3-8ac8-565f20e747fd"/> member variable which will contain the information text displayed on this splash item.</source><seg-source><mrk mtype="seg" mid="125">The class declaration shows that <x id="locked120" xid="lockTU_692ca315-0ec1-44f5-b5c6-ea7c3acc9be2"/> inherits <g id="1485">QGraphicsObject</g> to allow it to be controlled by <g id="1488">QPropertyAnimation</g>.</mrk> <mrk mtype="seg" mid="126">It reimplements the mandatory <g id="1491">paint()</g> and <g id="1494">boundingRect()</g> pure virtual functions, and keeps a <x id="locked121" xid="lockTU_3b1be7ea-b2e2-4050-ba4d-153ae46ae869"/> member variable which will contain the information text displayed on this splash item.</mrk></seg-source><target><mrk mtype="seg" mid="125"/> <mrk mtype="seg" mid="126"/></target><sdl:seg-defs><sdl:seg id="125"/><sdl:seg id="126"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="99"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="98"/></sdl:cxts><trans-unit id="5ac54d99-725d-41dd-bf80-dc95ae3578c8"><source>Let&apos;s look at its implementation.</source><seg-source><mrk mtype="seg" mid="127">Let&apos;s look at its implementation.</mrk></seg-source><target><mrk mtype="seg" mid="127"/></target><sdl:seg-defs><sdl:seg id="127"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="100"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="99"/></sdl:cxts><trans-unit id="96e847ba-d48a-4bb8-a4f0-5918f3af53b7"><source>SplashItem<g id="1500">::</g>SplashItem(<g id="1503">QGraphicsItem</g> <g id="1506">*</g>parent) : <g id="1509">QGraphicsObject</g>(parent) { text <g id="1512">=</g> tr(<g id="1515">&quot;Welcome to the Pad Navigator Example.</g><g id="1515"> </g><g id="1515">You can use the&quot;</g> <g id="1518">&quot; keyboard arrows to navigate the icons, and press enter&quot;</g> <g id="1521">&quot; to activate an item.</g><g id="1521"> </g><g id="1521">Press any key to begin.&quot;</g>); setCacheMode(DeviceCoordinateCache); }</source><seg-source><mrk mtype="seg" mid="128">SplashItem<g id="1500">::</g>SplashItem(<g id="1503">QGraphicsItem</g> <g id="1506">*</g>parent) :</mrk> <mrk mtype="seg" mid="129"><g id="1509">QGraphicsObject</g>(parent) { text <g id="1512">=</g> tr(<g id="1515">&quot;Welcome to the Pad Navigator Example.</g></mrk><g id="1515"> </g><mrk mtype="seg" mid="130"><g id="1515">You can use the&quot;</g> <g id="1518">&quot; keyboard arrows to navigate the icons, and press enter&quot;</g> <g id="1521">&quot; to activate an item.</g></mrk><g id="1521"> </g><mrk mtype="seg" mid="131"><g id="1521">Press any key to begin.&quot;</g>); setCacheMode(DeviceCoordinateCache); }</mrk></seg-source><target><mrk mtype="seg" mid="128"/> <mrk mtype="seg" mid="129"/><g id="1515"> </g><mrk mtype="seg" mid="130"/><g id="1521"> </g><mrk mtype="seg" mid="131"/></target><sdl:seg-defs><sdl:seg id="128"/><sdl:seg id="129"/><sdl:seg id="130"/><sdl:seg id="131"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="101"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="100"/></sdl:cxts><trans-unit id="lockTU_f95a4755-6df3-446e-87ed-c9b48c474700" translate="no" sdl:locktype="Structure"><source><g id="1527">text</g></source></trans-unit><trans-unit id="lockTU_05a305d4-6ea0-46ac-9fd4-0cd5a93fea66" translate="no" sdl:locktype="Structure"><source><g id="1527">text</g></source></trans-unit><trans-unit id="6b6d35b7-8b99-46c5-986b-ec98ad31b380"><source>The constructor forwards to <g id="1524">QGraphicsObject</g> as expected, assigns a text message to the <x id="locked122" xid="lockTU_05a305d4-6ea0-46ac-9fd4-0cd5a93fea66"/> member variable, and enables <g id="1530">DeviceCoordinateCache</g>. This cache mode is suitable because the splash item only moves and is never transformed, and because it contains text, it&apos;s important that it has a pixel perfect visual appearance (in constrast to <g id="1533">ItemCoordinateCache</g>, where the visual appearance is not as good).</source><seg-source><mrk mtype="seg" mid="132">The constructor forwards to <g id="1524">QGraphicsObject</g> as expected, assigns a text message to the <x id="locked123" xid="lockTU_f95a4755-6df3-446e-87ed-c9b48c474700"/> member variable, and enables <g id="1530">DeviceCoordinateCache</g>.</mrk> <mrk mtype="seg" mid="133">This cache mode is suitable because the splash item only moves and is never transformed, and because it contains text, it&apos;s important that it has a pixel perfect visual appearance (in constrast to <g id="1533">ItemCoordinateCache</g>, where the visual appearance is not as good).</mrk></seg-source><target><mrk mtype="seg" mid="132"/> <mrk mtype="seg" mid="133"/></target><sdl:seg-defs><sdl:seg id="132"/><sdl:seg id="133"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="102"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="101"/></sdl:cxts><trans-unit id="b4b1f15a-b6b9-4814-9e8e-345da1fa0f88"><source>We use caching to avoid having to relayout and rerender the text for each frame. An alterative approach would be to use the new <g id="1536">QStaticText</g> class.</source><seg-source><mrk mtype="seg" mid="134">We use caching to avoid having to relayout and rerender the text for each frame.</mrk> <mrk mtype="seg" mid="135">An alterative approach would be to use the new <g id="1536">QStaticText</g> class.</mrk></seg-source><target><mrk mtype="seg" mid="134"/> <mrk mtype="seg" mid="135"/></target><sdl:seg-defs><sdl:seg id="134"/><sdl:seg id="135"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="103"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="102"/></sdl:cxts><trans-unit id="06f531b3-16e1-4e45-95bb-7cfdef5c887a"><source><g id="1539">QRectF</g> SplashItem<g id="1542">::</g>boundingRect() <g id="1545">const</g> { <g id="1548">return</g> <g id="1551">QRectF</g>(<g id="1554">0</g><g id="1557">,</g> <g id="1560">0</g><g id="1563">,</g> <g id="1566">400</g><g id="1569">,</g> <g id="1572">175</g>); }</source><seg-source><mrk mtype="seg" mid="136"><g id="1539">QRectF</g> SplashItem<g id="1542">::</g>boundingRect() <g id="1545">const</g> { <g id="1548">return</g> <g id="1551">QRectF</g>(<g id="1554">0</g><g id="1557">,</g> <g id="1560">0</g><g id="1563">,</g> <g id="1566">400</g><g id="1569">,</g> <g id="1572">175</g>); }</mrk></seg-source><target><mrk mtype="seg" mid="136"/></target><sdl:seg-defs><sdl:seg id="136"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="104"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="103"/></sdl:cxts><trans-unit id="lockTU_ec1a1525-8762-44cf-b589-113eb1a51308" translate="no" sdl:locktype="Structure"><source><g id="1575">SplashItem</g></source></trans-unit><trans-unit id="lockTU_7b8f976e-38d2-4b06-869e-4e6b2b19e1ad" translate="no" sdl:locktype="Structure"><source><g id="1575">SplashItem</g></source></trans-unit><trans-unit id="lockTU_d0bdad8c-a27e-4ca5-8c5e-bb35ddb9d89d" translate="no" sdl:locktype="Structure"><source><g id="1575">SplashItem</g></source></trans-unit><trans-unit id="a64d0411-d872-4378-9122-fc68d4173e70"><source><x id="locked124" xid="lockTU_d0bdad8c-a27e-4ca5-8c5e-bb35ddb9d89d"/>&apos;s bounding rectangle is fixed at (400x175).</source><seg-source><x id="locked125" xid="lockTU_7b8f976e-38d2-4b06-869e-4e6b2b19e1ad"/><mrk mtype="seg" mid="137">&apos;s bounding rectangle is fixed at (400x175).</mrk></seg-source><target><x id="locked126" xid="lockTU_ec1a1525-8762-44cf-b589-113eb1a51308"/><mrk mtype="seg" mid="137"/></target><sdl:seg-defs><sdl:seg id="137"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="105"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="104"/></sdl:cxts><trans-unit id="cc69eab9-35c8-4107-92f2-34fc39cf7e43"><source><g id="1578">void</g> SplashItem<g id="1581">::</g>paint(<g id="1584">QPainter</g> <g id="1587">*</g>painter<g id="1590">,</g> <g id="1593">const</g> <g id="1596">QStyleOptionGraphicsItem</g> <g id="1599">*</g>option<g id="1602">,</g> <g id="1605">QWidget</g> <g id="1608">*</g>widget) { Q_UNUSED(option); Q_UNUSED(widget); painter<g id="1611">-</g><g id="1614">&gt;</g>setPen(<g id="1617">QPen</g>(<g id="1620">Qt</g><g id="1623">::</g>black<g id="1626">,</g> <g id="1629">2</g>)); painter<g id="1632">-</g><g id="1635">&gt;</g>setBrush(<g id="1638">QColor</g>(<g id="1641">245</g><g id="1644">,</g> <g id="1647">245</g><g id="1650">,</g> <g id="1653">255</g><g id="1656">,</g> <g id="1659">220</g>)); painter<g id="1662">-</g><g id="1665">&gt;</g>setClipRect(boundingRect()); painter<g id="1668">-</g><g id="1671">&gt;</g>drawRoundRect(<g id="1674">3</g><g id="1677">,</g> <g id="1680">-</g><g id="1683">100</g> <g id="1686">+</g> <g id="1689">3</g><g id="1692">,</g> <g id="1695">400</g> <g id="1698">-</g> <g id="1701">6</g><g id="1704">,</g> <g id="1707">250</g> <g id="1710">-</g> <g id="1713">6</g>); <g id="1716">QRectF</g> textRect <g id="1719">=</g> boundingRect()<g id="1722">.</g>adjusted(<g id="1725">10</g><g id="1728">,</g> <g id="1731">10</g><g id="1734">,</g> <g id="1737">-</g><g id="1740">10</g><g id="1743">,</g> <g id="1746">-</g><g id="1749">10</g>); <g id="1752">int</g> flags <g id="1755">=</g> <g id="1758">Qt</g><g id="1761">::</g>AlignTop <g id="1764">|</g> <g id="1767">Qt</g><g id="1770">::</g>AlignLeft <g id="1773">|</g> <g id="1776">Qt</g><g id="1779">::</g>TextWordWrap; <g id="1782">QFont</g> font; font<g id="1785">.</g>setPixelSize(<g id="1788">18</g>); painter<g id="1791">-</g><g id="1794">&gt;</g>setPen(<g id="1797">Qt</g><g id="1800">::</g>black); painter<g id="1803">-</g><g id="1806">&gt;</g>setFont(font); painter<g id="1809">-</g><g id="1812">&gt;</g>drawText(textRect<g id="1815">,</g> flags<g id="1818">,</g> text); }</source><seg-source><mrk mtype="seg" mid="138"><g id="1578">void</g> SplashItem<g id="1581">::</g>paint(<g id="1584">QPainter</g> <g id="1587">*</g>painter<g id="1590">,</g> <g id="1593">const</g> <g id="1596">QStyleOptionGraphicsItem</g> <g id="1599">*</g>option<g id="1602">,</g> <g id="1605">QWidget</g> <g id="1608">*</g>widget) { Q_UNUSED(option); Q_UNUSED(widget); painter<g id="1611">-</g><g id="1614">&gt;</g>setPen(<g id="1617">QPen</g>(<g id="1620">Qt</g><g id="1623">::</g>black<g id="1626">,</g> <g id="1629">2</g>)); painter<g id="1632">-</g><g id="1635">&gt;</g>setBrush(<g id="1638">QColor</g>(<g id="1641">245</g><g id="1644">,</g> <g id="1647">245</g><g id="1650">,</g> <g id="1653">255</g><g id="1656">,</g> <g id="1659">220</g>)); painter<g id="1662">-</g><g id="1665">&gt;</g>setClipRect(boundingRect()); painter<g id="1668">-</g><g id="1671">&gt;</g>drawRoundRect(<g id="1674">3</g><g id="1677">,</g> <g id="1680">-</g><g id="1683">100</g> <g id="1686">+</g> <g id="1689">3</g><g id="1692">,</g> <g id="1695">400</g> <g id="1698">-</g> <g id="1701">6</g><g id="1704">,</g> <g id="1707">250</g> <g id="1710">-</g> <g id="1713">6</g>); <g id="1716">QRectF</g> textRect <g id="1719">=</g> boundingRect()<g id="1722">.</g>adjusted(<g id="1725">10</g><g id="1728">,</g> <g id="1731">10</g><g id="1734">,</g> <g id="1737">-</g><g id="1740">10</g><g id="1743">,</g> <g id="1746">-</g><g id="1749">10</g>); <g id="1752">int</g> flags <g id="1755">=</g> <g id="1758">Qt</g><g id="1761">::</g>AlignTop <g id="1764">|</g> <g id="1767">Qt</g><g id="1770">::</g>AlignLeft <g id="1773">|</g> <g id="1776">Qt</g><g id="1779">::</g>TextWordWrap; <g id="1782">QFont</g> font; font<g id="1785">.</g>setPixelSize(<g id="1788">18</g>); painter<g id="1791">-</g><g id="1794">&gt;</g>setPen(<g id="1797">Qt</g><g id="1800">::</g>black); painter<g id="1803">-</g><g id="1806">&gt;</g>setFont(font); painter<g id="1809">-</g><g id="1812">&gt;</g>drawText(textRect<g id="1815">,</g> flags<g id="1818">,</g> text); }</mrk></seg-source><target><mrk mtype="seg" mid="138"/></target><sdl:seg-defs><sdl:seg id="138"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="106"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="105"/></sdl:cxts><trans-unit id="067dbaca-a649-46d3-b23a-47afab6fbabb"><source>The <g id="1821">paint()</g> implementation draws a clipped round rectangle with a thick 2-unit border and a semi-transparent white background. It proceeds to finding a suitable text area by adjusting the splash item&apos;s bounding rectangle with 10 units in each side. The text is rendered inside this rectangle, with top-left alignment, and with word wrapping enabled.</source><seg-source><mrk mtype="seg" mid="139">The <g id="1821">paint()</g> implementation draws a clipped round rectangle with a thick 2-unit border and a semi-transparent white background.</mrk> <mrk mtype="seg" mid="140">It proceeds to finding a suitable text area by adjusting the splash item&apos;s bounding rectangle with 10 units in each side.</mrk> <mrk mtype="seg" mid="141">The text is rendered inside this rectangle, with top-left alignment, and with word wrapping enabled.</mrk></seg-source><target><mrk mtype="seg" mid="139"/> <mrk mtype="seg" mid="140"/> <mrk mtype="seg" mid="141"/></target><sdl:seg-defs><sdl:seg id="139"/><sdl:seg id="140"/><sdl:seg id="141"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="107"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="106"/></sdl:cxts><trans-unit id="lockTU_f19ff8ca-26d7-4b2f-bae3-cdcf97b77252" translate="no" sdl:locktype="Structure"><source><g id="1824">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_464d0eac-c8ca-461b-a3a8-e3280d1d48d1" translate="no" sdl:locktype="Structure"><source><g id="1824">PadNavigator</g></source></trans-unit><trans-unit id="1eaf5c78-c3fa-4ab2-a8db-51901e33266a"><source>The main class now remains. We will proceed to reviewing <x id="locked127" xid="lockTU_464d0eac-c8ca-461b-a3a8-e3280d1d48d1"/>.</source><seg-source><mrk mtype="seg" mid="142">The main class now remains.</mrk> <mrk mtype="seg" mid="143">We will proceed to reviewing <x id="locked128" xid="lockTU_f19ff8ca-26d7-4b2f-bae3-cdcf97b77252"/>.</mrk></seg-source><target><mrk mtype="seg" mid="142"/> <mrk mtype="seg" mid="143"/></target><sdl:seg-defs><sdl:seg id="142"/><sdl:seg id="143"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="108"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="33"/></sdl:cxts><trans-unit id="d0964300-0c13-418a-b51b-18b833f58552"><source><g id="1827"/></source><seg-source><g id="1827"/></seg-source><target><g id="1827"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="109"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="107"/></sdl:cxts><trans-unit id="ec3c6f79-5b52-43c9-9859-a90859ab230e"><source>PadNavigator Class Definition</source><seg-source><mrk mtype="seg" mid="144">PadNavigator Class Definition</mrk></seg-source><target><mrk mtype="seg" mid="144"/></target><sdl:seg-defs><sdl:seg id="144"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="110"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="108"/></sdl:cxts><trans-unit id="lockTU_47717185-cbd0-4b66-b33c-48fda463931e" translate="no" sdl:locktype="Structure"><source><g id="1830">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_1cf7d022-de86-4e10-945e-7903e620040b" translate="no" sdl:locktype="Structure"><source><g id="1830">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_2c8f420a-d6be-43f9-a272-5673f63f6966" translate="no" sdl:locktype="Structure"><source><g id="1830">PadNavigator</g></source></trans-unit><trans-unit id="8ec53a83-b5e8-4ee3-825b-c0eabb45b2a4"><source><x id="locked129" xid="lockTU_2c8f420a-d6be-43f9-a272-5673f63f6966"/> represents the main window of our Pad Navigator Example application. It creates and controls a somewhat complex state machine, and several animations. Its class declaration is very simple:</source><seg-source><x id="locked130" xid="lockTU_1cf7d022-de86-4e10-945e-7903e620040b"/> <mrk mtype="seg" mid="145">represents the main window of our Pad Navigator Example application.</mrk> <mrk mtype="seg" mid="146">It creates and controls a somewhat complex state machine, and several animations.</mrk> <mrk mtype="seg" mid="147">Its class declaration is very simple:</mrk></seg-source><target><x id="locked131" xid="lockTU_47717185-cbd0-4b66-b33c-48fda463931e"/> <mrk mtype="seg" mid="145"/> <mrk mtype="seg" mid="146"/> <mrk mtype="seg" mid="147"/></target><sdl:seg-defs><sdl:seg id="145"/><sdl:seg id="146"/><sdl:seg id="147"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="111"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="109"/></sdl:cxts><trans-unit id="0d7fd76a-1c40-4590-854e-9e442524b9bc"><source><g id="1833">class</g> PadNavigator : <g id="1836">public</g> <g id="1839">QGraphicsView</g> { Q_OBJECT <g id="1842">public</g>: <g id="1845">explicit</g> PadNavigator(<g id="1848">const</g> <g id="1851">QSize</g> <g id="1854">&amp;</g>size<g id="1857">,</g> <g id="1860">QWidget</g> <g id="1863">*</g>parent <g id="1866">=</g> <g id="1869">0</g>); <g id="1872">protected</g>: <g id="1875">void</g> resizeEvent(<g id="1878">QResizeEvent</g> <g id="1881">*</g>event) Q_DECL_OVERRIDE; <g id="1884">private</g>: Ui<g id="1887">::</g>Form form; };</source><seg-source><mrk mtype="seg" mid="148"><g id="1833">class</g> PadNavigator : <g id="1836">public</g> <g id="1839">QGraphicsView</g> { Q_OBJECT <g id="1842">public</g>:</mrk> <mrk mtype="seg" mid="149"><g id="1845">explicit</g> PadNavigator(<g id="1848">const</g> <g id="1851">QSize</g> <g id="1854">&amp;</g>size<g id="1857">,</g> <g id="1860">QWidget</g> <g id="1863">*</g>parent <g id="1866">=</g> <g id="1869">0</g>); <g id="1872">protected</g>:</mrk> <mrk mtype="seg" mid="150"><g id="1875">void</g> resizeEvent(<g id="1878">QResizeEvent</g> <g id="1881">*</g>event) Q_DECL_OVERRIDE; <g id="1884">private</g>:</mrk> <mrk mtype="seg" mid="151">Ui<g id="1887">::</g>Form form; };</mrk></seg-source><target><mrk mtype="seg" mid="148"/> <mrk mtype="seg" mid="149"/> <mrk mtype="seg" mid="150"/> <mrk mtype="seg" mid="151"/></target><sdl:seg-defs><sdl:seg id="148"/><sdl:seg id="149"/><sdl:seg id="150"/><sdl:seg id="151"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="112"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="110"/></sdl:cxts><trans-unit id="89c4999a-31b3-4395-bf4a-f6dec3ad9e85"><source>It inherits <g id="1890">QGraphicsView</g> and reimplements only one function: <g id="1893">resizeEvent()</g>, to ensure the scene is scaled to fit inside the view when resizing the main window.</source><seg-source><mrk mtype="seg" mid="152">It inherits <g id="1890">QGraphicsView</g> and reimplements only one function: <g id="1893">resizeEvent()</g>, to ensure the scene is scaled to fit inside the view when resizing the main window.</mrk></seg-source><target><mrk mtype="seg" mid="152"/></target><sdl:seg-defs><sdl:seg id="152"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="113"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="111"/></sdl:cxts><trans-unit id="lockTU_40fd239f-7a9f-4590-8389-f1346ac1b2a3" translate="no" sdl:locktype="Structure"><source><g id="1896">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_7309de00-2692-4140-88f8-517a23777486" translate="no" sdl:locktype="Structure"><source><g id="1896">PadNavigator</g></source></trans-unit><trans-unit id="0b29df82-f508-4a9a-a861-20781ed29219"><source>The <x id="locked132" xid="lockTU_7309de00-2692-4140-88f8-517a23777486"/> constructor takes a <g id="1899">QSize</g> argument that determines the number or rows and columns in the grid.</source><seg-source><mrk mtype="seg" mid="153">The <x id="locked133" xid="lockTU_40fd239f-7a9f-4590-8389-f1346ac1b2a3"/> constructor takes a <g id="1899">QSize</g> argument that determines the number or rows and columns in the grid.</mrk></seg-source><target><mrk mtype="seg" mid="153"/></target><sdl:seg-defs><sdl:seg id="153"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="114"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="112"/></sdl:cxts><trans-unit id="lockTU_3c7b8caa-ddfb-40c6-85ed-1f6b876a742e" translate="no" sdl:locktype="Structure"><source><g id="1902">form</g></source></trans-unit><trans-unit id="lockTU_b03c9856-f76d-42ef-9f7b-d282cc89b5a9" translate="no" sdl:locktype="Structure"><source><g id="1902">form</g></source></trans-unit><trans-unit id="58e385d7-adbd-4525-bb44-b2355b7c1784"><source>It also keeps a private member instance, <x id="locked134" xid="lockTU_b03c9856-f76d-42ef-9f7b-d282cc89b5a9"/>, which is the generated code for the pad&apos;s back side item&apos;s <g id="1905">QGraphicsProxyWidget</g>-embedded form.</source><seg-source><mrk mtype="seg" mid="154">It also keeps a private member instance, <x id="locked135" xid="lockTU_3c7b8caa-ddfb-40c6-85ed-1f6b876a742e"/>, which is the generated code for the pad&apos;s back side item&apos;s <g id="1905">QGraphicsProxyWidget</g>-embedded form.</mrk></seg-source><target><mrk mtype="seg" mid="154"/></target><sdl:seg-defs><sdl:seg id="154"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="115"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="113"/></sdl:cxts><trans-unit id="59aca262-8eb4-4ec6-92ba-3d8fa6ac3d9e"><source>PadNavigator<g id="1908">::</g>PadNavigator(<g id="1911">const</g> <g id="1914">QSize</g> <g id="1917">&amp;</g>size<g id="1920">,</g> <g id="1923">QWidget</g> <g id="1926">*</g>parent) : <g id="1929">QGraphicsView</g>(parent) {</source><seg-source><mrk mtype="seg" mid="155">PadNavigator<g id="1908">::</g>PadNavigator(<g id="1911">const</g> <g id="1914">QSize</g> <g id="1917">&amp;</g>size<g id="1920">,</g> <g id="1923">QWidget</g> <g id="1926">*</g>parent) :</mrk> <mrk mtype="seg" mid="156"><g id="1929">QGraphicsView</g>(parent) {</mrk></seg-source><target><mrk mtype="seg" mid="155"/> <mrk mtype="seg" mid="156"/></target><sdl:seg-defs><sdl:seg id="155"/><sdl:seg id="156"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="116"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="114"/></sdl:cxts><trans-unit id="lockTU_22d24479-1794-431a-b9d4-499ae82a107f" translate="no" sdl:locktype="Structure"><source><g id="1932">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_7d92339f-84ae-4a4c-a4d0-fb6b2959778c" translate="no" sdl:locktype="Structure"><source><g id="1932">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_e2d41a03-fc21-4726-bfac-ba8166164051" translate="no" sdl:locktype="Structure"><source><g id="1935">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_e0a089aa-77b6-4c81-b973-e5007b5fce6a" translate="no" sdl:locktype="Structure"><source><g id="1938">SplashItem</g></source></trans-unit><trans-unit id="lockTU_4360fba8-5716-4023-978d-f73c4a359e1c" translate="no" sdl:locktype="Structure"><source><g id="1944">backItem</g></source></trans-unit><trans-unit id="lockTU_89e2865a-8b1f-4d6e-84b0-af96cfba24ef" translate="no" sdl:locktype="Structure"><source><g id="1932">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_18406deb-9114-4e0e-a6e3-8429d75c2985" translate="no" sdl:locktype="Structure"><source><g id="1935">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_3680b2fc-d807-4b2a-a556-706de84d9629" translate="no" sdl:locktype="Structure"><source><g id="1938">SplashItem</g></source></trans-unit><trans-unit id="lockTU_bf217eb8-4b10-4c16-a20d-dfc52025fc5b" translate="no" sdl:locktype="Structure"><source><g id="1944">backItem</g></source></trans-unit><trans-unit id="95572303-676c-4967-a481-c2d7bc4ad763"><source><x id="locked136" xid="lockTU_89e2865a-8b1f-4d6e-84b0-af96cfba24ef"/>&apos;s constructor is a bit long. In short, its job is to create all items, including the <x id="locked137" xid="lockTU_18406deb-9114-4e0e-a6e3-8429d75c2985"/>, the <x id="locked138" xid="lockTU_3680b2fc-d807-4b2a-a556-706de84d9629"/> and the <g id="1941">QGraphicsProxyWidget</g> <x id="locked139" xid="lockTU_bf217eb8-4b10-4c16-a20d-dfc52025fc5b"/>, and then to set up all animations, states and transitions that control the behavior of the application.</source><seg-source><x id="locked140" xid="lockTU_7d92339f-84ae-4a4c-a4d0-fb6b2959778c"/><mrk mtype="seg" mid="157">&apos;s constructor is a bit long.</mrk> <mrk mtype="seg" mid="158">In short, its job is to create all items, including the <x id="locked141" xid="lockTU_e2d41a03-fc21-4726-bfac-ba8166164051"/>, the <x id="locked142" xid="lockTU_e0a089aa-77b6-4c81-b973-e5007b5fce6a"/> and the <g id="1941">QGraphicsProxyWidget</g> <x id="locked143" xid="lockTU_4360fba8-5716-4023-978d-f73c4a359e1c"/>, and then to set up all animations, states and transitions that control the behavior of the application.</mrk></seg-source><target><x id="locked144" xid="lockTU_22d24479-1794-431a-b9d4-499ae82a107f"/><mrk mtype="seg" mid="157"/> <mrk mtype="seg" mid="158"/></target><sdl:seg-defs><sdl:seg id="157"/><sdl:seg id="158"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="117"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="115"/></sdl:cxts><trans-unit id="ebef2b6c-0b5b-45ed-b574-2470e1592eb2"><source>It starts out simple, by forwarding to <g id="1947">QGraphicsView</g>&apos;s constructor.</source><seg-source><mrk mtype="seg" mid="159">It starts out simple, by forwarding to <g id="1947">QGraphicsView</g>&apos;s constructor.</mrk></seg-source><target><mrk mtype="seg" mid="159"/></target><sdl:seg-defs><sdl:seg id="159"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="118"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="116"/></sdl:cxts><trans-unit id="41225e5c-32e1-47a4-8e0c-c738c43e9344"><source><g id="1950">// Splash item</g> SplashItem <g id="1953">*</g>splash <g id="1956">=</g> <g id="1959">new</g> SplashItem; splash<g id="1962">-</g><g id="1965">&gt;</g>setZValue(<g id="1968">1</g>);</source><seg-source><mrk mtype="seg" mid="160"><g id="1950">// Splash item</g> SplashItem <g id="1953">*</g>splash <g id="1956">=</g> <g id="1959">new</g> SplashItem; splash<g id="1962">-</g><g id="1965">&gt;</g>setZValue(<g id="1968">1</g>);</mrk></seg-source><target><mrk mtype="seg" mid="160"/></target><sdl:seg-defs><sdl:seg id="160"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="119"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="117"/></sdl:cxts><trans-unit id="lockTU_f932fb8f-dedc-4c52-b8d7-3d75a6abe637" translate="no" sdl:locktype="Structure"><source><g id="1971">SplashItem</g></source></trans-unit><trans-unit id="lockTU_a395a3a4-0f03-4d2b-8f79-68650deebb91" translate="no" sdl:locktype="Structure"><source><g id="1974">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_de6a6107-6b68-406c-bd1c-c4f5d3c57f8d" translate="no" sdl:locktype="Structure"><source><g id="1971">SplashItem</g></source></trans-unit><trans-unit id="lockTU_e6174d6d-e4fa-490f-8572-f51dc8a14e08" translate="no" sdl:locktype="Structure"><source><g id="1974">FlippablePad</g></source></trans-unit><trans-unit id="ff539db3-534f-4110-81ee-b2adcfef8a34"><source>The first item to be created is <x id="locked145" xid="lockTU_de6a6107-6b68-406c-bd1c-c4f5d3c57f8d"/>. This is going to be a top-level item in the scene, next to <x id="locked146" xid="lockTU_e6174d6d-e4fa-490f-8572-f51dc8a14e08"/>, and stacked on top of it, so we assign it a <g id="1977">Z-value</g> of 1.</source><seg-source><mrk mtype="seg" mid="161">The first item to be created is <x id="locked147" xid="lockTU_f932fb8f-dedc-4c52-b8d7-3d75a6abe637"/>.</mrk> <mrk mtype="seg" mid="162">This is going to be a top-level item in the scene, next to <x id="locked148" xid="lockTU_a395a3a4-0f03-4d2b-8f79-68650deebb91"/>, and stacked on top of it, so we assign it a <g id="1977">Z-value</g> of 1.</mrk></seg-source><target><mrk mtype="seg" mid="161"/> <mrk mtype="seg" mid="162"/></target><sdl:seg-defs><sdl:seg id="161"/><sdl:seg id="162"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="120"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="118"/></sdl:cxts><trans-unit id="33abd5a5-7d91-4fde-8030-4e6e4f0d1ab5"><source><g id="1980">// Pad item</g> FlippablePad <g id="1983">*</g>pad <g id="1986">=</g> <g id="1989">new</g> FlippablePad(size); <g id="1992">QGraphicsRotation</g> <g id="1995">*</g>flipRotation <g id="1998">=</g> <g id="2001">new</g> <g id="2004">QGraphicsRotation</g>(pad); <g id="2007">QGraphicsRotation</g> <g id="2010">*</g>xRotation <g id="2013">=</g> <g id="2016">new</g> <g id="2019">QGraphicsRotation</g>(pad); <g id="2022">QGraphicsRotation</g> <g id="2025">*</g>yRotation <g id="2028">=</g> <g id="2031">new</g> <g id="2034">QGraphicsRotation</g>(pad); flipRotation<g id="2037">-</g><g id="2040">&gt;</g>setAxis(<g id="2043">Qt</g><g id="2046">::</g>YAxis); xRotation<g id="2049">-</g><g id="2052">&gt;</g>setAxis(<g id="2055">Qt</g><g id="2058">::</g>YAxis); yRotation<g id="2061">-</g><g id="2064">&gt;</g>setAxis(<g id="2067">Qt</g><g id="2070">::</g>XAxis); pad<g id="2073">-</g><g id="2076">&gt;</g>setTransformations(<g id="2079">QList</g><g id="2082">&lt;</g><g id="2085">QGraphicsTransform</g> <g id="2088">*</g><g id="2091">&gt;</g>() <g id="2094">&lt;</g><g id="2097">&lt;</g> flipRotation <g id="2100">&lt;</g><g id="2103">&lt;</g> xRotation <g id="2106">&lt;</g><g id="2109">&lt;</g> yRotation);</source><seg-source><mrk mtype="seg" mid="163"><g id="1980">// Pad item</g> FlippablePad <g id="1983">*</g>pad <g id="1986">=</g> <g id="1989">new</g> FlippablePad(size); <g id="1992">QGraphicsRotation</g> <g id="1995">*</g>flipRotation <g id="1998">=</g> <g id="2001">new</g> <g id="2004">QGraphicsRotation</g>(pad); <g id="2007">QGraphicsRotation</g> <g id="2010">*</g>xRotation <g id="2013">=</g> <g id="2016">new</g> <g id="2019">QGraphicsRotation</g>(pad); <g id="2022">QGraphicsRotation</g> <g id="2025">*</g>yRotation <g id="2028">=</g> <g id="2031">new</g> <g id="2034">QGraphicsRotation</g>(pad); flipRotation<g id="2037">-</g><g id="2040">&gt;</g>setAxis(<g id="2043">Qt</g><g id="2046">::</g>YAxis); xRotation<g id="2049">-</g><g id="2052">&gt;</g>setAxis(<g id="2055">Qt</g><g id="2058">::</g>YAxis); yRotation<g id="2061">-</g><g id="2064">&gt;</g>setAxis(<g id="2067">Qt</g><g id="2070">::</g>XAxis); pad<g id="2073">-</g><g id="2076">&gt;</g>setTransformations(<g id="2079">QList</g><g id="2082">&lt;</g><g id="2085">QGraphicsTransform</g> <g id="2088">*</g><g id="2091">&gt;</g>() <g id="2094">&lt;</g><g id="2097">&lt;</g> flipRotation <g id="2100">&lt;</g><g id="2103">&lt;</g> xRotation <g id="2106">&lt;</g><g id="2109">&lt;</g> yRotation);</mrk></seg-source><target><mrk mtype="seg" mid="163"/></target><sdl:seg-defs><sdl:seg id="163"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="121"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="119"/></sdl:cxts><trans-unit id="lockTU_7383a55f-efd8-40b4-b182-de10bb97fbf9" translate="no" sdl:locktype="Structure"><source><g id="2112">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_40777687-358c-4876-8386-55a15ef4fdea" translate="no" sdl:locktype="Structure"><source><g id="2112">FlippablePad</g></source></trans-unit><trans-unit id="1c6791f3-8ab4-460b-a7c2-69b83a982384"><source>Now we construct the <x id="locked149" xid="lockTU_40777687-358c-4876-8386-55a15ef4fdea"/> item, passing its column-row count to its constructor.</source><seg-source><mrk mtype="seg" mid="164">Now we construct the <x id="locked150" xid="lockTU_7383a55f-efd8-40b4-b182-de10bb97fbf9"/> item, passing its column-row count to its constructor.</mrk></seg-source><target><mrk mtype="seg" mid="164"/></target><sdl:seg-defs><sdl:seg id="164"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="122"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="120"/></sdl:cxts><trans-unit id="87ade591-e0c0-49d3-9abf-bef03c6b7bc5"><source>The pad is controlled by three transformations, and we create one <g id="2115">QGraphicsRotation</g> object for each of these.</source><seg-source><mrk mtype="seg" mid="165">The pad is controlled by three transformations, and we create one <g id="2115">QGraphicsRotation</g> object for each of these.</mrk></seg-source><target><mrk mtype="seg" mid="165"/></target><sdl:seg-defs><sdl:seg id="165"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="123"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="122"/></sdl:cxts><trans-unit id="lockTU_29a10e9d-c002-4541-ae2b-df5adee2e0a2" translate="no" sdl:locktype="Structure"><source><g id="2118">flipRotation</g></source></trans-unit><trans-unit id="lockTU_4c83c793-815b-4abb-b6bf-01fb2141f9e8" translate="no" sdl:locktype="Structure"><source><g id="2118">flipRotation</g></source></trans-unit><trans-unit id="lockTU_ab1e8357-854e-421f-8a4c-c71f590a4993" translate="no" sdl:locktype="Structure"><source><g id="2118">flipRotation</g></source></trans-unit><trans-unit id="cdddd278-aac2-41c9-a218-40d649f00d8e"><source><x id="locked151" xid="lockTU_ab1e8357-854e-421f-8a4c-c71f590a4993"/>: Rotates the grid around its <g id="2121">Qt::YAxis</g>. This rotation is animated from 0 to 180, and eventually back, when enter is pressed on the keyboard, flipping the pad around.</source><seg-source><x id="locked152" xid="lockTU_4c83c793-815b-4abb-b6bf-01fb2141f9e8"/><mrk mtype="seg" mid="166">:</mrk> <mrk mtype="seg" mid="167">Rotates the grid around its <g id="2121">Qt::YAxis</g>.</mrk> <mrk mtype="seg" mid="168">This rotation is animated from 0 to 180, and eventually back, when enter is pressed on the keyboard, flipping the pad around.</mrk></seg-source><target><x id="locked153" xid="lockTU_29a10e9d-c002-4541-ae2b-df5adee2e0a2"/><mrk mtype="seg" mid="166"/> <mrk mtype="seg" mid="167"/> <mrk mtype="seg" mid="168"/></target><sdl:seg-defs><sdl:seg id="166"/><sdl:seg id="167"/><sdl:seg id="168"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="124"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="123"/></sdl:cxts><trans-unit id="lockTU_9c3f1ecb-ac96-460e-aff1-f759a0f79396" translate="no" sdl:locktype="Structure"><source><g id="2124">xRotation</g></source></trans-unit><trans-unit id="lockTU_c418a76e-438b-4e94-afda-c5f30b1ee648" translate="no" sdl:locktype="Structure"><source><g id="2124">xRotation</g></source></trans-unit><trans-unit id="lockTU_61644b72-9d65-4eb7-8fe9-b19f72fd8fb3" translate="no" sdl:locktype="Structure"><source><g id="2124">xRotation</g></source></trans-unit><trans-unit id="967b482f-4ea3-44e1-9800-5dbeecbfa5be"><source><x id="locked154" xid="lockTU_61644b72-9d65-4eb7-8fe9-b19f72fd8fb3"/>: Rotates the grid around its <g id="2127">Qt::XAxis</g>. This is used to tilt the pad vertically corresponding to which item is currently selected. This way, the selected item is always kept in front.</source><seg-source><x id="locked155" xid="lockTU_c418a76e-438b-4e94-afda-c5f30b1ee648"/><mrk mtype="seg" mid="169">:</mrk> <mrk mtype="seg" mid="170">Rotates the grid around its <g id="2127">Qt::XAxis</g>.</mrk> <mrk mtype="seg" mid="171">This is used to tilt the pad vertically corresponding to which item is currently selected.</mrk> <mrk mtype="seg" mid="172">This way, the selected item is always kept in front.</mrk></seg-source><target><x id="locked156" xid="lockTU_9c3f1ecb-ac96-460e-aff1-f759a0f79396"/><mrk mtype="seg" mid="169"/> <mrk mtype="seg" mid="170"/> <mrk mtype="seg" mid="171"/> <mrk mtype="seg" mid="172"/></target><sdl:seg-defs><sdl:seg id="169"/><sdl:seg id="170"/><sdl:seg id="171"/><sdl:seg id="172"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="125"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="124"/></sdl:cxts><trans-unit id="lockTU_e863f5c1-e376-47d7-b1c0-a4b9c9999461" translate="no" sdl:locktype="Structure"><source><g id="2130">yRotation</g></source></trans-unit><trans-unit id="lockTU_b65112e0-87d4-4d2e-8dcc-c155817293ba" translate="no" sdl:locktype="Structure"><source><g id="2130">yRotation</g></source></trans-unit><trans-unit id="lockTU_a9785b72-39ec-4d0f-8c99-9593c8b17062" translate="no" sdl:locktype="Structure"><source><g id="2130">yRotation</g></source></trans-unit><trans-unit id="b19997f6-9e21-45ec-bd15-247382326f23"><source><x id="locked157" xid="lockTU_a9785b72-39ec-4d0f-8c99-9593c8b17062"/>: Rotates the grid around its <g id="2133">Qt::YAxis</g>. This is used to tilt the pad horizontally corresponding to which item is selected. This way, the selected item is always kept in front.</source><seg-source><x id="locked158" xid="lockTU_b65112e0-87d4-4d2e-8dcc-c155817293ba"/><mrk mtype="seg" mid="173">:</mrk> <mrk mtype="seg" mid="174">Rotates the grid around its <g id="2133">Qt::YAxis</g>.</mrk> <mrk mtype="seg" mid="175">This is used to tilt the pad horizontally corresponding to which item is selected.</mrk> <mrk mtype="seg" mid="176">This way, the selected item is always kept in front.</mrk></seg-source><target><x id="locked159" xid="lockTU_e863f5c1-e376-47d7-b1c0-a4b9c9999461"/><mrk mtype="seg" mid="173"/> <mrk mtype="seg" mid="174"/> <mrk mtype="seg" mid="175"/> <mrk mtype="seg" mid="176"/></target><sdl:seg-defs><sdl:seg id="173"/><sdl:seg id="174"/><sdl:seg id="175"/><sdl:seg id="176"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="126"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="125"/></sdl:cxts><trans-unit id="9f2dfd30-8f8a-46b2-a7bf-0d0058f7a68d"><source>The combination of all three rotations is assigned via <g id="2136">QGraphicsItem::setTransformations</g>().</source><seg-source><mrk mtype="seg" mid="177">The combination of all three rotations is assigned via <g id="2136">QGraphicsItem::setTransformations</g>().</mrk></seg-source><target><mrk mtype="seg" mid="177"/></target><sdl:seg-defs><sdl:seg id="177"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="127"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="126"/></sdl:cxts><trans-unit id="c1da0b66-110f-4370-8518-dfb018adcaad"><source><g id="2139">// Back (proxy widget) item</g> <g id="2142">QGraphicsProxyWidget</g> <g id="2145">*</g>backItem <g id="2148">=</g> <g id="2151">new</g> <g id="2154">QGraphicsProxyWidget</g>(pad); <g id="2157">QWidget</g> <g id="2160">*</g>widget <g id="2163">=</g> <g id="2166">new</g> <g id="2169">QWidget</g>; form<g id="2172">.</g>setupUi(widget); form<g id="2175">.</g>hostName<g id="2178">-</g><g id="2181">&gt;</g>setFocus(); backItem<g id="2184">-</g><g id="2187">&gt;</g>setWidget(widget); backItem<g id="2190">-</g><g id="2193">&gt;</g>setVisible(<g id="2196">false</g>); backItem<g id="2199">-</g><g id="2202">&gt;</g>setFocus(); backItem<g id="2205">-</g><g id="2208">&gt;</g>setCacheMode(<g id="2211">QGraphicsItem</g><g id="2214">::</g>ItemCoordinateCache); <g id="2217">const</g> <g id="2220">QRectF</g> r <g id="2223">=</g> backItem<g id="2226">-</g><g id="2229">&gt;</g>rect(); backItem<g id="2232">-</g><g id="2235">&gt;</g>setTransform(<g id="2238">QTransform</g>() <g id="2241">.</g>rotate(<g id="2244">180</g><g id="2247">,</g> <g id="2250">Qt</g><g id="2253">::</g>YAxis) <g id="2256">.</g>translate(<g id="2259">-</g>r<g id="2262">.</g>width()<g id="2265">/</g><g id="2268">2</g><g id="2271">,</g> <g id="2274">-</g>r<g id="2277">.</g>height()<g id="2280">/</g><g id="2283">2</g>));</source><seg-source><mrk mtype="seg" mid="178"><g id="2139">// Back (proxy widget) item</g> <g id="2142">QGraphicsProxyWidget</g> <g id="2145">*</g>backItem <g id="2148">=</g> <g id="2151">new</g> <g id="2154">QGraphicsProxyWidget</g>(pad); <g id="2157">QWidget</g> <g id="2160">*</g>widget <g id="2163">=</g> <g id="2166">new</g> <g id="2169">QWidget</g>; form<g id="2172">.</g>setupUi(widget); form<g id="2175">.</g>hostName<g id="2178">-</g><g id="2181">&gt;</g>setFocus(); backItem<g id="2184">-</g><g id="2187">&gt;</g>setWidget(widget); backItem<g id="2190">-</g><g id="2193">&gt;</g>setVisible(<g id="2196">false</g>); backItem<g id="2199">-</g><g id="2202">&gt;</g>setFocus(); backItem<g id="2205">-</g><g id="2208">&gt;</g>setCacheMode(<g id="2211">QGraphicsItem</g><g id="2214">::</g>ItemCoordinateCache); <g id="2217">const</g> <g id="2220">QRectF</g> r <g id="2223">=</g> backItem<g id="2226">-</g><g id="2229">&gt;</g>rect(); backItem<g id="2232">-</g><g id="2235">&gt;</g>setTransform(<g id="2238">QTransform</g>() <g id="2241">.</g>rotate(<g id="2244">180</g><g id="2247">,</g> <g id="2250">Qt</g><g id="2253">::</g>YAxis) <g id="2256">.</g>translate(<g id="2259">-</g>r<g id="2262">.</g>width()<g id="2265">/</g><g id="2268">2</g><g id="2271">,</g> <g id="2274">-</g>r<g id="2277">.</g>height()<g id="2280">/</g><g id="2283">2</g>));</mrk></seg-source><target><mrk mtype="seg" mid="178"/></target><sdl:seg-defs><sdl:seg id="178"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="128"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="127"/></sdl:cxts><trans-unit id="lockTU_be46cbc8-9013-4c04-b7e1-9c9f53725aed" translate="no" sdl:locktype="Structure"><source><g id="2289">backItem</g></source></trans-unit><trans-unit id="lockTU_a671f2db-a2c0-4a6a-a7b6-db877b514310" translate="no" sdl:locktype="Structure"><source><g id="2295">form</g></source></trans-unit><trans-unit id="lockTU_98fda3da-234c-4e34-8556-effa4ee08eb7" translate="no" sdl:locktype="Structure"><source><g id="2298">hostName</g></source></trans-unit><trans-unit id="lockTU_6b522ca3-9fe6-412b-aa71-6ff9b0f465d7" translate="no" sdl:locktype="Structure"><source><g id="2289">backItem</g></source></trans-unit><trans-unit id="lockTU_e8b2aa90-96dd-4342-a212-73a02098d9d1" translate="no" sdl:locktype="Structure"><source><g id="2295">form</g></source></trans-unit><trans-unit id="lockTU_08ce190f-3781-4e2e-a363-48dec62f4e85" translate="no" sdl:locktype="Structure"><source><g id="2298">hostName</g></source></trans-unit><trans-unit id="33057f95-b5ed-4867-b3dd-0df9cba12b23"><source>Now we construct the <g id="2286">QGraphicsProxyWidget</g>-embedded <x id="locked160" xid="lockTU_6b522ca3-9fe6-412b-aa71-6ff9b0f465d7"/>. The proxy widget is created as a child of the pad. We create a new <g id="2292">QWidget</g> and populate it with the <x id="locked161" xid="lockTU_e8b2aa90-96dd-4342-a212-73a02098d9d1"/> member. To ensure the <x id="locked162" xid="lockTU_08ce190f-3781-4e2e-a363-48dec62f4e85"/> line edit is the first to receive input focus when this item is shown, we call <g id="2301">setFocus()</g> immediately. This will not give the widget focus right away; it will only prepare the item to automatically receive focus once it is shown.</source><seg-source><mrk mtype="seg" mid="179">Now we construct the <g id="2286">QGraphicsProxyWidget</g>-embedded <x id="locked163" xid="lockTU_be46cbc8-9013-4c04-b7e1-9c9f53725aed"/>.</mrk> <mrk mtype="seg" mid="180">The proxy widget is created as a child of the pad.</mrk> <mrk mtype="seg" mid="181">We create a new <g id="2292">QWidget</g> and populate it with the <x id="locked164" xid="lockTU_a671f2db-a2c0-4a6a-a7b6-db877b514310"/> member.</mrk> <mrk mtype="seg" mid="182">To ensure the <x id="locked165" xid="lockTU_98fda3da-234c-4e34-8556-effa4ee08eb7"/> line edit is the first to receive input focus when this item is shown, we call <g id="2301">setFocus()</g> immediately.</mrk> <mrk mtype="seg" mid="183">This will not give the widget focus right away; it will only prepare the item to automatically receive focus once it is shown.</mrk></seg-source><target><mrk mtype="seg" mid="179"/> <mrk mtype="seg" mid="180"/> <mrk mtype="seg" mid="181"/> <mrk mtype="seg" mid="182"/> <mrk mtype="seg" mid="183"/></target><sdl:seg-defs><sdl:seg id="179"/><sdl:seg id="180"/><sdl:seg id="181"/><sdl:seg id="182"/><sdl:seg id="183"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="129"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="128"/></sdl:cxts><trans-unit id="ec811442-58b5-4ba7-b9a7-f91a9d1a6991"><source>The <g id="2304">QWidget</g> based form is embedded into the proxy widget. The proxy is hidden initially; we only want to show it when the pad is rotated at least 90 degrees, and we also rotate the proxy itself by 180 degrees. This way we give the impression that the proxy widget is &quot;behind&quot; the flipped pad, when in fact, it&apos;s actually <g id="2307">on top of it</g>.</source><seg-source><mrk mtype="seg" mid="184">The <g id="2304">QWidget</g> based form is embedded into the proxy widget.</mrk> <mrk mtype="seg" mid="185">The proxy is hidden initially; we only want to show it when the pad is rotated at least 90 degrees, and we also rotate the proxy itself by 180 degrees.</mrk> <mrk mtype="seg" mid="186">This way we give the impression that the proxy widget is &quot;behind&quot; the flipped pad, when in fact, it&apos;s actually <g id="2307">on top of it</g>.</mrk></seg-source><target><mrk mtype="seg" mid="184"/> <mrk mtype="seg" mid="185"/> <mrk mtype="seg" mid="186"/></target><sdl:seg-defs><sdl:seg id="184"/><sdl:seg id="185"/><sdl:seg id="186"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="130"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="129"/></sdl:cxts><trans-unit id="40927f96-72ba-4817-992f-c6f88574eb38"><source>We enable <g id="2310">ItemCoordinateCache</g> to ensure the flip animation can run smoothly.</source><seg-source><mrk mtype="seg" mid="187">We enable <g id="2310">ItemCoordinateCache</g> to ensure the flip animation can run smoothly.</mrk></seg-source><target><mrk mtype="seg" mid="187"/></target><sdl:seg-defs><sdl:seg id="187"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="131"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="130"/></sdl:cxts><trans-unit id="ee3d749c-75ea-4808-8134-26d9795f2408"><source><g id="2313">// Selection item</g> RoundRectItem <g id="2316">*</g>selectionItem <g id="2319">=</g> <g id="2322">new</g> RoundRectItem(<g id="2325">QRectF</g>(<g id="2328">-</g><g id="2331">60</g><g id="2334">,</g> <g id="2337">-</g><g id="2340">60</g><g id="2343">,</g> <g id="2346">120</g><g id="2349">,</g> <g id="2352">120</g>)<g id="2355">,</g> <g id="2358">Qt</g><g id="2361">::</g>gray<g id="2364">,</g> pad); selectionItem<g id="2367">-</g><g id="2370">&gt;</g>setZValue(<g id="2373">0.5</g>);</source><seg-source><mrk mtype="seg" mid="188"><g id="2313">// Selection item</g> RoundRectItem <g id="2316">*</g>selectionItem <g id="2319">=</g> <g id="2322">new</g> RoundRectItem(<g id="2325">QRectF</g>(<g id="2328">-</g><g id="2331">60</g><g id="2334">,</g> <g id="2337">-</g><g id="2340">60</g><g id="2343">,</g> <g id="2346">120</g><g id="2349">,</g> <g id="2352">120</g>)<g id="2355">,</g> <g id="2358">Qt</g><g id="2361">::</g>gray<g id="2364">,</g> pad); selectionItem<g id="2367">-</g><g id="2370">&gt;</g>setZValue(<g id="2373">0.5</g>);</mrk></seg-source><target><mrk mtype="seg" mid="188"/></target><sdl:seg-defs><sdl:seg id="188"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="132"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="131"/></sdl:cxts><trans-unit id="lockTU_73a0fdf6-2d35-4429-af9e-f4ca6efd171b" translate="no" sdl:locktype="Structure"><source><g id="2376">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_1fe06181-fc2f-4a4e-8137-ee9ef8a59b16" translate="no" sdl:locktype="Structure"><source><g id="2379">FlippablePad</g></source></trans-unit><trans-unit id="lockTU_53505ccc-9523-4f88-a462-218066c12601" translate="no" sdl:locktype="Structure"><source><g id="2376">RoundRectItem</g></source></trans-unit><trans-unit id="lockTU_ef6551c7-848a-4274-8d7f-01fe167f7872" translate="no" sdl:locktype="Structure"><source><g id="2379">FlippablePad</g></source></trans-unit><trans-unit id="79352729-0a6b-47f1-8ad3-a86569d901d0"><source>We now create the selection item. This is simply another instance of <x id="locked166" xid="lockTU_53505ccc-9523-4f88-a462-218066c12601"/> that is slightly larger than the icons on the pad. We create it as an immediate child of the <x id="locked167" xid="lockTU_ef6551c7-848a-4274-8d7f-01fe167f7872"/>, so the selection item is a sibling to all the icons. By giving it a <g id="2382">Z-value</g> of 0.5 we ensure it will slide between the pad and its icons.</source><seg-source><mrk mtype="seg" mid="189">We now create the selection item.</mrk> <mrk mtype="seg" mid="190">This is simply another instance of <x id="locked168" xid="lockTU_73a0fdf6-2d35-4429-af9e-f4ca6efd171b"/> that is slightly larger than the icons on the pad.</mrk> <mrk mtype="seg" mid="191">We create it as an immediate child of the <x id="locked169" xid="lockTU_1fe06181-fc2f-4a4e-8137-ee9ef8a59b16"/>, so the selection item is a sibling to all the icons.</mrk> <mrk mtype="seg" mid="192">By giving it a <g id="2382">Z-value</g> of 0.5 we ensure it will slide between the pad and its icons.</mrk></seg-source><target><mrk mtype="seg" mid="189"/> <mrk mtype="seg" mid="190"/> <mrk mtype="seg" mid="191"/> <mrk mtype="seg" mid="192"/></target><sdl:seg-defs><sdl:seg id="189"/><sdl:seg id="190"/><sdl:seg id="191"/><sdl:seg id="192"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="133"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="132"/></sdl:cxts><trans-unit id="4418fb6b-3c09-4f39-80cb-17a46fd32445"><source>What follows now is a series of animation initializations.</source><seg-source><mrk mtype="seg" mid="193">What follows now is a series of animation initializations.</mrk></seg-source><target><mrk mtype="seg" mid="193"/></target><sdl:seg-defs><sdl:seg id="193"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="134"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="133"/></sdl:cxts><trans-unit id="406aff64-1f17-4f81-b787-ff7c72e69176"><source><g id="2385">// Splash animations</g> <g id="2388">QPropertyAnimation</g> <g id="2391">*</g>smoothSplashMove <g id="2394">=</g> <g id="2397">new</g> <g id="2400">QPropertyAnimation</g>(splash<g id="2403">,</g> <g id="2406">&quot;y&quot;</g>); <g id="2409">QPropertyAnimation</g> <g id="2412">*</g>smoothSplashOpacity <g id="2415">=</g> <g id="2418">new</g> <g id="2421">QPropertyAnimation</g>(splash<g id="2424">,</g> <g id="2427">&quot;opacity&quot;</g>); smoothSplashMove<g id="2430">-</g><g id="2433">&gt;</g>setEasingCurve(<g id="2436">QEasingCurve</g><g id="2439">::</g>InQuad); smoothSplashMove<g id="2442">-</g><g id="2445">&gt;</g>setDuration(<g id="2448">250</g>); smoothSplashOpacity<g id="2451">-</g><g id="2454">&gt;</g>setDuration(<g id="2457">250</g>);</source><seg-source><mrk mtype="seg" mid="194"><g id="2385">// Splash animations</g> <g id="2388">QPropertyAnimation</g> <g id="2391">*</g>smoothSplashMove <g id="2394">=</g> <g id="2397">new</g> <g id="2400">QPropertyAnimation</g>(splash<g id="2403">,</g> <g id="2406">&quot;y&quot;</g>); <g id="2409">QPropertyAnimation</g> <g id="2412">*</g>smoothSplashOpacity <g id="2415">=</g> <g id="2418">new</g> <g id="2421">QPropertyAnimation</g>(splash<g id="2424">,</g> <g id="2427">&quot;opacity&quot;</g>); smoothSplashMove<g id="2430">-</g><g id="2433">&gt;</g>setEasingCurve(<g id="2436">QEasingCurve</g><g id="2439">::</g>InQuad); smoothSplashMove<g id="2442">-</g><g id="2445">&gt;</g>setDuration(<g id="2448">250</g>); smoothSplashOpacity<g id="2451">-</g><g id="2454">&gt;</g>setDuration(<g id="2457">250</g>);</mrk></seg-source><target><mrk mtype="seg" mid="194"/></target><sdl:seg-defs><sdl:seg id="194"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="135"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="134"/></sdl:cxts><trans-unit id="lockTU_d890fb1a-41a0-42cf-8c3f-c6561c9d2d68" translate="no" sdl:locktype="Structure"><source><g id="2469">smoothSplashOpacity</g></source></trans-unit><trans-unit id="lockTU_2d7db5cb-b095-4562-b6fe-a6ee05e4c31f" translate="no" sdl:locktype="Structure"><source><g id="2460">smoothSplashMove</g></source></trans-unit><trans-unit id="lockTU_47cd7d55-e902-480e-9755-394fb210b927" translate="no" sdl:locktype="Structure"><source><g id="2463">splash</g></source></trans-unit><trans-unit id="lockTU_5d84057b-7ae0-46fe-a1b5-5b75f6987119" translate="no" sdl:locktype="Structure"><source><g id="2469">smoothSplashOpacity</g></source></trans-unit><trans-unit id="lockTU_921a5025-2bf5-4b52-b337-855878902456" translate="no" sdl:locktype="Structure"><source><g id="2472">splash</g></source></trans-unit><trans-unit id="lockTU_a4c64888-c60a-4e00-8bfb-c0056a4c8e74" translate="no" sdl:locktype="Structure"><source><g id="2460">smoothSplashMove</g></source></trans-unit><trans-unit id="lockTU_992b2061-c0c8-4537-8b8e-c9628765eb0a" translate="no" sdl:locktype="Structure"><source><g id="2463">splash</g></source></trans-unit><trans-unit id="lockTU_385de8ab-349a-4c1a-91e0-910602f30653" translate="no" sdl:locktype="Structure"><source><g id="2469">smoothSplashOpacity</g></source></trans-unit><trans-unit id="lockTU_4144f8c9-b777-44ea-996d-809069d4c6e6" translate="no" sdl:locktype="Structure"><source><g id="2472">splash</g></source></trans-unit><trans-unit id="4e87175d-b1a7-4c09-bfd7-0b20b1e4fc2a"><source>We begin with the animations that apply to the splash item. The first animation, <x id="locked170" xid="lockTU_a4c64888-c60a-4e00-8bfb-c0056a4c8e74"/>, ensures that the &quot;y&quot; property of <x id="locked171" xid="lockTU_992b2061-c0c8-4537-8b8e-c9628765eb0a"/> will be animated with a 250-millisecond duration <g id="2466">InQuad</g> easing function. <x id="locked172" xid="lockTU_385de8ab-349a-4c1a-91e0-910602f30653"/> ensures the opacity of <x id="locked173" xid="lockTU_4144f8c9-b777-44ea-996d-809069d4c6e6"/> eases in and out in 250 milliseconds.</source><seg-source><mrk mtype="seg" mid="195">We begin with the animations that apply to the splash item.</mrk> <mrk mtype="seg" mid="196">The first animation, <x id="locked174" xid="lockTU_2d7db5cb-b095-4562-b6fe-a6ee05e4c31f"/>, ensures that the &quot;y&quot; property of <x id="locked175" xid="lockTU_47cd7d55-e902-480e-9755-394fb210b927"/> will be animated with a 250-millisecond duration <g id="2466">InQuad</g> easing function.</mrk> <x id="locked176" xid="lockTU_5d84057b-7ae0-46fe-a1b5-5b75f6987119"/> <mrk mtype="seg" mid="197">ensures the opacity of <x id="locked177" xid="lockTU_921a5025-2bf5-4b52-b337-855878902456"/> eases in and out in 250 milliseconds.</mrk></seg-source><target><mrk mtype="seg" mid="195"/> <mrk mtype="seg" mid="196"/> <x id="locked178" xid="lockTU_d890fb1a-41a0-42cf-8c3f-c6561c9d2d68"/> <mrk mtype="seg" mid="197"/></target><sdl:seg-defs><sdl:seg id="195"/><sdl:seg id="196"/><sdl:seg id="197"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="136"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="135"/></sdl:cxts><trans-unit id="lockTU_53693963-3af2-4d35-a473-8ab32736effa" translate="no" sdl:locktype="Structure"><source><g id="2475">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_dc6347a5-cf5c-479c-b05b-ea040627c1e0" translate="no" sdl:locktype="Structure"><source><g id="2475">PadNavigator</g></source></trans-unit><trans-unit id="db3bc3cf-6e44-4c49-a812-bd5ae0d9a7c3"><source>The values are assigned by <x id="locked179" xid="lockTU_dc6347a5-cf5c-479c-b05b-ea040627c1e0"/>&apos;s state machine, which is created later.</source><seg-source><mrk mtype="seg" mid="198">The values are assigned by <x id="locked180" xid="lockTU_53693963-3af2-4d35-a473-8ab32736effa"/>&apos;s state machine, which is created later.</mrk></seg-source><target><mrk mtype="seg" mid="198"/></target><sdl:seg-defs><sdl:seg id="198"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="137"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="136"/></sdl:cxts><trans-unit id="80d9cdba-2ec5-4bf7-badb-532308d1d8d8"><source><g id="2478">// Selection animation</g> <g id="2481">QPropertyAnimation</g> <g id="2484">*</g>smoothXSelection <g id="2487">=</g> <g id="2490">new</g> <g id="2493">QPropertyAnimation</g>(selectionItem<g id="2496">,</g> <g id="2499">&quot;x&quot;</g>); <g id="2502">QPropertyAnimation</g> <g id="2505">*</g>smoothYSelection <g id="2508">=</g> <g id="2511">new</g> <g id="2514">QPropertyAnimation</g>(selectionItem<g id="2517">,</g> <g id="2520">&quot;y&quot;</g>); <g id="2523">QPropertyAnimation</g> <g id="2526">*</g>smoothXRotation <g id="2529">=</g> <g id="2532">new</g> <g id="2535">QPropertyAnimation</g>(xRotation<g id="2538">,</g> <g id="2541">&quot;angle&quot;</g>); <g id="2544">QPropertyAnimation</g> <g id="2547">*</g>smoothYRotation <g id="2550">=</g> <g id="2553">new</g> <g id="2556">QPropertyAnimation</g>(yRotation<g id="2559">,</g> <g id="2562">&quot;angle&quot;</g>); smoothXSelection<g id="2565">-</g><g id="2568">&gt;</g>setDuration(<g id="2571">125</g>); smoothYSelection<g id="2574">-</g><g id="2577">&gt;</g>setDuration(<g id="2580">125</g>); smoothXRotation<g id="2583">-</g><g id="2586">&gt;</g>setDuration(<g id="2589">125</g>); smoothYRotation<g id="2592">-</g><g id="2595">&gt;</g>setDuration(<g id="2598">125</g>); smoothXSelection<g id="2601">-</g><g id="2604">&gt;</g>setEasingCurve(<g id="2607">QEasingCurve</g><g id="2610">::</g>InOutQuad); smoothYSelection<g id="2613">-</g><g id="2616">&gt;</g>setEasingCurve(<g id="2619">QEasingCurve</g><g id="2622">::</g>InOutQuad); smoothXRotation<g id="2625">-</g><g id="2628">&gt;</g>setEasingCurve(<g id="2631">QEasingCurve</g><g id="2634">::</g>InOutQuad); smoothYRotation<g id="2637">-</g><g id="2640">&gt;</g>setEasingCurve(<g id="2643">QEasingCurve</g><g id="2646">::</g>InOutQuad);</source><seg-source><mrk mtype="seg" mid="199"><g id="2478">// Selection animation</g> <g id="2481">QPropertyAnimation</g> <g id="2484">*</g>smoothXSelection <g id="2487">=</g> <g id="2490">new</g> <g id="2493">QPropertyAnimation</g>(selectionItem<g id="2496">,</g> <g id="2499">&quot;x&quot;</g>); <g id="2502">QPropertyAnimation</g> <g id="2505">*</g>smoothYSelection <g id="2508">=</g> <g id="2511">new</g> <g id="2514">QPropertyAnimation</g>(selectionItem<g id="2517">,</g> <g id="2520">&quot;y&quot;</g>); <g id="2523">QPropertyAnimation</g> <g id="2526">*</g>smoothXRotation <g id="2529">=</g> <g id="2532">new</g> <g id="2535">QPropertyAnimation</g>(xRotation<g id="2538">,</g> <g id="2541">&quot;angle&quot;</g>); <g id="2544">QPropertyAnimation</g> <g id="2547">*</g>smoothYRotation <g id="2550">=</g> <g id="2553">new</g> <g id="2556">QPropertyAnimation</g>(yRotation<g id="2559">,</g> <g id="2562">&quot;angle&quot;</g>); smoothXSelection<g id="2565">-</g><g id="2568">&gt;</g>setDuration(<g id="2571">125</g>); smoothYSelection<g id="2574">-</g><g id="2577">&gt;</g>setDuration(<g id="2580">125</g>); smoothXRotation<g id="2583">-</g><g id="2586">&gt;</g>setDuration(<g id="2589">125</g>); smoothYRotation<g id="2592">-</g><g id="2595">&gt;</g>setDuration(<g id="2598">125</g>); smoothXSelection<g id="2601">-</g><g id="2604">&gt;</g>setEasingCurve(<g id="2607">QEasingCurve</g><g id="2610">::</g>InOutQuad); smoothYSelection<g id="2613">-</g><g id="2616">&gt;</g>setEasingCurve(<g id="2619">QEasingCurve</g><g id="2622">::</g>InOutQuad); smoothXRotation<g id="2625">-</g><g id="2628">&gt;</g>setEasingCurve(<g id="2631">QEasingCurve</g><g id="2634">::</g>InOutQuad); smoothYRotation<g id="2637">-</g><g id="2640">&gt;</g>setEasingCurve(<g id="2643">QEasingCurve</g><g id="2646">::</g>InOutQuad);</mrk></seg-source><target><mrk mtype="seg" mid="199"/></target><sdl:seg-defs><sdl:seg id="199"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="138"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="137"/></sdl:cxts><trans-unit id="lockTU_67375300-d1f0-490a-afb8-75f75e7948d3" translate="no" sdl:locktype="Structure"><source><g id="2649">xRotation</g></source></trans-unit><trans-unit id="lockTU_e3d7e86a-b399-4f31-af7c-7e729f37ea5e" translate="no" sdl:locktype="Structure"><source><g id="2652">yRotation</g></source></trans-unit><trans-unit id="lockTU_b55dbefa-8be8-4daa-8dbb-335d701b1057" translate="no" sdl:locktype="Structure"><source><g id="2649">xRotation</g></source></trans-unit><trans-unit id="lockTU_6e5beb6e-40c5-4cf1-9f72-3861abd14b29" translate="no" sdl:locktype="Structure"><source><g id="2652">yRotation</g></source></trans-unit><trans-unit id="c86ba014-eeb1-4408-a7ae-f2165d6ec545"><source>These are the animations that control the selection item&apos;s movement and the <x id="locked181" xid="lockTU_b55dbefa-8be8-4daa-8dbb-335d701b1057"/> and <x id="locked182" xid="lockTU_6e5beb6e-40c5-4cf1-9f72-3861abd14b29"/> <g id="2655">QGraphicsRotation</g> objects that tilt the pad. All animations have a duration of 125 milliseconds, and they all use the <g id="2658">InOutQuad</g> easing function.</source><seg-source><mrk mtype="seg" mid="200">These are the animations that control the selection item&apos;s movement and the <x id="locked183" xid="lockTU_67375300-d1f0-490a-afb8-75f75e7948d3"/> and <x id="locked184" xid="lockTU_e3d7e86a-b399-4f31-af7c-7e729f37ea5e"/> <g id="2655">QGraphicsRotation</g> objects that tilt the pad.</mrk> <mrk mtype="seg" mid="201">All animations have a duration of 125 milliseconds, and they all use the <g id="2658">InOutQuad</g> easing function.</mrk></seg-source><target><mrk mtype="seg" mid="200"/> <mrk mtype="seg" mid="201"/></target><sdl:seg-defs><sdl:seg id="200"/><sdl:seg id="201"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="139"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="138"/></sdl:cxts><trans-unit id="70c9b140-9fba-4339-9967-c3380e8f82c0"><source><g id="2661">// Flip animation setup</g> <g id="2664">QPropertyAnimation</g> <g id="2667">*</g>smoothFlipRotation <g id="2670">=</g> <g id="2673">new</g> <g id="2676">QPropertyAnimation</g>(flipRotation<g id="2679">,</g> <g id="2682">&quot;angle&quot;</g>); <g id="2685">QPropertyAnimation</g> <g id="2688">*</g>smoothFlipScale <g id="2691">=</g> <g id="2694">new</g> <g id="2697">QPropertyAnimation</g>(pad<g id="2700">,</g> <g id="2703">&quot;scale&quot;</g>); <g id="2706">QPropertyAnimation</g> <g id="2709">*</g>smoothFlipXRotation <g id="2712">=</g> <g id="2715">new</g> <g id="2718">QPropertyAnimation</g>(xRotation<g id="2721">,</g> <g id="2724">&quot;angle&quot;</g>); <g id="2727">QPropertyAnimation</g> <g id="2730">*</g>smoothFlipYRotation <g id="2733">=</g> <g id="2736">new</g> <g id="2739">QPropertyAnimation</g>(yRotation<g id="2742">,</g> <g id="2745">&quot;angle&quot;</g>); <g id="2748">QParallelAnimationGroup</g> <g id="2751">*</g>flipAnimation <g id="2754">=</g> <g id="2757">new</g> <g id="2760">QParallelAnimationGroup</g>(<g id="2763">this</g>); smoothFlipScale<g id="2766">-</g><g id="2769">&gt;</g>setDuration(<g id="2772">500</g>); smoothFlipRotation<g id="2775">-</g><g id="2778">&gt;</g>setDuration(<g id="2781">500</g>); smoothFlipXRotation<g id="2784">-</g><g id="2787">&gt;</g>setDuration(<g id="2790">500</g>); smoothFlipYRotation<g id="2793">-</g><g id="2796">&gt;</g>setDuration(<g id="2799">500</g>); smoothFlipScale<g id="2802">-</g><g id="2805">&gt;</g>setEasingCurve(<g id="2808">QEasingCurve</g><g id="2811">::</g>InOutQuad); smoothFlipRotation<g id="2814">-</g><g id="2817">&gt;</g>setEasingCurve(<g id="2820">QEasingCurve</g><g id="2823">::</g>InOutQuad); smoothFlipXRotation<g id="2826">-</g><g id="2829">&gt;</g>setEasingCurve(<g id="2832">QEasingCurve</g><g id="2835">::</g>InOutQuad); smoothFlipYRotation<g id="2838">-</g><g id="2841">&gt;</g>setEasingCurve(<g id="2844">QEasingCurve</g><g id="2847">::</g>InOutQuad); smoothFlipScale<g id="2850">-</g><g id="2853">&gt;</g>setKeyValueAt(<g id="2856">0</g><g id="2859">,</g> qvariant_cast<g id="2862">&lt;</g><g id="2865">qreal</g><g id="2868">&gt;</g>(<g id="2871">1.0</g>)); smoothFlipScale<g id="2874">-</g><g id="2877">&gt;</g>setKeyValueAt(<g id="2880">0.5</g><g id="2883">,</g> qvariant_cast<g id="2886">&lt;</g><g id="2889">qreal</g><g id="2892">&gt;</g>(<g id="2895">0.7</g>)); smoothFlipScale<g id="2898">-</g><g id="2901">&gt;</g>setKeyValueAt(<g id="2904">1</g><g id="2907">,</g> qvariant_cast<g id="2910">&lt;</g><g id="2913">qreal</g><g id="2916">&gt;</g>(<g id="2919">1.0</g>)); flipAnimation<g id="2922">-</g><g id="2925">&gt;</g>addAnimation(smoothFlipRotation); flipAnimation<g id="2928">-</g><g id="2931">&gt;</g>addAnimation(smoothFlipScale); flipAnimation<g id="2934">-</g><g id="2937">&gt;</g>addAnimation(smoothFlipXRotation); flipAnimation<g id="2940">-</g><g id="2943">&gt;</g>addAnimation(smoothFlipYRotation);</source><seg-source><mrk mtype="seg" mid="202"><g id="2661">// Flip animation setup</g> <g id="2664">QPropertyAnimation</g> <g id="2667">*</g>smoothFlipRotation <g id="2670">=</g> <g id="2673">new</g> <g id="2676">QPropertyAnimation</g>(flipRotation<g id="2679">,</g> <g id="2682">&quot;angle&quot;</g>); <g id="2685">QPropertyAnimation</g> <g id="2688">*</g>smoothFlipScale <g id="2691">=</g> <g id="2694">new</g> <g id="2697">QPropertyAnimation</g>(pad<g id="2700">,</g> <g id="2703">&quot;scale&quot;</g>); <g id="2706">QPropertyAnimation</g> <g id="2709">*</g>smoothFlipXRotation <g id="2712">=</g> <g id="2715">new</g> <g id="2718">QPropertyAnimation</g>(xRotation<g id="2721">,</g> <g id="2724">&quot;angle&quot;</g>); <g id="2727">QPropertyAnimation</g> <g id="2730">*</g>smoothFlipYRotation <g id="2733">=</g> <g id="2736">new</g> <g id="2739">QPropertyAnimation</g>(yRotation<g id="2742">,</g> <g id="2745">&quot;angle&quot;</g>); <g id="2748">QParallelAnimationGroup</g> <g id="2751">*</g>flipAnimation <g id="2754">=</g> <g id="2757">new</g> <g id="2760">QParallelAnimationGroup</g>(<g id="2763">this</g>); smoothFlipScale<g id="2766">-</g><g id="2769">&gt;</g>setDuration(<g id="2772">500</g>); smoothFlipRotation<g id="2775">-</g><g id="2778">&gt;</g>setDuration(<g id="2781">500</g>); smoothFlipXRotation<g id="2784">-</g><g id="2787">&gt;</g>setDuration(<g id="2790">500</g>); smoothFlipYRotation<g id="2793">-</g><g id="2796">&gt;</g>setDuration(<g id="2799">500</g>); smoothFlipScale<g id="2802">-</g><g id="2805">&gt;</g>setEasingCurve(<g id="2808">QEasingCurve</g><g id="2811">::</g>InOutQuad); smoothFlipRotation<g id="2814">-</g><g id="2817">&gt;</g>setEasingCurve(<g id="2820">QEasingCurve</g><g id="2823">::</g>InOutQuad); smoothFlipXRotation<g id="2826">-</g><g id="2829">&gt;</g>setEasingCurve(<g id="2832">QEasingCurve</g><g id="2835">::</g>InOutQuad); smoothFlipYRotation<g id="2838">-</g><g id="2841">&gt;</g>setEasingCurve(<g id="2844">QEasingCurve</g><g id="2847">::</g>InOutQuad); smoothFlipScale<g id="2850">-</g><g id="2853">&gt;</g>setKeyValueAt(<g id="2856">0</g><g id="2859">,</g> qvariant_cast<g id="2862">&lt;</g><g id="2865">qreal</g><g id="2868">&gt;</g>(<g id="2871">1.0</g>)); smoothFlipScale<g id="2874">-</g><g id="2877">&gt;</g>setKeyValueAt(<g id="2880">0.5</g><g id="2883">,</g> qvariant_cast<g id="2886">&lt;</g><g id="2889">qreal</g><g id="2892">&gt;</g>(<g id="2895">0.7</g>)); smoothFlipScale<g id="2898">-</g><g id="2901">&gt;</g>setKeyValueAt(<g id="2904">1</g><g id="2907">,</g> qvariant_cast<g id="2910">&lt;</g><g id="2913">qreal</g><g id="2916">&gt;</g>(<g id="2919">1.0</g>)); flipAnimation<g id="2922">-</g><g id="2925">&gt;</g>addAnimation(smoothFlipRotation); flipAnimation<g id="2928">-</g><g id="2931">&gt;</g>addAnimation(smoothFlipScale); flipAnimation<g id="2934">-</g><g id="2937">&gt;</g>addAnimation(smoothFlipXRotation); flipAnimation<g id="2940">-</g><g id="2943">&gt;</g>addAnimation(smoothFlipYRotation);</mrk></seg-source><target><mrk mtype="seg" mid="202"/></target><sdl:seg-defs><sdl:seg id="202"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="140"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="139"/></sdl:cxts><trans-unit id="78c4db15-5e2d-439a-baca-f875700c3253"><source>We now create the animations that control the flip-effect when you press the enter key. The main goal is to rotate the pad by 180 degrees or back, but we also need to make sure the selection item&apos;s tilt rotations are reset back to 0 when the pad is flipped, and restored back to their original values when flipped back:</source><seg-source><mrk mtype="seg" mid="203">We now create the animations that control the flip-effect when you press the enter key.</mrk> <mrk mtype="seg" mid="204">The main goal is to rotate the pad by 180 degrees or back, but we also need to make sure the selection item&apos;s tilt rotations are reset back to 0 when the pad is flipped, and restored back to their original values when flipped back:</mrk></seg-source><target><mrk mtype="seg" mid="203"/> <mrk mtype="seg" mid="204"/></target><sdl:seg-defs><sdl:seg id="203"/><sdl:seg id="204"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="141"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="141"/></sdl:cxts><trans-unit id="lockTU_024552a6-d053-476f-b2cf-28b25c705f9f" translate="no" sdl:locktype="Structure"><source><g id="2946">smoothFlipRotation</g></source></trans-unit><trans-unit id="lockTU_937c4c62-830e-4225-a05e-5d557a83d35b" translate="no" sdl:locktype="Structure"><source><g id="2946">smoothFlipRotation</g></source></trans-unit><trans-unit id="lockTU_bd20a231-1f9d-4b89-90b0-a6da59681084" translate="no" sdl:locktype="Structure"><source><g id="2946">smoothFlipRotation</g></source></trans-unit><trans-unit id="0c59af20-e5a1-42bd-9c37-cae89451549c"><source><x id="locked185" xid="lockTU_bd20a231-1f9d-4b89-90b0-a6da59681084"/>: Animates the main 180 degree rotation of the pad.</source><seg-source><x id="locked186" xid="lockTU_937c4c62-830e-4225-a05e-5d557a83d35b"/><mrk mtype="seg" mid="205">:</mrk> <mrk mtype="seg" mid="206">Animates the main 180 degree rotation of the pad.</mrk></seg-source><target><x id="locked187" xid="lockTU_024552a6-d053-476f-b2cf-28b25c705f9f"/><mrk mtype="seg" mid="205"/> <mrk mtype="seg" mid="206"/></target><sdl:seg-defs><sdl:seg id="205"/><sdl:seg id="206"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="142"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="142"/></sdl:cxts><trans-unit id="lockTU_4a2f474d-49c3-48b1-afaa-9a190fba169e" translate="no" sdl:locktype="Structure"><source><g id="2949">smoothFlipScale</g></source></trans-unit><trans-unit id="lockTU_6b94726f-b996-4a31-b0b0-5332a53a9d88" translate="no" sdl:locktype="Structure"><source><g id="2949">smoothFlipScale</g></source></trans-unit><trans-unit id="lockTU_509f4a9c-6ff9-4955-97b7-4e99ea835955" translate="no" sdl:locktype="Structure"><source><g id="2949">smoothFlipScale</g></source></trans-unit><trans-unit id="b03944f0-dc53-44d1-a44b-64930a65e24a"><source><x id="locked188" xid="lockTU_509f4a9c-6ff9-4955-97b7-4e99ea835955"/>: Scales the pad out and then in again while the pad is rotating.</source><seg-source><x id="locked189" xid="lockTU_6b94726f-b996-4a31-b0b0-5332a53a9d88"/><mrk mtype="seg" mid="207">:</mrk> <mrk mtype="seg" mid="208">Scales the pad out and then in again while the pad is rotating.</mrk></seg-source><target><x id="locked190" xid="lockTU_4a2f474d-49c3-48b1-afaa-9a190fba169e"/><mrk mtype="seg" mid="207"/> <mrk mtype="seg" mid="208"/></target><sdl:seg-defs><sdl:seg id="207"/><sdl:seg id="208"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="143"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="143"/></sdl:cxts><trans-unit id="lockTU_8eeca6aa-eca8-4631-9284-e1258a28c0c5" translate="no" sdl:locktype="Structure"><source><g id="2952">smoothFlipXRotation</g></source></trans-unit><trans-unit id="lockTU_38fb6897-0e97-4ed5-9e80-5b341059b5d1" translate="no" sdl:locktype="Structure"><source><g id="2952">smoothFlipXRotation</g></source></trans-unit><trans-unit id="lockTU_cef14af0-fad7-4e4b-8353-589773ba869b" translate="no" sdl:locktype="Structure"><source><g id="2952">smoothFlipXRotation</g></source></trans-unit><trans-unit id="554262bf-596a-494a-a03c-9463e966ae96"><source><x id="locked191" xid="lockTU_cef14af0-fad7-4e4b-8353-589773ba869b"/>: Animates the selection item&apos;s X-tilt to 0 and back.</source><seg-source><x id="locked192" xid="lockTU_38fb6897-0e97-4ed5-9e80-5b341059b5d1"/><mrk mtype="seg" mid="209">:</mrk> <mrk mtype="seg" mid="210">Animates the selection item&apos;s X-tilt to 0 and back.</mrk></seg-source><target><x id="locked193" xid="lockTU_8eeca6aa-eca8-4631-9284-e1258a28c0c5"/><mrk mtype="seg" mid="209"/> <mrk mtype="seg" mid="210"/></target><sdl:seg-defs><sdl:seg id="209"/><sdl:seg id="210"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="144"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="144"/></sdl:cxts><trans-unit id="lockTU_66df7318-7ba7-469e-8f64-1999c58f5875" translate="no" sdl:locktype="Structure"><source><g id="2955">smoothFlipYRotation</g></source></trans-unit><trans-unit id="lockTU_b0accf91-6dd5-4b65-ac12-84ae716f68f5" translate="no" sdl:locktype="Structure"><source><g id="2955">smoothFlipYRotation</g></source></trans-unit><trans-unit id="lockTU_eb0ff941-fc9b-4754-918a-8261b4da977c" translate="no" sdl:locktype="Structure"><source><g id="2955">smoothFlipYRotation</g></source></trans-unit><trans-unit id="0cf9f6c7-4826-4d62-a87a-5534a65244d3"><source><x id="locked194" xid="lockTU_eb0ff941-fc9b-4754-918a-8261b4da977c"/>: Animates the selection item&apos;s Y-tilt to 0 and back.</source><seg-source><x id="locked195" xid="lockTU_b0accf91-6dd5-4b65-ac12-84ae716f68f5"/><mrk mtype="seg" mid="211">:</mrk> <mrk mtype="seg" mid="212">Animates the selection item&apos;s Y-tilt to 0 and back.</mrk></seg-source><target><x id="locked196" xid="lockTU_66df7318-7ba7-469e-8f64-1999c58f5875"/><mrk mtype="seg" mid="211"/> <mrk mtype="seg" mid="212"/></target><sdl:seg-defs><sdl:seg id="211"/><sdl:seg id="212"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="145"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="145"/></sdl:cxts><trans-unit id="lockTU_2b2af5da-d892-432c-9615-fadb3cde926d" translate="no" sdl:locktype="Structure"><source><g id="2958">flipAnimation</g></source></trans-unit><trans-unit id="lockTU_e0d42956-1512-4822-a971-0054c4f0f493" translate="no" sdl:locktype="Structure"><source><g id="2958">flipAnimation</g></source></trans-unit><trans-unit id="lockTU_66a956c9-4386-4480-8ac7-29b536d9bfe2" translate="no" sdl:locktype="Structure"><source><g id="2958">flipAnimation</g></source></trans-unit><trans-unit id="09d9d461-98b0-4db6-998a-69864d14905b"><source><x id="locked197" xid="lockTU_66a956c9-4386-4480-8ac7-29b536d9bfe2"/>: A parallel animation group that ensures all the above animations are run in parallel.</source><seg-source><x id="locked198" xid="lockTU_e0d42956-1512-4822-a971-0054c4f0f493"/><mrk mtype="seg" mid="213">:</mrk> <mrk mtype="seg" mid="214">A parallel animation group that ensures all the above animations are run in parallel.</mrk></seg-source><target><x id="locked199" xid="lockTU_2b2af5da-d892-432c-9615-fadb3cde926d"/><mrk mtype="seg" mid="213"/> <mrk mtype="seg" mid="214"/></target><sdl:seg-defs><sdl:seg id="213"/><sdl:seg id="214"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="146"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="146"/></sdl:cxts><trans-unit id="f0394344-e4a7-4489-b99c-fba919137cd5"><source>All animations are given a 500 millisecond duration and an <g id="2961">InOutQuad</g> easing function.</source><seg-source><mrk mtype="seg" mid="215">All animations are given a 500 millisecond duration and an <g id="2961">InOutQuad</g> easing function.</mrk></seg-source><target><mrk mtype="seg" mid="215"/></target><sdl:seg-defs><sdl:seg id="215"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="147"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="147"/></sdl:cxts><trans-unit id="lockTU_4b70abe8-b906-4723-a2f9-32f558c1bf9e" translate="no" sdl:locktype="Structure"><source><g id="2964">smoothFlipScale</g></source></trans-unit><trans-unit id="lockTU_387edaf3-c11d-45d6-bf7e-44ca84a281c2" translate="no" sdl:locktype="Structure"><source><g id="2964">smoothFlipScale</g></source></trans-unit><trans-unit id="5cab5729-0f73-4ad1-8cc6-6875964b884d"><source>It&apos;s worth taking a close look at <x id="locked200" xid="lockTU_387edaf3-c11d-45d6-bf7e-44ca84a281c2"/>. This animation&apos;s start and end values are both 1.0, but at animation step 0.5 the animation&apos;s value is 0.7. This means that after 50% of the animation&apos;s duration, or 250 milliseconds, the pad will be scaled down to 0.7x of its original size, which gives a great visual effect while flipping.</source><seg-source><mrk mtype="seg" mid="216">It&apos;s worth taking a close look at <x id="locked201" xid="lockTU_4b70abe8-b906-4723-a2f9-32f558c1bf9e"/>.</mrk> <mrk mtype="seg" mid="217">This animation&apos;s start and end values are both 1.0, but at animation step 0.5 the animation&apos;s value is 0.7.</mrk> <mrk mtype="seg" mid="218">This means that after 50% of the animation&apos;s duration, or 250 milliseconds, the pad will be scaled down to 0.7x of its original size, which gives a great visual effect while flipping.</mrk></seg-source><target><mrk mtype="seg" mid="216"/> <mrk mtype="seg" mid="217"/> <mrk mtype="seg" mid="218"/></target><sdl:seg-defs><sdl:seg id="216"/><sdl:seg id="217"/><sdl:seg id="218"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="148"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="148"/></sdl:cxts><trans-unit id="88cfade0-cbc9-4c11-bab4-dfe6edb8ed8d"><source><g id="2967">// Flip animation delayed property assignment</g> <g id="2970">QSequentialAnimationGroup</g> <g id="2973">*</g>setVariablesSequence <g id="2976">=</g> <g id="2979">new</g> <g id="2982">QSequentialAnimationGroup</g>; <g id="2985">QPropertyAnimation</g> <g id="2988">*</g>setFillAnimation <g id="2991">=</g> <g id="2994">new</g> <g id="2997">QPropertyAnimation</g>(pad<g id="3000">,</g> <g id="3003">&quot;fill&quot;</g>); <g id="3006">QPropertyAnimation</g> <g id="3009">*</g>setBackItemVisibleAnimation <g id="3012">=</g> <g id="3015">new</g> <g id="3018">QPropertyAnimation</g>(backItem<g id="3021">,</g> <g id="3024">&quot;visible&quot;</g>); <g id="3027">QPropertyAnimation</g> <g id="3030">*</g>setSelectionItemVisibleAnimation <g id="3033">=</g> <g id="3036">new</g> <g id="3039">QPropertyAnimation</g>(selectionItem<g id="3042">,</g> <g id="3045">&quot;visible&quot;</g>); setFillAnimation<g id="3048">-</g><g id="3051">&gt;</g>setDuration(<g id="3054">0</g>); setBackItemVisibleAnimation<g id="3057">-</g><g id="3060">&gt;</g>setDuration(<g id="3063">0</g>); setSelectionItemVisibleAnimation<g id="3066">-</g><g id="3069">&gt;</g>setDuration(<g id="3072">0</g>); setVariablesSequence<g id="3075">-</g><g id="3078">&gt;</g>addPause(<g id="3081">250</g>); setVariablesSequence<g id="3084">-</g><g id="3087">&gt;</g>addAnimation(setBackItemVisibleAnimation); setVariablesSequence<g id="3090">-</g><g id="3093">&gt;</g>addAnimation(setSelectionItemVisibleAnimation); setVariablesSequence<g id="3096">-</g><g id="3099">&gt;</g>addAnimation(setFillAnimation); flipAnimation<g id="3102">-</g><g id="3105">&gt;</g>addAnimation(setVariablesSequence);</source><seg-source><mrk mtype="seg" mid="219"><g id="2967">// Flip animation delayed property assignment</g> <g id="2970">QSequentialAnimationGroup</g> <g id="2973">*</g>setVariablesSequence <g id="2976">=</g> <g id="2979">new</g> <g id="2982">QSequentialAnimationGroup</g>; <g id="2985">QPropertyAnimation</g> <g id="2988">*</g>setFillAnimation <g id="2991">=</g> <g id="2994">new</g> <g id="2997">QPropertyAnimation</g>(pad<g id="3000">,</g> <g id="3003">&quot;fill&quot;</g>); <g id="3006">QPropertyAnimation</g> <g id="3009">*</g>setBackItemVisibleAnimation <g id="3012">=</g> <g id="3015">new</g> <g id="3018">QPropertyAnimation</g>(backItem<g id="3021">,</g> <g id="3024">&quot;visible&quot;</g>); <g id="3027">QPropertyAnimation</g> <g id="3030">*</g>setSelectionItemVisibleAnimation <g id="3033">=</g> <g id="3036">new</g> <g id="3039">QPropertyAnimation</g>(selectionItem<g id="3042">,</g> <g id="3045">&quot;visible&quot;</g>); setFillAnimation<g id="3048">-</g><g id="3051">&gt;</g>setDuration(<g id="3054">0</g>); setBackItemVisibleAnimation<g id="3057">-</g><g id="3060">&gt;</g>setDuration(<g id="3063">0</g>); setSelectionItemVisibleAnimation<g id="3066">-</g><g id="3069">&gt;</g>setDuration(<g id="3072">0</g>); setVariablesSequence<g id="3075">-</g><g id="3078">&gt;</g>addPause(<g id="3081">250</g>); setVariablesSequence<g id="3084">-</g><g id="3087">&gt;</g>addAnimation(setBackItemVisibleAnimation); setVariablesSequence<g id="3090">-</g><g id="3093">&gt;</g>addAnimation(setSelectionItemVisibleAnimation); setVariablesSequence<g id="3096">-</g><g id="3099">&gt;</g>addAnimation(setFillAnimation); flipAnimation<g id="3102">-</g><g id="3105">&gt;</g>addAnimation(setVariablesSequence);</mrk></seg-source><target><mrk mtype="seg" mid="219"/></target><sdl:seg-defs><sdl:seg id="219"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="149"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="149"/></sdl:cxts><trans-unit id="lockTU_83a9cf9b-0bd5-429d-98b2-4db9e55a4437" translate="no" sdl:locktype="Structure"><source><g id="3108">fill</g></source></trans-unit><trans-unit id="lockTU_f179dc1e-463b-4c1c-990f-5ab68d93137b" translate="no" sdl:locktype="Structure"><source><g id="3111">backItem</g></source></trans-unit><trans-unit id="lockTU_e33b46d8-7fb9-4d16-af28-d38582fc6da8" translate="no" sdl:locktype="Structure"><source><g id="3108">fill</g></source></trans-unit><trans-unit id="lockTU_844164fb-44f5-4d95-ba36-0f5dc0182474" translate="no" sdl:locktype="Structure"><source><g id="3111">backItem</g></source></trans-unit><trans-unit id="f580b58f-1208-4f70-aef8-bb2bf878f3a7"><source>This section uses a trick to ensure that certain properties are assigned precisely when the flip animation passes 50%, or 90 degrees, rotation. In short, the pad&apos;s icons and selection item are all hidden, the pad&apos;s <x id="locked202" xid="lockTU_e33b46d8-7fb9-4d16-af28-d38582fc6da8"/> property is enabled, and <x id="locked203" xid="lockTU_844164fb-44f5-4d95-ba36-0f5dc0182474"/> is shown when flipping over. When flipping back, the reverse properties are applied.</source><seg-source><mrk mtype="seg" mid="220">This section uses a trick to ensure that certain properties are assigned precisely when the flip animation passes 50%, or 90 degrees, rotation.</mrk> <mrk mtype="seg" mid="221">In short, the pad&apos;s icons and selection item are all hidden, the pad&apos;s <x id="locked204" xid="lockTU_83a9cf9b-0bd5-429d-98b2-4db9e55a4437"/> property is enabled, and <x id="locked205" xid="lockTU_f179dc1e-463b-4c1c-990f-5ab68d93137b"/> is shown when flipping over.</mrk> <mrk mtype="seg" mid="222">When flipping back, the reverse properties are applied.</mrk></seg-source><target><mrk mtype="seg" mid="220"/> <mrk mtype="seg" mid="221"/> <mrk mtype="seg" mid="222"/></target><sdl:seg-defs><sdl:seg id="220"/><sdl:seg id="221"/><sdl:seg id="222"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="150"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="150"/></sdl:cxts><trans-unit id="lockTU_0d1bf47f-5c58-43bc-a5e2-1e8fdc30162e" translate="no" sdl:locktype="Structure"><source><g id="3114">setVariablesSequence</g></source></trans-unit><trans-unit id="lockTU_4d03659d-36da-4fc3-a2aa-3edf2eeaef38" translate="no" sdl:locktype="Structure"><source><g id="3114">setVariablesSequence</g></source></trans-unit><trans-unit id="f9cd617a-d9df-4c95-9676-3ceb7e8b285f"><source>The way this is achieved is by running a sequential animation in parallel to the other animations. This sequence, dubbed <x id="locked206" xid="lockTU_4d03659d-36da-4fc3-a2aa-3edf2eeaef38"/>, starts with a 250 millisecond pause, and then executes several animations with a duration of 0. Each animation will ensure that properties are set immediate at this point.</source><seg-source><mrk mtype="seg" mid="223">The way this is achieved is by running a sequential animation in parallel to the other animations.</mrk> <mrk mtype="seg" mid="224">This sequence, dubbed <x id="locked207" xid="lockTU_0d1bf47f-5c58-43bc-a5e2-1e8fdc30162e"/>, starts with a 250 millisecond pause, and then executes several animations with a duration of 0.</mrk> <mrk mtype="seg" mid="225">Each animation will ensure that properties are set immediate at this point.</mrk></seg-source><target><mrk mtype="seg" mid="223"/> <mrk mtype="seg" mid="224"/> <mrk mtype="seg" mid="225"/></target><sdl:seg-defs><sdl:seg id="223"/><sdl:seg id="224"/><sdl:seg id="225"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="151"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="151"/></sdl:cxts><trans-unit id="d39ba365-c979-4583-80af-329d5c725d69"><source>This approach can also be used to call functions or set any other properties at a specific time while an animation is running.</source><seg-source><mrk mtype="seg" mid="226">This approach can also be used to call functions or set any other properties at a specific time while an animation is running.</mrk></seg-source><target><mrk mtype="seg" mid="226"/></target><sdl:seg-defs><sdl:seg id="226"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="152"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="152"/></sdl:cxts><trans-unit id="6e355f1e-e769-4105-a7b1-b15b0fdb7f40"><source><g id="3117">// Build the state machine</g> <g id="3120">QStateMachine</g> <g id="3123">*</g>stateMachine <g id="3126">=</g> <g id="3129">new</g> <g id="3132">QStateMachine</g>(<g id="3135">this</g>); <g id="3138">QState</g> <g id="3141">*</g>splashState <g id="3144">=</g> <g id="3147">new</g> <g id="3150">QState</g>(stateMachine); <g id="3153">QState</g> <g id="3156">*</g>frontState <g id="3159">=</g> <g id="3162">new</g> <g id="3165">QState</g>(stateMachine); <g id="3168">QHistoryState</g> <g id="3171">*</g>historyState <g id="3174">=</g> <g id="3177">new</g> <g id="3180">QHistoryState</g>(frontState); <g id="3183">QState</g> <g id="3186">*</g>backState <g id="3189">=</g> <g id="3192">new</g> <g id="3195">QState</g>(stateMachine);</source><seg-source><mrk mtype="seg" mid="227"><g id="3117">// Build the state machine</g> <g id="3120">QStateMachine</g> <g id="3123">*</g>stateMachine <g id="3126">=</g> <g id="3129">new</g> <g id="3132">QStateMachine</g>(<g id="3135">this</g>); <g id="3138">QState</g> <g id="3141">*</g>splashState <g id="3144">=</g> <g id="3147">new</g> <g id="3150">QState</g>(stateMachine); <g id="3153">QState</g> <g id="3156">*</g>frontState <g id="3159">=</g> <g id="3162">new</g> <g id="3165">QState</g>(stateMachine); <g id="3168">QHistoryState</g> <g id="3171">*</g>historyState <g id="3174">=</g> <g id="3177">new</g> <g id="3180">QHistoryState</g>(frontState); <g id="3183">QState</g> <g id="3186">*</g>backState <g id="3189">=</g> <g id="3192">new</g> <g id="3195">QState</g>(stateMachine);</mrk></seg-source><target><mrk mtype="seg" mid="227"/></target><sdl:seg-defs><sdl:seg id="227"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="153"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="153"/></sdl:cxts><trans-unit id="lockTU_219aac8b-f484-43f9-964e-9bf45a8fdc2c" translate="no" sdl:locktype="Structure"><source><g id="3198">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_6b359ec2-486a-4d71-a24c-6de471d0b166" translate="no" sdl:locktype="Structure"><source><g id="3201">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_0f9f9446-f165-48ed-8349-a9a0d94a2314" translate="no" sdl:locktype="Structure"><source><g id="3198">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_653be9a2-cf13-4f21-a853-8abb01dbbc05" translate="no" sdl:locktype="Structure"><source><g id="3201">PadNavigator</g></source></trans-unit><trans-unit id="e842dd7b-d057-4b3a-8d92-e1bc2cbb6ec5"><source>We will now create the state machine. The whole <x id="locked208" xid="lockTU_0f9f9446-f165-48ed-8349-a9a0d94a2314"/> state machinery is controlled by one single state machine that has a straight-forward state structure. The state engine itself is created as a child of the <x id="locked209" xid="lockTU_653be9a2-cf13-4f21-a853-8abb01dbbc05"/> itself. We then create three top level states:</source><seg-source><mrk mtype="seg" mid="228">We will now create the state machine.</mrk> <mrk mtype="seg" mid="229">The whole <x id="locked210" xid="lockTU_219aac8b-f484-43f9-964e-9bf45a8fdc2c"/> state machinery is controlled by one single state machine that has a straight-forward state structure.</mrk> <mrk mtype="seg" mid="230">The state engine itself is created as a child of the <x id="locked211" xid="lockTU_6b359ec2-486a-4d71-a24c-6de471d0b166"/> itself.</mrk> <mrk mtype="seg" mid="231">We then create three top level states:</mrk></seg-source><target><mrk mtype="seg" mid="228"/> <mrk mtype="seg" mid="229"/> <mrk mtype="seg" mid="230"/> <mrk mtype="seg" mid="231"/></target><sdl:seg-defs><sdl:seg id="228"/><sdl:seg id="229"/><sdl:seg id="230"/><sdl:seg id="231"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="154"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="155"/></sdl:cxts><trans-unit id="lockTU_c57423b5-8d34-48c9-b671-8dfa8f561b3e" translate="no" sdl:locktype="Structure"><source><g id="3204">splashState</g></source></trans-unit><trans-unit id="lockTU_00256eb7-447a-431e-b778-5533cdbfdf3f" translate="no" sdl:locktype="Structure"><source><g id="3204">splashState</g></source></trans-unit><trans-unit id="lockTU_6c2b79d2-b3b8-43ef-b505-727831390152" translate="no" sdl:locktype="Structure"><source><g id="3204">splashState</g></source></trans-unit><trans-unit id="79a65d17-7828-43f2-b2ce-7cbd4aaef97c"><source><x id="locked212" xid="lockTU_6c2b79d2-b3b8-43ef-b505-727831390152"/>: The initial state where the splash item is visible.</source><seg-source><x id="locked213" xid="lockTU_00256eb7-447a-431e-b778-5533cdbfdf3f"/><mrk mtype="seg" mid="232">:</mrk> <mrk mtype="seg" mid="233">The initial state where the splash item is visible.</mrk></seg-source><target><x id="locked214" xid="lockTU_c57423b5-8d34-48c9-b671-8dfa8f561b3e"/><mrk mtype="seg" mid="232"/> <mrk mtype="seg" mid="233"/></target><sdl:seg-defs><sdl:seg id="232"/><sdl:seg id="233"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="155"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="156"/></sdl:cxts><trans-unit id="lockTU_f675163f-d014-4cf6-b929-2cd188430f32" translate="no" sdl:locktype="Structure"><source><g id="3207">frontState</g></source></trans-unit><trans-unit id="lockTU_fdef90e5-b8b7-4a08-b60e-5eea0501c00e" translate="no" sdl:locktype="Structure"><source><g id="3207">frontState</g></source></trans-unit><trans-unit id="lockTU_c9e4b5c9-7689-4a0f-8b16-aece2d24d038" translate="no" sdl:locktype="Structure"><source><g id="3207">frontState</g></source></trans-unit><trans-unit id="6464a046-6edb-44db-a547-a750f6df1d3d"><source><x id="locked215" xid="lockTU_c9e4b5c9-7689-4a0f-8b16-aece2d24d038"/>: The base state where the splash is gone and we can see the front side of the pad, and navigate the selection item.</source><seg-source><x id="locked216" xid="lockTU_fdef90e5-b8b7-4a08-b60e-5eea0501c00e"/><mrk mtype="seg" mid="234">:</mrk> <mrk mtype="seg" mid="235">The base state where the splash is gone and we can see the front side of the pad, and navigate the selection item.</mrk></seg-source><target><x id="locked217" xid="lockTU_f675163f-d014-4cf6-b929-2cd188430f32"/><mrk mtype="seg" mid="234"/> <mrk mtype="seg" mid="235"/></target><sdl:seg-defs><sdl:seg id="234"/><sdl:seg id="235"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="156"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="157"/></sdl:cxts><trans-unit id="lockTU_82f7c536-97ba-4ca8-8d2f-bbdc49604abd" translate="no" sdl:locktype="Structure"><source><g id="3210">backState</g></source></trans-unit><trans-unit id="lockTU_a094b16c-afd7-421b-8c84-1671c016c579" translate="no" sdl:locktype="Structure"><source><g id="3210">backState</g></source></trans-unit><trans-unit id="lockTU_ec565352-711b-4e74-a2ad-0ed1a16a9e44" translate="no" sdl:locktype="Structure"><source><g id="3213">backItem</g></source></trans-unit><trans-unit id="lockTU_fa05250a-8934-40d6-8c42-a2d8e16703a8" translate="no" sdl:locktype="Structure"><source><g id="3210">backState</g></source></trans-unit><trans-unit id="lockTU_f11d03b5-b5e3-416a-bd18-d9defc1faa3e" translate="no" sdl:locktype="Structure"><source><g id="3213">backItem</g></source></trans-unit><trans-unit id="ea8fa927-2ccb-429a-99cc-2c8978ab4f9b"><source><x id="locked218" xid="lockTU_fa05250a-8934-40d6-8c42-a2d8e16703a8"/>: The flipped state where the <x id="locked219" xid="lockTU_f11d03b5-b5e3-416a-bd18-d9defc1faa3e"/> is visible, and we can interact with the <g id="3216">QGraphicsProxyWidget</g>-embedded form.</source><seg-source><x id="locked220" xid="lockTU_a094b16c-afd7-421b-8c84-1671c016c579"/><mrk mtype="seg" mid="236">:</mrk> <mrk mtype="seg" mid="237">The flipped state where the <x id="locked221" xid="lockTU_ec565352-711b-4e74-a2ad-0ed1a16a9e44"/> is visible, and we can interact with the <g id="3216">QGraphicsProxyWidget</g>-embedded form.</mrk></seg-source><target><x id="locked222" xid="lockTU_82f7c536-97ba-4ca8-8d2f-bbdc49604abd"/><mrk mtype="seg" mid="236"/> <mrk mtype="seg" mid="237"/></target><sdl:seg-defs><sdl:seg id="236"/><sdl:seg id="237"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="157"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="158"/></sdl:cxts><trans-unit id="cecab367-eb69-4f8c-800b-644ffeba0a9e"><source>frontState<g id="3219">-</g><g id="3222">&gt;</g>assignProperty(pad<g id="3225">,</g> <g id="3228">&quot;fill&quot;</g><g id="3231">,</g> <g id="3234">false</g>); frontState<g id="3237">-</g><g id="3240">&gt;</g>assignProperty(splash<g id="3243">,</g> <g id="3246">&quot;opacity&quot;</g><g id="3249">,</g> <g id="3252">0.0</g>); frontState<g id="3255">-</g><g id="3258">&gt;</g>assignProperty(backItem<g id="3261">,</g> <g id="3264">&quot;visible&quot;</g><g id="3267">,</g> <g id="3270">false</g>); frontState<g id="3273">-</g><g id="3276">&gt;</g>assignProperty(flipRotation<g id="3279">,</g> <g id="3282">&quot;angle&quot;</g><g id="3285">,</g> qvariant_cast<g id="3288">&lt;</g><g id="3291">qreal</g><g id="3294">&gt;</g>(<g id="3297">0.0</g>)); frontState<g id="3300">-</g><g id="3303">&gt;</g>assignProperty(selectionItem<g id="3306">,</g> <g id="3309">&quot;visible&quot;</g><g id="3312">,</g> <g id="3315">true</g>); backState<g id="3318">-</g><g id="3321">&gt;</g>assignProperty(pad<g id="3324">,</g> <g id="3327">&quot;fill&quot;</g><g id="3330">,</g> <g id="3333">true</g>); backState<g id="3336">-</g><g id="3339">&gt;</g>assignProperty(backItem<g id="3342">,</g> <g id="3345">&quot;visible&quot;</g><g id="3348">,</g> <g id="3351">true</g>); backState<g id="3354">-</g><g id="3357">&gt;</g>assignProperty(xRotation<g id="3360">,</g> <g id="3363">&quot;angle&quot;</g><g id="3366">,</g> qvariant_cast<g id="3369">&lt;</g><g id="3372">qreal</g><g id="3375">&gt;</g>(<g id="3378">0.0</g>)); backState<g id="3381">-</g><g id="3384">&gt;</g>assignProperty(yRotation<g id="3387">,</g> <g id="3390">&quot;angle&quot;</g><g id="3393">,</g> qvariant_cast<g id="3396">&lt;</g><g id="3399">qreal</g><g id="3402">&gt;</g>(<g id="3405">0.0</g>)); backState<g id="3408">-</g><g id="3411">&gt;</g>assignProperty(flipRotation<g id="3414">,</g> <g id="3417">&quot;angle&quot;</g><g id="3420">,</g> qvariant_cast<g id="3423">&lt;</g><g id="3426">qreal</g><g id="3429">&gt;</g>(<g id="3432">180.0</g>)); backState<g id="3435">-</g><g id="3438">&gt;</g>assignProperty(selectionItem<g id="3441">,</g> <g id="3444">&quot;visible&quot;</g><g id="3447">,</g> <g id="3450">false</g>); stateMachine<g id="3453">-</g><g id="3456">&gt;</g>addDefaultAnimation(smoothXRotation); stateMachine<g id="3459">-</g><g id="3462">&gt;</g>addDefaultAnimation(smoothYRotation); stateMachine<g id="3465">-</g><g id="3468">&gt;</g>addDefaultAnimation(smoothXSelection); stateMachine<g id="3471">-</g><g id="3474">&gt;</g>addDefaultAnimation(smoothYSelection); stateMachine<g id="3477">-</g><g id="3480">&gt;</g>setInitialState(splashState);</source><seg-source><mrk mtype="seg" mid="238">frontState<g id="3219">-</g><g id="3222">&gt;</g>assignProperty(pad<g id="3225">,</g> <g id="3228">&quot;fill&quot;</g><g id="3231">,</g> <g id="3234">false</g>); frontState<g id="3237">-</g><g id="3240">&gt;</g>assignProperty(splash<g id="3243">,</g> <g id="3246">&quot;opacity&quot;</g><g id="3249">,</g> <g id="3252">0.0</g>); frontState<g id="3255">-</g><g id="3258">&gt;</g>assignProperty(backItem<g id="3261">,</g> <g id="3264">&quot;visible&quot;</g><g id="3267">,</g> <g id="3270">false</g>); frontState<g id="3273">-</g><g id="3276">&gt;</g>assignProperty(flipRotation<g id="3279">,</g> <g id="3282">&quot;angle&quot;</g><g id="3285">,</g> qvariant_cast<g id="3288">&lt;</g><g id="3291">qreal</g><g id="3294">&gt;</g>(<g id="3297">0.0</g>)); frontState<g id="3300">-</g><g id="3303">&gt;</g>assignProperty(selectionItem<g id="3306">,</g> <g id="3309">&quot;visible&quot;</g><g id="3312">,</g> <g id="3315">true</g>); backState<g id="3318">-</g><g id="3321">&gt;</g>assignProperty(pad<g id="3324">,</g> <g id="3327">&quot;fill&quot;</g><g id="3330">,</g> <g id="3333">true</g>); backState<g id="3336">-</g><g id="3339">&gt;</g>assignProperty(backItem<g id="3342">,</g> <g id="3345">&quot;visible&quot;</g><g id="3348">,</g> <g id="3351">true</g>); backState<g id="3354">-</g><g id="3357">&gt;</g>assignProperty(xRotation<g id="3360">,</g> <g id="3363">&quot;angle&quot;</g><g id="3366">,</g> qvariant_cast<g id="3369">&lt;</g><g id="3372">qreal</g><g id="3375">&gt;</g>(<g id="3378">0.0</g>)); backState<g id="3381">-</g><g id="3384">&gt;</g>assignProperty(yRotation<g id="3387">,</g> <g id="3390">&quot;angle&quot;</g><g id="3393">,</g> qvariant_cast<g id="3396">&lt;</g><g id="3399">qreal</g><g id="3402">&gt;</g>(<g id="3405">0.0</g>)); backState<g id="3408">-</g><g id="3411">&gt;</g>assignProperty(flipRotation<g id="3414">,</g> <g id="3417">&quot;angle&quot;</g><g id="3420">,</g> qvariant_cast<g id="3423">&lt;</g><g id="3426">qreal</g><g id="3429">&gt;</g>(<g id="3432">180.0</g>)); backState<g id="3435">-</g><g id="3438">&gt;</g>assignProperty(selectionItem<g id="3441">,</g> <g id="3444">&quot;visible&quot;</g><g id="3447">,</g> <g id="3450">false</g>); stateMachine<g id="3453">-</g><g id="3456">&gt;</g>addDefaultAnimation(smoothXRotation); stateMachine<g id="3459">-</g><g id="3462">&gt;</g>addDefaultAnimation(smoothYRotation); stateMachine<g id="3465">-</g><g id="3468">&gt;</g>addDefaultAnimation(smoothXSelection); stateMachine<g id="3471">-</g><g id="3474">&gt;</g>addDefaultAnimation(smoothYSelection); stateMachine<g id="3477">-</g><g id="3480">&gt;</g>setInitialState(splashState);</mrk></seg-source><target><mrk mtype="seg" mid="238"/></target><sdl:seg-defs><sdl:seg id="238"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="158"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="159"/></sdl:cxts><trans-unit id="lockTU_c2547697-a25c-40a4-951f-02fc8e2e6b6c" translate="no" sdl:locktype="Structure"><source><g id="3483">flipRotation</g></source></trans-unit><trans-unit id="lockTU_6e09220c-e73d-44ca-bd86-22c292f7c452" translate="no" sdl:locktype="Structure"><source><g id="3486">frontState</g></source></trans-unit><trans-unit id="lockTU_a7f41e98-d215-4739-a7b9-1506e6f6bd2e" translate="no" sdl:locktype="Structure"><source><g id="3489">backState</g></source></trans-unit><trans-unit id="lockTU_f22073b0-7e55-449c-b8f3-68f4af84e6c9" translate="no" sdl:locktype="Structure"><source><g id="3483">flipRotation</g></source></trans-unit><trans-unit id="lockTU_32abf09a-c169-4d85-bf93-38bf846a021a" translate="no" sdl:locktype="Structure"><source><g id="3486">frontState</g></source></trans-unit><trans-unit id="lockTU_4f0fadf9-213f-4133-8de2-f2d9d7030718" translate="no" sdl:locktype="Structure"><source><g id="3489">backState</g></source></trans-unit><trans-unit id="6dc479e5-a819-4fbb-b41e-c1eb705279ef"><source>Each state assigns specific properties to objects on entry. Most interesting perhaps is the assignment of the value 0.0 to the pad&apos;s <x id="locked223" xid="lockTU_f22073b0-7e55-449c-b8f3-68f4af84e6c9"/> angle property when in <x id="locked224" xid="lockTU_32abf09a-c169-4d85-bf93-38bf846a021a"/>, and 180.0 when in <x id="locked225" xid="lockTU_4f0fadf9-213f-4133-8de2-f2d9d7030718"/>. At the end of this section we register default animations with the state engine; these animations will apply to their respective objects and properties for any state transition. Otherwise it&apos;s common to assign animations to specific transitions.</source><seg-source><mrk mtype="seg" mid="239">Each state assigns specific properties to objects on entry.</mrk> <mrk mtype="seg" mid="240">Most interesting perhaps is the assignment of the value 0.0 to the pad&apos;s <x id="locked226" xid="lockTU_c2547697-a25c-40a4-951f-02fc8e2e6b6c"/> angle property when in <x id="locked227" xid="lockTU_6e09220c-e73d-44ca-bd86-22c292f7c452"/>, and 180.0 when in <x id="locked228" xid="lockTU_a7f41e98-d215-4739-a7b9-1506e6f6bd2e"/>.</mrk> <mrk mtype="seg" mid="241">At the end of this section we register default animations with the state engine; these animations will apply to their respective objects and properties for any state transition.</mrk> <mrk mtype="seg" mid="242">Otherwise it&apos;s common to assign animations to specific transitions.</mrk></seg-source><target><mrk mtype="seg" mid="239"/> <mrk mtype="seg" mid="240"/> <mrk mtype="seg" mid="241"/> <mrk mtype="seg" mid="242"/></target><sdl:seg-defs><sdl:seg id="239"/><sdl:seg id="240"/><sdl:seg id="241"/><sdl:seg id="242"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="159"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="160"/></sdl:cxts><trans-unit id="lockTU_5040dc0c-03e7-4b37-a722-c16ee31a8491" translate="no" sdl:locktype="Structure"><source><g id="3492">splashState</g></source></trans-unit><trans-unit id="lockTU_344a9315-e13c-4278-93c1-0e3c65b8a0ff" translate="no" sdl:locktype="Structure"><source><g id="3492">splashState</g></source></trans-unit><trans-unit id="9509fa0b-ca4f-434e-a525-d2f7f9c035e4"><source>The <x id="locked229" xid="lockTU_344a9315-e13c-4278-93c1-0e3c65b8a0ff"/> state is set as the initial state. This is required before we start the state engine. We proceed with creating some transitions.</source><seg-source><mrk mtype="seg" mid="243">The <x id="locked230" xid="lockTU_5040dc0c-03e7-4b37-a722-c16ee31a8491"/> state is set as the initial state.</mrk> <mrk mtype="seg" mid="244">This is required before we start the state engine.</mrk> <mrk mtype="seg" mid="245">We proceed with creating some transitions.</mrk></seg-source><target><mrk mtype="seg" mid="243"/> <mrk mtype="seg" mid="244"/> <mrk mtype="seg" mid="245"/></target><sdl:seg-defs><sdl:seg id="243"/><sdl:seg id="244"/><sdl:seg id="245"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="160"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="161"/></sdl:cxts><trans-unit id="d2c36eea-39b8-4239-8387-797b442ff467"><source><g id="3495">// Transitions</g> <g id="3498">QEventTransition</g> <g id="3501">*</g>anyKeyTransition <g id="3504">=</g> <g id="3507">new</g> <g id="3510">QEventTransition</g>(<g id="3513">this</g><g id="3516">,</g> <g id="3519">QEvent</g><g id="3522">::</g>KeyPress<g id="3525">,</g> splashState); anyKeyTransition<g id="3528">-</g><g id="3531">&gt;</g>setTargetState(frontState); anyKeyTransition<g id="3534">-</g><g id="3537">&gt;</g>addAnimation(smoothSplashMove); anyKeyTransition<g id="3540">-</g><g id="3543">&gt;</g>addAnimation(smoothSplashOpacity);</source><seg-source><mrk mtype="seg" mid="246"><g id="3495">// Transitions</g> <g id="3498">QEventTransition</g> <g id="3501">*</g>anyKeyTransition <g id="3504">=</g> <g id="3507">new</g> <g id="3510">QEventTransition</g>(<g id="3513">this</g><g id="3516">,</g> <g id="3519">QEvent</g><g id="3522">::</g>KeyPress<g id="3525">,</g> splashState); anyKeyTransition<g id="3528">-</g><g id="3531">&gt;</g>setTargetState(frontState); anyKeyTransition<g id="3534">-</g><g id="3537">&gt;</g>addAnimation(smoothSplashMove); anyKeyTransition<g id="3540">-</g><g id="3543">&gt;</g>addAnimation(smoothSplashOpacity);</mrk></seg-source><target><mrk mtype="seg" mid="246"/></target><sdl:seg-defs><sdl:seg id="246"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="161"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="162"/></sdl:cxts><trans-unit id="lockTU_4d6d1e5e-02aa-434d-afd4-7426627142b4" translate="no" sdl:locktype="Structure"><source><g id="3549">splashState</g></source></trans-unit><trans-unit id="lockTU_d08fe97f-52c2-48a2-9850-ad7f75627520" translate="no" sdl:locktype="Structure"><source><g id="3552">frontState</g></source></trans-unit><trans-unit id="lockTU_f91e2ad9-2eb6-4b19-b1af-8ff97f57d422" translate="no" sdl:locktype="Structure"><source><g id="3555">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_19254e71-932f-43ab-b431-fb1ddafd41ab" translate="no" sdl:locktype="Structure"><source><g id="3549">splashState</g></source></trans-unit><trans-unit id="lockTU_0c657577-d1c3-40a0-b7d7-174eeb9b301f" translate="no" sdl:locktype="Structure"><source><g id="3552">frontState</g></source></trans-unit><trans-unit id="lockTU_ee607cca-3d34-484b-be21-4a4b29417aae" translate="no" sdl:locktype="Structure"><source><g id="3555">PadNavigator</g></source></trans-unit><trans-unit id="d9b23a74-8997-421a-8598-95132d1b5606"><source><g id="3546">QEventTransition</g> defines a very flexible transition type. You can use this class to trigger a transition based on an object receiving an event of a specific type. In this case, we would like to transition from <x id="locked231" xid="lockTU_19254e71-932f-43ab-b431-fb1ddafd41ab"/> into <x id="locked232" xid="lockTU_0c657577-d1c3-40a0-b7d7-174eeb9b301f"/> if <x id="locked233" xid="lockTU_ee607cca-3d34-484b-be21-4a4b29417aae"/> receives any key press event (<g id="3558">QEvent::KeyPress</g>).</source><seg-source><mrk mtype="seg" mid="247"><g id="3546">QEventTransition</g> defines a very flexible transition type.</mrk> <mrk mtype="seg" mid="248">You can use this class to trigger a transition based on an object receiving an event of a specific type.</mrk> <mrk mtype="seg" mid="249">In this case, we would like to transition from <x id="locked234" xid="lockTU_4d6d1e5e-02aa-434d-afd4-7426627142b4"/> into <x id="locked235" xid="lockTU_d08fe97f-52c2-48a2-9850-ad7f75627520"/> if <x id="locked236" xid="lockTU_f91e2ad9-2eb6-4b19-b1af-8ff97f57d422"/> receives any key press event (<g id="3558">QEvent::KeyPress</g>).</mrk></seg-source><target><mrk mtype="seg" mid="247"/> <mrk mtype="seg" mid="248"/> <mrk mtype="seg" mid="249"/></target><sdl:seg-defs><sdl:seg id="247"/><sdl:seg id="248"/><sdl:seg id="249"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="162"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="163"/></sdl:cxts><trans-unit id="lockTU_a4cac1ab-ffe0-4322-bcd7-6c082b85fa11" translate="no" sdl:locktype="Structure"><source><g id="3561">splashItem</g></source></trans-unit><trans-unit id="lockTU_bdd34e4e-e808-4da9-981e-44be633c2721" translate="no" sdl:locktype="Structure"><source><g id="3561">splashItem</g></source></trans-unit><trans-unit id="7ef8e3a9-baca-4b83-97e9-c3ea4110a40d"><source>We register the <x id="locked237" xid="lockTU_bdd34e4e-e808-4da9-981e-44be633c2721"/>&apos;s animations to this transition to ensure they are used to animate the item&apos;s movement and opacity.</source><seg-source><mrk mtype="seg" mid="250">We register the <x id="locked238" xid="lockTU_a4cac1ab-ffe0-4322-bcd7-6c082b85fa11"/>&apos;s animations to this transition to ensure they are used to animate the item&apos;s movement and opacity.</mrk></seg-source><target><mrk mtype="seg" mid="250"/></target><sdl:seg-defs><sdl:seg id="250"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="163"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="164"/></sdl:cxts><trans-unit id="33d73ee9-000b-4a79-8556-c685030c763a"><source><g id="3564">QKeyEventTransition</g> <g id="3567">*</g>enterTransition <g id="3570">=</g> <g id="3573">new</g> <g id="3576">QKeyEventTransition</g>(<g id="3579">this</g><g id="3582">,</g> <g id="3585">QEvent</g><g id="3588">::</g>KeyPress<g id="3591">,</g> <g id="3594">Qt</g><g id="3597">::</g>Key_Enter<g id="3600">,</g> backState); <g id="3603">QKeyEventTransition</g> <g id="3606">*</g>returnTransition <g id="3609">=</g> <g id="3612">new</g> <g id="3615">QKeyEventTransition</g>(<g id="3618">this</g><g id="3621">,</g> <g id="3624">QEvent</g><g id="3627">::</g>KeyPress<g id="3630">,</g> <g id="3633">Qt</g><g id="3636">::</g>Key_Return<g id="3639">,</g> backState); <g id="3642">QKeyEventTransition</g> <g id="3645">*</g>backEnterTransition <g id="3648">=</g> <g id="3651">new</g> <g id="3654">QKeyEventTransition</g>(<g id="3657">this</g><g id="3660">,</g> <g id="3663">QEvent</g><g id="3666">::</g>KeyPress<g id="3669">,</g> <g id="3672">Qt</g><g id="3675">::</g>Key_Enter<g id="3678">,</g> frontState); <g id="3681">QKeyEventTransition</g> <g id="3684">*</g>backReturnTransition <g id="3687">=</g> <g id="3690">new</g> <g id="3693">QKeyEventTransition</g>(<g id="3696">this</g><g id="3699">,</g> <g id="3702">QEvent</g><g id="3705">::</g>KeyPress<g id="3708">,</g> <g id="3711">Qt</g><g id="3714">::</g>Key_Return<g id="3717">,</g> frontState); enterTransition<g id="3720">-</g><g id="3723">&gt;</g>setTargetState(historyState); returnTransition<g id="3726">-</g><g id="3729">&gt;</g>setTargetState(historyState); backEnterTransition<g id="3732">-</g><g id="3735">&gt;</g>setTargetState(backState); backReturnTransition<g id="3738">-</g><g id="3741">&gt;</g>setTargetState(backState); enterTransition<g id="3744">-</g><g id="3747">&gt;</g>addAnimation(flipAnimation); returnTransition<g id="3750">-</g><g id="3753">&gt;</g>addAnimation(flipAnimation); backEnterTransition<g id="3756">-</g><g id="3759">&gt;</g>addAnimation(flipAnimation); backReturnTransition<g id="3762">-</g><g id="3765">&gt;</g>addAnimation(flipAnimation);</source><seg-source><mrk mtype="seg" mid="251"><g id="3564">QKeyEventTransition</g> <g id="3567">*</g>enterTransition <g id="3570">=</g> <g id="3573">new</g> <g id="3576">QKeyEventTransition</g>(<g id="3579">this</g><g id="3582">,</g> <g id="3585">QEvent</g><g id="3588">::</g>KeyPress<g id="3591">,</g> <g id="3594">Qt</g><g id="3597">::</g>Key_Enter<g id="3600">,</g> backState); <g id="3603">QKeyEventTransition</g> <g id="3606">*</g>returnTransition <g id="3609">=</g> <g id="3612">new</g> <g id="3615">QKeyEventTransition</g>(<g id="3618">this</g><g id="3621">,</g> <g id="3624">QEvent</g><g id="3627">::</g>KeyPress<g id="3630">,</g> <g id="3633">Qt</g><g id="3636">::</g>Key_Return<g id="3639">,</g> backState); <g id="3642">QKeyEventTransition</g> <g id="3645">*</g>backEnterTransition <g id="3648">=</g> <g id="3651">new</g> <g id="3654">QKeyEventTransition</g>(<g id="3657">this</g><g id="3660">,</g> <g id="3663">QEvent</g><g id="3666">::</g>KeyPress<g id="3669">,</g> <g id="3672">Qt</g><g id="3675">::</g>Key_Enter<g id="3678">,</g> frontState); <g id="3681">QKeyEventTransition</g> <g id="3684">*</g>backReturnTransition <g id="3687">=</g> <g id="3690">new</g> <g id="3693">QKeyEventTransition</g>(<g id="3696">this</g><g id="3699">,</g> <g id="3702">QEvent</g><g id="3705">::</g>KeyPress<g id="3708">,</g> <g id="3711">Qt</g><g id="3714">::</g>Key_Return<g id="3717">,</g> frontState); enterTransition<g id="3720">-</g><g id="3723">&gt;</g>setTargetState(historyState); returnTransition<g id="3726">-</g><g id="3729">&gt;</g>setTargetState(historyState); backEnterTransition<g id="3732">-</g><g id="3735">&gt;</g>setTargetState(backState); backReturnTransition<g id="3738">-</g><g id="3741">&gt;</g>setTargetState(backState); enterTransition<g id="3744">-</g><g id="3747">&gt;</g>addAnimation(flipAnimation); returnTransition<g id="3750">-</g><g id="3753">&gt;</g>addAnimation(flipAnimation); backEnterTransition<g id="3756">-</g><g id="3759">&gt;</g>addAnimation(flipAnimation); backReturnTransition<g id="3762">-</g><g id="3765">&gt;</g>addAnimation(flipAnimation);</mrk></seg-source><target><mrk mtype="seg" mid="251"/></target><sdl:seg-defs><sdl:seg id="251"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="164"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="165"/></sdl:cxts><trans-unit id="lockTU_6d63bc9a-d5bf-4745-99ef-942ad0547dcc" translate="no" sdl:locktype="Structure"><source><g id="3777">frontState</g></source></trans-unit><trans-unit id="lockTU_fa575db9-f3f9-4e9c-8476-e318af0604b1" translate="no" sdl:locktype="Structure"><source><g id="3780">flipAnimation</g></source></trans-unit><trans-unit id="lockTU_1a9b4269-d56e-42a6-b89b-74e3f4a8f2e8" translate="no" sdl:locktype="Structure"><source><g id="3777">frontState</g></source></trans-unit><trans-unit id="lockTU_7230f10d-3998-4847-ad27-0c167c5926c9" translate="no" sdl:locktype="Structure"><source><g id="3780">flipAnimation</g></source></trans-unit><trans-unit id="714459f7-8419-4660-8d30-c1118142cec0"><source>We use <g id="3768">QKeyEventTransition</g> to capture specific key events. In this case, we detect that the user presses <g id="3771">Qt::Key_Return</g> or <g id="3774">Qt::Key_Enter</g>, and use this to trigger transitions between <x id="locked239" xid="lockTU_1a9b4269-d56e-42a6-b89b-74e3f4a8f2e8"/> and backState. We register <x id="locked240" xid="lockTU_7230f10d-3998-4847-ad27-0c167c5926c9"/>, our complex parallel animation group, with these transitions.</source><seg-source><mrk mtype="seg" mid="252">We use <g id="3768">QKeyEventTransition</g> to capture specific key events.</mrk> <mrk mtype="seg" mid="253">In this case, we detect that the user presses <g id="3771">Qt::Key_Return</g> or <g id="3774">Qt::Key_Enter</g>, and use this to trigger transitions between <x id="locked241" xid="lockTU_6d63bc9a-d5bf-4745-99ef-942ad0547dcc"/> and backState.</mrk> <mrk mtype="seg" mid="254">We register <x id="locked242" xid="lockTU_fa575db9-f3f9-4e9c-8476-e318af0604b1"/>, our complex parallel animation group, with these transitions.</mrk></seg-source><target><mrk mtype="seg" mid="252"/> <mrk mtype="seg" mid="253"/> <mrk mtype="seg" mid="254"/></target><sdl:seg-defs><sdl:seg id="252"/><sdl:seg id="253"/><sdl:seg id="254"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="165"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="166"/></sdl:cxts><trans-unit id="a797ad28-8085-46c4-b31d-6c71b1e8705b"><source>We continue by defining the states for each of the icons in the grid.</source><seg-source><mrk mtype="seg" mid="255">We continue by defining the states for each of the icons in the grid.</mrk></seg-source><target><mrk mtype="seg" mid="255"/></target><sdl:seg-defs><sdl:seg id="255"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="166"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="167"/></sdl:cxts><trans-unit id="e3c92951-a45b-47b7-addc-039506d2432b"><source><g id="3783">// Create substates for each icon; store in temporary grid.</g> <g id="3786">int</g> columns <g id="3789">=</g> size<g id="3792">.</g>width(); <g id="3795">int</g> rows <g id="3798">=</g> size<g id="3801">.</g>height(); <g id="3804">QVector</g><g id="3807">&lt;</g> <g id="3810">QVector</g><g id="3813">&lt;</g> <g id="3816">QState</g> <g id="3819">*</g> <g id="3822">&gt;</g> <g id="3825">&gt;</g> stateGrid; stateGrid<g id="3828">.</g>resize(rows); <g id="3831">for</g> (<g id="3834">int</g> y <g id="3837">=</g> <g id="3840">0</g>; y <g id="3843">&lt;</g> rows; <g id="3846">+</g><g id="3849">+</g>y) { stateGrid<g id="3852">[</g>y<g id="3855">]</g><g id="3858">.</g>resize(columns); <g id="3861">for</g> (<g id="3864">int</g> x <g id="3867">=</g> <g id="3870">0</g>; x <g id="3873">&lt;</g> columns; <g id="3876">+</g><g id="3879">+</g>x) stateGrid<g id="3882">[</g>y<g id="3885">]</g><g id="3888">[</g>x<g id="3891">]</g> <g id="3894">=</g> <g id="3897">new</g> <g id="3900">QState</g>(frontState); } frontState<g id="3903">-</g><g id="3906">&gt;</g>setInitialState(stateGrid<g id="3909">[</g><g id="3912">0</g><g id="3915">]</g><g id="3918">[</g><g id="3921">0</g><g id="3924">]</g>); selectionItem<g id="3927">-</g><g id="3930">&gt;</g>setPos(pad<g id="3933">-</g><g id="3936">&gt;</g>iconAt(<g id="3939">0</g><g id="3942">,</g> <g id="3945">0</g>)<g id="3948">-</g><g id="3951">&gt;</g>pos());</source><seg-source><g id="3783"><mrk mtype="seg" mid="256">// Create substates for each icon; store in temporary grid.</mrk></g> <mrk mtype="seg" mid="257"><g id="3786">int</g> columns <g id="3789">=</g> size<g id="3792">.</g>width(); <g id="3795">int</g> rows <g id="3798">=</g> size<g id="3801">.</g>height(); <g id="3804">QVector</g><g id="3807">&lt;</g> <g id="3810">QVector</g><g id="3813">&lt;</g> <g id="3816">QState</g> <g id="3819">*</g> <g id="3822">&gt;</g> <g id="3825">&gt;</g> stateGrid; stateGrid<g id="3828">.</g>resize(rows); <g id="3831">for</g> (<g id="3834">int</g> y <g id="3837">=</g> <g id="3840">0</g>; y <g id="3843">&lt;</g> rows; <g id="3846">+</g><g id="3849">+</g>y) { stateGrid<g id="3852">[</g>y<g id="3855">]</g><g id="3858">.</g>resize(columns); <g id="3861">for</g> (<g id="3864">int</g> x <g id="3867">=</g> <g id="3870">0</g>; x <g id="3873">&lt;</g> columns; <g id="3876">+</g><g id="3879">+</g>x) stateGrid<g id="3882">[</g>y<g id="3885">]</g><g id="3888">[</g>x<g id="3891">]</g> <g id="3894">=</g> <g id="3897">new</g> <g id="3900">QState</g>(frontState); } frontState<g id="3903">-</g><g id="3906">&gt;</g>setInitialState(stateGrid<g id="3909">[</g><g id="3912">0</g><g id="3915">]</g><g id="3918">[</g><g id="3921">0</g><g id="3924">]</g>); selectionItem<g id="3927">-</g><g id="3930">&gt;</g>setPos(pad<g id="3933">-</g><g id="3936">&gt;</g>iconAt(<g id="3939">0</g><g id="3942">,</g> <g id="3945">0</g>)<g id="3948">-</g><g id="3951">&gt;</g>pos());</mrk></seg-source><target><g id="3783"><mrk mtype="seg" mid="256"/></g> <mrk mtype="seg" mid="257"/></target><sdl:seg-defs><sdl:seg id="256"/><sdl:seg id="257"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="167"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="168"/></sdl:cxts><trans-unit id="lockTU_65210fc1-d01b-4469-91d4-cf96166f5d71" translate="no" sdl:locktype="Structure"><source><g id="3957">frontState</g></source></trans-unit><trans-unit id="lockTU_e31866a9-8a64-443e-9af0-3183d155d285" translate="no" sdl:locktype="Structure"><source><g id="3957">frontState</g></source></trans-unit><trans-unit id="4f1360d3-7a13-4ca3-9d2e-d47728fcfe84"><source>We will use state groups to control transitions between icons. Each icon represents a <g id="3954">substate</g> of <x id="locked243" xid="lockTU_e31866a9-8a64-443e-9af0-3183d155d285"/>. We will then define transitions between the states by detecting key presses, using <g id="3960">QKeyEventTransition</g>.</source><seg-source><mrk mtype="seg" mid="258">We will use state groups to control transitions between icons.</mrk> <mrk mtype="seg" mid="259">Each icon represents a <g id="3954">substate</g> of <x id="locked244" xid="lockTU_65210fc1-d01b-4469-91d4-cf96166f5d71"/>.</mrk> <mrk mtype="seg" mid="260">We will then define transitions between the states by detecting key presses, using <g id="3960">QKeyEventTransition</g>.</mrk></seg-source><target><mrk mtype="seg" mid="258"/> <mrk mtype="seg" mid="259"/> <mrk mtype="seg" mid="260"/></target><sdl:seg-defs><sdl:seg id="258"/><sdl:seg id="259"/><sdl:seg id="260"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="168"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="169"/></sdl:cxts><trans-unit id="9ce8a93a-fe7f-4741-8eaa-7933569d24ff"><source>We start by creating all the substates, and at the same time we create a temporary grid structure for the states to make it easier to find which states represents icons that are up, down, left and to the right each other.</source><seg-source><mrk mtype="seg" mid="261">We start by creating all the substates, and at the same time we create a temporary grid structure for the states to make it easier to find which states represents icons that are up, down, left and to the right each other.</mrk></seg-source><target><mrk mtype="seg" mid="261"/></target><sdl:seg-defs><sdl:seg id="261"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="169"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="170"/></sdl:cxts><trans-unit id="lockTU_dd087b98-0df8-4581-b286-1015318aa210" translate="no" sdl:locktype="Structure"><source><g id="3963">frontState</g></source></trans-unit><trans-unit id="lockTU_5b689db9-43e8-42dd-a362-b1560a431f62" translate="no" sdl:locktype="Structure"><source><g id="3963">frontState</g></source></trans-unit><trans-unit id="72a792fc-92eb-488c-96d3-ed41b52bf121"><source>Once the first substate is known, we set this up as the initial substate of <x id="locked245" xid="lockTU_5b689db9-43e8-42dd-a362-b1560a431f62"/>. We will use the (0, 0), or top-left, icon for the initial substate. We initialze the selection item&apos;s position to be exactly where the top-left icon is.</source><seg-source><mrk mtype="seg" mid="262">Once the first substate is known, we set this up as the initial substate of <x id="locked246" xid="lockTU_dd087b98-0df8-4581-b286-1015318aa210"/>.</mrk> <mrk mtype="seg" mid="263">We will use the (0, 0), or top-left, icon for the initial substate.</mrk> <mrk mtype="seg" mid="264">We initialze the selection item&apos;s position to be exactly where the top-left icon is.</mrk></seg-source><target><mrk mtype="seg" mid="262"/> <mrk mtype="seg" mid="263"/> <mrk mtype="seg" mid="264"/></target><sdl:seg-defs><sdl:seg id="262"/><sdl:seg id="263"/><sdl:seg id="264"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="170"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="171"/></sdl:cxts><trans-unit id="61539e0d-562e-4c0f-9dd5-2f03dad9a7ab"><source><g id="3966">// Enable key navigation using state transitions</g> <g id="3969">for</g> (<g id="3972">int</g> y <g id="3975">=</g> <g id="3978">0</g>; y <g id="3981">&lt;</g> rows; <g id="3984">+</g><g id="3987">+</g>y) { <g id="3990">for</g> (<g id="3993">int</g> x <g id="3996">=</g> <g id="3999">0</g>; x <g id="4002">&lt;</g> columns; <g id="4005">+</g><g id="4008">+</g>x) { <g id="4011">QState</g> <g id="4014">*</g>state <g id="4017">=</g> stateGrid<g id="4020">[</g>y<g id="4023">]</g><g id="4026">[</g>x<g id="4029">]</g>; <g id="4032">QKeyEventTransition</g> <g id="4035">*</g>rightTransition <g id="4038">=</g> <g id="4041">new</g> <g id="4044">QKeyEventTransition</g>(<g id="4047">this</g><g id="4050">,</g> <g id="4053">QEvent</g><g id="4056">::</g>KeyPress<g id="4059">,</g> <g id="4062">Qt</g><g id="4065">::</g>Key_Right<g id="4068">,</g> state); <g id="4071">QKeyEventTransition</g> <g id="4074">*</g>leftTransition <g id="4077">=</g> <g id="4080">new</g> <g id="4083">QKeyEventTransition</g>(<g id="4086">this</g><g id="4089">,</g> <g id="4092">QEvent</g><g id="4095">::</g>KeyPress<g id="4098">,</g> <g id="4101">Qt</g><g id="4104">::</g>Key_Left<g id="4107">,</g> state); <g id="4110">QKeyEventTransition</g> <g id="4113">*</g>downTransition <g id="4116">=</g> <g id="4119">new</g> <g id="4122">QKeyEventTransition</g>(<g id="4125">this</g><g id="4128">,</g> <g id="4131">QEvent</g><g id="4134">::</g>KeyPress<g id="4137">,</g> <g id="4140">Qt</g><g id="4143">::</g>Key_Down<g id="4146">,</g> state); <g id="4149">QKeyEventTransition</g> <g id="4152">*</g>upTransition <g id="4155">=</g> <g id="4158">new</g> <g id="4161">QKeyEventTransition</g>(<g id="4164">this</g><g id="4167">,</g> <g id="4170">QEvent</g><g id="4173">::</g>KeyPress<g id="4176">,</g> <g id="4179">Qt</g><g id="4182">::</g>Key_Up<g id="4185">,</g> state); rightTransition<g id="4188">-</g><g id="4191">&gt;</g>setTargetState(stateGrid<g id="4194">[</g>y<g id="4197">]</g><g id="4200">[</g>(x <g id="4203">+</g> <g id="4206">1</g>) <g id="4209">%</g> columns<g id="4212">]</g>); leftTransition<g id="4215">-</g><g id="4218">&gt;</g>setTargetState(stateGrid<g id="4221">[</g>y<g id="4224">]</g><g id="4227">[</g>((x <g id="4230">-</g> <g id="4233">1</g>) <g id="4236">+</g> columns) <g id="4239">%</g> columns<g id="4242">]</g>); downTransition<g id="4245">-</g><g id="4248">&gt;</g>setTargetState(stateGrid<g id="4251">[</g>(y <g id="4254">+</g> <g id="4257">1</g>) <g id="4260">%</g> rows<g id="4263">]</g><g id="4266">[</g>x<g id="4269">]</g>); upTransition<g id="4272">-</g><g id="4275">&gt;</g>setTargetState(stateGrid<g id="4278">[</g>((y <g id="4281">-</g> <g id="4284">1</g>) <g id="4287">+</g> rows) <g id="4290">%</g> rows<g id="4293">]</g><g id="4296">[</g>x<g id="4299">]</g>);</source><seg-source><mrk mtype="seg" mid="265"><g id="3966">// Enable key navigation using state transitions</g> <g id="3969">for</g> (<g id="3972">int</g> y <g id="3975">=</g> <g id="3978">0</g>; y <g id="3981">&lt;</g> rows; <g id="3984">+</g><g id="3987">+</g>y) { <g id="3990">for</g> (<g id="3993">int</g> x <g id="3996">=</g> <g id="3999">0</g>; x <g id="4002">&lt;</g> columns; <g id="4005">+</g><g id="4008">+</g>x) { <g id="4011">QState</g> <g id="4014">*</g>state <g id="4017">=</g> stateGrid<g id="4020">[</g>y<g id="4023">]</g><g id="4026">[</g>x<g id="4029">]</g>; <g id="4032">QKeyEventTransition</g> <g id="4035">*</g>rightTransition <g id="4038">=</g> <g id="4041">new</g> <g id="4044">QKeyEventTransition</g>(<g id="4047">this</g><g id="4050">,</g> <g id="4053">QEvent</g><g id="4056">::</g>KeyPress<g id="4059">,</g> <g id="4062">Qt</g><g id="4065">::</g>Key_Right<g id="4068">,</g> state); <g id="4071">QKeyEventTransition</g> <g id="4074">*</g>leftTransition <g id="4077">=</g> <g id="4080">new</g> <g id="4083">QKeyEventTransition</g>(<g id="4086">this</g><g id="4089">,</g> <g id="4092">QEvent</g><g id="4095">::</g>KeyPress<g id="4098">,</g> <g id="4101">Qt</g><g id="4104">::</g>Key_Left<g id="4107">,</g> state); <g id="4110">QKeyEventTransition</g> <g id="4113">*</g>downTransition <g id="4116">=</g> <g id="4119">new</g> <g id="4122">QKeyEventTransition</g>(<g id="4125">this</g><g id="4128">,</g> <g id="4131">QEvent</g><g id="4134">::</g>KeyPress<g id="4137">,</g> <g id="4140">Qt</g><g id="4143">::</g>Key_Down<g id="4146">,</g> state); <g id="4149">QKeyEventTransition</g> <g id="4152">*</g>upTransition <g id="4155">=</g> <g id="4158">new</g> <g id="4161">QKeyEventTransition</g>(<g id="4164">this</g><g id="4167">,</g> <g id="4170">QEvent</g><g id="4173">::</g>KeyPress<g id="4176">,</g> <g id="4179">Qt</g><g id="4182">::</g>Key_Up<g id="4185">,</g> state); rightTransition<g id="4188">-</g><g id="4191">&gt;</g>setTargetState(stateGrid<g id="4194">[</g>y<g id="4197">]</g><g id="4200">[</g>(x <g id="4203">+</g> <g id="4206">1</g>) <g id="4209">%</g> columns<g id="4212">]</g>); leftTransition<g id="4215">-</g><g id="4218">&gt;</g>setTargetState(stateGrid<g id="4221">[</g>y<g id="4224">]</g><g id="4227">[</g>((x <g id="4230">-</g> <g id="4233">1</g>) <g id="4236">+</g> columns) <g id="4239">%</g> columns<g id="4242">]</g>); downTransition<g id="4245">-</g><g id="4248">&gt;</g>setTargetState(stateGrid<g id="4251">[</g>(y <g id="4254">+</g> <g id="4257">1</g>) <g id="4260">%</g> rows<g id="4263">]</g><g id="4266">[</g>x<g id="4269">]</g>); upTransition<g id="4272">-</g><g id="4275">&gt;</g>setTargetState(stateGrid<g id="4278">[</g>((y <g id="4281">-</g> <g id="4284">1</g>) <g id="4287">+</g> rows) <g id="4290">%</g> rows<g id="4293">]</g><g id="4296">[</g>x<g id="4299">]</g>);</mrk></seg-source><target><mrk mtype="seg" mid="265"/></target><sdl:seg-defs><sdl:seg id="265"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="171"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="172"/></sdl:cxts><trans-unit id="2a61cc8b-e274-4997-b8dd-3c045d2c45f7"><source>We can now create four transitions for each icon. Each transition ensures that we move to the state corresponding to which arrow key has been pressed. It&apos;s clear from this techinique that we could design any other specific transitions to and from each of the sub states depending on these and other keys.</source><seg-source><mrk mtype="seg" mid="266">We can now create four transitions for each icon.</mrk> <mrk mtype="seg" mid="267">Each transition ensures that we move to the state corresponding to which arrow key has been pressed.</mrk> <mrk mtype="seg" mid="268">It&apos;s clear from this techinique that we could design any other specific transitions to and from each of the sub states depending on these and other keys.</mrk></seg-source><target><mrk mtype="seg" mid="266"/> <mrk mtype="seg" mid="267"/> <mrk mtype="seg" mid="268"/></target><sdl:seg-defs><sdl:seg id="266"/><sdl:seg id="267"/><sdl:seg id="268"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="172"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="173"/></sdl:cxts><trans-unit id="73f852fe-45d7-4b7a-9c46-ac586d4c915d"><source>RoundRectItem <g id="4302">*</g>icon <g id="4305">=</g> pad<g id="4308">-</g><g id="4311">&gt;</g>iconAt(x<g id="4314">,</g> y); state<g id="4317">-</g><g id="4320">&gt;</g>assignProperty(xRotation<g id="4323">,</g> <g id="4326">&quot;angle&quot;</g><g id="4329">,</g> <g id="4332">-</g>icon<g id="4335">-</g><g id="4338">&gt;</g>x() <g id="4341">/</g> <g id="4344">6.0</g>); state<g id="4347">-</g><g id="4350">&gt;</g>assignProperty(yRotation<g id="4353">,</g> <g id="4356">&quot;angle&quot;</g><g id="4359">,</g> icon<g id="4362">-</g><g id="4365">&gt;</g>y() <g id="4368">/</g> <g id="4371">6.0</g>); state<g id="4374">-</g><g id="4377">&gt;</g>assignProperty(selectionItem<g id="4380">,</g> <g id="4383">&quot;x&quot;</g><g id="4386">,</g> icon<g id="4389">-</g><g id="4392">&gt;</g>x()); state<g id="4395">-</g><g id="4398">&gt;</g>assignProperty(selectionItem<g id="4401">,</g> <g id="4404">&quot;y&quot;</g><g id="4407">,</g> icon<g id="4410">-</g><g id="4413">&gt;</g>y()); frontState<g id="4416">-</g><g id="4419">&gt;</g>assignProperty(icon<g id="4422">,</g> <g id="4425">&quot;visible&quot;</g><g id="4428">,</g> <g id="4431">true</g>); backState<g id="4434">-</g><g id="4437">&gt;</g>assignProperty(icon<g id="4440">,</g> <g id="4443">&quot;visible&quot;</g><g id="4446">,</g> <g id="4449">false</g>); <g id="4452">QPropertyAnimation</g> <g id="4455">*</g>setIconVisibleAnimation <g id="4458">=</g> <g id="4461">new</g> <g id="4464">QPropertyAnimation</g>(icon<g id="4467">,</g> <g id="4470">&quot;visible&quot;</g>); setIconVisibleAnimation<g id="4473">-</g><g id="4476">&gt;</g>setDuration(<g id="4479">0</g>); setVariablesSequence<g id="4482">-</g><g id="4485">&gt;</g>addAnimation(setIconVisibleAnimation); } }</source><seg-source><mrk mtype="seg" mid="269">RoundRectItem <g id="4302">*</g>icon <g id="4305">=</g> pad<g id="4308">-</g><g id="4311">&gt;</g>iconAt(x<g id="4314">,</g> y); state<g id="4317">-</g><g id="4320">&gt;</g>assignProperty(xRotation<g id="4323">,</g> <g id="4326">&quot;angle&quot;</g><g id="4329">,</g> <g id="4332">-</g>icon<g id="4335">-</g><g id="4338">&gt;</g>x() <g id="4341">/</g> <g id="4344">6.0</g>); state<g id="4347">-</g><g id="4350">&gt;</g>assignProperty(yRotation<g id="4353">,</g> <g id="4356">&quot;angle&quot;</g><g id="4359">,</g> icon<g id="4362">-</g><g id="4365">&gt;</g>y() <g id="4368">/</g> <g id="4371">6.0</g>); state<g id="4374">-</g><g id="4377">&gt;</g>assignProperty(selectionItem<g id="4380">,</g> <g id="4383">&quot;x&quot;</g><g id="4386">,</g> icon<g id="4389">-</g><g id="4392">&gt;</g>x()); state<g id="4395">-</g><g id="4398">&gt;</g>assignProperty(selectionItem<g id="4401">,</g> <g id="4404">&quot;y&quot;</g><g id="4407">,</g> icon<g id="4410">-</g><g id="4413">&gt;</g>y()); frontState<g id="4416">-</g><g id="4419">&gt;</g>assignProperty(icon<g id="4422">,</g> <g id="4425">&quot;visible&quot;</g><g id="4428">,</g> <g id="4431">true</g>); backState<g id="4434">-</g><g id="4437">&gt;</g>assignProperty(icon<g id="4440">,</g> <g id="4443">&quot;visible&quot;</g><g id="4446">,</g> <g id="4449">false</g>); <g id="4452">QPropertyAnimation</g> <g id="4455">*</g>setIconVisibleAnimation <g id="4458">=</g> <g id="4461">new</g> <g id="4464">QPropertyAnimation</g>(icon<g id="4467">,</g> <g id="4470">&quot;visible&quot;</g>); setIconVisibleAnimation<g id="4473">-</g><g id="4476">&gt;</g>setDuration(<g id="4479">0</g>); setVariablesSequence<g id="4482">-</g><g id="4485">&gt;</g>addAnimation(setIconVisibleAnimation); } }</mrk></seg-source><target><mrk mtype="seg" mid="269"/></target><sdl:seg-defs><sdl:seg id="269"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="173"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="174"/></sdl:cxts><trans-unit id="lockTU_9e927fc5-266d-4685-b648-e9bfb6f0fe81" translate="no" sdl:locktype="Structure"><source><g id="4488">xRotation</g></source></trans-unit><trans-unit id="lockTU_b62a088d-ba74-436e-89b2-1ffab4fb4aff" translate="no" sdl:locktype="Structure"><source><g id="4491">yRotation</g></source></trans-unit><trans-unit id="lockTU_63c486f9-ef10-4291-af8d-59bb8e81a155" translate="no" sdl:locktype="Structure"><source><g id="4494">setVariableSequence</g></source></trans-unit><trans-unit id="lockTU_09abba9b-6729-4790-a2bc-01ec10247c2b" translate="no" sdl:locktype="Structure"><source><g id="4488">xRotation</g></source></trans-unit><trans-unit id="lockTU_3e68d3a5-bc76-4e6b-b1e7-84201ad64155" translate="no" sdl:locktype="Structure"><source><g id="4491">yRotation</g></source></trans-unit><trans-unit id="lockTU_c66e47c4-5516-43ff-ae9e-4dd8b57035da" translate="no" sdl:locktype="Structure"><source><g id="4494">setVariableSequence</g></source></trans-unit><trans-unit id="9eede3b4-9e39-41e7-81fb-86dc60002c71"><source>Also, for each of the icons, we assign suitable values to the <x id="locked247" xid="lockTU_09abba9b-6729-4790-a2bc-01ec10247c2b"/> and <x id="locked248" xid="lockTU_3e68d3a5-bc76-4e6b-b1e7-84201ad64155"/> objects&apos; &quot;angle&quot;-properties. If you recall, these properties &quot;tilt&quot; the pad corresponding to which item is currently selected. We ensure each icon is invisible when the pad is flipped, and visible when the pad is not flipped. To ensure the visible property is assigned at the right time, we add property-controlling animations to the <x id="locked249" xid="lockTU_c66e47c4-5516-43ff-ae9e-4dd8b57035da"/> animation defined earlier.</source><seg-source><mrk mtype="seg" mid="270">Also, for each of the icons, we assign suitable values to the <x id="locked250" xid="lockTU_9e927fc5-266d-4685-b648-e9bfb6f0fe81"/> and <x id="locked251" xid="lockTU_b62a088d-ba74-436e-89b2-1ffab4fb4aff"/> objects&apos; &quot;angle&quot;-properties.</mrk> <mrk mtype="seg" mid="271">If you recall, these properties &quot;tilt&quot; the pad corresponding to which item is currently selected.</mrk> <mrk mtype="seg" mid="272">We ensure each icon is invisible when the pad is flipped, and visible when the pad is not flipped.</mrk> <mrk mtype="seg" mid="273">To ensure the visible property is assigned at the right time, we add property-controlling animations to the <x id="locked252" xid="lockTU_63c486f9-ef10-4291-af8d-59bb8e81a155"/> animation defined earlier.</mrk></seg-source><target><mrk mtype="seg" mid="270"/> <mrk mtype="seg" mid="271"/> <mrk mtype="seg" mid="272"/> <mrk mtype="seg" mid="273"/></target><sdl:seg-defs><sdl:seg id="270"/><sdl:seg id="271"/><sdl:seg id="272"/><sdl:seg id="273"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="174"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="175"/></sdl:cxts><trans-unit id="7a88ea0a-2453-4516-ae5b-d3ca84a8800b"><source><g id="4497">// Scene</g> <g id="4500">QGraphicsScene</g> <g id="4503">*</g>scene <g id="4506">=</g> <g id="4509">new</g> <g id="4512">QGraphicsScene</g>(<g id="4515">this</g>); scene<g id="4518">-</g><g id="4521">&gt;</g>setBackgroundBrush(<g id="4524">QPixmap</g>(<g id="4527">&quot;:/images/blue_angle_swirl.jpg&quot;</g>)); scene<g id="4530">-</g><g id="4533">&gt;</g>setItemIndexMethod(<g id="4536">QGraphicsScene</g><g id="4539">::</g>NoIndex); scene<g id="4542">-</g><g id="4545">&gt;</g>addItem(pad); scene<g id="4548">-</g><g id="4551">&gt;</g>setSceneRect(scene<g id="4554">-</g><g id="4557">&gt;</g>itemsBoundingRect()); setScene(scene);</source><seg-source><mrk mtype="seg" mid="274"><g id="4497">// Scene</g> <g id="4500">QGraphicsScene</g> <g id="4503">*</g>scene <g id="4506">=</g> <g id="4509">new</g> <g id="4512">QGraphicsScene</g>(<g id="4515">this</g>); scene<g id="4518">-</g><g id="4521">&gt;</g>setBackgroundBrush(<g id="4524">QPixmap</g>(<g id="4527">&quot;:/images/blue_angle_swirl.jpg&quot;</g>)); scene<g id="4530">-</g><g id="4533">&gt;</g>setItemIndexMethod(<g id="4536">QGraphicsScene</g><g id="4539">::</g>NoIndex); scene<g id="4542">-</g><g id="4545">&gt;</g>addItem(pad); scene<g id="4548">-</g><g id="4551">&gt;</g>setSceneRect(scene<g id="4554">-</g><g id="4557">&gt;</g>itemsBoundingRect()); setScene(scene);</mrk></seg-source><target><mrk mtype="seg" mid="274"/></target><sdl:seg-defs><sdl:seg id="274"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="175"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="176"/></sdl:cxts><trans-unit id="lockTU_817a9fcf-cedf-4eaa-9df7-9cf5474b1279" translate="no" sdl:locktype="Structure"><source><g id="4560">pad</g></source></trans-unit><trans-unit id="lockTU_11b8fae1-346a-4537-aab7-c384aa5b8a5e" translate="no" sdl:locktype="Structure"><source><g id="4560">pad</g></source></trans-unit><trans-unit id="c767e1fb-8913-495f-a7fe-18cf8021244d"><source>We are now finished with all states, transitions, and animations. We now create the scene that will contain all our items. The scene gets a defined background pixmap, and we disable item indexing (as most items in this scene are animated). We add our <x id="locked253" xid="lockTU_11b8fae1-346a-4537-aab7-c384aa5b8a5e"/> item to the scene, and use its bounding rectangle to fixate the scene rectangle. This rectangle is used by the view to find a suitable size for the application window.</source><seg-source><mrk mtype="seg" mid="275">We are now finished with all states, transitions, and animations.</mrk> <mrk mtype="seg" mid="276">We now create the scene that will contain all our items.</mrk> <mrk mtype="seg" mid="277">The scene gets a defined background pixmap, and we disable item indexing (as most items in this scene are animated).</mrk> <mrk mtype="seg" mid="278">We add our <x id="locked254" xid="lockTU_817a9fcf-cedf-4eaa-9df7-9cf5474b1279"/> item to the scene, and use its bounding rectangle to fixate the scene rectangle.</mrk> <mrk mtype="seg" mid="279">This rectangle is used by the view to find a suitable size for the application window.</mrk></seg-source><target><mrk mtype="seg" mid="275"/> <mrk mtype="seg" mid="276"/> <mrk mtype="seg" mid="277"/> <mrk mtype="seg" mid="278"/> <mrk mtype="seg" mid="279"/></target><sdl:seg-defs><sdl:seg id="275"/><sdl:seg id="276"/><sdl:seg id="277"/><sdl:seg id="278"/><sdl:seg id="279"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="176"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="177"/></sdl:cxts><trans-unit id="lockTU_a3049b09-4eba-46c3-86ff-b8a01fc3c39c" translate="no" sdl:locktype="Structure"><source><g id="4563">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_5123b857-c85a-44b5-9358-8676538fe1ec" translate="no" sdl:locktype="Structure"><source><g id="4563">PadNavigator</g></source></trans-unit><trans-unit id="eb9f664b-31e9-4d73-84a2-932a2c38139a"><source>Then the scene is assigned to the view, or in our case, <x id="locked255" xid="lockTU_5123b857-c85a-44b5-9358-8676538fe1ec"/> itself.</source><seg-source><mrk mtype="seg" mid="280">Then the scene is assigned to the view, or in our case, <x id="locked256" xid="lockTU_a3049b09-4eba-46c3-86ff-b8a01fc3c39c"/> itself.</mrk></seg-source><target><mrk mtype="seg" mid="280"/></target><sdl:seg-defs><sdl:seg id="280"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="177"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="178"/></sdl:cxts><trans-unit id="300802fa-a20c-4e6f-af1a-3c243c1e38a6"><source><g id="4566">// Adjust splash item to scene contents</g> <g id="4569">const</g> <g id="4572">QRectF</g> sbr <g id="4575">=</g> splash<g id="4578">-</g><g id="4581">&gt;</g>boundingRect(); splash<g id="4584">-</g><g id="4587">&gt;</g>setPos(<g id="4590">-</g>sbr<g id="4593">.</g>width() <g id="4596">/</g> <g id="4599">2</g><g id="4602">,</g> scene<g id="4605">-</g><g id="4608">&gt;</g>sceneRect()<g id="4611">.</g>top() <g id="4614">-</g> <g id="4617">2</g>); frontState<g id="4620">-</g><g id="4623">&gt;</g>assignProperty(splash<g id="4626">,</g> <g id="4629">&quot;y&quot;</g><g id="4632">,</g> splash<g id="4635">-</g><g id="4638">&gt;</g>y() <g id="4641">-</g> <g id="4644">100.0</g>); scene<g id="4647">-</g><g id="4650">&gt;</g>addItem(splash);</source><seg-source><mrk mtype="seg" mid="281"><g id="4566">// Adjust splash item to scene contents</g> <g id="4569">const</g> <g id="4572">QRectF</g> sbr <g id="4575">=</g> splash<g id="4578">-</g><g id="4581">&gt;</g>boundingRect(); splash<g id="4584">-</g><g id="4587">&gt;</g>setPos(<g id="4590">-</g>sbr<g id="4593">.</g>width() <g id="4596">/</g> <g id="4599">2</g><g id="4602">,</g> scene<g id="4605">-</g><g id="4608">&gt;</g>sceneRect()<g id="4611">.</g>top() <g id="4614">-</g> <g id="4617">2</g>); frontState<g id="4620">-</g><g id="4623">&gt;</g>assignProperty(splash<g id="4626">,</g> <g id="4629">&quot;y&quot;</g><g id="4632">,</g> splash<g id="4635">-</g><g id="4638">&gt;</g>y() <g id="4641">-</g> <g id="4644">100.0</g>); scene<g id="4647">-</g><g id="4650">&gt;</g>addItem(splash);</mrk></seg-source><target><mrk mtype="seg" mid="281"/></target><sdl:seg-defs><sdl:seg id="281"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="178"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="179"/></sdl:cxts><trans-unit id="c7bde275-9066-4e6e-913d-e6bb702e2f84"><source>Now that the scene has received its final size, we can position the splash item at the very top, find its fade-out position, and add it to the scene.</source><seg-source><mrk mtype="seg" mid="282">Now that the scene has received its final size, we can position the splash item at the very top, find its fade-out position, and add it to the scene.</mrk></seg-source><target><mrk mtype="seg" mid="282"/></target><sdl:seg-defs><sdl:seg id="282"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="179"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="180"/></sdl:cxts><trans-unit id="27b0738e-3514-4af7-b6c5-ff8ca23f6230"><source><g id="4653">// View</g> setVerticalScrollBarPolicy(<g id="4656">Qt</g><g id="4659">::</g>ScrollBarAlwaysOff); setHorizontalScrollBarPolicy(<g id="4662">Qt</g><g id="4665">::</g>ScrollBarAlwaysOff); setMinimumSize(<g id="4668">50</g><g id="4671">,</g> <g id="4674">50</g>); setViewportUpdateMode(FullViewportUpdate); setCacheMode(CacheBackground); setRenderHints(<g id="4677">QPainter</g><g id="4680">::</g>Antialiasing <g id="4683">|</g> <g id="4686">QPainter</g><g id="4689">::</g>SmoothPixmapTransform <g id="4692">|</g> <g id="4695">QPainter</g><g id="4698">::</g>TextAntialiasing); <g id="4701">#ifndef QT_NO_OPENGL</g> setViewport(<g id="4704">new</g> <g id="4707">QOpenGLWidget</g>); <g id="4710">#endif</g> stateMachine<g id="4713">-</g><g id="4716">&gt;</g>start();</source><seg-source><mrk mtype="seg" mid="283"><g id="4653">// View</g> setVerticalScrollBarPolicy(<g id="4656">Qt</g><g id="4659">::</g>ScrollBarAlwaysOff); setHorizontalScrollBarPolicy(<g id="4662">Qt</g><g id="4665">::</g>ScrollBarAlwaysOff); setMinimumSize(<g id="4668">50</g><g id="4671">,</g> <g id="4674">50</g>); setViewportUpdateMode(FullViewportUpdate); setCacheMode(CacheBackground); setRenderHints(<g id="4677">QPainter</g><g id="4680">::</g>Antialiasing <g id="4683">|</g> <g id="4686">QPainter</g><g id="4689">::</g>SmoothPixmapTransform <g id="4692">|</g> <g id="4695">QPainter</g><g id="4698">::</g>TextAntialiasing); <g id="4701">#ifndef QT_NO_OPENGL</g> setViewport(<g id="4704">new</g> <g id="4707">QOpenGLWidget</g>); <g id="4710">#endif</g> stateMachine<g id="4713">-</g><g id="4716">&gt;</g>start();</mrk></seg-source><target><mrk mtype="seg" mid="283"/></target><sdl:seg-defs><sdl:seg id="283"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="180"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="181"/></sdl:cxts><trans-unit id="55f7a6c0-599b-47b3-8959-57b21e9ebb7b"><source>The view toggles a few necessary properties:</source><seg-source><mrk mtype="seg" mid="284">The view toggles a few necessary properties:</mrk></seg-source><target><mrk mtype="seg" mid="284"/></target><sdl:seg-defs><sdl:seg id="284"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="181"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="183"/></sdl:cxts><trans-unit id="644578f3-d10c-402f-9d2f-4577157e9aaf"><source>It disables its scroll bars - this application has no use for scroll bars.</source><seg-source><mrk mtype="seg" mid="285">It disables its scroll bars - this application has no use for scroll bars.</mrk></seg-source><target><mrk mtype="seg" mid="285"/></target><sdl:seg-defs><sdl:seg id="285"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="182"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="184"/></sdl:cxts><trans-unit id="lockTU_8e05f53f-e568-4361-a992-86c841e06a4e" translate="no" sdl:locktype="Structure"><source><g id="4719">resizeEvent()</g></source></trans-unit><trans-unit id="lockTU_6e439891-c61d-46bc-95fb-9f7667bfefca" translate="no" sdl:locktype="Structure"><source><g id="4719">resizeEvent()</g></source></trans-unit><trans-unit id="f0e7503b-ca97-406e-ae36-66ccae9537f6"><source>It assigns a minimum size. This is necessary to avoid numerical errors in our fit-in-view <x id="locked257" xid="lockTU_6e439891-c61d-46bc-95fb-9f7667bfefca"/> implementation.</source><seg-source><mrk mtype="seg" mid="286">It assigns a minimum size.</mrk> <mrk mtype="seg" mid="287">This is necessary to avoid numerical errors in our fit-in-view <x id="locked258" xid="lockTU_8e05f53f-e568-4361-a992-86c841e06a4e"/> implementation.</mrk></seg-source><target><mrk mtype="seg" mid="286"/> <mrk mtype="seg" mid="287"/></target><sdl:seg-defs><sdl:seg id="286"/><sdl:seg id="287"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="183"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="185"/></sdl:cxts><trans-unit id="980874fe-1bcc-458f-a280-762781d7512f"><source>It sets <g id="4722">FullViewportUpdate</g>, to ensure <g id="4725">QGraphicsView</g> doesn&apos;t spend time figuring out precisely what needs to be redrawn. This application is very simple - if anything changes, everything is updated.</source><seg-source><mrk mtype="seg" mid="288">It sets <g id="4722">FullViewportUpdate</g>, to ensure <g id="4725">QGraphicsView</g> doesn&apos;t spend time figuring out precisely what needs to be redrawn.</mrk> <mrk mtype="seg" mid="289">This application is very simple - if anything changes, everything is updated.</mrk></seg-source><target><mrk mtype="seg" mid="288"/> <mrk mtype="seg" mid="289"/></target><sdl:seg-defs><sdl:seg id="288"/><sdl:seg id="289"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="184"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="186"/></sdl:cxts><trans-unit id="1ba081f8-b65a-4878-a12e-c54b9c877d1b"><source>It enables background caching - this makes no performance difference with OpenGL, but without OpenGL it avoids unnecessary re-scaling of the background pixmap.</source><seg-source><mrk mtype="seg" mid="290">It enables background caching - this makes no performance difference with OpenGL, but without OpenGL it avoids unnecessary re-scaling of the background pixmap.</mrk></seg-source><target><mrk mtype="seg" mid="290"/></target><sdl:seg-defs><sdl:seg id="290"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="185"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="187"/></sdl:cxts><trans-unit id="96b2dfb8-72b9-40b9-b8ec-2e19757bc900"><source>It sets render hints that increase rendering quality.</source><seg-source><mrk mtype="seg" mid="291">It sets render hints that increase rendering quality.</mrk></seg-source><target><mrk mtype="seg" mid="291"/></target><sdl:seg-defs><sdl:seg id="291"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="186"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="188"/></sdl:cxts><trans-unit id="aa537fcc-a817-4717-b272-ff198b5c203e"><source>If OpenGL is supported, a QGLWidget viewport is assigned to the view.</source><seg-source><mrk mtype="seg" mid="292">If OpenGL is supported, a QGLWidget viewport is assigned to the view.</mrk></seg-source><target><mrk mtype="seg" mid="292"/></target><sdl:seg-defs><sdl:seg id="292"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="187"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="189"/></sdl:cxts><trans-unit id="9fc0fa8f-fecb-42b7-8b28-142f11905880"><source>Finally, we start the state engine.</source><seg-source><mrk mtype="seg" mid="293">Finally, we start the state engine.</mrk></seg-source><target><mrk mtype="seg" mid="293"/></target><sdl:seg-defs><sdl:seg id="293"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="188"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="190"/></sdl:cxts><trans-unit id="25ba51a9-b88b-4fe6-9081-47cd6cfc8086"><source><g id="4728">void</g> PadNavigator<g id="4731">::</g>resizeEvent(<g id="4734">QResizeEvent</g> <g id="4737">*</g>event) { <g id="4740">QGraphicsView</g><g id="4743">::</g>resizeEvent(event); fitInView(scene()<g id="4746">-</g><g id="4749">&gt;</g>sceneRect()<g id="4752">,</g> <g id="4755">Qt</g><g id="4758">::</g>KeepAspectRatio); }</source><seg-source><mrk mtype="seg" mid="294"><g id="4728">void</g> PadNavigator<g id="4731">::</g>resizeEvent(<g id="4734">QResizeEvent</g> <g id="4737">*</g>event) { <g id="4740">QGraphicsView</g><g id="4743">::</g>resizeEvent(event); fitInView(scene()<g id="4746">-</g><g id="4749">&gt;</g>sceneRect()<g id="4752">,</g> <g id="4755">Qt</g><g id="4758">::</g>KeepAspectRatio); }</mrk></seg-source><target><mrk mtype="seg" mid="294"/></target><sdl:seg-defs><sdl:seg id="294"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="189"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="191"/></sdl:cxts><trans-unit id="1296b7c1-5629-492d-af15-9d494ba90b1d"><source>The <g id="4761">resizeEvent()</g> implementation calls the base implementation, and then calls <g id="4764">QGraphicsView::fitInView</g>() to scale the scene so that it fits perfectly inside the view.</source><seg-source><mrk mtype="seg" mid="295">The <g id="4761">resizeEvent()</g> implementation calls the base implementation, and then calls <g id="4764">QGraphicsView::fitInView</g>() to scale the scene so that it fits perfectly inside the view.</mrk></seg-source><target><mrk mtype="seg" mid="295"/></target><sdl:seg-defs><sdl:seg id="295"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="190"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="192"/></sdl:cxts><trans-unit id="5623c3ca-fa60-4e40-9739-c2f8b11d978e"><source>By resizing the main application window, you can see this effect yourself. The scene contents grow when you make the window larger, and shrink when you make it smaller, while keeping the aspect ratio intact.</source><seg-source><mrk mtype="seg" mid="296">By resizing the main application window, you can see this effect yourself.</mrk> <mrk mtype="seg" mid="297">The scene contents grow when you make the window larger, and shrink when you make it smaller, while keeping the aspect ratio intact.</mrk></seg-source><target><mrk mtype="seg" mid="296"/> <mrk mtype="seg" mid="297"/></target><sdl:seg-defs><sdl:seg id="296"/><sdl:seg id="297"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="191"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="33"/></sdl:cxts><trans-unit id="e229b24b-9951-41f7-ab6c-1368d3d1bd35"><source><g id="4767"/></source><seg-source><g id="4767"/></seg-source><target><g id="4767"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="192"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="193"/></sdl:cxts><trans-unit id="38c7b435-84e6-4482-afaa-5c45c2eebf72"><source>The main() Function</source><seg-source><mrk mtype="seg" mid="298">The main() Function</mrk></seg-source><target><mrk mtype="seg" mid="298"/></target><sdl:seg-defs><sdl:seg id="298"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="193"/><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="194"/></sdl:cxts><trans-unit id="cc341d4f-b842-4dec-9796-ea44e8c641c3"><source><g id="4770">int</g> main(<g id="4773">int</g> argc<g id="4776">,</g> <g id="4779">char</g> <g id="4782">*</g>argv<g id="4785">[</g><g id="4788">]</g>) { <g id="4791">QApplication</g> app(argc<g id="4794">,</g> argv); Q_INIT_RESOURCE(padnavigator); PadNavigator navigator(<g id="4797">QSize</g>(<g id="4800">3</g><g id="4803">,</g> <g id="4806">3</g>)); navigator<g id="4809">.</g>show(); <g id="4812">return</g> app<g id="4815">.</g>exec(); }</source><seg-source><mrk mtype="seg" mid="299"><g id="4770">int</g> main(<g id="4773">int</g> argc<g id="4776">,</g> <g id="4779">char</g> <g id="4782">*</g>argv<g id="4785">[</g><g id="4788">]</g>) { <g id="4791">QApplication</g> app(argc<g id="4794">,</g> argv); Q_INIT_RESOURCE(padnavigator); PadNavigator navigator(<g id="4797">QSize</g>(<g id="4800">3</g><g id="4803">,</g> <g id="4806">3</g>)); navigator<g id="4809">.</g>show(); <g id="4812">return</g> app<g id="4815">.</g>exec(); }</mrk></seg-source><target><mrk mtype="seg" mid="299"/></target><sdl:seg-defs><sdl:seg id="299"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="194"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="195"/></sdl:cxts><trans-unit id="lockTU_728d0e04-5e78-4f54-ab98-cd22a59cef18" translate="no" sdl:locktype="Structure"><source><g id="4818">main</g></source></trans-unit><trans-unit id="lockTU_9e44602f-081c-46ad-9e20-c88a17910b22" translate="no" sdl:locktype="Structure"><source><g id="4827">PadNavigator</g></source></trans-unit><trans-unit id="lockTU_15affc7a-24c1-44fa-b319-b41fc2a4d3d0" translate="no" sdl:locktype="Structure"><source><g id="4818">main</g></source></trans-unit><trans-unit id="lockTU_a98b479e-c609-4fdc-86d9-a1b7e9bb1f21" translate="no" sdl:locktype="Structure"><source><g id="4827">PadNavigator</g></source></trans-unit><trans-unit id="186dc096-7935-4775-b896-07c5560fd046"><source>The <x id="locked259" xid="lockTU_15affc7a-24c1-44fa-b319-b41fc2a4d3d0"/> function creates the <g id="4821">QApplication</g> instance, uses <g id="4824">Q_INIT_RESOURCE</g> to ensure our compiled-in resources aren&apos;t removed by the linker, and then creates a 3x3 <x id="locked260" xid="lockTU_a98b479e-c609-4fdc-86d9-a1b7e9bb1f21"/> instance and shows it.</source><seg-source><mrk mtype="seg" mid="300">The <x id="locked261" xid="lockTU_728d0e04-5e78-4f54-ab98-cd22a59cef18"/> function creates the <g id="4821">QApplication</g> instance, uses <g id="4824">Q_INIT_RESOURCE</g> to ensure our compiled-in resources aren&apos;t removed by the linker, and then creates a 3x3 <x id="locked262" xid="lockTU_9e44602f-081c-46ad-9e20-c88a17910b22"/> instance and shows it.</mrk></seg-source><target><mrk mtype="seg" mid="300"/></target><sdl:seg-defs><sdl:seg id="300"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="195"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="196"/></sdl:cxts><trans-unit id="6ae29447-96f9-4828-95c4-225826489f76"><source>Our flippable pad shows up with a suitable splash item once control returns to the event loop.</source><seg-source><mrk mtype="seg" mid="301">Our flippable pad shows up with a suitable splash item once control returns to the event loop.</mrk></seg-source><target><mrk mtype="seg" mid="301"/></target><sdl:seg-defs><sdl:seg id="301"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="196"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="33"/></sdl:cxts><trans-unit id="7f450311-d904-4d5b-88b1-9487ff6ff031"><source><g id="4830"/></source><seg-source><g id="4830"/></seg-source><target><g id="4830"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="197"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="197"/></sdl:cxts><trans-unit id="5da06468-0b63-4be3-87d6-3284c78a187b"><source>Performance Notes</source><seg-source><mrk mtype="seg" mid="302">Performance Notes</mrk></seg-source><target><mrk mtype="seg" mid="302"/></target><sdl:seg-defs><sdl:seg id="302"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="198"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="198"/></sdl:cxts><trans-unit id="6a34f477-ca81-4ad6-afae-14ef679ea7db"><source>The example uses OpenGL if this is available, to achieve optimal performance; otherwise perspective tranformations can be quite costly.</source><seg-source><mrk mtype="seg" mid="303">The example uses OpenGL if this is available, to achieve optimal performance; otherwise perspective tranformations can be quite costly.</mrk></seg-source><target><mrk mtype="seg" mid="303"/></target><sdl:seg-defs><sdl:seg id="303"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="199"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="199"/></sdl:cxts><trans-unit id="35ec949d-b32c-4552-ad23-18d9c1298b7c"><source>Although this example does use <g id="4833">QGraphicsProxyWidget</g> to demonstrate integration of Qt widget components integrated into Graphics View, using <g id="4836">QGraphicsProxyWidget</g> comes with a performance penalty, and is therefore not recommended for embedded development.</source><seg-source><mrk mtype="seg" mid="304">Although this example does use <g id="4833">QGraphicsProxyWidget</g> to demonstrate integration of Qt widget components integrated into Graphics View, using <g id="4836">QGraphicsProxyWidget</g> comes with a performance penalty, and is therefore not recommended for embedded development.</mrk></seg-source><target><mrk mtype="seg" mid="304"/></target><sdl:seg-defs><sdl:seg id="304"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="200"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="200"/></sdl:cxts><trans-unit id="572e0fbf-6ecf-4e0d-8233-7dc282a0d940"><source>This example uses extensive item caching to avoid rerendering of static elements, at the expense of graphics memory.</source><seg-source><mrk mtype="seg" mid="305">This example uses extensive item caching to avoid rerendering of static elements, at the expense of graphics memory.</mrk></seg-source><target><mrk mtype="seg" mid="305"/></target><sdl:seg-defs><sdl:seg id="305"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="201"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="201"/></sdl:cxts><trans-unit id="38061c7c-e5db-447d-9947-3dae8f69a53f"><source>Files:</source><seg-source><mrk mtype="seg" mid="306">Files:</mrk></seg-source><target><mrk mtype="seg" mid="306">Файлы:</mrk></target><sdl:seg-defs><sdl:seg id="306" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100"><sdl:value key="created_by">TRAPP</sdl:value><sdl:value key="created_on">03/15/2019 00:04:31</sdl:value><sdl:value key="modified_on">03/15/2019 00:04:31</sdl:value><sdl:value key="last_modified_by">TRAPP</sdl:value><sdl:value key="SDL:OriginalTranslationHash">874853416</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="202"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="203"/></sdl:cxts><trans-unit id="6d240f8d-d86f-4d13-bf93-a9387fa4fa49"><source><g id="4839">graphicsview/padnavigator/flippablepad.cpp</g></source><seg-source><g id="4839"><mrk mtype="seg" mid="307">graphicsview/padnavigator/flippablepad.cpp</mrk></g></seg-source><target><g id="4839"><mrk mtype="seg" mid="307"/></g></target><sdl:seg-defs><sdl:seg id="307"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="203"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="204"/></sdl:cxts><trans-unit id="fc74c193-fa00-44a9-95f4-bc2384204863"><source><g id="4842">graphicsview/padnavigator/flippablepad.h</g></source><seg-source><g id="4842"><mrk mtype="seg" mid="308">graphicsview/padnavigator/flippablepad.h</mrk></g></seg-source><target><g id="4842"><mrk mtype="seg" mid="308"/></g></target><sdl:seg-defs><sdl:seg id="308"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="204"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="205"/></sdl:cxts><trans-unit id="c49b6973-8924-4e8b-bea7-c634c7c4dc6b"><source><g id="4845">graphicsview/padnavigator/form.ui</g></source><seg-source><g id="4845"><mrk mtype="seg" mid="309">graphicsview/padnavigator/form.ui</mrk></g></seg-source><target><g id="4845"><mrk mtype="seg" mid="309"/></g></target><sdl:seg-defs><sdl:seg id="309"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="205"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="206"/></sdl:cxts><trans-unit id="858be084-e8e5-4bc9-b417-e90720b9d5a6"><source><g id="4848">graphicsview/padnavigator/padnavigator.cpp</g></source><seg-source><g id="4848"><mrk mtype="seg" mid="310">graphicsview/padnavigator/padnavigator.cpp</mrk></g></seg-source><target><g id="4848"><mrk mtype="seg" mid="310"/></g></target><sdl:seg-defs><sdl:seg id="310"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="206"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="207"/></sdl:cxts><trans-unit id="e44eddec-ed75-4cd8-9185-529e6d9b4078"><source><g id="4851">graphicsview/padnavigator/padnavigator.h</g></source><seg-source><g id="4851"><mrk mtype="seg" mid="311">graphicsview/padnavigator/padnavigator.h</mrk></g></seg-source><target><g id="4851"><mrk mtype="seg" mid="311"/></g></target><sdl:seg-defs><sdl:seg id="311"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="207"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="208"/></sdl:cxts><trans-unit id="0a8de16c-70c0-4c47-90d4-eb9a83574633"><source><g id="4854">graphicsview/padnavigator/roundrectitem.cpp</g></source><seg-source><g id="4854"><mrk mtype="seg" mid="312">graphicsview/padnavigator/roundrectitem.cpp</mrk></g></seg-source><target><g id="4854"><mrk mtype="seg" mid="312"/></g></target><sdl:seg-defs><sdl:seg id="312"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="208"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="209"/></sdl:cxts><trans-unit id="75339b36-c58a-498b-b27e-066b4376e648"><source><g id="4857">graphicsview/padnavigator/roundrectitem.h</g></source><seg-source><g id="4857"><mrk mtype="seg" mid="313">graphicsview/padnavigator/roundrectitem.h</mrk></g></seg-source><target><g id="4857"><mrk mtype="seg" mid="313"/></g></target><sdl:seg-defs><sdl:seg id="313"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="209"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="210"/></sdl:cxts><trans-unit id="0f81ad73-f658-4fac-8cb2-48c7c8f63d5a"><source><g id="4860">graphicsview/padnavigator/splashitem.cpp</g></source><seg-source><g id="4860"><mrk mtype="seg" mid="314">graphicsview/padnavigator/splashitem.cpp</mrk></g></seg-source><target><g id="4860"><mrk mtype="seg" mid="314"/></g></target><sdl:seg-defs><sdl:seg id="314"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="210"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="211"/></sdl:cxts><trans-unit id="1d3d57b5-bbf6-4cf9-8cfe-f3c146a0751d"><source><g id="4863">graphicsview/padnavigator/splashitem.h</g></source><seg-source><g id="4863"><mrk mtype="seg" mid="315">graphicsview/padnavigator/splashitem.h</mrk></g></seg-source><target><g id="4863"><mrk mtype="seg" mid="315"/></g></target><sdl:seg-defs><sdl:seg id="315"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="211"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="212"/></sdl:cxts><trans-unit id="7924a89c-9e87-4cb4-9952-a9639872edb3"><source><g id="4866">graphicsview/padnavigator/main.cpp</g></source><seg-source><g id="4866"><mrk mtype="seg" mid="316">graphicsview/padnavigator/main.cpp</mrk></g></seg-source><target><g id="4866"><mrk mtype="seg" mid="316"/></g></target><sdl:seg-defs><sdl:seg id="316"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="212"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="213"/></sdl:cxts><trans-unit id="ccc8d47c-4938-4bde-8cea-54a50b297cec"><source><g id="4869">graphicsview/padnavigator/padnavigator.pro</g></source><seg-source><g id="4869"><mrk mtype="seg" mid="317">graphicsview/padnavigator/padnavigator.pro</mrk></g></seg-source><target><g id="4869"><mrk mtype="seg" mid="317"/></g></target><sdl:seg-defs><sdl:seg id="317"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="213"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="214"/></sdl:cxts><trans-unit id="bd48045f-0cea-4772-a301-fb9957daea11"><source><g id="4872">graphicsview/padnavigator/padnavigator.qrc</g></source><seg-source><g id="4872"><mrk mtype="seg" mid="318">graphicsview/padnavigator/padnavigator.qrc</mrk></g></seg-source><target><g id="4872"><mrk mtype="seg" mid="318"/></g></target><sdl:seg-defs><sdl:seg id="318"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="214"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="215"/></sdl:cxts><trans-unit id="157d596e-3258-423e-bba4-82b2b30a5d75"><source>Images:</source><seg-source><mrk mtype="seg" mid="319">Images:</mrk></seg-source><target><mrk mtype="seg" mid="319"/></target><sdl:seg-defs><sdl:seg id="319"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="215"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="217"/></sdl:cxts><trans-unit id="282f56e9-36e1-456c-a926-73eef00f905a"><source><g id="4875">graphicsview/padnavigator/images/artsfftscope.png</g></source><seg-source><g id="4875"><mrk mtype="seg" mid="320">graphicsview/padnavigator/images/artsfftscope.png</mrk></g></seg-source><target><g id="4875"><mrk mtype="seg" mid="320"/></g></target><sdl:seg-defs><sdl:seg id="320"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="216"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="218"/></sdl:cxts><trans-unit id="beb65d4c-1594-4170-889e-643ef2994a98"><source><g id="4878">graphicsview/padnavigator/images/blue_angle_swirl.jpg</g></source><seg-source><g id="4878"><mrk mtype="seg" mid="321">graphicsview/padnavigator/images/blue_angle_swirl.jpg</mrk></g></seg-source><target><g id="4878"><mrk mtype="seg" mid="321"/></g></target><sdl:seg-defs><sdl:seg id="321"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="217"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="219"/></sdl:cxts><trans-unit id="6df0dc52-ef46-4c2d-9b70-2d693b01264c"><source><g id="4881">graphicsview/padnavigator/images/kontact_contacts.png</g></source><seg-source><g id="4881"><mrk mtype="seg" mid="322">graphicsview/padnavigator/images/kontact_contacts.png</mrk></g></seg-source><target><g id="4881"><mrk mtype="seg" mid="322"/></g></target><sdl:seg-defs><sdl:seg id="322"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="218"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="220"/></sdl:cxts><trans-unit id="71466146-ee84-4bbd-afbf-7b7b648ee285"><source><g id="4884">graphicsview/padnavigator/images/kontact_journal.png</g></source><seg-source><g id="4884"><mrk mtype="seg" mid="323">graphicsview/padnavigator/images/kontact_journal.png</mrk></g></seg-source><target><g id="4884"><mrk mtype="seg" mid="323"/></g></target><sdl:seg-defs><sdl:seg id="323"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="219"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="221"/></sdl:cxts><trans-unit id="e0a0eff0-2538-414f-99c9-eb3ba2e023a1"><source><g id="4887">graphicsview/padnavigator/images/kontact_mail.png</g></source><seg-source><g id="4887"><mrk mtype="seg" mid="324">graphicsview/padnavigator/images/kontact_mail.png</mrk></g></seg-source><target><g id="4887"><mrk mtype="seg" mid="324"/></g></target><sdl:seg-defs><sdl:seg id="324"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="220"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="222"/></sdl:cxts><trans-unit id="02f15cd2-dd5a-4f11-abce-0a45ab663750"><source><g id="4890">graphicsview/padnavigator/images/kontact_notes.png</g></source><seg-source><g id="4890"><mrk mtype="seg" mid="325">graphicsview/padnavigator/images/kontact_notes.png</mrk></g></seg-source><target><g id="4890"><mrk mtype="seg" mid="325"/></g></target><sdl:seg-defs><sdl:seg id="325"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="221"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="223"/></sdl:cxts><trans-unit id="4db7cd4b-1761-4340-89ad-9559eef1bc53"><source><g id="4893">graphicsview/padnavigator/images/kopeteavailable.png</g></source><seg-source><g id="4893"><mrk mtype="seg" mid="326">graphicsview/padnavigator/images/kopeteavailable.png</mrk></g></seg-source><target><g id="4893"><mrk mtype="seg" mid="326"/></g></target><sdl:seg-defs><sdl:seg id="326"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="222"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="224"/></sdl:cxts><trans-unit id="59cc9e62-c8dc-4f04-8e6b-62f92b72583c"><source><g id="4896">graphicsview/padnavigator/images/metacontact_online.png</g></source><seg-source><g id="4896"><mrk mtype="seg" mid="327">graphicsview/padnavigator/images/metacontact_online.png</mrk></g></seg-source><target><g id="4896"><mrk mtype="seg" mid="327"/></g></target><sdl:seg-defs><sdl:seg id="327"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="223"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="225"/></sdl:cxts><trans-unit id="494a8a3e-37b7-4e8c-9c69-66435d0484c7"><source><g id="4899">graphicsview/padnavigator/images/minitools.png</g></source><seg-source><g id="4899"><mrk mtype="seg" mid="328">graphicsview/padnavigator/images/minitools.png</mrk></g></seg-source><target><g id="4899"><mrk mtype="seg" mid="328"/></g></target><sdl:seg-defs><sdl:seg id="328"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="224"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="21"/></sdl:cxts><trans-unit id="c086acca-9ce3-4a00-b391-0577ea951df9"><source><x id="4900"/></source><seg-source><x id="4900"/></seg-source><target><x id="4900"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="225"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="227"/></sdl:cxts><trans-unit id="5d3f5c0c-4d37-4003-ba82-9205ccf0ddc1"><source><x id="4901"/></source><seg-source><x id="4901"/></seg-source><target><x id="4901"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="226"/><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="227"/></sdl:cxts><trans-unit id="25df3f66-fbee-4de3-991d-0a9674dcfed1"><source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="4902"/> The documentation provided herein is licensed under the terms of the <g id="4905">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="4906"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</source><seg-source><mrk mtype="seg" mid="329">2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.</mrk><x id="4902"/> <mrk mtype="seg" mid="330">The documentation provided herein is licensed under the terms of the <g id="4905">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.</mrk><x id="4906"/> <mrk mtype="seg" mid="331">Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide.</mrk> <mrk mtype="seg" mid="332">All other trademarks are property of their respective owners.</mrk></seg-source><target><mrk mtype="seg" mid="329"/><x id="4902"/> <mrk mtype="seg" mid="330">Документация, представленная здесь, лицензирована в соответствии с условиями <g id="4905">Лицензии свободной документации GNU версии 1.3</g> , опубликованной Фондом свободного программного обеспечения.</mrk><x id="4906"/> <mrk mtype="seg" mid="331">Qt и соответствующие логотипы являются товарными знаками The Qt Company Ltd. в Финляндии и/или других странах мира.</mrk> <mrk mtype="seg" mid="332">Все остальные товарные знаки являются собственностью соответствующих владельцев.</mrk></target><sdl:seg-defs><sdl:seg id="329"/><sdl:seg id="330" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/18/2019 08:01:56</sdl:value><sdl:value key="modified_on">04/23/2019 08:53:32</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">460311339</sdl:value></sdl:seg><sdl:seg id="331" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/18/2019 08:02:00</sdl:value><sdl:value key="modified_on">04/23/2019 08:53:35</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">998242797</sdl:value></sdl:seg><sdl:seg id="332" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/18/2019 08:02:06</sdl:value><sdl:value key="modified_on">04/23/2019 08:53:37</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">1633633558</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group></body></file></xliff>