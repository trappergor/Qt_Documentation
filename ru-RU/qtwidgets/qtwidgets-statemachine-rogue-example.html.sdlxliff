<?xml version="1.0" encoding="utf-8"?><xliff xmlns:sdl="http://sdl.com/FileTypes/SdlXliff/1.0" xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2" sdl:version="1.0"><file original="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtwidgets\qtwidgets-statemachine-rogue-example.html" datatype="x-sdlfilterframework2" source-language="en-US" target-language="ru-RU"><header><reference><internal-file form="base64">UEsDBBQAAAAIAFdAgkmfZ40kvBQAAMlcAAARAAAAYWpxZGp0NWQuaTNnLmh0bWztXHlzGzey/9+f
Ao/JOuQWD9uJsy5ZYuLYcqy3PmV5va5Xr1LgDEhiNRyMAYxovsTf/XU3gCGGHB6Sj3Wy2aqNqRkM
0Ojz143j8Id3s4xdCG2kyo9aN/s3WkzkiUplPjlqvTp72LvT+mF47fC/Hjy7f/bm+TGb2lkGf+M/
LOPYSOQtfCB4OrzG2OFMWA6tbNETb0t5cdS6r3Ircts7WxSixRL311HLind2gN3cZcmUayPsUWnH
MBwb4Hi9HtNqUor+21QlrNejvq20mRie4nN2/I7Pikyw39gLy17LdCKsYbf7fzscuFbYPpP5OdMi
O2oZu8iEmQphW8wCIX78xJgWm2ox9i0GajyGj0TPSOy8T+8H1JdJtCxs/PG/+AV3T1vYgrG5zFM1
76s8UzxlR2xc5okFvrY7v8IkyhnMuw9kHmcCf5qfFmd88pTPRLuFhLY6fWnFrH2j0wdm3LNWy1Fp
4SXS1+qyOoVEWufu+7tI28CRAXwbODkcjlS6gH9SecGSjBtz1MIXQreYTI9aby3Q4x/Q5KJ2My5z
P5/Vxz2tyjwVqX9db5DzCznhON0R11ULFBofgTgOrQZ6bMqGh9xzvN8fECEDUxaF0lakvSLjdqz0
zPR4nvZAV8ZyUmrq1fRRWb56a3u3e39rDUHoJGw+BIGnw3rPb+3cKUQPJCLe0Zf0ideT+mc1fXKP
B0At/MdTjv+EaY5KmaXeXlrLWSFXa69AGVI7BYu6ceMvLcYzOQHz0nIytYH2/k12KsZCg7kJ9sDr
B02VaFgyMCYmMH4AnPdCcj9jUXgba9Wfota0GhsyFO79xo+MTIWTZ/zUqoRs/ltkeQ4a7B/5Pjx/
4fW1wxK9RSYrIsSFyG62lqL6yhlNj973UjGWubTE29f0gt3HF+xB9cL1ncnLdEvGXLF3peuT2ss9
u7dT0ZupC/rOap4bos0N1xqeTQV74t+eVW/deJcYgBxgJs9FD4ZIPVuw79Pwgp2FF1G3A+L5ulp4
WfaCepDSrj4cug/D59OblczRq7ZWjWV6ExqZgufVIOXItwSvBM+9L//6668NMFjMeDIFPRzQ1EDc
znEhc9DFx9TSu9aQVRqWQmCRmcGOOTQtKiUGsoW+hxYG7+RswoxOjlpyxifC+IGEo7df5BM0Rgg/
6NYPB8XwsACOSsN8C1apimGcuSjA0NuzETciZRMgpQ/WyhaqZEbAOxDHIcRLMfzxcED/MpnTUyBf
iNxMlf2BnU25/cbgR11650IbO6s+/ip8jLGQJzAhGF8LNudZZroMvCF9lyqgS4tCC4N2O86U0n12
kgOtWvCMyOsyBU01u/fy/slJ3N9clVkafQ1ds3OwBMPUmKnRv0SCk4aRgHBuS2jVZeCMYT4gOnBS
SEYi8ctU8wl4ZNZ2xD/wxJsOg+ZjpWAU57NDi79ULfrsp9KyTCA7cmUZuGOWcK0lMJfP+YJmY1Ei
bi4Vtxg8InksmC7zHPAJMAjjEfIb9E/MCguvlJr1Ua7XSLDRt2itKXhlO6U+z8WigCDdvtVl33XZ
nS77vtMnMTGOJtFlc8Gm/CJSCCTQSwuAja0EpmYzJx74FmL2ZIK8lmMaBeLZAkSBoMGEb/2HTvq+
AdAHzWEe5hyGgY+nYmCQehAqTHjOUR+tYjhwNb0nyljiknGUekqMIyUX0NNMaVRRYI/Kac4MhQ9i
meNjREcgejB9I5LSSuiDXqPgZV9c/+rdLXG3S2KCZgZ8lAYdg14MGwkUgGsNfLFO44EWZuVMdFal
CJBoEZlKE//GqOkM8YV2XybgLiZKL7oMYBApohsDvB5Qw/WEAmbX6xKaOzgWENG4BJb1xpmAUO8M
1kkdTEQmU5iGdZN2zAJKxyjruUBOqaW4cTQj2GiBhKDTmhD/gAkoC9C5JdpwYMPhE2jzHLlyfEHe
tPZnu4Oui1TL2SKJDQY9F6IA+jLHaPJrbCZmI2DFBdcSIz+JH8JAcu7YAOCagAO0J4HwDHQlXZCq
gVqjHYJpM6Ng+s4fgHFha8BvZYKzwW6SUmucK/lmYmtgDFkDSQFMC0wC5JfBAEgFuPXJVFgrYSZT
ZKk0vR43OC10KXOBfiVX8y47+WbGDDiSXq/Mga3cgB73AYSRNNyYPiCgihBFjlbQ2LQLkyzAeUEj
aupomXPplAG9cz7JIq0ObpIjoDmH9qrULAOtNp63zp3rmn8Ifh+NQBpLvtDOlROCMAeurUcxQ6e+
Dj4EBQZnOCfzdXEilQaNmvqBZ6R/SJfB/KQsnPTiqTtH4PAKMNAomL3x/CnB0jjMdaQuXKiBmMBR
+RzjnXMsJ4K8m+lXuMITuo5BqhiFIyyBi+Oa88PIN7tkL/YcJuPCVg1mFMOfxBi9DEgfNJbrc5Qk
qlFK0evcTpHCKXgUi6PmIgFRcb0gfUZjhraZMiB0CGbnwZVA9Id4HsatOPUIrVSaSnswullHPARa
EMMcf6J9cbRgxfBDMFkvxkthBhqBBtgEG4CUvCiD9aBmGq+aS0+L9mKRSIAxYh6sC4wA3b0GZsgL
CmX0CbAIHqlJLv+PfLCNRERdoRf3PCElDR4/Ura78Msx3JnkXII5AlLpsoBXkYFoYOAh0b1RZ0tN
gEmIbOyUEv302uziuAYMzg24TrZAtdEQKlh7RE4IJ+WUcBF0Dt67J0ELOyCuKujBT2f6myNfNcea
BTsdSMUMeGQ1OQpQBZx6Cf4bOeZmAJ1scR4+HJPMnFgwfIId+5BeY30kFPAboNIIDlCfg217AgN0
3ZjjOCg7vUVQ/PKZ0PRWxYUmz+QCCZmLC1HOUnY7LAiK1rmijV6rhhAIMAoPHh1DzPITExBxZcYn
1iOeOKSOtZq5yB8TiyC4NEtNDX14DdBVYp4UBeSkVKmJ0hHof6502homLveilIR5hh5saFuUo0wm
oXGtDYZXSOBdHSFkOIz96vPyF788++m/j++fVX8+P332/Pj07E27qZeXoFv5JIzj/f3p8b0H4ffr
05OzY5TBS/q7s3l6NZIPQpWgsanIy1kY84EEXSez/5W9KmrtVQFozypIwbpVazXPd7V5LMZ2V5tT
LIOw93eveTqdONqd6kEDsy6UTMP36MiekwdqLyeQhl+du/v1UrG1vUFj0J9sU4K6+DZM+jrAi7u+
jZPqNvoaVaLdYbsp3Ma7Fy8hnlR9wu9HEsHoHr2CBj84vv/4l2f/OD49PXlwfHeLBmplyRFuU8J1
KRQcaHHouIny59XrHXz+q39PzqTTQDc4DC3IXfqkNehL8JamEIkcI/4hAFIp1gra8ukkeHtUQwjk
Ls6Q48KsgDqLNLTj+w9gmZBa1Bf6TMjJcZ7usa8iUzwi9FiDgxklOVvxIPbq8GBUYHCfh7mCsIBz
kC9j2QeGjsIBhQHpBqpmx5dfjETC3YQFq5dyE4CBg7cu/vmKKxqYwCDnYxHEdERpBrMHRD35Aqv3
Dd344UAavqswPnVGsIEgnAAo9QThp/L5ZgYD6ktHh0LLC6L0MqpL9d4nLh61L+F1yuIJL7Z7uxf3
AdRU7o5v8sz/45u8Pnlw9mhDm//1bXZ08ej45OdHZzv62DJHubTQ4p+7AkDxZru7Qq3xjN3T7D0s
2N+1zhbO+eMX72vuYWkzyPgoXwKkqjUApaqGFNXWKqziM2qArh5XoYa+FlR28DjK9VL5iqVGVJ4C
fUJZpAi3ALCSttu1Wlbffw/s9kTiZ/7Zm4jwONEvlIf5tYwuoEdSo7XOvGqE55pAmFbGe8xFKCak
ErILQ6i4ytuKGlT3xC1dfphytVSG9GYAISgHDa4oSiOJl4RMU0WFKeByUoJncXUDyjodyFXCFRjB
wyVC5+sIlrWXBakGGcRuc/1xhR1W3zR6/iUvl9F3deZYGj0ZU115Ls00So/jvBi/AbwNWO88VExo
kTMkZm4UH0LA6VWjSEh2fB9WFRVrC0h4tyUrqysnmxOWS62x+MQlpPNuZpi+lQmYNVLXkM8cbPbq
vl2zjzg4CG7S48wIsBf/3ORZjho9D2DnES6a3l7xiMWbj9NPv9/3v+JA4Z6sx5v3q37L5+VUcUAr
HKPMK5tv3+6y2x0yIao2Rz4JLNVVqaJFmj6AeSytQuhNRFw7d7Kpk7Oqzgd7huD1CLmfLOujRxIN
1n0pcVRAIBfz7ZB/LTLtjmR7hjCqJdEHn5B236DtuVTp1nLwDWP3tsOI6xMbshx4Iyf5c4/XNiRX
6Hy299htnIuhIA7jvS2Vveu8s/v94b09CaDaxVlSd7c89L1z4XdqIy0BXMNS7w5Z250t95f1+ui7
ef5J5J6mEQnLGXZq6Ap8DwF370Si8b0DqdBOMGRc90N/hutMuE7kykTxUlLte7/yVhpa8vDVQ0xz
ZF46Bwkir/vAAA1KagvJiMiKcZlBWjaTtB4F8QhLivCSKmVrZciHUhvbjagKMglExfVVQJJpuqwX
RiVkv+RCFVuR066TpTpC85FoXsXss6fKysQjnzkuE+ffWJoaBxChsZjmoE+ACVUpeElYPPgyw4uX
CIgAXw7FNaawKN2UBfIR1mKTaG+EWx5T+VJHWsP4L7c4tgSCbjiZX6hzkXbcImCsFkQoArxM8It4
HX5NpcIS35TTKsxGzeM+C44YFq3VjVHGbsWOAKqffZWHbqOA8Qlg3i1Z6ceIH5Ul/BvCx9IK/2Oj
x6lbsEBOtBeDvPPDhmDRxNu/iwXlQ/E63V4yXwhz9vFCSbXl7JJUfmQp+eHiqt8uNPh3v8x+lXEu
McYvbyqNr3H+g7Ue3NIZuR0yovaVDPShzHnWaKWfwkxrwb7GjE+k6rnaX9M3KfK+rPxT0395WilN
zPiPrejLSPnJdTSexgokxSg+r+PSVVhJQMCX5CK4iJszfK3L11wCJHTdNGpStAOjtDKTWIanKgnB
NwCd1QrBFJ5mtOxcVVeo2BatPyOiqwOwSSkHb0E1aSUkFOIDHYixjCtIur10tE2MNvVQLa9alFXx
mkKEAs2U0FBYFQ8YsIYy15bJr4B8ruwnUHJ/eorP6Cle1Ez30/mKyiQ/ffJan0hnbXkgsgdKRzfC
frfc5Y0l1MnjXTUh2d22UXS78fgg/zG4fYL7SjyGqLtmP5bf29HePmalWS9Pfn5673Eb96uYqUjb
nc6uL97eK3buQnj5+NkZSQj6W5L20diApYYN1dW4IkGl0y4zikmskeKu1+Ver2qTbnU6YutxgVpR
/UNOFviy+h6b/5Zp/KoKatxZauyGykO0u6sqjUEEutNprNv4fT+b8vIP2sPTwIWr7+dp9uFNG3su
twOnoTbn10V2RDGHJjrsYEdOtiH4zLfV0D96hOlUbNocR3cHvv1tdL6VhVW665qFYFGz5pN8dc2J
AJ7FrctN5SzCUiu1rCbu86HbpQnAyghc9NvUl6uG4ZHIHu7Hai2jNfbhd8T5CuFl6mv05RnYb2tY
/VyprB1cfnNE886ekVIZW46yS5uutnNnD9WS4zBCm/r4YP1C4le3R63r16WqLVewrnit6bXmBe7r
32OT2R5NIo5u5ioCFJn8knCzg+DrWXP5bPOS2c51WjdbYtYurdktTacUnQ/WCuF3LPwxtKvZd28N
M3va8XwP6e0oSf6pe826V6Hdfcq0e4rr3Df/N4vqklTvwfpYD6uUcQvjoh1sWADZxY7Atw+WLXS0
S7IVt7Wwpc4vQeZV3Mhlkv9bmwj4bXsnv31Bc7jzB5jD9x84hxXt8//7Aib23R9AOHhu4g8wjVfF
H1XJ3IGU37+E8PBNHOneX7tcQGluM+aZESv7FNdqYwFPhtw1wYPHPgTXTkuvHhXw5aKeb1tbtYjx
28FBDM38OoarLLmszxe3ZqWxWK+iy2P0zK1ujHAfbaCGmlfnGF5Y3CsUNhBXx7ut0Dku6PfZvbGl
I+nchjOsfumEsxm31m0PSqYiOceqmFs0QV3AYxsjIfJwSr5aGnK7Kt252rxK8on61Q0xe++p3OPk
Qa3vz52s/4lNa9j0zwz8A7KgOlj+8pD8TrnOpU2mVc0Knu9IwpcFcG7Ex4wVB5991O8OGkDA1mr1
/uyPjl7st4ccWbCWGW7mw0gLfr4SBz8f514Vn19ad74kab0qfjeyIjz5+cX1/ZckLuLB70ZimKJ9
foHd+pIEhiz4pPJKxZiXmV1ZRYr/15S7vF/bqrUNKtOiM20ZpwU9vIao2hVPe7f5B63JrRwKwZVv
dzQErybi5rzxGg5/VDxaZG/YHdB419/axoDL3QjotwO8USWbUYZLHKCcZK7wYINLWJYHGtjYX/yG
l2W5k6GvRZZ1/V1Y1WVx0YV4aZlPBKQx4l2RKXfrm7+TjPbKjejCKjxUQf0nkFKhaBZ4vY3fN43j
uJ+Qa2Xu8ho8/jnOeH4eXVEjkmmuMjWhm0pmwFmds28fYKJZlJiF0ahdVrHIBIEblcmU7sopc9xs
h6c5uMbrRbXoMsg4FZ4tGSvcrCO0qfK05+6siJ+8mxTKGZJJU+pCS7pDZoHHOWRCt6e1U2EK6bcI
Zjh1GGsCWBqSQjzfeS+fjOhmK1IFoae8wETQWLo0q4famrsLnXACXdTmMV1xB6mpOFhqLl6vezAY
aAEd86yv9GTQGjY8RP2JDqlk6/dZrd+YWkvK3U1IDdtRpj5FX7/UcbDeuj+tXXq556jhdGlRbB4r
Puh65RGmO/u/Ev10Y+5W6rHFVWl3/y202ty9s2BosuluULyY88cff1z/1N+3vHbXbO2vtV8NV46O
FdiWvw0YVJD+wbPj+WLG6JpQvB66WPh7ca8n8Bvil28xZLdu3Pye7rB4Ydl9sHO8L+KxTemIbO3G
XDrgRfcl06ZYmSdZiWes0G7wekgt/H4PPxZ6MewEHkrc8oS7X8mCwQDJBYz0EGd7RnduxgMBOy9k
1DXdlJGIHH1huLwQnZWeVafgadJ1y53P5/1JXpKR+s/NYJxmXpg/P33FHmqxci0wdvTYNQ43drOb
/W8pOnHDaAMS7rMLHpN6eKnGdo7zf4iOhLvduH52L6y/faSaPrhX5S4exfgCSqHPaRoNMvA7MNlD
mWfYC/x/gEe3/Tn8EuUh8NJRnaWgxwKde+ZfR53jWOFuD5SI41mjUJjzXUHZ/BXXA3cj+f8DUEsB
AjMAFAAAAAgAV0CCSZ9njSS8FAAAyVwAABEAAAAAAAAAAAAAAAAAAAAAAGFqcWRqdDVkLmkzZy5o
dG1sUEsFBgAAAAABAAEAPwAAAOsUAAAAAA==
</internal-file></reference><sdl:ref-files><sdl:ref-file uid="0" id="Html.DependencyFileId" name="dpge2ytg.imk.html" o-path="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtwidgets\qtwidgets-statemachine-rogue-example.html" date="12/02/2016 08:02:47" expected-use="Generation"/></sdl:ref-files><file-info xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><value key="SDL:FileId">2e42a10f-44d2-4496-9271-8eacf702dd7e</value><value key="SDL:CreationDate">09/06/2019 14:36:04</value><value key="SDL:OriginalFilePath">D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtwidgets\qtwidgets-statemachine-rogue-example.html</value><value key="SDL:OriginalEncoding">utf-8</value><value key="SDL:QuickInsertsList">qBold;qItalic;qUnderline;qSubscript;qSuperscript;qSmallCaps</value><value key="NeedsSegmentRenumbering">False</value><value key="HtmlEntityFound">True</value><value key="HeadEntityFound">True</value><value key="MetaEntityFound">True</value><value key="BodyEntityFound">True</value><value key="HtmlVersion">html5</value><value key="OperatingSystem">Linux</value><value key="ParagraphTextDirections"></value><sniff-info><detected-encoding detection-level="Certain" encoding="utf-8"/><detected-source-lang detection-level="Likely" lang="en-US"/></sniff-info></file-info><sdl:filetype-info><sdl:filetype-id>Html 5 2.0.0.0</sdl:filetype-id></sdl:filetype-info><fmt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><fmt-def id="1"/><fmt-def id="2"><value key="TextColor">Blue</value><value key="Underline">True</value></fmt-def></fmt-defs><cxt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><cxt-def id="1" type="LocationDetails" purpose="Location"><props><value key="StartsAt">-1</value><value key="EndsAt">39</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="2" type="LocationDetails" purpose="Location"><props><value key="StartsAt">81</value><value key="EndsAt">173</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="3" type="sdl:meta" color="Control"><fmt id="1"/></cxt-def><cxt-def id="4" type="sdl:html-control" color="Control"><fmt id="1"/></cxt-def><cxt-def id="5" type="LocationDetails" purpose="Location"><props><value key="StartsAt">173</value><value key="EndsAt">210</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="6" type="sdl:title" color="Control"><fmt id="1"/></cxt-def><cxt-def id="7" type="LocationDetails" purpose="Location"><props><value key="StartsAt">622</value><value key="EndsAt">707</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="8" type="x-tm-table-cell"><fmt id="1"/></cxt-def><cxt-def id="9" type="sdl:table-row" color="Control"><fmt id="1"/></cxt-def><cxt-def id="10" type="sdl:table" color="Control"><fmt id="1"/></cxt-def><cxt-def id="11" type="div" code="DIV" name="Div" descr="A div section" color=""><fmt id="1"/></cxt-def><cxt-def id="12" type="sdl:body" color="Control"><fmt id="1"/></cxt-def><cxt-def id="13" type="sdl:link" color="Control"><fmt id="1"/></cxt-def><cxt-def id="14" type="LocationDetails" purpose="Location"><props><value key="StartsAt">712</value><value key="EndsAt">762</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="15" type="LocationDetails" purpose="Location"><props><value key="StartsAt">767</value><value key="EndsAt">785</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="16" type="LocationDetails" purpose="Location"><props><value key="StartsAt">836</value><value key="EndsAt">917</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="17" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1084</value><value key="EndsAt">1114</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="18" type="x-tm-heading"><fmt id="1"/></cxt-def><cxt-def id="19" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1125</value><value key="EndsAt">1206</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="20" type="x-tm-listitem"><fmt id="1"/></cxt-def><cxt-def id="21" type="sdl:unordered-list" color="Control"><fmt id="1"/></cxt-def><cxt-def id="22" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1212</value><value key="EndsAt">1301</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="23" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1307</value><value key="EndsAt">1398</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="24" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1404</value><value key="EndsAt">1485</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="25" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1567</value><value key="EndsAt">1598</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="26" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1598</value><value key="EndsAt">1678</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="27" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1678</value><value key="EndsAt">1721</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="28" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1721</value><value key="EndsAt">1789</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="29" type="sdl:paragraph" color="Control"><fmt id="1"/></cxt-def><cxt-def id="30" type="Attribute" code="ATT" name="Attribute" descr="alt attribute"><props><value key="TranslatesAttribute">alt</value><value key="InlineTranslatesAttribute">alt</value></props></cxt-def><cxt-def id="31" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1793</value><value key="EndsAt">2261</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="32" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2266</value><value key="EndsAt">2484</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="33" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2489</value><value key="EndsAt">3317</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="34" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3322</value><value key="EndsAt">3361</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="35" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3371</value><value key="EndsAt">3534</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="36" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3540</value><value key="EndsAt">3636</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="37" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3648</value><value key="EndsAt">3816</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="38" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3821</value><value key="EndsAt">3892</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="39" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3896</value><value key="EndsAt">4279</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="40" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4284</value><value key="EndsAt">4440</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="41" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4440</value><value key="EndsAt">4484</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="42" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4484</value><value key="EndsAt">4540</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="43" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4546</value><value key="EndsAt">4793</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="44" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4798</value><value key="EndsAt">5866</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="45" type="pre" code="PRE" name="Pre" descr="A preformated text section" color=""><fmt id="1"/></cxt-def><cxt-def id="46" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5873</value><value key="EndsAt">6359</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="47" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6364</value><value key="EndsAt">6921</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="48" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6928</value><value key="EndsAt">7266</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="49" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7271</value><value key="EndsAt">7685</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="50" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7685</value><value key="EndsAt">7733</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="51" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7733</value><value key="EndsAt">7797</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="52" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7803</value><value key="EndsAt">7853</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="53" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7858</value><value key="EndsAt">8129</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="54" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8136</value><value key="EndsAt">8282</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="55" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8287</value><value key="EndsAt">9319</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="56" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9326</value><value key="EndsAt">9534</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="57" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9539</value><value key="EndsAt">10093</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="58" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10098</value><value key="EndsAt">12026</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="59" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12033</value><value key="EndsAt">12113</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="60" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12118</value><value key="EndsAt">12391</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="61" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12396</value><value key="EndsAt">13096</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="62" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13103</value><value key="EndsAt">13220</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="63" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13225</value><value key="EndsAt">13599</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="64" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13606</value><value key="EndsAt">13657</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="65" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13657</value><value key="EndsAt">13706</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="66" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13706</value><value key="EndsAt">13772</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="67" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13778</value><value key="EndsAt">13949</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="68" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13954</value><value key="EndsAt">14573</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="69" type="LocationDetails" purpose="Location"><props><value key="StartsAt">14580</value><value key="EndsAt">14836</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="70" type="LocationDetails" purpose="Location"><props><value key="StartsAt">14841</value><value key="EndsAt">18491</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="71" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18498</value><value key="EndsAt">18796</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="72" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18801</value><value key="EndsAt">18862</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="73" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18867</value><value key="EndsAt">21669</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="74" type="LocationDetails" purpose="Location"><props><value key="StartsAt">21676</value><value key="EndsAt">21879</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="75" type="LocationDetails" purpose="Location"><props><value key="StartsAt">21879</value><value key="EndsAt">21923</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="76" type="LocationDetails" purpose="Location"><props><value key="StartsAt">21923</value><value key="EndsAt">21979</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="77" type="LocationDetails" purpose="Location"><props><value key="StartsAt">21985</value><value key="EndsAt">22292</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="78" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22297</value><value key="EndsAt">22499</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="79" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22504</value><value key="EndsAt">22513</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="80" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22523</value><value key="EndsAt">22635</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="81" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22641</value><value key="EndsAt">22733</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="82" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22739</value><value key="EndsAt">22827</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="83" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22833</value><value key="EndsAt">22921</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="84" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22927</value><value key="EndsAt">23017</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="85" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23029</value><value key="EndsAt">23075</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="86" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23154</value><value key="EndsAt">23187</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="87" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23187</value><value key="EndsAt">23725</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def></cxt-defs><node-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><node-def id="1" parent="2"><cxt id="3"/></node-def><node-def id="2"><cxt id="4"/></node-def><node-def id="3" parent="1"><cxt id="3"/></node-def><node-def id="4" parent="3"><cxt id="6"/></node-def><node-def id="5" parent="6"><cxt id="9"/></node-def><node-def id="6" parent="7"><cxt id="10"/></node-def><node-def id="7" parent="8"><cxt id="11"/></node-def><node-def id="8" parent="9"><cxt id="11"/></node-def><node-def id="9" parent="10"><cxt id="11"/></node-def><node-def id="10" parent="11"><cxt id="11"/></node-def><node-def id="11" parent="12"><cxt id="12"/></node-def><node-def id="12" parent="3"><cxt id="13"/></node-def><node-def id="13" parent="5"><cxt id="8"/></node-def><node-def id="14" parent="5"><cxt id="8"/></node-def><node-def id="15" parent="5"><cxt id="8"/></node-def><node-def id="16" parent="17"><cxt id="9"/></node-def><node-def id="17" parent="7"><cxt id="10"/></node-def><node-def id="18" parent="16"><cxt id="8"/></node-def><node-def id="19" parent="20"><cxt id="11"/></node-def><node-def id="20" parent="21"><cxt id="11"/></node-def><node-def id="21" parent="22"><cxt id="11"/></node-def><node-def id="22" parent="23"><cxt id="11"/></node-def><node-def id="23" parent="9"><cxt id="11"/></node-def><node-def id="24" parent="19"><cxt id="18"/></node-def><node-def id="25" parent="19"><cxt id="21"/></node-def><node-def id="26" parent="25"><cxt id="20"/></node-def><node-def id="27" parent="25"><cxt id="20"/></node-def><node-def id="28" parent="25"><cxt id="20"/></node-def><node-def id="29" parent="25"><cxt id="20"/></node-def><node-def id="30" parent="21"><cxt id="18"/></node-def><node-def id="31" parent="21"><cxt id="11"/></node-def><node-def id="32" parent="31"><cxt id="29"/></node-def><node-def id="33" parent="31"><cxt id="29"/></node-def><node-def id="34" parent="31"><cxt id="29"/></node-def><node-def id="35" parent="31"><cxt id="29"/></node-def><node-def id="36" parent="31"><cxt id="29"/></node-def><node-def id="37" parent="31"><cxt id="21"/></node-def><node-def id="38" parent="37"><cxt id="20"/></node-def><node-def id="39" parent="37"><cxt id="20"/></node-def><node-def id="40" parent="31"><cxt id="29"/></node-def><node-def id="41" parent="31"><cxt id="29"/></node-def><node-def id="42" parent="31"><cxt id="29"/></node-def><node-def id="43" parent="31"><cxt id="29"/></node-def><node-def id="44" parent="31"><cxt id="18"/></node-def><node-def id="45" parent="31"><cxt id="29"/></node-def><node-def id="46" parent="31"><cxt id="45"/></node-def><node-def id="47" parent="31"><cxt id="29"/></node-def><node-def id="48" parent="31"><cxt id="45"/></node-def><node-def id="49" parent="31"><cxt id="29"/></node-def><node-def id="50" parent="31"><cxt id="29"/></node-def><node-def id="51" parent="31"><cxt id="18"/></node-def><node-def id="52" parent="31"><cxt id="29"/></node-def><node-def id="53" parent="31"><cxt id="45"/></node-def><node-def id="54" parent="31"><cxt id="29"/></node-def><node-def id="55" parent="31"><cxt id="45"/></node-def><node-def id="56" parent="31"><cxt id="29"/></node-def><node-def id="57" parent="31"><cxt id="29"/></node-def><node-def id="58" parent="31"><cxt id="45"/></node-def><node-def id="59" parent="31"><cxt id="29"/></node-def><node-def id="60" parent="31"><cxt id="29"/></node-def><node-def id="61" parent="31"><cxt id="45"/></node-def><node-def id="62" parent="31"><cxt id="29"/></node-def><node-def id="63" parent="31"><cxt id="45"/></node-def><node-def id="64" parent="31"><cxt id="29"/></node-def><node-def id="65" parent="31"><cxt id="18"/></node-def><node-def id="66" parent="31"><cxt id="29"/></node-def><node-def id="67" parent="31"><cxt id="45"/></node-def><node-def id="68" parent="31"><cxt id="29"/></node-def><node-def id="69" parent="31"><cxt id="45"/></node-def><node-def id="70" parent="31"><cxt id="29"/></node-def><node-def id="71" parent="31"><cxt id="29"/></node-def><node-def id="72" parent="31"><cxt id="45"/></node-def><node-def id="73" parent="31"><cxt id="29"/></node-def><node-def id="74" parent="31"><cxt id="18"/></node-def><node-def id="75" parent="31"><cxt id="29"/></node-def><node-def id="76" parent="31"><cxt id="29"/></node-def><node-def id="77" parent="31"><cxt id="29"/></node-def><node-def id="78" parent="31"><cxt id="21"/></node-def><node-def id="79" parent="78"><cxt id="20"/></node-def><node-def id="80" parent="78"><cxt id="20"/></node-def><node-def id="81" parent="78"><cxt id="20"/></node-def><node-def id="82" parent="78"><cxt id="20"/></node-def><node-def id="83" parent="78"><cxt id="20"/></node-def><node-def id="84" parent="11"><cxt id="11"/></node-def><node-def id="85" parent="84"><cxt id="29"/></node-def></node-defs><tag-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><tag id="4"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdoc/supported-platforms-and-configurations.html#qt-5-7&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="7"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-index.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="10"><bpt name="a" word-end="false">&lt;a name=&quot;toc&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="13"><bpt name="a" word-end="false">&lt;a href=&quot;#window-class-definition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="16"><bpt name="a" word-end="false">&lt;a href=&quot;#window-class-implementation&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="19"><bpt name="a" word-end="false">&lt;a href=&quot;#the-movementtransition-class&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="22"><bpt name="a" word-end="false">&lt;a href=&quot;#the-roguelike-tradition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="25"><bpt name="span" word-end="false">&lt;span class=&quot;subtitle&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="29"><bpt name="a" word-end="false">&lt;a name=&quot;details&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="33"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="36"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="39"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="42"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="45"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="48"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="51"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="54"><bpt name="a" word-end="false">&lt;a href=&quot;qwidget.html#keyPressEvent&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="57"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="60"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="64"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="67"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="70"><bpt name="a" word-end="false">&lt;a name=&quot;window-class-definition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="73"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="76"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="79"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="82"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="85"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="88"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="91"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="94"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="97"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="100"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="103"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="106"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="109"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="112"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="115"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="118"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="121"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="124"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="127"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="130"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="133"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="136"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="139"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="142"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="145"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="148"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="151"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qstate.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="154"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/properties.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="157"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="160"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="163"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="166"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="169"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="172"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="175"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="178"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="181"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="184"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="187"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="190"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="193"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="196"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="199"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="202"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="205"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="208"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="211"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="214"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="217"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="220"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="223"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="226"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="229"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="232"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="235"><bpt name="a" word-end="false">&lt;a name=&quot;window-class-implementation&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="238"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="241"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="244"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="247"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="250"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="253"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="256"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="259"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="262"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="265"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="268"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="271"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="274"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="277"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="280"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="283"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="286"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="289"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="292"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="295"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="298"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="301"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="304"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="307"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="310"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="313"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="316"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="319"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="322"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="325"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="328"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="331"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="334"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="337"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qabstracttransition.html#onTransition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="340"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="343"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="346"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="349"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="352"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="355"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="358"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="361"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="364"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="367"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="370"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="373"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="376"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="379"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="382"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="385"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="388"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="391"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="394"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="397"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="400"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="403"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="406"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="409"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="412"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="415"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="418"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="421"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="424"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="427"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="430"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="433"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="436"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="439"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="442"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="445"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="448"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="451"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="454"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="457"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="460"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="463"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="466"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="469"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="472"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="475"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="478"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="481"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="484"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="487"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="490"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="493"><bpt name="a" word-end="false">&lt;a href=&quot;../qtgui/qkeyevent.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="496"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="499"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="502"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="505"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="508"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="511"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="514"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="517"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="520"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="523"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="526"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="529"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="532"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="535"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="538"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="541"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="544"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="547"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="550"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="553"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="556"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="559"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="562"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="565"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="568"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="571"><bpt name="a" word-end="false">&lt;a name=&quot;the-movementtransition-class&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="574"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="577"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="580"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="583"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="586"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="589"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="592"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="595"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="598"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="601"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="604"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="607"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="610"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="613"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="616"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="619"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qeventtransition.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="622"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qevent.html#Type-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="625"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qabstracttransition.html#eventTest&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="628"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="631"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="634"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="637"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="640"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="643"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="646"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="649"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="652"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="655"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="658"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="661"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="664"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="667"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="670"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="673"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="676"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="679"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="682"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="685"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="688"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="691"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="694"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="697"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="700"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="703"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="706"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="709"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="712"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="715"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="718"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="721"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="724"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="727"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="730"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="733"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="736"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="739"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="742"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="745"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="748"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="751"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="754"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="757"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="760"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="763"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="766"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="769"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="772"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="775"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="778"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="781"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="784"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="787"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="790"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="793"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="796"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="799"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="802"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="805"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="808"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="811"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="814"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="817"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="820"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="823"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="826"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="829"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="832"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="835"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="838"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="841"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="844"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="847"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="850"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="853"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="856"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="859"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="862"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="865"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="868"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="871"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="874"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="877"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="880"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="883"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="886"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="889"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="892"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="895"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="898"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="901"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="904"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="907"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="910"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="913"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="916"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="919"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="922"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qstatemachine-wrappedevent.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="925"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="928"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="931"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="934"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="937"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="940"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="943"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="946"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="949"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="952"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="955"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="958"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="961"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="964"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="967"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="970"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="973"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="976"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="979"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="982"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="985"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="988"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="991"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="994"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="997"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1000"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1003"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1006"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1009"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1012"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1015"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1018"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1021"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1024"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1027"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1030"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1033"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1036"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1039"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1042"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1045"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1048"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1051"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1054"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1057"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1060"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1063"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1066"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1069"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1072"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1075"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1078"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1081"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1084"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1087"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1090"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1093"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1096"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1099"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1102"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1105"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1108"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1111"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1114"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1117"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1120"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1123"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1126"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1129"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qevent.html#Type-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1132"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1135"><bpt name="a" word-end="false">&lt;a name=&quot;the-roguelike-tradition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1138"><bpt name="a" word-end="false">&lt;a href=&quot;http://rephial.org/&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1141"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-statemachine-rogue-movementtransition-h.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1144"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-statemachine-rogue-window-cpp.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1147"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-statemachine-rogue-window-h.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1150"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-statemachine-rogue-main-cpp.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1153"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-statemachine-rogue-rogue-pro.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1159"><bpt name="a" word-end="false">&lt;a href=&quot;http://www.gnu.org/licenses/fdl.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="0"><ph name="xml" word-end="false">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</ph><props><value key="ProcessingInstructionTag">xml</value></props></tag><tag id="1"><ph name="Comment" word-end="false">&lt;!-- rogue.qdoc --&gt;</ph></tag><tag id="26"><ph name="Comment" word-end="false">&lt;!-- $$$statemachine/rogue-description --&gt;</ph></tag><tag id="30"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/rogue-example.png&quot; alt=&quot;<sub xid="a1ad0922-b0e6-4c55-9bbc-d336d0e4ebe5"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="61"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/rogue-statechart.png&quot; alt=&quot;<sub xid="e36c6697-67d1-4132-8704-c3797f3270d4"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="1154"><ph name="Comment" word-end="false">&lt;!-- @@@statemachine/rogue --&gt;</ph></tag><tag id="1155"><ph name="copy" word-end="false" seg-hint="IncludeWithText">&amp;copy;</ph><props><value key="PlaceholderForMappedEntity">true</value></props></tag><tag id="1156"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="1160"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag></tag-defs></header><body><group><sdl:cxts><sdl:cxt id="1"/></sdl:cxts><trans-unit id="a16779a0-c068-4529-9f0f-c00e7df79264"><source><x id="0"/>
</source><seg-source><x id="0"/>
</seg-source><target><x id="0"/>
</target></trans-unit></group><group><sdl:cxts><sdl:cxt id="2"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="3"/></sdl:cxts><trans-unit id="4f951322-df30-44d3-818d-5f1d784ddf9c"><source><x id="1"/></source><seg-source><x id="1"/></seg-source><target><x id="1"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="5"/><sdl:cxt id="6"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="4"/></sdl:cxts><trans-unit id="930814b9-7f67-4d94-9b09-4bff3c6f8848"><source>Rogue Example | Qt Widgets 5.7</source><seg-source><mrk mtype="seg" mid="1">Rogue Example | Qt Widgets 5.7</mrk></seg-source><target><mrk mtype="seg" mid="1"/></target><sdl:seg-defs><sdl:seg id="1"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="13"/></sdl:cxts><trans-unit id="228e9f59-20f6-4402-b180-9d792d66a37a"><source><g id="4">Qt 5.7</g></source><seg-source><g id="4"><mrk mtype="seg" mid="2">Qt 5.7</mrk></g></seg-source><target><g id="4"><mrk mtype="seg" mid="2">Qt 5.7</mrk></g></target><sdl:seg-defs><sdl:seg id="2" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/19/2019 12:14:40</sdl:value><sdl:value key="modified_on">03/19/2019 12:14:40</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">-1724339963</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="14"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="14"/></sdl:cxts><trans-unit id="5bc2c133-4db7-4042-9221-75b4c96aec15"><source><g id="7">Qt Widgets</g></source><seg-source><g id="7"><mrk mtype="seg" mid="3">Qt Widgets</mrk></g></seg-source><target><g id="7"><mrk mtype="seg" mid="3"/></g></target><sdl:seg-defs><sdl:seg id="3"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="15"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="15"/></sdl:cxts><trans-unit id="86683d42-8a74-4b9b-a7d6-ff09dee7770e"><source>Rogue Example</source><seg-source><mrk mtype="seg" mid="4">Rogue Example</mrk></seg-source><target><mrk mtype="seg" mid="4"/></target><sdl:seg-defs><sdl:seg id="4"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="16"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="18"/></sdl:cxts><trans-unit id="6ae59103-f3b6-4af5-817e-b144f50fe016"><source>Qt 5.7.1 Reference Documentation</source><seg-source><mrk mtype="seg" mid="5">Qt 5.7.1 Reference Documentation</mrk></seg-source><target><mrk mtype="seg" mid="5"/></target><sdl:seg-defs><sdl:seg id="5"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="17"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="24"/></sdl:cxts><trans-unit id="8bb7cd66-7402-45ec-b637-77bcabf5b563"><source><g id="10">Contents</g></source><seg-source><g id="10"><mrk mtype="seg" mid="6">Contents</mrk></g></seg-source><target><g id="10"><mrk mtype="seg" mid="6">Содержание</mrk></g></target><sdl:seg-defs><sdl:seg id="6" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">TRAPP</sdl:value><sdl:value key="created_on">03/15/2019 00:04:32</sdl:value><sdl:value key="modified_on">03/15/2019 00:04:32</sdl:value><sdl:value key="last_modified_by">TRAPP</sdl:value><sdl:value key="SDL:OriginalTranslationHash">-1819472995</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="19"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="26"/></sdl:cxts><trans-unit id="7b3b57be-187c-4835-94bb-7a3be5bfdf52"><source><g id="13">Window Class Definition</g></source><seg-source><g id="13"><mrk mtype="seg" mid="7">Window Class Definition</mrk></g></seg-source><target><g id="13"><mrk mtype="seg" mid="7"/></g></target><sdl:seg-defs><sdl:seg id="7"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="22"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="27"/></sdl:cxts><trans-unit id="863d6283-5296-4190-9dc3-9a9ed08fed0b"><source><g id="16">Window Class Implementation</g></source><seg-source><g id="16"><mrk mtype="seg" mid="8">Window Class Implementation</mrk></g></seg-source><target><g id="16"><mrk mtype="seg" mid="8"/></g></target><sdl:seg-defs><sdl:seg id="8"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="23"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="28"/></sdl:cxts><trans-unit id="0b737c48-7b6a-4185-8b18-7dce8eb9fc1d"><source><g id="19">The MovementTransition Class</g></source><seg-source><g id="19"><mrk mtype="seg" mid="9">The MovementTransition Class</mrk></g></seg-source><target><g id="19"><mrk mtype="seg" mid="9"/></g></target><sdl:seg-defs><sdl:seg id="9"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="24"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="29"/></sdl:cxts><trans-unit id="d9069416-b6c4-414f-bb6b-ca05a942ad45"><source><g id="22">The Roguelike Tradition</g></source><seg-source><g id="22"><mrk mtype="seg" mid="10">The Roguelike Tradition</mrk></g></seg-source><target><g id="22"><mrk mtype="seg" mid="10"/></g></target><sdl:seg-defs><sdl:seg id="10"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="25"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="30"/></sdl:cxts><trans-unit id="6ca43608-8ee6-4bbf-88c5-f74b765a470c"><source>Rogue Example</source><seg-source><mrk mtype="seg" mid="11">Rogue Example</mrk></seg-source><target><mrk mtype="seg" mid="11"/></target><sdl:seg-defs><sdl:seg id="11"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="26"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="21"/></sdl:cxts><trans-unit id="742cc32e-33fe-492c-a001-8991a3a923f1"><source><g id="25"/> <x id="26"/></source><seg-source><g id="25"/> <x id="26"/></seg-source><target><g id="25"/> <x id="26"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="8b671f8e-7493-46c4-9cdb-a3b06e26dff4"><source><g id="29"/></source><seg-source><g id="29"/></seg-source><target><g id="29"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="28"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="32"/></sdl:cxts><trans-unit id="a643e109-00f8-4f59-8501-043487251854"><source><x id="30" xid="a1ad0922-b0e6-4c55-9bbc-d336d0e4ebe5"/></source><seg-source><x id="30" xid="a1ad0922-b0e6-4c55-9bbc-d336d0e4ebe5"/></seg-source><target><x id="30" xid="a1ad0922-b0e6-4c55-9bbc-d336d0e4ebe5"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="30"/></sdl:cxts><trans-unit id="a1ad0922-b0e6-4c55-9bbc-d336d0e4ebe5"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="31"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="33"/></sdl:cxts><trans-unit id="lockTU_1318caf0-713c-4d40-80e7-90f984dda08a" translate="no" sdl:locktype="Structure"><source><g id="33">@</g></source></trans-unit><trans-unit id="lockTU_ab171e51-e3f0-49d9-bb65-8b94c55edbd4" translate="no" sdl:locktype="Structure"><source><g id="36">#</g></source></trans-unit><trans-unit id="lockTU_9c3de1d2-216f-4fc0-a95a-80a6821650fb" translate="no" sdl:locktype="Structure"><source><g id="39">D</g></source></trans-unit><trans-unit id="lockTU_18273b98-4369-46e9-b03c-dabdc4e8a0ae" translate="no" sdl:locktype="Structure"><source><g id="42">%</g></source></trans-unit><trans-unit id="lockTU_8225e1bc-d276-4d2a-9943-b3be8ec28144" translate="no" sdl:locktype="Structure"><source><g id="33">@</g></source></trans-unit><trans-unit id="lockTU_494ffcc9-b913-4c6b-bcac-cb70024e10c4" translate="no" sdl:locktype="Structure"><source><g id="36">#</g></source></trans-unit><trans-unit id="lockTU_33e4661e-5883-424c-841e-af222eb5704c" translate="no" sdl:locktype="Structure"><source><g id="39">D</g></source></trans-unit><trans-unit id="lockTU_77166619-6c04-4fdf-9d77-a81b998175a7" translate="no" sdl:locktype="Structure"><source><g id="42">%</g></source></trans-unit><trans-unit id="c860d87e-7475-4d98-b6f7-c228da51e592"><source>This example implements a simple text based game. Do you see the <x id="locked1" xid="lockTU_8225e1bc-d276-4d2a-9943-b3be8ec28144"/> in the screenshot? That&apos;s you, the rogue. The <x id="locked2" xid="lockTU_494ffcc9-b913-4c6b-bcac-cb70024e10c4"/> characters are walls, and the dots represent floor. In a real game, other ASCII characters would represent all kinds of objects and creatures, for instance, ancient dragons (<x id="locked3" xid="lockTU_33e4661e-5883-424c-841e-af222eb5704c"/>s) or food rations (<x id="locked4" xid="lockTU_77166619-6c04-4fdf-9d77-a81b998175a7"/>s). But let&apos;s not get carried away. In this game, the rogue is simply running around in an empty room.</source><seg-source><mrk mtype="seg" mid="12">This example implements a simple text based game.</mrk> <mrk mtype="seg" mid="13">Do you see the <x id="locked5" xid="lockTU_1318caf0-713c-4d40-80e7-90f984dda08a"/> in the screenshot?</mrk> <mrk mtype="seg" mid="14">That&apos;s you, the rogue.</mrk> <mrk mtype="seg" mid="15">The <x id="locked6" xid="lockTU_ab171e51-e3f0-49d9-bb65-8b94c55edbd4"/> characters are walls, and the dots represent floor.</mrk> <mrk mtype="seg" mid="16">In a real game, other ASCII characters would represent all kinds of objects and creatures, for instance, ancient dragons (<x id="locked7" xid="lockTU_9c3de1d2-216f-4fc0-a95a-80a6821650fb"/>s) or food rations (<x id="locked8" xid="lockTU_18273b98-4369-46e9-b03c-dabdc4e8a0ae"/>s).</mrk> <mrk mtype="seg" mid="17">But let&apos;s not get carried away.</mrk> <mrk mtype="seg" mid="18">In this game, the rogue is simply running around in an empty room.</mrk></seg-source><target><mrk mtype="seg" mid="12"/> <mrk mtype="seg" mid="13"/> <mrk mtype="seg" mid="14"/> <mrk mtype="seg" mid="15"/> <mrk mtype="seg" mid="16"/> <mrk mtype="seg" mid="17"/> <mrk mtype="seg" mid="18"/></target><sdl:seg-defs><sdl:seg id="12"/><sdl:seg id="13"/><sdl:seg id="14"/><sdl:seg id="15"/><sdl:seg id="16"/><sdl:seg id="17"/><sdl:seg id="18"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="32"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="34"/></sdl:cxts><trans-unit id="lockTU_850527f8-c20f-489c-8ab5-8df92cbe4144" translate="no" sdl:locktype="Structure"><source><g id="45">quit</g></source></trans-unit><trans-unit id="lockTU_f9b321a6-2986-43f2-8d0d-2fa8fa0803e8" translate="no" sdl:locktype="Structure"><source><g id="48">q</g></source></trans-unit><trans-unit id="lockTU_4e57d89b-bdb5-4169-8d97-b8cb923ab46c" translate="no" sdl:locktype="Structure"><source><g id="45">quit</g></source></trans-unit><trans-unit id="lockTU_1296a77b-cc95-4034-9c96-ad9ef8c2b270" translate="no" sdl:locktype="Structure"><source><g id="48">q</g></source></trans-unit><trans-unit id="4c6c8e98-06d4-4f46-83bc-d07b4ab23c01"><source>The rogue is moved with the keypad (2, 4, 8, 6). That aside, we have implemented a <x id="locked9" xid="lockTU_4e57d89b-bdb5-4169-8d97-b8cb923ab46c"/> command that triggers if the player types <x id="locked10" xid="lockTU_1296a77b-cc95-4034-9c96-ad9ef8c2b270"/>. The player is then asked if he/she really wants to quit.</source><seg-source><mrk mtype="seg" mid="19">The rogue is moved with the keypad (2, 4, 8, 6).</mrk> <mrk mtype="seg" mid="20">That aside, we have implemented a <x id="locked11" xid="lockTU_850527f8-c20f-489c-8ab5-8df92cbe4144"/> command that triggers if the player types <x id="locked12" xid="lockTU_f9b321a6-2986-43f2-8d0d-2fa8fa0803e8"/>.</mrk> <mrk mtype="seg" mid="21">The player is then asked if he/she really wants to quit.</mrk></seg-source><target><mrk mtype="seg" mid="19"/> <mrk mtype="seg" mid="20"/> <mrk mtype="seg" mid="21"/></target><sdl:seg-defs><sdl:seg id="19"/><sdl:seg id="20"/><sdl:seg id="21"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="33"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="35"/></sdl:cxts><trans-unit id="lockTU_d12d7f82-8065-4438-adcd-591ca92a176f" translate="no" sdl:locktype="Structure"><source><g id="51">quit</g></source></trans-unit><trans-unit id="lockTU_d0588718-666f-421d-8d53-b6ac14390c42" translate="no" sdl:locktype="Structure"><source><g id="51">quit</g></source></trans-unit><trans-unit id="e834e5cc-bbb1-4fd6-91e9-fbe1408345d3"><source>Most games have commands that need more than one key press (we think of consecutive presses, i.e., not of several keys being pressed at the same time). In this game, only the <x id="locked13" xid="lockTU_d0588718-666f-421d-8d53-b6ac14390c42"/> command falls under this category, but for the sake of argument, let&apos;s imagine a fully-fledged game with a rich set of commands. If we were to implement these by catching key events in <g id="54">keyPressEvent()</g>, we would have to keep a lot of class member variables to track the sequence of keys already typed (or find some other way of deducing the current state of a command). This can easily lead to spaghetti, which is--as we all well know, I&apos;m sure--unpleasant. With a state machine, on the other hand, separate states can wait for a single key press, and that makes our lives a lot simpler.</source><seg-source><mrk mtype="seg" mid="22">Most games have commands that need more than one key press (we think of consecutive presses, i.e., not of several keys being pressed at the same time).</mrk> <mrk mtype="seg" mid="23">In this game, only the <x id="locked14" xid="lockTU_d12d7f82-8065-4438-adcd-591ca92a176f"/> command falls under this category, but for the sake of argument, let&apos;s imagine a fully-fledged game with a rich set of commands.</mrk> <mrk mtype="seg" mid="24">If we were to implement these by catching key events in <g id="54">keyPressEvent()</g>, we would have to keep a lot of class member variables to track the sequence of keys already typed (or find some other way of deducing the current state of a command).</mrk> <mrk mtype="seg" mid="25">This can easily lead to spaghetti, which is--as we all well know, I&apos;m sure--unpleasant.</mrk> <mrk mtype="seg" mid="26">With a state machine, on the other hand, separate states can wait for a single key press, and that makes our lives a lot simpler.</mrk></seg-source><target><mrk mtype="seg" mid="22"/> <mrk mtype="seg" mid="23"/> <mrk mtype="seg" mid="24"/> <mrk mtype="seg" mid="25"/> <mrk mtype="seg" mid="26"/></target><sdl:seg-defs><sdl:seg id="22"/><sdl:seg id="23"/><sdl:seg id="24"/><sdl:seg id="25"/><sdl:seg id="26"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="34"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="a6d38045-91aa-44ec-b5e2-fb772b25695a"><source>The example consists of two classes:</source><seg-source><mrk mtype="seg" mid="27">The example consists of two classes:</mrk></seg-source><target><mrk mtype="seg" mid="27"/></target><sdl:seg-defs><sdl:seg id="27"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="35"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="38"/></sdl:cxts><trans-unit id="lockTU_6f706e7e-5d6c-4255-a412-575e7c82f4ed" translate="no" sdl:locktype="Structure"><source><g id="57">Window</g></source></trans-unit><trans-unit id="lockTU_6477d222-c33a-4c3f-98a1-17a197ee1ff8" translate="no" sdl:locktype="Structure"><source><g id="57">Window</g></source></trans-unit><trans-unit id="lockTU_f8d44af4-77bb-496c-8992-4f08a9a183f0" translate="no" sdl:locktype="Structure"><source><g id="57">Window</g></source></trans-unit><trans-unit id="c02093d5-63aa-4311-abbf-bfe3bd393a5b"><source><x id="locked15" xid="lockTU_f8d44af4-77bb-496c-8992-4f08a9a183f0"/> draws the text display of the game and sets up the state machine. The window also has a status bar above the area in which the rouge moves.</source><seg-source><x id="locked16" xid="lockTU_6477d222-c33a-4c3f-98a1-17a197ee1ff8"/> <mrk mtype="seg" mid="28">draws the text display of the game and sets up the state machine.</mrk> <mrk mtype="seg" mid="29">The window also has a status bar above the area in which the rouge moves.</mrk></seg-source><target><x id="locked17" xid="lockTU_6f706e7e-5d6c-4255-a412-575e7c82f4ed"/> <mrk mtype="seg" mid="28"/> <mrk mtype="seg" mid="29"/></target><sdl:seg-defs><sdl:seg id="28"/><sdl:seg id="29"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="36"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="39"/></sdl:cxts><trans-unit id="lockTU_614a2f83-6288-4ce0-846a-7b9ba8e6c9c9" translate="no" sdl:locktype="Structure"><source><g id="60">MovementTransition</g></source></trans-unit><trans-unit id="lockTU_832e7d50-d16f-4d88-ab57-77afaa5389a5" translate="no" sdl:locktype="Structure"><source><g id="60">MovementTransition</g></source></trans-unit><trans-unit id="lockTU_d02286a4-e9d7-47f8-8878-c8278df1edfe" translate="no" sdl:locktype="Structure"><source><g id="60">MovementTransition</g></source></trans-unit><trans-unit id="3553cc09-eaf9-481a-8ccc-758d15b271bf"><source><x id="locked18" xid="lockTU_d02286a4-e9d7-47f8-8878-c8278df1edfe"/> is a transition that carries out a single move of the rogue.</source><seg-source><x id="locked19" xid="lockTU_832e7d50-d16f-4d88-ab57-77afaa5389a5"/> <mrk mtype="seg" mid="30">is a transition that carries out a single move of the rogue.</mrk></seg-source><target><x id="locked20" xid="lockTU_614a2f83-6288-4ce0-846a-7b9ba8e6c9c9"/> <mrk mtype="seg" mid="30"/></target><sdl:seg-defs><sdl:seg id="30"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="37"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="40"/></sdl:cxts><trans-unit id="c3be3f04-40cc-4e6b-b654-5c824489617a"><source>Before we embark on a code walkthrough, it is necessary to take a closer look at the design of the machine. Here is a state chart that shows what we want to achieve:</source><seg-source><mrk mtype="seg" mid="31">Before we embark on a code walkthrough, it is necessary to take a closer look at the design of the machine.</mrk> <mrk mtype="seg" mid="32">Here is a state chart that shows what we want to achieve:</mrk></seg-source><target><mrk mtype="seg" mid="31"/> <mrk mtype="seg" mid="32"/></target><sdl:seg-defs><sdl:seg id="31"/><sdl:seg id="32"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="38"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="41"/></sdl:cxts><trans-unit id="5dfee06d-859c-4c43-b666-d51190b0c7dc"><source><x id="61" xid="e36c6697-67d1-4132-8704-c3797f3270d4"/></source><seg-source><x id="61" xid="e36c6697-67d1-4132-8704-c3797f3270d4"/></seg-source><target><x id="61" xid="e36c6697-67d1-4132-8704-c3797f3270d4"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="30"/></sdl:cxts><trans-unit id="e36c6697-67d1-4132-8704-c3797f3270d4"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="39"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="42"/></sdl:cxts><trans-unit id="lockTU_723e1fb3-f0c8-4a8d-afcb-8cea1210252b" translate="no" sdl:locktype="Structure"><source><g id="64">y</g></source></trans-unit><trans-unit id="lockTU_f12390d8-a6a7-46a6-aa25-5a52e0e91867" translate="no" sdl:locktype="Structure"><source><g id="67">n</g></source></trans-unit><trans-unit id="lockTU_053d4403-e57f-4504-aa33-480945c93d6a" translate="no" sdl:locktype="Structure"><source><g id="64">y</g></source></trans-unit><trans-unit id="lockTU_b5f96606-3038-407c-8f7c-66dffe7f4136" translate="no" sdl:locktype="Structure"><source><g id="67">n</g></source></trans-unit><trans-unit id="a762d031-447d-47c5-afea-847b1957ccd8"><source>The input state waits for a key press to start a new command. When receiving a key it recognizes, it transitions to one of the two commands of the game; though, as we will see, movement is handled by the transition itself. The quit state waits for the player to answer yes or no (by typing <x id="locked21" xid="lockTU_053d4403-e57f-4504-aa33-480945c93d6a"/> or <x id="locked22" xid="lockTU_b5f96606-3038-407c-8f7c-66dffe7f4136"/>) when asked whether he/she really wants to quit the game.</source><seg-source><mrk mtype="seg" mid="33">The input state waits for a key press to start a new command.</mrk> <mrk mtype="seg" mid="34">When receiving a key it recognizes, it transitions to one of the two commands of the game; though, as we will see, movement is handled by the transition itself.</mrk> <mrk mtype="seg" mid="35">The quit state waits for the player to answer yes or no (by typing <x id="locked23" xid="lockTU_723e1fb3-f0c8-4a8d-afcb-8cea1210252b"/> or <x id="locked24" xid="lockTU_f12390d8-a6a7-46a6-aa25-5a52e0e91867"/>) when asked whether he/she really wants to quit the game.</mrk></seg-source><target><mrk mtype="seg" mid="33"/> <mrk mtype="seg" mid="34"/> <mrk mtype="seg" mid="35"/></target><sdl:seg-defs><sdl:seg id="33"/><sdl:seg id="34"/><sdl:seg id="35"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="40"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="b998a381-1b20-4c99-9f43-98fb14e71f5d"><source>The chart demonstrates how we use one state to wait for a single key press. The press received may trigger one of the transitions connected to the state.</source><seg-source><mrk mtype="seg" mid="36">The chart demonstrates how we use one state to wait for a single key press.</mrk> <mrk mtype="seg" mid="37">The press received may trigger one of the transitions connected to the state.</mrk></seg-source><target><mrk mtype="seg" mid="36"/> <mrk mtype="seg" mid="37"/></target><sdl:seg-defs><sdl:seg id="36"/><sdl:seg id="37"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="6c445820-6942-4918-8654-fc3c1d51ecff"><source><g id="70"/></source><seg-source><g id="70"/></seg-source><target><g id="70"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="42"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="44"/></sdl:cxts><trans-unit id="56502630-5b89-4137-ad7d-d4b9e78bf1e5"><source>Window Class Definition</source><seg-source><mrk mtype="seg" mid="38">Window Class Definition</mrk></seg-source><target><mrk mtype="seg" mid="38"/></target><sdl:seg-defs><sdl:seg id="38"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="43"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="45"/></sdl:cxts><trans-unit id="lockTU_034f527f-d6b1-4d9b-a665-4364bbad059b" translate="no" sdl:locktype="Structure"><source><g id="73">Window</g></source></trans-unit><trans-unit id="lockTU_02d625e3-4f98-4607-be2b-c61f32913172" translate="no" sdl:locktype="Structure"><source><g id="73">Window</g></source></trans-unit><trans-unit id="e330bf68-8ca4-4ac9-8711-e396d7f61bed"><source>The <x id="locked25" xid="lockTU_02d625e3-4f98-4607-be2b-c61f32913172"/> class is a widget that draws the text display of the game. It also sets up the state machine, i.e., creates and connects the states in the machine. It is the key events from this widget that are used by the machine.</source><seg-source><mrk mtype="seg" mid="39">The <x id="locked26" xid="lockTU_034f527f-d6b1-4d9b-a665-4364bbad059b"/> class is a widget that draws the text display of the game.</mrk> <mrk mtype="seg" mid="40">It also sets up the state machine, i.e., creates and connects the states in the machine.</mrk> <mrk mtype="seg" mid="41">It is the key events from this widget that are used by the machine.</mrk></seg-source><target><mrk mtype="seg" mid="39"/> <mrk mtype="seg" mid="40"/> <mrk mtype="seg" mid="41"/></target><sdl:seg-defs><sdl:seg id="39"/><sdl:seg id="40"/><sdl:seg id="41"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="44"/><sdl:cxt id="45"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="46"/></sdl:cxts><trans-unit id="fbc244e8-21c1-425e-aebb-0aa7cdf8c21b"><source><g id="76">class</g> Window : <g id="79">public</g> <g id="82">QWidget</g> { Q_OBJECT Q_PROPERTY(<g id="85">QString</g> status READ status WRITE setStatus) <g id="88">public</g>: <g id="91">enum</g> Direction { Up<g id="94">,</g> Down<g id="97">,</g> Left<g id="100">,</g> Right }; Window(); <g id="103">void</g> movePlayer(Direction direction); <g id="106">void</g> setStatus(<g id="109">const</g> <g id="112">QString</g> <g id="115">&amp;</g>status); <g id="118">QString</g> status() <g id="121">const</g>; <g id="124">QSize</g> sizeHint() <g id="127">const</g> Q_DECL_OVERRIDE; <g id="130">protected</g>: <g id="133">void</g> paintEvent(<g id="136">QPaintEvent</g> <g id="139">*</g>event) Q_DECL_OVERRIDE;</source><seg-source><mrk mtype="seg" mid="42"><g id="76">class</g> Window : <g id="79">public</g> <g id="82">QWidget</g> { Q_OBJECT Q_PROPERTY(<g id="85">QString</g> status READ status WRITE setStatus) <g id="88">public</g>:</mrk> <mrk mtype="seg" mid="43"><g id="91">enum</g> Direction { Up<g id="94">,</g> Down<g id="97">,</g> Left<g id="100">,</g> Right }; Window(); <g id="103">void</g> movePlayer(Direction direction); <g id="106">void</g> setStatus(<g id="109">const</g> <g id="112">QString</g> <g id="115">&amp;</g>status); <g id="118">QString</g> status() <g id="121">const</g>; <g id="124">QSize</g> sizeHint() <g id="127">const</g> Q_DECL_OVERRIDE; <g id="130">protected</g>:</mrk> <mrk mtype="seg" mid="44"><g id="133">void</g> paintEvent(<g id="136">QPaintEvent</g> <g id="139">*</g>event) Q_DECL_OVERRIDE;</mrk></seg-source><target><mrk mtype="seg" mid="42"/> <mrk mtype="seg" mid="43"/> <mrk mtype="seg" mid="44"/></target><sdl:seg-defs><sdl:seg id="42"/><sdl:seg id="43"/><sdl:seg id="44"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="46"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="47"/></sdl:cxts><trans-unit id="lockTU_13db2108-4c7b-4ac9-86ec-533f6dc2cd79" translate="no" sdl:locktype="Structure"><source><g id="142">Direction</g></source></trans-unit><trans-unit id="lockTU_96609165-79a0-46d8-9216-3c8371ca83ea" translate="no" sdl:locktype="Structure"><source><g id="142">Direction</g></source></trans-unit><trans-unit id="lockTU_db6e5d37-e03d-4689-a88b-e5065810cc82" translate="no" sdl:locktype="Structure"><source><g id="145">movePlayer()</g></source></trans-unit><trans-unit id="lockTU_afffe7ae-999a-49ba-97b7-4c67a163d8b2" translate="no" sdl:locktype="Structure"><source><g id="148">status</g></source></trans-unit><trans-unit id="lockTU_6557a8f8-380a-4665-9280-54bdfc2ed6aa" translate="no" sdl:locktype="Structure"><source><g id="142">Direction</g></source></trans-unit><trans-unit id="lockTU_c101b080-3da4-4d82-b7ea-11ebd0d18ca0" translate="no" sdl:locktype="Structure"><source><g id="145">movePlayer()</g></source></trans-unit><trans-unit id="lockTU_ee634b77-fe10-41e2-98bd-b4390dfd8e45" translate="no" sdl:locktype="Structure"><source><g id="148">status</g></source></trans-unit><trans-unit id="f063012e-b66e-4072-b4f0-e23a24f17e11"><source><x id="locked27" xid="lockTU_6557a8f8-380a-4665-9280-54bdfc2ed6aa"/> specifies the direction in which the rogue is to move. We use this in <x id="locked28" xid="lockTU_c101b080-3da4-4d82-b7ea-11ebd0d18ca0"/>, which moves the rogue and repaints the window. The game has a status line above the area in which the rogue moves. The <x id="locked29" xid="lockTU_ee634b77-fe10-41e2-98bd-b4390dfd8e45"/> property contains the text of this line. We use a property because the <g id="151">QState</g> class allows setting any Qt <g id="154">property</g> when entered. More on this later.</source><seg-source><x id="locked30" xid="lockTU_96609165-79a0-46d8-9216-3c8371ca83ea"/> <mrk mtype="seg" mid="45">specifies the direction in which the rogue is to move.</mrk> <mrk mtype="seg" mid="46">We use this in <x id="locked31" xid="lockTU_db6e5d37-e03d-4689-a88b-e5065810cc82"/>, which moves the rogue and repaints the window.</mrk> <mrk mtype="seg" mid="47">The game has a status line above the area in which the rogue moves.</mrk> <mrk mtype="seg" mid="48">The <x id="locked32" xid="lockTU_afffe7ae-999a-49ba-97b7-4c67a163d8b2"/> property contains the text of this line.</mrk> <mrk mtype="seg" mid="49">We use a property because the <g id="151">QState</g> class allows setting any Qt <g id="154">property</g> when entered.</mrk> <mrk mtype="seg" mid="50">More on this later.</mrk></seg-source><target><x id="locked33" xid="lockTU_13db2108-4c7b-4ac9-86ec-533f6dc2cd79"/> <mrk mtype="seg" mid="45"/> <mrk mtype="seg" mid="46"/> <mrk mtype="seg" mid="47"/> <mrk mtype="seg" mid="48"/> <mrk mtype="seg" mid="49"/> <mrk mtype="seg" mid="50"/></target><sdl:seg-defs><sdl:seg id="45"/><sdl:seg id="46"/><sdl:seg id="47"/><sdl:seg id="48"/><sdl:seg id="49"/><sdl:seg id="50"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="47"/><sdl:cxt id="45"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="48"/></sdl:cxts><trans-unit id="4ebd970b-8030-4315-b369-6e809dc6ac0a"><source><g id="157">private</g>: <g id="160">void</g> buildMachine(); <g id="163">void</g> setupMap(); <g id="166">QChar</g> map<g id="169">[</g>WIDTH<g id="172">]</g><g id="175">[</g>HEIGHT<g id="178">]</g>; <g id="181">int</g> pX<g id="184">,</g> pY; <g id="187">QStateMachine</g> <g id="190">*</g>machine; <g id="193">QString</g> myStatus; };</source><seg-source><mrk mtype="seg" mid="51"><g id="157">private</g>:</mrk> <mrk mtype="seg" mid="52"><g id="160">void</g> buildMachine(); <g id="163">void</g> setupMap(); <g id="166">QChar</g> map<g id="169">[</g>WIDTH<g id="172">]</g><g id="175">[</g>HEIGHT<g id="178">]</g>; <g id="181">int</g> pX<g id="184">,</g> pY; <g id="187">QStateMachine</g> <g id="190">*</g>machine; <g id="193">QString</g> myStatus; };</mrk></seg-source><target><mrk mtype="seg" mid="51"/> <mrk mtype="seg" mid="52"/></target><sdl:seg-defs><sdl:seg id="51"/><sdl:seg id="52"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="48"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="49"/></sdl:cxts><trans-unit id="lockTU_2e5580a0-ecaf-4698-a4df-d7ef955533a5" translate="no" sdl:locktype="Structure"><source><g id="196">map</g></source></trans-unit><trans-unit id="lockTU_d78eb8b0-dddd-4e1e-bdd5-de845035274c" translate="no" sdl:locktype="Structure"><source><g id="199">setupMap()</g></source></trans-unit><trans-unit id="lockTU_ebb37567-17ae-44d2-88b5-631a40f4f9de" translate="no" sdl:locktype="Structure"><source><g id="202">pX</g></source></trans-unit><trans-unit id="lockTU_23a75521-55df-45b3-af30-b7e2a329f024" translate="no" sdl:locktype="Structure"><source><g id="205">pY</g></source></trans-unit><trans-unit id="lockTU_a66580f6-0aae-49e4-bb41-fc5604ebb454" translate="no" sdl:locktype="Structure"><source><g id="208">WIDTH</g></source></trans-unit><trans-unit id="lockTU_ac670ef8-56eb-44e5-a509-c5e4e6e7c80e" translate="no" sdl:locktype="Structure"><source><g id="211">HEIGHT</g></source></trans-unit><trans-unit id="lockTU_9beecaf6-12a2-4861-aa70-f0a2adf275df" translate="no" sdl:locktype="Structure"><source><g id="196">map</g></source></trans-unit><trans-unit id="lockTU_109b3665-8862-4e52-ac4e-6c06e365b32e" translate="no" sdl:locktype="Structure"><source><g id="199">setupMap()</g></source></trans-unit><trans-unit id="lockTU_a3535753-8109-4aa1-a72e-352fcd1b9123" translate="no" sdl:locktype="Structure"><source><g id="202">pX</g></source></trans-unit><trans-unit id="lockTU_6ad5118f-3ad6-4f1c-9032-964a58f2c1cf" translate="no" sdl:locktype="Structure"><source><g id="205">pY</g></source></trans-unit><trans-unit id="lockTU_53201da0-76f5-44ec-9e95-198714b280ba" translate="no" sdl:locktype="Structure"><source><g id="208">WIDTH</g></source></trans-unit><trans-unit id="lockTU_c857ad49-aac4-4340-9c38-1ac7f102cc68" translate="no" sdl:locktype="Structure"><source><g id="211">HEIGHT</g></source></trans-unit><trans-unit id="f6f74d67-fea0-4f72-b9bd-44c32535e684"><source>The <x id="locked34" xid="lockTU_9beecaf6-12a2-4861-aa70-f0a2adf275df"/> is an array with the characters that are currently displayed. We set up the array in <x id="locked35" xid="lockTU_109b3665-8862-4e52-ac4e-6c06e365b32e"/>, and update it when the rogue is moved. <x id="locked36" xid="lockTU_a3535753-8109-4aa1-a72e-352fcd1b9123"/> and <x id="locked37" xid="lockTU_6ad5118f-3ad6-4f1c-9032-964a58f2c1cf"/> is the current position of the rogue. <x id="locked38" xid="lockTU_53201da0-76f5-44ec-9e95-198714b280ba"/> and <x id="locked39" xid="lockTU_c857ad49-aac4-4340-9c38-1ac7f102cc68"/> are macros specifying the dimensions of the map.</source><seg-source><mrk mtype="seg" mid="53">The <x id="locked40" xid="lockTU_2e5580a0-ecaf-4698-a4df-d7ef955533a5"/> is an array with the characters that are currently displayed.</mrk> <mrk mtype="seg" mid="54">We set up the array in <x id="locked41" xid="lockTU_d78eb8b0-dddd-4e1e-bdd5-de845035274c"/>, and update it when the rogue is moved.</mrk> <mrk mtype="seg" mid="55"><x id="locked42" xid="lockTU_ebb37567-17ae-44d2-88b5-631a40f4f9de"/> and <x id="locked43" xid="lockTU_23a75521-55df-45b3-af30-b7e2a329f024"/> is the current position of the rogue.</mrk> <mrk mtype="seg" mid="56"><x id="locked44" xid="lockTU_a66580f6-0aae-49e4-bb41-fc5604ebb454"/> and <x id="locked45" xid="lockTU_ac670ef8-56eb-44e5-a509-c5e4e6e7c80e"/> are macros specifying the dimensions of the map.</mrk></seg-source><target><mrk mtype="seg" mid="53"/> <mrk mtype="seg" mid="54"/> <mrk mtype="seg" mid="55"/> <mrk mtype="seg" mid="56"/></target><sdl:seg-defs><sdl:seg id="53"/><sdl:seg id="54"/><sdl:seg id="55"/><sdl:seg id="56"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="49"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="50"/></sdl:cxts><trans-unit id="lockTU_5683a6d0-c2d2-4187-9ca8-06b2912b7615" translate="no" sdl:locktype="Structure"><source><g id="214">paintEvent()</g></source></trans-unit><trans-unit id="lockTU_ae4cb2bf-e7dd-48ca-9e6a-9cf37fbbf9ef" translate="no" sdl:locktype="Structure"><source><g id="217">setupMap()</g></source></trans-unit><trans-unit id="lockTU_ee0b2e25-8038-461c-b470-56e093af569e" translate="no" sdl:locktype="Structure"><source><g id="220">status()</g></source></trans-unit><trans-unit id="lockTU_7e7980be-067d-4f5b-8bd1-5f1d90ca7863" translate="no" sdl:locktype="Structure"><source><g id="223">setStatus()</g></source></trans-unit><trans-unit id="lockTU_2459b7cc-6b51-42cb-9824-60152e349813" translate="no" sdl:locktype="Structure"><source><g id="226">movePlayer()</g></source></trans-unit><trans-unit id="lockTU_ee6c1fca-49c2-443b-92bf-a72b17661e0f" translate="no" sdl:locktype="Structure"><source><g id="229">sizeHint()</g></source></trans-unit><trans-unit id="lockTU_8074e283-ea08-40ae-90c3-e08aa275d482" translate="no" sdl:locktype="Structure"><source><g id="232">window.cpp</g></source></trans-unit><trans-unit id="lockTU_7f408a76-0032-481c-a294-20ad000444d7" translate="no" sdl:locktype="Structure"><source><g id="214">paintEvent()</g></source></trans-unit><trans-unit id="lockTU_25ecc72c-4c1a-4163-a2d5-807596f0598d" translate="no" sdl:locktype="Structure"><source><g id="217">setupMap()</g></source></trans-unit><trans-unit id="lockTU_47e99e29-f22f-4e8d-acda-b540ab37ffbf" translate="no" sdl:locktype="Structure"><source><g id="220">status()</g></source></trans-unit><trans-unit id="lockTU_2959475b-c982-4091-860a-b0f06232bdee" translate="no" sdl:locktype="Structure"><source><g id="223">setStatus()</g></source></trans-unit><trans-unit id="lockTU_538504c8-281a-4ead-b389-05dd9ae86f2a" translate="no" sdl:locktype="Structure"><source><g id="226">movePlayer()</g></source></trans-unit><trans-unit id="lockTU_433bdcc9-32d3-4b30-a435-4172f891374a" translate="no" sdl:locktype="Structure"><source><g id="229">sizeHint()</g></source></trans-unit><trans-unit id="lockTU_b7523eab-4b49-4ca7-b0d1-85f584ebc0fd" translate="no" sdl:locktype="Structure"><source><g id="232">window.cpp</g></source></trans-unit><trans-unit id="2336d8be-2796-42fb-b072-0c0b898cc650"><source>The <x id="locked46" xid="lockTU_7f408a76-0032-481c-a294-20ad000444d7"/> function is left out of this walkthrough. We also do not discuss other code that does not concern the state machine (the <x id="locked47" xid="lockTU_25ecc72c-4c1a-4163-a2d5-807596f0598d"/>, <x id="locked48" xid="lockTU_47e99e29-f22f-4e8d-acda-b540ab37ffbf"/>, <x id="locked49" xid="lockTU_2959475b-c982-4091-860a-b0f06232bdee"/>, <x id="locked50" xid="lockTU_538504c8-281a-4ead-b389-05dd9ae86f2a"/>, and <x id="locked51" xid="lockTU_433bdcc9-32d3-4b30-a435-4172f891374a"/> functions). If you wish to take a look at the code, click on the link for the <x id="locked52" xid="lockTU_b7523eab-4b49-4ca7-b0d1-85f584ebc0fd"/> file at the top of this page.</source><seg-source><mrk mtype="seg" mid="57">The <x id="locked53" xid="lockTU_5683a6d0-c2d2-4187-9ca8-06b2912b7615"/> function is left out of this walkthrough.</mrk> <mrk mtype="seg" mid="58">We also do not discuss other code that does not concern the state machine (the <x id="locked54" xid="lockTU_ae4cb2bf-e7dd-48ca-9e6a-9cf37fbbf9ef"/>, <x id="locked55" xid="lockTU_ee0b2e25-8038-461c-b470-56e093af569e"/>, <x id="locked56" xid="lockTU_7e7980be-067d-4f5b-8bd1-5f1d90ca7863"/>, <x id="locked57" xid="lockTU_2459b7cc-6b51-42cb-9824-60152e349813"/>, and <x id="locked58" xid="lockTU_ee6c1fca-49c2-443b-92bf-a72b17661e0f"/> functions).</mrk> <mrk mtype="seg" mid="59">If you wish to take a look at the code, click on the link for the <x id="locked59" xid="lockTU_8074e283-ea08-40ae-90c3-e08aa275d482"/> file at the top of this page.</mrk></seg-source><target><mrk mtype="seg" mid="57"/> <mrk mtype="seg" mid="58"/> <mrk mtype="seg" mid="59"/></target><sdl:seg-defs><sdl:seg id="57"/><sdl:seg id="58"/><sdl:seg id="59"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="50"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="fccc6dab-b527-480c-8c6d-3048ae7ab678"><source><g id="235"/></source><seg-source><g id="235"/></seg-source><target><g id="235"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="51"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="51"/></sdl:cxts><trans-unit id="9ec55b4f-b2e1-4ff1-9333-bf93154bd4fe"><source>Window Class Implementation</source><seg-source><mrk mtype="seg" mid="60">Window Class Implementation</mrk></seg-source><target><mrk mtype="seg" mid="60"/></target><sdl:seg-defs><sdl:seg id="60"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="52"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="52"/></sdl:cxts><trans-unit id="lockTU_1b1a52af-aee6-4304-acba-0d7cf4a2df1d" translate="no" sdl:locktype="Structure"><source><g id="238">Window</g></source></trans-unit><trans-unit id="lockTU_4e3d81c3-0ca2-44cd-9385-8b4e912e7779" translate="no" sdl:locktype="Structure"><source><g id="238">Window</g></source></trans-unit><trans-unit id="ac08611f-fc07-4504-951d-b3cc335fd84e"><source>Here is the constructor of <x id="locked60" xid="lockTU_4e3d81c3-0ca2-44cd-9385-8b4e912e7779"/>:</source><seg-source><mrk mtype="seg" mid="61">Here is the constructor of <x id="locked61" xid="lockTU_1b1a52af-aee6-4304-acba-0d7cf4a2df1d"/>:</mrk></seg-source><target><mrk mtype="seg" mid="61"/></target><sdl:seg-defs><sdl:seg id="61"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="53"/><sdl:cxt id="45"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="53"/></sdl:cxts><trans-unit id="d1c2d976-e452-48b6-9aed-659af00fb58a"><source>Window<g id="241">::</g>Window() { pX <g id="244">=</g> <g id="247">5</g>; pY <g id="250">=</g> <g id="253">5</g>; ... setupMap(); buildMachine(); }</source><seg-source><mrk mtype="seg" mid="62">Window<g id="241">::</g>Window() { pX <g id="244">=</g> <g id="247">5</g>; pY <g id="250">=</g> <g id="253">5</g>; ... setupMap(); buildMachine(); }</mrk></seg-source><target><mrk mtype="seg" mid="62"/></target><sdl:seg-defs><sdl:seg id="62"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="54"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="54"/></sdl:cxts><trans-unit id="lockTU_5336b76f-0d5c-4f1a-a198-38a1e17b659b" translate="no" sdl:locktype="Structure"><source><g id="256">buildMachine()</g></source></trans-unit><trans-unit id="lockTU_4bc2b10e-9af1-4c59-b0bd-08d33e0e5bb8" translate="no" sdl:locktype="Structure"><source><g id="256">buildMachine()</g></source></trans-unit><trans-unit id="1ba99095-a83d-4528-b733-5a6a990a8c18"><source>The player starts off at position (5, 5). We then set up the map and statemachine. Let&apos;s proceed with the <x id="locked62" xid="lockTU_4bc2b10e-9af1-4c59-b0bd-08d33e0e5bb8"/> function:</source><seg-source><mrk mtype="seg" mid="63">The player starts off at position (5, 5).</mrk> <mrk mtype="seg" mid="64">We then set up the map and statemachine.</mrk> <mrk mtype="seg" mid="65">Let&apos;s proceed with the <x id="locked63" xid="lockTU_5336b76f-0d5c-4f1a-a198-38a1e17b659b"/> function:</mrk></seg-source><target><mrk mtype="seg" mid="63"/> <mrk mtype="seg" mid="64"/> <mrk mtype="seg" mid="65"/></target><sdl:seg-defs><sdl:seg id="63"/><sdl:seg id="64"/><sdl:seg id="65"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="55"/><sdl:cxt id="45"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="55"/></sdl:cxts><trans-unit id="24705853-cccc-4c32-a881-6dfef83efe00"><source><g id="259">void</g> Window<g id="262">::</g>buildMachine() { machine <g id="265">=</g> <g id="268">new</g> <g id="271">QStateMachine</g>; <g id="274">QState</g> <g id="277">*</g>inputState <g id="280">=</g> <g id="283">new</g> <g id="286">QState</g>(machine); inputState<g id="289">-</g><g id="292">&gt;</g>assignProperty(<g id="295">this</g><g id="298">,</g> <g id="301">&quot;status&quot;</g><g id="304">,</g> <g id="307">&quot;Move the rogue with 2, 4, 6, and 8&quot;</g>); MovementTransition <g id="310">*</g>transition <g id="313">=</g> <g id="316">new</g> MovementTransition(<g id="319">this</g>); inputState<g id="322">-</g><g id="325">&gt;</g>addTransition(transition);</source><seg-source><mrk mtype="seg" mid="66"><g id="259">void</g> Window<g id="262">::</g>buildMachine() { machine <g id="265">=</g> <g id="268">new</g> <g id="271">QStateMachine</g>; <g id="274">QState</g> <g id="277">*</g>inputState <g id="280">=</g> <g id="283">new</g> <g id="286">QState</g>(machine); inputState<g id="289">-</g><g id="292">&gt;</g>assignProperty(<g id="295">this</g><g id="298">,</g> <g id="301">&quot;status&quot;</g><g id="304">,</g> <g id="307">&quot;Move the rogue with 2, 4, 6, and 8&quot;</g>); MovementTransition <g id="310">*</g>transition <g id="313">=</g> <g id="316">new</g> MovementTransition(<g id="319">this</g>); inputState<g id="322">-</g><g id="325">&gt;</g>addTransition(transition);</mrk></seg-source><target><mrk mtype="seg" mid="66"/></target><sdl:seg-defs><sdl:seg id="66"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="56"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="56"/></sdl:cxts><trans-unit id="lockTU_12536cbe-0625-44ae-9d80-a8970066fabb" translate="no" sdl:locktype="Structure"><source><g id="328">inputState</g></source></trans-unit><trans-unit id="lockTU_194e7836-d83e-4243-bc7d-a5fb4f7d4121" translate="no" sdl:locktype="Structure"><source><g id="331">quitState</g></source></trans-unit><trans-unit id="lockTU_d521d9fa-7da9-44ca-ba76-69f23ed7bf25" translate="no" sdl:locktype="Structure"><source><g id="328">inputState</g></source></trans-unit><trans-unit id="lockTU_ba575250-7d3a-45c5-afae-a12c154ca2f2" translate="no" sdl:locktype="Structure"><source><g id="331">quitState</g></source></trans-unit><trans-unit id="b27c10d2-4630-4eff-9edb-42fa5cbfd97b"><source>We enter <x id="locked64" xid="lockTU_d521d9fa-7da9-44ca-ba76-69f23ed7bf25"/> when the machine is started and from the <x id="locked65" xid="lockTU_ba575250-7d3a-45c5-afae-a12c154ca2f2"/> if the user wants to continue playing. We then set the status to a helpful reminder of how to play the game.</source><seg-source><mrk mtype="seg" mid="67">We enter <x id="locked66" xid="lockTU_12536cbe-0625-44ae-9d80-a8970066fabb"/> when the machine is started and from the <x id="locked67" xid="lockTU_194e7836-d83e-4243-bc7d-a5fb4f7d4121"/> if the user wants to continue playing.</mrk> <mrk mtype="seg" mid="68">We then set the status to a helpful reminder of how to play the game.</mrk></seg-source><target><mrk mtype="seg" mid="67"/> <mrk mtype="seg" mid="68"/></target><sdl:seg-defs><sdl:seg id="67"/><sdl:seg id="68"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="57"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="57"/></sdl:cxts><trans-unit id="lockTU_b4d0a1fd-c487-43b9-8def-5bdfac01126a" translate="no" sdl:locktype="Structure"><source><g id="334">Movement</g></source></trans-unit><trans-unit id="lockTU_ad5fb664-3664-4173-b05b-9fc709947113" translate="no" sdl:locktype="Structure"><source><g id="340">inputState</g></source></trans-unit><trans-unit id="lockTU_c74e00fb-517d-4eee-b638-bfec44f4efb6" translate="no" sdl:locktype="Structure"><source><g id="343">inputState</g></source></trans-unit><trans-unit id="lockTU_dc71be0f-cef7-434f-bc51-4f49834619b3" translate="no" sdl:locktype="Structure"><source><g id="346">inputState</g></source></trans-unit><trans-unit id="lockTU_d8326cc6-8ecd-44a0-94cb-032b476662ee" translate="no" sdl:locktype="Structure"><source><g id="334">Movement</g></source></trans-unit><trans-unit id="lockTU_35877180-92e1-4988-8ccc-ee98c8b46b94" translate="no" sdl:locktype="Structure"><source><g id="340">inputState</g></source></trans-unit><trans-unit id="lockTU_c8a25436-ac74-4c9d-8e5d-76b40816faef" translate="no" sdl:locktype="Structure"><source><g id="343">inputState</g></source></trans-unit><trans-unit id="lockTU_b41d26cb-1384-45f9-ba07-32cbe58f5628" translate="no" sdl:locktype="Structure"><source><g id="346">inputState</g></source></trans-unit><trans-unit id="df953118-71e1-4cb2-b594-9426e745273b"><source>First, the <x id="locked68" xid="lockTU_d8326cc6-8ecd-44a0-94cb-032b476662ee"/> transition is added to the input state. This will enable the rogue to be moved with the keypad. Notice that we don&apos;t set a target state for the movement transition. This will cause the transition to be triggered (and the <g id="337">onTransition()</g> function to be invoked), but the machine will not leave the <x id="locked69" xid="lockTU_35877180-92e1-4988-8ccc-ee98c8b46b94"/>. If we had set <x id="locked70" xid="lockTU_c8a25436-ac74-4c9d-8e5d-76b40816faef"/> as the target state, we would first have left and then entered the <x id="locked71" xid="lockTU_b41d26cb-1384-45f9-ba07-32cbe58f5628"/> again.</source><seg-source><mrk mtype="seg" mid="69">First, the <x id="locked72" xid="lockTU_b4d0a1fd-c487-43b9-8def-5bdfac01126a"/> transition is added to the input state.</mrk> <mrk mtype="seg" mid="70">This will enable the rogue to be moved with the keypad.</mrk> <mrk mtype="seg" mid="71">Notice that we don&apos;t set a target state for the movement transition.</mrk> <mrk mtype="seg" mid="72">This will cause the transition to be triggered (and the <g id="337">onTransition()</g> function to be invoked), but the machine will not leave the <x id="locked73" xid="lockTU_ad5fb664-3664-4173-b05b-9fc709947113"/>.</mrk> <mrk mtype="seg" mid="73">If we had set <x id="locked74" xid="lockTU_c74e00fb-517d-4eee-b638-bfec44f4efb6"/> as the target state, we would first have left and then entered the <x id="locked75" xid="lockTU_dc71be0f-cef7-434f-bc51-4f49834619b3"/> again.</mrk></seg-source><target><mrk mtype="seg" mid="69"/> <mrk mtype="seg" mid="70"/> <mrk mtype="seg" mid="71"/> <mrk mtype="seg" mid="72"/> <mrk mtype="seg" mid="73"/></target><sdl:seg-defs><sdl:seg id="69"/><sdl:seg id="70"/><sdl:seg id="71"/><sdl:seg id="72"/><sdl:seg id="73"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="58"/><sdl:cxt id="45"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="58"/></sdl:cxts><trans-unit id="aeb7dc3e-77ad-48b7-9b3b-b1b43a6f683b"><source><g id="349">QState</g> <g id="352">*</g>quitState <g id="355">=</g> <g id="358">new</g> <g id="361">QState</g>(machine); quitState<g id="364">-</g><g id="367">&gt;</g>assignProperty(<g id="370">this</g><g id="373">,</g> <g id="376">&quot;status&quot;</g><g id="379">,</g> <g id="382">&quot;Really quit(y/n)?&quot;</g>); <g id="385">QKeyEventTransition</g> <g id="388">*</g>yesTransition <g id="391">=</g> <g id="394">new</g> <g id="397">QKeyEventTransition</g>(<g id="400">this</g><g id="403">,</g> <g id="406">QEvent</g><g id="409">::</g>KeyPress<g id="412">,</g> <g id="415">Qt</g><g id="418">::</g>Key_Y); yesTransition<g id="421">-</g><g id="424">&gt;</g>setTargetState(<g id="427">new</g> <g id="430">QFinalState</g>(machine)); quitState<g id="433">-</g><g id="436">&gt;</g>addTransition(yesTransition); <g id="439">QKeyEventTransition</g> <g id="442">*</g>noTransition <g id="445">=</g> <g id="448">new</g> <g id="451">QKeyEventTransition</g>(<g id="454">this</g><g id="457">,</g> <g id="460">QEvent</g><g id="463">::</g>KeyPress<g id="466">,</g> <g id="469">Qt</g><g id="472">::</g>Key_N); noTransition<g id="475">-</g><g id="478">&gt;</g>setTargetState(inputState); quitState<g id="481">-</g><g id="484">&gt;</g>addTransition(noTransition);</source><seg-source><mrk mtype="seg" mid="74"><g id="349">QState</g> <g id="352">*</g>quitState <g id="355">=</g> <g id="358">new</g> <g id="361">QState</g>(machine); quitState<g id="364">-</g><g id="367">&gt;</g>assignProperty(<g id="370">this</g><g id="373">,</g> <g id="376">&quot;status&quot;</g><g id="379">,</g> <g id="382">&quot;Really quit(y/n)?&quot;</g>); <g id="385">QKeyEventTransition</g> <g id="388">*</g>yesTransition <g id="391">=</g> <g id="394">new</g> <g id="397">QKeyEventTransition</g>(<g id="400">this</g><g id="403">,</g> <g id="406">QEvent</g><g id="409">::</g>KeyPress<g id="412">,</g> <g id="415">Qt</g><g id="418">::</g>Key_Y); yesTransition<g id="421">-</g><g id="424">&gt;</g>setTargetState(<g id="427">new</g> <g id="430">QFinalState</g>(machine)); quitState<g id="433">-</g><g id="436">&gt;</g>addTransition(yesTransition); <g id="439">QKeyEventTransition</g> <g id="442">*</g>noTransition <g id="445">=</g> <g id="448">new</g> <g id="451">QKeyEventTransition</g>(<g id="454">this</g><g id="457">,</g> <g id="460">QEvent</g><g id="463">::</g>KeyPress<g id="466">,</g> <g id="469">Qt</g><g id="472">::</g>Key_N); noTransition<g id="475">-</g><g id="478">&gt;</g>setTargetState(inputState); quitState<g id="481">-</g><g id="484">&gt;</g>addTransition(noTransition);</mrk></seg-source><target><mrk mtype="seg" mid="74"/></target><sdl:seg-defs><sdl:seg id="74"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="59"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="59"/></sdl:cxts><trans-unit id="lockTU_c658b9b1-6e82-4c23-8b89-05e2eea2220c" translate="no" sdl:locktype="Structure"><source><g id="487">quitState</g></source></trans-unit><trans-unit id="lockTU_bb66be69-1398-4e7b-81ee-3f7190fc8bfb" translate="no" sdl:locktype="Structure"><source><g id="487">quitState</g></source></trans-unit><trans-unit id="30b38b2c-18c0-42d0-9dd9-4b15864ea35e"><source>When we enter <x id="locked76" xid="lockTU_bb66be69-1398-4e7b-81ee-3f7190fc8bfb"/>, we update the status bar of the window.</source><seg-source><mrk mtype="seg" mid="75">When we enter <x id="locked77" xid="lockTU_c658b9b1-6e82-4c23-8b89-05e2eea2220c"/>, we update the status bar of the window.</mrk></seg-source><target><mrk mtype="seg" mid="75"/></target><sdl:seg-defs><sdl:seg id="75"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="60"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="60"/></sdl:cxts><trans-unit id="lockTU_e2520ae9-435b-42eb-a86d-5db4750a8eee" translate="no" sdl:locktype="Structure"><source><g id="490">QKeyEventTransition</g></source></trans-unit><trans-unit id="lockTU_396d40cd-ca49-44c0-a205-a0fb46fe261b" translate="no" sdl:locktype="Structure"><source><g id="490">QKeyEventTransition</g></source></trans-unit><trans-unit id="lockTU_d3258ce6-8d94-4065-b2f0-59030c384ea7" translate="no" sdl:locktype="Structure"><source><g id="490">QKeyEventTransition</g></source></trans-unit><trans-unit id="6566438c-7ec5-4684-a7d8-8ced065b2b78"><source><x id="locked78" xid="lockTU_d3258ce6-8d94-4065-b2f0-59030c384ea7"/> is a utility class that removes the hassle of implementing transitions for <g id="493">QKeyEvent</g>s. We simply need to specify the key on which the transition should trigger and the target state of the transition.</source><seg-source><x id="locked79" xid="lockTU_396d40cd-ca49-44c0-a205-a0fb46fe261b"/> <mrk mtype="seg" mid="76">is a utility class that removes the hassle of implementing transitions for <g id="493">QKeyEvent</g>s.</mrk> <mrk mtype="seg" mid="77">We simply need to specify the key on which the transition should trigger and the target state of the transition.</mrk></seg-source><target><x id="locked80" xid="lockTU_e2520ae9-435b-42eb-a86d-5db4750a8eee"/> <mrk mtype="seg" mid="76"/> <mrk mtype="seg" mid="77"/></target><sdl:seg-defs><sdl:seg id="76"/><sdl:seg id="77"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="61"/><sdl:cxt id="45"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="61"/></sdl:cxts><trans-unit id="c086d8d9-aa0c-4621-8bc4-af08812586b5"><source><g id="496">QKeyEventTransition</g> <g id="499">*</g>quitTransition <g id="502">=</g> <g id="505">new</g> <g id="508">QKeyEventTransition</g>(<g id="511">this</g><g id="514">,</g> <g id="517">QEvent</g><g id="520">::</g>KeyPress<g id="523">,</g> <g id="526">Qt</g><g id="529">::</g>Key_Q); quitTransition<g id="532">-</g><g id="535">&gt;</g>setTargetState(quitState); inputState<g id="538">-</g><g id="541">&gt;</g>addTransition(quitTransition);</source><seg-source><mrk mtype="seg" mid="78"><g id="496">QKeyEventTransition</g> <g id="499">*</g>quitTransition <g id="502">=</g> <g id="505">new</g> <g id="508">QKeyEventTransition</g>(<g id="511">this</g><g id="514">,</g> <g id="517">QEvent</g><g id="520">::</g>KeyPress<g id="523">,</g> <g id="526">Qt</g><g id="529">::</g>Key_Q); quitTransition<g id="532">-</g><g id="535">&gt;</g>setTargetState(quitState); inputState<g id="538">-</g><g id="541">&gt;</g>addTransition(quitTransition);</mrk></seg-source><target><mrk mtype="seg" mid="78"/></target><sdl:seg-defs><sdl:seg id="78"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="62"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="62"/></sdl:cxts><trans-unit id="lockTU_28cbebc2-2aef-4ca7-9bb7-ef5eb0325e42" translate="no" sdl:locktype="Structure"><source><g id="544">inputState</g></source></trans-unit><trans-unit id="lockTU_fb53c63f-4e80-48bd-bbd9-360e43027315" translate="no" sdl:locktype="Structure"><source><g id="547">q</g></source></trans-unit><trans-unit id="lockTU_9b5dbe3b-b093-472a-8a35-9b53fc9e5ba9" translate="no" sdl:locktype="Structure"><source><g id="544">inputState</g></source></trans-unit><trans-unit id="lockTU_11e322fb-9c5d-4a9f-81d2-ffc067f9b427" translate="no" sdl:locktype="Structure"><source><g id="547">q</g></source></trans-unit><trans-unit id="0eaf39e9-feac-4eb3-990c-8bbc24550efe"><source>The transition from <x id="locked81" xid="lockTU_9b5dbe3b-b093-472a-8a35-9b53fc9e5ba9"/> allows triggering the quit state when the player types <x id="locked82" xid="lockTU_11e322fb-9c5d-4a9f-81d2-ffc067f9b427"/>.</source><seg-source><mrk mtype="seg" mid="79">The transition from <x id="locked83" xid="lockTU_28cbebc2-2aef-4ca7-9bb7-ef5eb0325e42"/> allows triggering the quit state when the player types <x id="locked84" xid="lockTU_fb53c63f-4e80-48bd-bbd9-360e43027315"/>.</mrk></seg-source><target><mrk mtype="seg" mid="79"/></target><sdl:seg-defs><sdl:seg id="79"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="63"/><sdl:cxt id="45"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="63"/></sdl:cxts><trans-unit id="62208f0b-35da-4080-a216-41544c280268"><source>machine<g id="550">-</g><g id="553">&gt;</g>setInitialState(inputState); connect(machine<g id="556">,</g> SIGNAL(finished())<g id="559">,</g> qApp<g id="562">,</g> SLOT(quit())); machine<g id="565">-</g><g id="568">&gt;</g>start(); }</source><seg-source><mrk mtype="seg" mid="80">machine<g id="550">-</g><g id="553">&gt;</g>setInitialState(inputState); connect(machine<g id="556">,</g> SIGNAL(finished())<g id="559">,</g> qApp<g id="562">,</g> SLOT(quit())); machine<g id="565">-</g><g id="568">&gt;</g>start(); }</mrk></seg-source><target><mrk mtype="seg" mid="80"/></target><sdl:seg-defs><sdl:seg id="80"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="64"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="64"/></sdl:cxts><trans-unit id="4d1cb642-ebcd-425f-8682-78f9cb514117"><source>The machine is set up, so it&apos;s time to start it.</source><seg-source><mrk mtype="seg" mid="81">The machine is set up, so it&apos;s time to start it.</mrk></seg-source><target><mrk mtype="seg" mid="81"/></target><sdl:seg-defs><sdl:seg id="81"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="65"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="d64c5030-04fe-46c7-8fd0-146de0943127"><source><g id="571"/></source><seg-source><g id="571"/></seg-source><target><g id="571"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="66"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="65"/></sdl:cxts><trans-unit id="a4fdb3c7-b75a-42ff-b4bf-85da7296e34d"><source>The MovementTransition Class</source><seg-source><mrk mtype="seg" mid="82">The MovementTransition Class</mrk></seg-source><target><mrk mtype="seg" mid="82"/></target><sdl:seg-defs><sdl:seg id="82"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="67"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="66"/></sdl:cxts><trans-unit id="lockTU_e1705ccb-6cc4-4872-9b87-f61a7157c4fd" translate="no" sdl:locktype="Structure"><source><g id="574">MovementTransition</g></source></trans-unit><trans-unit id="lockTU_33ce39fa-8741-468a-ae50-eba0c3d7c1d3" translate="no" sdl:locktype="Structure"><source><g id="574">MovementTransition</g></source></trans-unit><trans-unit id="lockTU_ea51e61a-6c1a-4be7-acde-e2b3a9e88232" translate="no" sdl:locktype="Structure"><source><g id="577">inputState</g></source></trans-unit><trans-unit id="lockTU_1dd49191-d018-44f7-855d-a7c2d7b26b57" translate="no" sdl:locktype="Structure"><source><g id="574">MovementTransition</g></source></trans-unit><trans-unit id="lockTU_5df95a58-841f-4a8f-ae7b-b3e81fbb426a" translate="no" sdl:locktype="Structure"><source><g id="577">inputState</g></source></trans-unit><trans-unit id="ca5f1562-fe69-4b3d-8d62-15ee1f2f05f1"><source><x id="locked85" xid="lockTU_1dd49191-d018-44f7-855d-a7c2d7b26b57"/> is triggered when the player request the rogue to be moved (by typing 2, 4, 6, or 8) when the machine is in the <x id="locked86" xid="lockTU_5df95a58-841f-4a8f-ae7b-b3e81fbb426a"/>.</source><seg-source><x id="locked87" xid="lockTU_33ce39fa-8741-468a-ae50-eba0c3d7c1d3"/> <mrk mtype="seg" mid="83">is triggered when the player request the rogue to be moved (by typing 2, 4, 6, or 8) when the machine is in the <x id="locked88" xid="lockTU_ea51e61a-6c1a-4be7-acde-e2b3a9e88232"/>.</mrk></seg-source><target><x id="locked89" xid="lockTU_e1705ccb-6cc4-4872-9b87-f61a7157c4fd"/> <mrk mtype="seg" mid="83"/></target><sdl:seg-defs><sdl:seg id="83"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="68"/><sdl:cxt id="45"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="67"/></sdl:cxts><trans-unit id="9a202a4d-6d6e-421c-906e-0c96926ebbb5"><source><g id="580">class</g> MovementTransition : <g id="583">public</g> <g id="586">QEventTransition</g> { Q_OBJECT <g id="589">public</g>: MovementTransition(Window <g id="592">*</g>window) : <g id="595">QEventTransition</g>(window<g id="598">,</g> <g id="601">QEvent</g><g id="604">::</g>KeyPress) { <g id="607">this</g><g id="610">-</g><g id="613">&gt;</g>window <g id="616">=</g> window; }</source><seg-source><mrk mtype="seg" mid="84"><g id="580">class</g> MovementTransition : <g id="583">public</g> <g id="586">QEventTransition</g> { Q_OBJECT <g id="589">public</g>:</mrk> <mrk mtype="seg" mid="85">MovementTransition(Window <g id="592">*</g>window) :</mrk> <mrk mtype="seg" mid="86"><g id="595">QEventTransition</g>(window<g id="598">,</g> <g id="601">QEvent</g><g id="604">::</g>KeyPress) { <g id="607">this</g><g id="610">-</g><g id="613">&gt;</g>window <g id="616">=</g> window; }</mrk></seg-source><target><mrk mtype="seg" mid="84"/> <mrk mtype="seg" mid="85"/> <mrk mtype="seg" mid="86"/></target><sdl:seg-defs><sdl:seg id="84"/><sdl:seg id="85"/><sdl:seg id="86"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="69"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="68"/></sdl:cxts><trans-unit id="5bdcbd3a-88a6-4e36-8d15-95c062e45d9c"><source>In the constructor, we tell <g id="619">QEventTransition</g> to only send <g id="622">KeyPress</g> events to the <g id="625">eventTest()</g> function:</source><seg-source><mrk mtype="seg" mid="87">In the constructor, we tell <g id="619">QEventTransition</g> to only send <g id="622">KeyPress</g> events to the <g id="625">eventTest()</g> function:</mrk></seg-source><target><mrk mtype="seg" mid="87"/></target><sdl:seg-defs><sdl:seg id="87"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="70"/><sdl:cxt id="45"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="69"/></sdl:cxts><trans-unit id="b363ff67-941d-4811-8d20-db0c510366d6"><source><g id="628">protected</g>: bool eventTest(<g id="631">QEvent</g> <g id="634">*</g>event) Q_DECL_OVERRIDE { <g id="637">if</g> (event<g id="640">-</g><g id="643">&gt;</g>type() <g id="646">=</g><g id="649">=</g> <g id="652">QEvent</g><g id="655">::</g>StateMachineWrapped <g id="658">&amp;</g><g id="661">&amp;</g> <g id="664">static_cast</g><g id="667">&lt;</g><g id="670">QStateMachine</g><g id="673">::</g>WrappedEvent <g id="676">*</g><g id="679">&gt;</g>(event)<g id="682">-</g><g id="685">&gt;</g>event()<g id="688">-</g><g id="691">&gt;</g>type() <g id="694">=</g><g id="697">=</g> <g id="700">QEvent</g><g id="703">::</g>KeyPress) { <g id="706">QEvent</g> <g id="709">*</g>wrappedEvent <g id="712">=</g> <g id="715">static_cast</g><g id="718">&lt;</g><g id="721">QStateMachine</g><g id="724">::</g>WrappedEvent <g id="727">*</g><g id="730">&gt;</g>(event)<g id="733">-</g><g id="736">&gt;</g>event(); <g id="739">QKeyEvent</g> <g id="742">*</g>keyEvent <g id="745">=</g> <g id="748">static_cast</g><g id="751">&lt;</g><g id="754">QKeyEvent</g> <g id="757">*</g><g id="760">&gt;</g>(wrappedEvent); <g id="763">int</g> key <g id="766">=</g> keyEvent<g id="769">-</g><g id="772">&gt;</g>key(); <g id="775">return</g> key <g id="778">=</g><g id="781">=</g> <g id="784">Qt</g><g id="787">::</g>Key_2 <g id="790">|</g><g id="793">|</g> key <g id="796">=</g><g id="799">=</g> <g id="802">Qt</g><g id="805">::</g>Key_8 <g id="808">|</g><g id="811">|</g> key <g id="814">=</g><g id="817">=</g> <g id="820">Qt</g><g id="823">::</g>Key_6 <g id="826">|</g><g id="829">|</g> key <g id="832">=</g><g id="835">=</g> <g id="838">Qt</g><g id="841">::</g>Key_4 <g id="844">|</g><g id="847">|</g> key <g id="850">=</g><g id="853">=</g> <g id="856">Qt</g><g id="859">::</g>Key_Down <g id="862">|</g><g id="865">|</g> key <g id="868">=</g><g id="871">=</g> <g id="874">Qt</g><g id="877">::</g>Key_Up <g id="880">|</g><g id="883">|</g> key <g id="886">=</g><g id="889">=</g> <g id="892">Qt</g><g id="895">::</g>Key_Right <g id="898">|</g><g id="901">|</g> key <g id="904">=</g><g id="907">=</g> <g id="910">Qt</g><g id="913">::</g>Key_Left; } <g id="916">return</g> <g id="919">false</g>; }</source><seg-source><mrk mtype="seg" mid="88"><g id="628">protected</g>: bool eventTest(<g id="631">QEvent</g> <g id="634">*</g>event) Q_DECL_OVERRIDE { <g id="637">if</g> (event<g id="640">-</g><g id="643">&gt;</g>type() <g id="646">=</g><g id="649">=</g> <g id="652">QEvent</g><g id="655">::</g>StateMachineWrapped <g id="658">&amp;</g><g id="661">&amp;</g> <g id="664">static_cast</g><g id="667">&lt;</g><g id="670">QStateMachine</g><g id="673">::</g>WrappedEvent <g id="676">*</g><g id="679">&gt;</g>(event)<g id="682">-</g><g id="685">&gt;</g>event()<g id="688">-</g><g id="691">&gt;</g>type() <g id="694">=</g><g id="697">=</g> <g id="700">QEvent</g><g id="703">::</g>KeyPress) { <g id="706">QEvent</g> <g id="709">*</g>wrappedEvent <g id="712">=</g> <g id="715">static_cast</g><g id="718">&lt;</g><g id="721">QStateMachine</g><g id="724">::</g>WrappedEvent <g id="727">*</g><g id="730">&gt;</g>(event)<g id="733">-</g><g id="736">&gt;</g>event(); <g id="739">QKeyEvent</g> <g id="742">*</g>keyEvent <g id="745">=</g> <g id="748">static_cast</g><g id="751">&lt;</g><g id="754">QKeyEvent</g> <g id="757">*</g><g id="760">&gt;</g>(wrappedEvent); <g id="763">int</g> key <g id="766">=</g> keyEvent<g id="769">-</g><g id="772">&gt;</g>key(); <g id="775">return</g> key <g id="778">=</g><g id="781">=</g> <g id="784">Qt</g><g id="787">::</g>Key_2 <g id="790">|</g><g id="793">|</g> key <g id="796">=</g><g id="799">=</g> <g id="802">Qt</g><g id="805">::</g>Key_8 <g id="808">|</g><g id="811">|</g> key <g id="814">=</g><g id="817">=</g> <g id="820">Qt</g><g id="823">::</g>Key_6 <g id="826">|</g><g id="829">|</g> key <g id="832">=</g><g id="835">=</g> <g id="838">Qt</g><g id="841">::</g>Key_4 <g id="844">|</g><g id="847">|</g> key <g id="850">=</g><g id="853">=</g> <g id="856">Qt</g><g id="859">::</g>Key_Down <g id="862">|</g><g id="865">|</g> key <g id="868">=</g><g id="871">=</g> <g id="874">Qt</g><g id="877">::</g>Key_Up <g id="880">|</g><g id="883">|</g> key <g id="886">=</g><g id="889">=</g> <g id="892">Qt</g><g id="895">::</g>Key_Right <g id="898">|</g><g id="901">|</g> key <g id="904">=</g><g id="907">=</g> <g id="910">Qt</g><g id="913">::</g>Key_Left; } <g id="916">return</g> <g id="919">false</g>; }</mrk></seg-source><target><mrk mtype="seg" mid="88"/></target><sdl:seg-defs><sdl:seg id="88"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="71"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="70"/></sdl:cxts><trans-unit id="lockTU_4532575f-b6f3-4d56-a08c-6d6f04643a1e" translate="no" sdl:locktype="Structure"><source><g id="925">event</g></source></trans-unit><trans-unit id="lockTU_620298fa-9606-44c1-b288-d895655f711e" translate="no" sdl:locktype="Structure"><source><g id="925">event</g></source></trans-unit><trans-unit id="lockTU_2de3e728-de36-4022-96fe-2a1158201bbc" translate="no" sdl:locktype="Structure"><source><g id="925">event</g></source></trans-unit><trans-unit id="2185c3e1-46b5-46b6-a6ad-c9f7dc3a3bc0"><source>The KeyPress events come wrapped in <g id="922">QStateMachine::WrappedEvent</g>s. <x id="locked90" xid="lockTU_2de3e728-de36-4022-96fe-2a1158201bbc"/> must be confirmed to be a wrapped event because Qt uses other events internally. After that, it is simply a matter of checking which key has been pressed.</source><seg-source><mrk mtype="seg" mid="89">The KeyPress events come wrapped in <g id="922">QStateMachine::WrappedEvent</g>s.</mrk> <x id="locked91" xid="lockTU_620298fa-9606-44c1-b288-d895655f711e"/> <mrk mtype="seg" mid="90">must be confirmed to be a wrapped event because Qt uses other events internally.</mrk> <mrk mtype="seg" mid="91">After that, it is simply a matter of checking which key has been pressed.</mrk></seg-source><target><mrk mtype="seg" mid="89"/> <x id="locked92" xid="lockTU_4532575f-b6f3-4d56-a08c-6d6f04643a1e"/> <mrk mtype="seg" mid="90"/> <mrk mtype="seg" mid="91"/></target><sdl:seg-defs><sdl:seg id="89"/><sdl:seg id="90"/><sdl:seg id="91"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="72"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="71"/></sdl:cxts><trans-unit id="lockTU_97feb1d0-5d45-4e3b-b3cb-e8a888d00687" translate="no" sdl:locktype="Structure"><source><g id="928">onTransition()</g></source></trans-unit><trans-unit id="lockTU_cd5bc402-412b-4eb6-883a-848e67702a3d" translate="no" sdl:locktype="Structure"><source><g id="928">onTransition()</g></source></trans-unit><trans-unit id="f25e17e1-ede5-42e5-a63b-98223f43d761"><source>Let&apos;s move on to the <x id="locked93" xid="lockTU_cd5bc402-412b-4eb6-883a-848e67702a3d"/> function:</source><seg-source><mrk mtype="seg" mid="92">Let&apos;s move on to the <x id="locked94" xid="lockTU_97feb1d0-5d45-4e3b-b3cb-e8a888d00687"/> function:</mrk></seg-source><target><mrk mtype="seg" mid="92"/></target><sdl:seg-defs><sdl:seg id="92"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="73"/><sdl:cxt id="45"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="72"/></sdl:cxts><trans-unit id="095cfcec-5f24-4ce8-921c-b43d859d29df"><source><g id="931">void</g> onTransition(<g id="934">QEvent</g> <g id="937">*</g>event) Q_DECL_OVERRIDE { <g id="940">QKeyEvent</g> <g id="943">*</g>keyEvent <g id="946">=</g> <g id="949">static_cast</g><g id="952">&lt;</g><g id="955">QKeyEvent</g> <g id="958">*</g><g id="961">&gt;</g>( <g id="964">static_cast</g><g id="967">&lt;</g><g id="970">QStateMachine</g><g id="973">::</g>WrappedEvent <g id="976">*</g><g id="979">&gt;</g>(event)<g id="982">-</g><g id="985">&gt;</g>event()); <g id="988">int</g> key <g id="991">=</g> keyEvent<g id="994">-</g><g id="997">&gt;</g>key(); <g id="1000">switch</g> (key) { <g id="1003">case</g> <g id="1006">Qt</g><g id="1009">::</g>Key_Left: <g id="1012">case</g> <g id="1015">Qt</g><g id="1018">::</g>Key_4: window<g id="1021">-</g><g id="1024">&gt;</g>movePlayer(Window<g id="1027">::</g>Left); <g id="1030">break</g>; <g id="1033">case</g> <g id="1036">Qt</g><g id="1039">::</g>Key_Up: <g id="1042">case</g> <g id="1045">Qt</g><g id="1048">::</g>Key_8: window<g id="1051">-</g><g id="1054">&gt;</g>movePlayer(Window<g id="1057">::</g>Up); <g id="1060">break</g>; <g id="1063">case</g> <g id="1066">Qt</g><g id="1069">::</g>Key_Right: <g id="1072">case</g> <g id="1075">Qt</g><g id="1078">::</g>Key_6: window<g id="1081">-</g><g id="1084">&gt;</g>movePlayer(Window<g id="1087">::</g>Right); <g id="1090">break</g>; <g id="1093">case</g> <g id="1096">Qt</g><g id="1099">::</g>Key_Down: <g id="1102">case</g> <g id="1105">Qt</g><g id="1108">::</g>Key_2: window<g id="1111">-</g><g id="1114">&gt;</g>movePlayer(Window<g id="1117">::</g>Down); <g id="1120">break</g>; <g id="1123">default</g>: ; } }</source><seg-source><mrk mtype="seg" mid="93"><g id="931">void</g> onTransition(<g id="934">QEvent</g> <g id="937">*</g>event) Q_DECL_OVERRIDE { <g id="940">QKeyEvent</g> <g id="943">*</g>keyEvent <g id="946">=</g> <g id="949">static_cast</g><g id="952">&lt;</g><g id="955">QKeyEvent</g> <g id="958">*</g><g id="961">&gt;</g>( <g id="964">static_cast</g><g id="967">&lt;</g><g id="970">QStateMachine</g><g id="973">::</g>WrappedEvent <g id="976">*</g><g id="979">&gt;</g>(event)<g id="982">-</g><g id="985">&gt;</g>event()); <g id="988">int</g> key <g id="991">=</g> keyEvent<g id="994">-</g><g id="997">&gt;</g>key(); <g id="1000">switch</g> (key) { <g id="1003">case</g> <g id="1006">Qt</g><g id="1009">::</g>Key_Left: <g id="1012">case</g> <g id="1015">Qt</g><g id="1018">::</g>Key_4: window<g id="1021">-</g><g id="1024">&gt;</g>movePlayer(Window<g id="1027">::</g>Left); <g id="1030">break</g>; <g id="1033">case</g> <g id="1036">Qt</g><g id="1039">::</g>Key_Up: <g id="1042">case</g> <g id="1045">Qt</g><g id="1048">::</g>Key_8: window<g id="1051">-</g><g id="1054">&gt;</g>movePlayer(Window<g id="1057">::</g>Up); <g id="1060">break</g>; <g id="1063">case</g> <g id="1066">Qt</g><g id="1069">::</g>Key_Right: <g id="1072">case</g> <g id="1075">Qt</g><g id="1078">::</g>Key_6: window<g id="1081">-</g><g id="1084">&gt;</g>movePlayer(Window<g id="1087">::</g>Right); <g id="1090">break</g>; <g id="1093">case</g> <g id="1096">Qt</g><g id="1099">::</g>Key_Down: <g id="1102">case</g> <g id="1105">Qt</g><g id="1108">::</g>Key_2: window<g id="1111">-</g><g id="1114">&gt;</g>movePlayer(Window<g id="1117">::</g>Down); <g id="1120">break</g>; <g id="1123">default</g>:</mrk> <mrk mtype="seg" mid="94">; } }</mrk></seg-source><target><mrk mtype="seg" mid="93"/> <mrk mtype="seg" mid="94"/></target><sdl:seg-defs><sdl:seg id="93"/><sdl:seg id="94"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="74"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="73"/></sdl:cxts><trans-unit id="lockTU_655def1b-308f-42ca-8460-9fa158226934" translate="no" sdl:locktype="Structure"><source><g id="1126">onTransition()</g></source></trans-unit><trans-unit id="lockTU_8d832662-5af1-45be-a1fa-b298f6f3eec8" translate="no" sdl:locktype="Structure"><source><g id="1132">Window</g></source></trans-unit><trans-unit id="lockTU_90e2fac5-b2af-4f53-ba9a-e68e2091348d" translate="no" sdl:locktype="Structure"><source><g id="1126">onTransition()</g></source></trans-unit><trans-unit id="lockTU_16137fa0-8f86-41b9-b9d7-de367c53676b" translate="no" sdl:locktype="Structure"><source><g id="1132">Window</g></source></trans-unit><trans-unit id="e770a9e6-0bb5-4970-b160-16df276cdb25"><source>When <x id="locked95" xid="lockTU_90e2fac5-b2af-4f53-ba9a-e68e2091348d"/> is invoked, we know that we have a <g id="1129">KeyPress</g> event with 2, 4, 6, or 8, and can ask <x id="locked96" xid="lockTU_16137fa0-8f86-41b9-b9d7-de367c53676b"/> to move the player.</source><seg-source><mrk mtype="seg" mid="95">When <x id="locked97" xid="lockTU_655def1b-308f-42ca-8460-9fa158226934"/> is invoked, we know that we have a <g id="1129">KeyPress</g> event with 2, 4, 6, or 8, and can ask <x id="locked98" xid="lockTU_8d832662-5af1-45be-a1fa-b298f6f3eec8"/> to move the player.</mrk></seg-source><target><mrk mtype="seg" mid="95"/></target><sdl:seg-defs><sdl:seg id="95"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="755ba04c-c1cc-4c99-aa46-58db2e31379d"><source><g id="1135"/></source><seg-source><g id="1135"/></seg-source><target><g id="1135"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="76"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="74"/></sdl:cxts><trans-unit id="beb59ce6-f82b-4f14-8e0e-ad69c04e72e3"><source>The Roguelike Tradition</source><seg-source><mrk mtype="seg" mid="96">The Roguelike Tradition</mrk></seg-source><target><mrk mtype="seg" mid="96"/></target><sdl:seg-defs><sdl:seg id="96"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="77"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="75"/></sdl:cxts><trans-unit id="28eaffa6-a33d-4f06-af1f-c45bc439d94e"><source>You might have been wondering why the game features a rogue. Well, these kinds of text based dungeon exploration games date back to a game called, yes, &quot;Rogue&quot;. Although outflanked by the technology of modern 3D computer games, roguelikes have a solid community of hard-core, devoted followers.</source><seg-source><mrk mtype="seg" mid="97">You might have been wondering why the game features a rogue.</mrk> <mrk mtype="seg" mid="98">Well, these kinds of text based dungeon exploration games date back to a game called, yes, &quot;Rogue&quot;.</mrk> <mrk mtype="seg" mid="99">Although outflanked by the technology of modern 3D computer games, roguelikes have a solid community of hard-core, devoted followers.</mrk></seg-source><target><mrk mtype="seg" mid="97"/> <mrk mtype="seg" mid="98"/> <mrk mtype="seg" mid="99"/></target><sdl:seg-defs><sdl:seg id="97"/><sdl:seg id="98"/><sdl:seg id="99"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="78"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="76"/></sdl:cxts><trans-unit id="925f9244-8c62-4df3-90b2-1b9608f4a475"><source>Playing these games can be surprisingly addictive (despite the lack of graphics). Angband, the perhaps most well-known rougelike, is found here: <g id="1138">http://rephial.org/</g>.</source><seg-source><mrk mtype="seg" mid="100">Playing these games can be surprisingly addictive (despite the lack of graphics).</mrk> <mrk mtype="seg" mid="101">Angband, the perhaps most well-known rougelike, is found here:</mrk> <mrk mtype="seg" mid="102"><g id="1138">http://rephial.org/</g>.</mrk></seg-source><target><mrk mtype="seg" mid="100"/> <mrk mtype="seg" mid="101"/> <mrk mtype="seg" mid="102"/></target><sdl:seg-defs><sdl:seg id="100"/><sdl:seg id="101"/><sdl:seg id="102"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="79"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="77"/></sdl:cxts><trans-unit id="31dc1155-b7fb-4006-89a4-167571c83f6c"><source>Files:</source><seg-source><mrk mtype="seg" mid="103">Files:</mrk></seg-source><target><mrk mtype="seg" mid="103">Файлы:</mrk></target><sdl:seg-defs><sdl:seg id="103" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100"><sdl:value key="created_by">TRAPP</sdl:value><sdl:value key="created_on">03/15/2019 00:04:31</sdl:value><sdl:value key="modified_on">03/15/2019 00:04:31</sdl:value><sdl:value key="last_modified_by">TRAPP</sdl:value><sdl:value key="SDL:OriginalTranslationHash">874853416</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="80"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="79"/></sdl:cxts><trans-unit id="1239faf6-cee0-4356-a834-149386033446"><source><g id="1141">statemachine/rogue/movementtransition.h</g></source><seg-source><g id="1141"><mrk mtype="seg" mid="104">statemachine/rogue/movementtransition.h</mrk></g></seg-source><target><g id="1141"><mrk mtype="seg" mid="104"/></g></target><sdl:seg-defs><sdl:seg id="104"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="81"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="80"/></sdl:cxts><trans-unit id="2350b109-fb79-4746-a259-166867bb46a5"><source><g id="1144">statemachine/rogue/window.cpp</g></source><seg-source><g id="1144"><mrk mtype="seg" mid="105">statemachine/rogue/window.cpp</mrk></g></seg-source><target><g id="1144"><mrk mtype="seg" mid="105"/></g></target><sdl:seg-defs><sdl:seg id="105"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="82"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="81"/></sdl:cxts><trans-unit id="5e0867d1-b169-486b-a2f8-42a2afd0ea14"><source><g id="1147">statemachine/rogue/window.h</g></source><seg-source><g id="1147"><mrk mtype="seg" mid="106">statemachine/rogue/window.h</mrk></g></seg-source><target><g id="1147"><mrk mtype="seg" mid="106"/></g></target><sdl:seg-defs><sdl:seg id="106"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="83"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="82"/></sdl:cxts><trans-unit id="369b121c-833d-406b-a65d-893335dee482"><source><g id="1150">statemachine/rogue/main.cpp</g></source><seg-source><g id="1150"><mrk mtype="seg" mid="107">statemachine/rogue/main.cpp</mrk></g></seg-source><target><g id="1150"><mrk mtype="seg" mid="107"/></g></target><sdl:seg-defs><sdl:seg id="107"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="84"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="83"/></sdl:cxts><trans-unit id="76e90033-da7b-4229-be0f-3ab6c6f7e8b9"><source><g id="1153">statemachine/rogue/rogue.pro</g></source><seg-source><g id="1153"><mrk mtype="seg" mid="108">statemachine/rogue/rogue.pro</mrk></g></seg-source><target><g id="1153"><mrk mtype="seg" mid="108"/></g></target><sdl:seg-defs><sdl:seg id="108"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="85"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="21"/></sdl:cxts><trans-unit id="c8821e75-4c2e-4de8-bde7-66784d97b9d1"><source><x id="1154"/></source><seg-source><x id="1154"/></seg-source><target><x id="1154"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="86"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="85"/></sdl:cxts><trans-unit id="bf9a0a50-9453-4803-90b6-63b7ab8de8d1"><source><x id="1155"/></source><seg-source><x id="1155"/></seg-source><target><x id="1155"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="87"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="85"/></sdl:cxts><trans-unit id="6cc9900c-c359-4f60-b09d-b7abe82c9038"><source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="1156"/> The documentation provided herein is licensed under the terms of the <g id="1159">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="1160"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</source><seg-source><mrk mtype="seg" mid="109">2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.</mrk><x id="1156"/> <mrk mtype="seg" mid="110">The documentation provided herein is licensed under the terms of the <g id="1159">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.</mrk><x id="1160"/> <mrk mtype="seg" mid="111">Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide.</mrk> <mrk mtype="seg" mid="112">All other trademarks are property of their respective owners.</mrk></seg-source><target><mrk mtype="seg" mid="109"/><x id="1156"/> <mrk mtype="seg" mid="110">Документация, представленная здесь, лицензирована в соответствии с условиями <g id="1159">Лицензии свободной документации GNU версии 1.3</g> , опубликованной Фондом свободного программного обеспечения.</mrk><x id="1160"/> <mrk mtype="seg" mid="111">Qt и соответствующие логотипы являются товарными знаками The Qt Company Ltd. в Финляндии и/или других странах мира.</mrk> <mrk mtype="seg" mid="112">Все остальные товарные знаки являются собственностью соответствующих владельцев.</mrk></target><sdl:seg-defs><sdl:seg id="109"/><sdl:seg id="110" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/18/2019 08:01:56</sdl:value><sdl:value key="modified_on">04/23/2019 08:53:32</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">460311339</sdl:value></sdl:seg><sdl:seg id="111" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/18/2019 08:02:00</sdl:value><sdl:value key="modified_on">04/23/2019 08:53:35</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">998242797</sdl:value></sdl:seg><sdl:seg id="112" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/18/2019 08:02:06</sdl:value><sdl:value key="modified_on">04/23/2019 08:53:37</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">1633633558</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group></body></file></xliff>