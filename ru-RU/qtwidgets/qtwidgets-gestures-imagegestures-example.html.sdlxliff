<?xml version="1.0" encoding="utf-8"?><xliff xmlns:sdl="http://sdl.com/FileTypes/SdlXliff/1.0" xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2" sdl:version="1.0"><file original="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtwidgets\qtwidgets-gestures-imagegestures-example.html" datatype="x-sdlfilterframework2" source-language="en-US" target-language="ru-RU"><header><reference><internal-file form="base64">UEsDBBQAAAAIAFhAgkm8QyevkBAAAHhKAAARAAAANHZ6cTQxaGkueW8xLmh0bWzVHNt22zbyPV+B
VbqtlbUkOz3d7vGtTW2n6z1p08Tu9uxTD0RCJBKKYAjQitLtv+/MAOBFJkUplrNtHmKbAGYGc8PM
YMiTb97PE3Yrci1Vejo4HB8MmEgDFco0Oh38fPN89I/BN2ePTv5y8fL85j8/XbLYzBP4G3+whOMk
kQ7wgeDh2SPGTubCcJhlspF4V8jb08G5So1IzehmmYkBC+xfpwMj3psJgjlmQcxzLcxpYWaAjk0Q
32jE5JxHIhLaFLnQ43ehCthoRDiMNIk4u8Jx9r2bwC7f83mWCPZf9sqwX2QYCaPZV+OvTyZ2Oi5M
ZPqW5SI5HWizTISOhTADZoAyR1Cg9YDFuZi5GRM1m8EiMdISgY9pfEKwdJDLzNQXv+G33D4d4AzG
FjIN1WKs0kTxkJ2yWZEGBhi9N/wNdlPMgRFjIPMyEfir/m55w6Mf+VzsDZDQwXAsjZjvHQzHwJ1n
xuRyWhgYRPoG+6xJIZE2PP79GGmbWDKAkRMrmJOpCpfwI5S3LEi41qcDHBD5gMnwdPDOAD3uAW2u
Nm/OZer2s/p4lKsiDUXohpsTUn4rI47bnfK8nIHS41MQx4nJgR4TsrMT7jg+Hk+IkIkuskzlRoSj
LOFmpvK5HvE0HIHyzGRU5ARVj1F7Hr8zo69GXw/OQOgkbH4GAg/PmpDfmYVViBFIRLynlbTE6Ulz
Wbti2fEJkA3/uS3gD7/faSGT0FnSoNoesrcxBFoRmhhs7eDgrwPGExmB4eUyio3fxPiQvRYzkYMh
CnbhFIX2TDRUnKwT4yUwARE4adlf6zJx1jdoPkX1GbROZCjl89ZFWobCCrb+1KiAvMGXyPsUVNk9
cjAco2H40UmBfiSRJRHiViSHg0pmj8n+rdxGNGkUiplMpSEGk5Cs+Ng5jrKLctRiSeTWCMjIS263
IblqzKghmtB+7rLc8WnkWU8KsfrwzC70y+PDkp/ougadGhkfwmyd8bTEVkzdEvAB8Ny50s8++8w7
0knDrQJLrauAzZB3rZNOY4MzVooyBN8uE43AOUzNzm5iqZlwjlfHaqEZ/MeMgkOEbMPjYWDEjDPL
bAa2zApdjjKZZoXBVZnI0doZD6yFn0wyxFNqJfBK5M/QZIAGOY+YzoPTAe1odWOOqvGbLEIrgxMH
HTcCBLp/EYTfLJQFDQQC9iAX3MDTmEZzIAuwzTgYIVKPj3mWJTIg0R+xEzgmxdkPYCFWQ04m9IB2
Z8dq6uMGx+wGwHStJFoYsJROmyVSETKugXGoKDAdiPKkdGGwQPbZIpZBzBYCeJ4kzHtOgfvkQSDg
5Gpwf8yuJbobWMDpGWwdxgG/TAnfgi8raeIUJG6/jgClkyMDlV3RNCamZhvQ7STuFW69C7BaGD8l
k7qPt4ifOm3uIw9lw610BKtOF4vWnyp+HT9jYI52nYm5gcCjZIkmXkQCJMqTdkiPwV+ha3Dwjo7o
bwS7N2QxKFmC2uAiCpQSD0PaD4pYw2SEPFcgKZ2JQM5kwAiCX6uPnHXl5REWZBl4bwpuaj7lrVgu
VA6HPP3t/Aqrc/SoY0FWTMFc/IrGHAybaryyvoqx39wx9urXl9/96/L8ppuYBuwjt6xG1F4vuiZg
Bb6HGwX+7okbz0DLgV0ds05boaTFfIox1IEbHR77c/kuNbdKhh4IwE0vZC4CgL3c62A/eESzjpnX
ECGmUc/uPge3eFzu0MSbUhjlfOoPoI8l8IUsx7uoS8xx2wwHoGf10ZEbd4RiytGFKCoRbcIp7/mA
W90amSsDAhThilJOlUqs6bXq5KU1641UkqAMwTouLs9f/Pry35evX19dXG4owQwOEHPZScdP5fCn
IAZ4KT+IbmpeV+Ofgpy5guPsQoFPEefgVt52E/YDztwFXWv0SN7CMdqmRU4Nu6n7vjZhK/o21qH0
BnKVCIKDsEOLUkfDelN9sqWDzCA6iXtQ45QHQa4XMhPrkV/jlI9DPh6P4TdI3CF9gMOYQhEIUHmi
VRVDQdjh9ILFIslqR/++i1kaujF0Ycs+BgO4ADK5FHMIH/SR1DULRSJvcVM4j8I8OiH3KYg1EJSI
Eo9uCdDZlGOICjGHd5A+LG4oSkWNG2wKc3g3cl7huJ/RGx6uJnA9IeL2+Z4LFa/SGre+0IyOvrzA
45ti4qmIICKbLiEQMwYOZVZk7JbnEpwH2FAO1EN87cJCip+nNqCmNARi/RyM3UfdNr2hmDuUOkv4
UoTj7titHrv2HJMPEC4NnVIf9Yd7e25FB9z9KirEf5nSFN3urY+3NgMWq1x+wJQqeTmb6dXdfyRQ
sCMDyeEuQUJEQXr3LI0SsROIGggUzzkqaju8w+3gBUWOQrw2IrveGPSjWqQPrPoBErF5Mb+GA7/d
t8KA15l2wAcH633uftvw3dVD8sm/rzhiV8qw3tBlsdqAr+J52CxwVC4BTR/YkaDpt2d3tXi6luPV
nrpMbyFNTICRGRrxexcObiYV4AqwpKBF6UYgiVBRCiwLkYiVqsUX6PJnvEiq9L+cn1uv704GD65x
Qqgidxv0DujMlg02yIVDBeSnyjDKywXm0a15KXHSs3W/zlPcLZ1CtUT6nnk0AQsE7HDlZFzjYCkS
28LL7jL0rxlOe/AoZx7ent1nO9RRTxpWZUdIKjCqJwveKklu2f2GCd2wrH137T8XMC8tk9bOeLlc
oNHDBr8G/J6paUvk3SPRft5bEQ7bw9SOLfceu5upa5UVrLrDpuk1TRfMCfyFiDBMXYk0se5YhrBl
2cq7AHCVS7bIpTEiLV2p4fqt9UkZhmIwhyl4ntdA9vsd8HjNKK/0XFW5z5H6T7uLKh4tycRiMvgs
X7VzLh+vqRJZ+dlULJLlqHKYFXFuCdHtSWwqDD/zFViVAitUWjEQXD5nEcBM6QyAcyUtw0Wgraqq
Y2F9ieElKHSRcGCinAsKR3FJEIvgLfFW8CAuoRPIQuNBReXZbpofR+VxVacdDq3GgeWZdrQ7D/pw
aW/Nn747vxDTItpLAne90un0ujxB64wmEE0lOpjwrlDmuJmyHdmHfVWprZDTLo83PTHWsHZDrlLe
1lsy3c3J5Li3d59CYT1tH9ZPl3Up/87PjpbiAbv/4UFb6Ds8RKLbUT6MfuDgn0c7qmJWQze6i2A7
14w75bQd6AX816cVu5U5Vnv+TFKv1RGbcl9Tg9y95O9WM3che4R6j4CynGPywpN1J0i8woDlTiCx
EvdQTqimb0Rg6Mbbx1K2USAQOd532+ikynldMAOBoMseIenLijxTuhZTUhAKA5Q5S7PPUBY+vimD
KovZVT0hQ84VBKcYm25EuL/YrYJJxSBhLrS9AccmCH6nSOAjN7pcB2YZGzrCw1qGTlvU1EXRc4fe
VUWtCsO2B8AG5zZ2tbZYVhBikVbtDnN1i7MWikF+HmF5klN/l7/Pd8VHpnLXsBGKWxmITa+R75bV
t4gAP67832cwUZVV/tZ9E7DFxUJJ7zkwPRLPEx5pbG8sf+/zgj6Uvq8frOHc29zXb0Bp/VJ0V8x6
Xa9yWs6Fw1IiHVJ5l4ONl7eJDsKFSAz/ZExuVmc704XRrvHCkHndxH1cY1aDrC6i/rZh4abB2TqW
/0O6tOrwjix1Apzo7lOn2lbrTF2rYTvb6Qil/QDpYEM1vDR//4O7h9q9QqtzaL+C+GRewABPk/rd
x/APZyYflJp/CiPZFUvrl1TDP62xtevl1la3M6aiq3yYSv6WVfznMpU6XjVj3W+7TzakcT3n7+Ez
1l5rrkq2yELi+J386KZRZyVzXUk1ml6S++5TSFJuZSjolwxvm23fcplPUJhOXhrTHYjXIQEJsBnB
LISL9DG8N6qAJCBTEovo1F5MDmLGbfuCbf2ApIjih5AOPJrlTw/EOXXXilXnCLUp2P5m26dtMTSx
1zEHqkjCeuNDmPOoArXPppBjUPdxrcl84Tq3MZfhZduJuzLgxmeDLUX+hlPxuRL18+YigX3dCnbL
kwIvRIGXGraATMREbI5EI0ZiE+RmSLc9DNksh0dYrbcXIY4XqXhvMP0CBwycs/jvnhOeiFKsxPU5
5FwGMz3CRpuKAcgUeSjeI2nILk13BfWMdioino7ZL3Ebrzld9CaC2nVQwDy1Vym11TLV+720umth
7G7hEWboQN7h+ODzx++fimN25aQFGTeJShvsP+6DCRSqWl7bbpt+MnbR0H28VpY50jRuRIAk34FU
tjuWmLAzGkHWFfZZArqakgIkS4S28HoJiqQlXf0r35E/LxIj8RfbBKDsvThszMG1NoRZ/RqlQ7Xw
bfU2IXf3Z6XWAh+pCwgCfS+SlWTDwyqVdVV7SmOtNKWZ/JO+UI0g8ZxvSSxadRRQ3lIrExnMmF0r
5BvIPRUBqCfPl8SyYgo7CMiG4VCz14P29Q94FOS2rpFYD1NTXCpGWH0E40zFokl4D0NIQcHx5cba
5geRK+vT8FUF7q4tSfbWj6EqYxuATSVojUTvZLXQekF0a9J2/wexBFO3hZsw9GUl6yWdGju9aCHT
E7nn3s5wPRbek67T3eGYXc3Ipqwmwnkgo7REQ0rYIbtNydp37C7LQ9bRce9wS6ahxhl7o0svro3w
faZRkYGYZVmrmoqZ8o4lJT6VTCbPMWbfFabb3shzINZSke151OH4rFMLQwSI98LdvF/H5H32ptAG
T7vSebX45C7fWz9zMkeSvRArr4xXjzP0y9ToaT0AqYAW2CFYuyXX++UbU4iUjI46gWphAOlt6wVu
d91V0716eYLPx5+kkrdlF3pfF21f7Y5TdFS2EXdU7VEoVV/u2tC87y2HRmFKLtiGwSqxsGPu2M2l
N0f76nnb0Rfvkr5YoDfYKYGLfgIfAmu/2EpZ+P7UHt7AUZjqBBOCxaJj6mRdl+LTzTocgWH3gV4y
cfPtrPbS9hHYbJPdGKE9OvYaLn3jxRSG7W2X9D0pu/9rQWjP3u6P4SME0FMZkA+qbn3IP402Qua4
IAe1vkd6q81su7juJ+/m/Fdro4567WMloqeIg95d9xFVTyjfoYOriYJ7WRTi71ry70DwFfiSAheI
NiLMPm3ghhm3N8Z927RG1QcXNjcvIfCCl6JPWx+oXAYFNt4jQEiDLkFXtPp7R1vHoHSvCkTLrBjr
BlHVhlerC5Qh2XPYln/h1X14oO3rEOXb4813yRsvjmSZi6ja36if1CaPYXLjWwQfiTPeHGP8sfjw
Sw+bbrGae58d1jDGG+O71/4229m9pVb+BRazgeTKT9zA9K4PSuBHHL799tv2he6zOHc+ANL4685v
Ld+qmCll3BdgGBgN/eBBrtIl5Bb4WQn8mk+2dB8r+TyA34+BYjvjjD09OPw72fcrw87VPMNu1Bcm
xLfbmp8xscUN/JoNvUQGviYpQjBgLIxgSck5ucDjwmQHgcBDiZ4MWz+oYKcWqcj1+GSan+FuEXfY
QOTKFiVocESJDESKWQ9+usY1Got8rn1zBW3ayRu/Y3Q0mSwWi3GUFmOVRxO3XE9mYeKE+/2PP7Pn
+HJIc5Pw74Wd7D+wxA7HX1L+BZ6L3l/HKrh3WwThWs3MAvf/HDsvXL+y290r++GM2vYTFSlb24No
IBRznr+lbbTIgLQBGPBcpomt/4UT8OC2CBhgeptjGgmxchKCjlNdzLdb14AjLpd1LlEilmetQmHW
23plcx8gmtgPSP0PUEsBAjMAFAAAAAgAWECCSbxDJ6+QEAAAeEoAABEAAAAAAAAAAAAAAAAAAAAA
ADR2enE0MWhpLnlvMS5odG1sUEsFBgAAAAABAAEAPwAAAL8QAAAAAA==
</internal-file></reference><sdl:ref-files><sdl:ref-file uid="0" id="Html.DependencyFileId" name="g5oawutc.axx.html" o-path="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtwidgets\qtwidgets-gestures-imagegestures-example.html" date="12/02/2016 08:02:49" expected-use="Generation"/></sdl:ref-files><file-info xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><value key="SDL:FileId">805a43c1-b568-44ce-8367-3badd90eab61</value><value key="SDL:CreationDate">09/06/2019 14:33:50</value><value key="SDL:OriginalFilePath">D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtwidgets\qtwidgets-gestures-imagegestures-example.html</value><value key="SDL:OriginalEncoding">utf-8</value><value key="SDL:QuickInsertsList">qBold;qItalic;qUnderline;qSubscript;qSuperscript;qSmallCaps</value><value key="NeedsSegmentRenumbering">False</value><value key="HtmlEntityFound">True</value><value key="HeadEntityFound">True</value><value key="MetaEntityFound">True</value><value key="BodyEntityFound">True</value><value key="HtmlVersion">html5</value><value key="OperatingSystem">Linux</value><value key="ParagraphTextDirections"></value><sniff-info><detected-encoding detection-level="Certain" encoding="utf-8"/><detected-source-lang detection-level="Likely" lang="en-US"/></sniff-info></file-info><sdl:filetype-info><sdl:filetype-id>Html 5 2.0.0.0</sdl:filetype-id></sdl:filetype-info><fmt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><fmt-def id="1"/><fmt-def id="2"><value key="TextColor">Blue</value><value key="Underline">True</value></fmt-def></fmt-defs><cxt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><cxt-def id="1" type="LocationDetails" purpose="Location"><props><value key="StartsAt">-1</value><value key="EndsAt">39</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="2" type="LocationDetails" purpose="Location"><props><value key="StartsAt">81</value><value key="EndsAt">181</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="3" type="sdl:meta" color="Control"><fmt id="1"/></cxt-def><cxt-def id="4" type="sdl:html-control" color="Control"><fmt id="1"/></cxt-def><cxt-def id="5" type="LocationDetails" purpose="Location"><props><value key="StartsAt">181</value><value key="EndsAt">227</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="6" type="sdl:title" color="Control"><fmt id="1"/></cxt-def><cxt-def id="7" type="LocationDetails" purpose="Location"><props><value key="StartsAt">639</value><value key="EndsAt">724</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="8" type="x-tm-table-cell"><fmt id="1"/></cxt-def><cxt-def id="9" type="sdl:table-row" color="Control"><fmt id="1"/></cxt-def><cxt-def id="10" type="sdl:table" color="Control"><fmt id="1"/></cxt-def><cxt-def id="11" type="div" code="DIV" name="Div" descr="A div section" color=""><fmt id="1"/></cxt-def><cxt-def id="12" type="sdl:body" color="Control"><fmt id="1"/></cxt-def><cxt-def id="13" type="sdl:link" color="Control"><fmt id="1"/></cxt-def><cxt-def id="14" type="LocationDetails" purpose="Location"><props><value key="StartsAt">729</value><value key="EndsAt">779</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="15" type="LocationDetails" purpose="Location"><props><value key="StartsAt">784</value><value key="EndsAt">811</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="16" type="LocationDetails" purpose="Location"><props><value key="StartsAt">862</value><value key="EndsAt">943</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="17" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1110</value><value key="EndsAt">1140</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="18" type="x-tm-heading"><fmt id="1"/></cxt-def><cxt-def id="19" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1151</value><value key="EndsAt">1242</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="20" type="x-tm-listitem"><fmt id="1"/></cxt-def><cxt-def id="21" type="sdl:unordered-list" color="Control"><fmt id="1"/></cxt-def><cxt-def id="22" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1248</value><value key="EndsAt">1347</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="23" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1429</value><value key="EndsAt">1469</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="24" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1469</value><value key="EndsAt">1553</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="25" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1553</value><value key="EndsAt">1596</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="26" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1596</value><value key="EndsAt">1695</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="27" type="sdl:paragraph" color="Control"><fmt id="1"/></cxt-def><cxt-def id="28" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1700</value><value key="EndsAt">1776</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="29" type="Attribute" code="ATT" name="Attribute" descr="alt attribute"><props><value key="TranslatesAttribute">alt</value><value key="InlineTranslatesAttribute">alt</value></props></cxt-def><cxt-def id="30" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1780</value><value key="EndsAt">2193</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="31" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2193</value><value key="EndsAt">2242</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="32" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2242</value><value key="EndsAt">2308</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="33" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2314</value><value key="EndsAt">2557</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="34" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2562</value><value key="EndsAt">4494</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="35" type="pre" code="PRE" name="Pre" descr="A preformated text section" color=""><fmt id="1"/></cxt-def><cxt-def id="36" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4501</value><value key="EndsAt">4784</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="37" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4784</value><value key="EndsAt">4837</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="38" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4837</value><value key="EndsAt">4911</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="39" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4917</value><value key="EndsAt">5049</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="40" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5054</value><value key="EndsAt">5911</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="41" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5918</value><value key="EndsAt">6202</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="42" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6207</value><value key="EndsAt">6426</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="43" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6431</value><value key="EndsAt">7206</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="44" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7213</value><value key="EndsAt">7412</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="45" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7417</value><value key="EndsAt">7772</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="46" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7777</value><value key="EndsAt">9803</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="47" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9810</value><value key="EndsAt">10049</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="48" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10054</value><value key="EndsAt">10308</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="49" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10313</value><value key="EndsAt">13163</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="50" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13170</value><value key="EndsAt">13529</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="51" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13534</value><value key="EndsAt">14223</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="52" type="LocationDetails" purpose="Location"><props><value key="StartsAt">14228</value><value key="EndsAt">15181</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="53" type="LocationDetails" purpose="Location"><props><value key="StartsAt">15186</value><value key="EndsAt">15374</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="54" type="LocationDetails" purpose="Location"><props><value key="StartsAt">15379</value><value key="EndsAt">17247</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="55" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17254</value><value key="EndsAt">17632</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="56" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17637</value><value key="EndsAt">17646</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="57" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17656</value><value key="EndsAt">17766</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="58" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17772</value><value key="EndsAt">17878</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="59" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17884</value><value key="EndsAt">17992</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="60" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17998</value><value key="EndsAt">18102</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="61" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18108</value><value key="EndsAt">18204</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="62" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18210</value><value key="EndsAt">18324</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="63" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18336</value><value key="EndsAt">18386</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="64" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18465</value><value key="EndsAt">18498</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="65" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18498</value><value key="EndsAt">19036</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def></cxt-defs><node-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><node-def id="1" parent="2"><cxt id="3"/></node-def><node-def id="2"><cxt id="4"/></node-def><node-def id="3" parent="1"><cxt id="3"/></node-def><node-def id="4" parent="3"><cxt id="6"/></node-def><node-def id="5" parent="6"><cxt id="9"/></node-def><node-def id="6" parent="7"><cxt id="10"/></node-def><node-def id="7" parent="8"><cxt id="11"/></node-def><node-def id="8" parent="9"><cxt id="11"/></node-def><node-def id="9" parent="10"><cxt id="11"/></node-def><node-def id="10" parent="11"><cxt id="11"/></node-def><node-def id="11" parent="12"><cxt id="12"/></node-def><node-def id="12" parent="3"><cxt id="13"/></node-def><node-def id="13" parent="5"><cxt id="8"/></node-def><node-def id="14" parent="5"><cxt id="8"/></node-def><node-def id="15" parent="5"><cxt id="8"/></node-def><node-def id="16" parent="17"><cxt id="9"/></node-def><node-def id="17" parent="7"><cxt id="10"/></node-def><node-def id="18" parent="16"><cxt id="8"/></node-def><node-def id="19" parent="20"><cxt id="11"/></node-def><node-def id="20" parent="21"><cxt id="11"/></node-def><node-def id="21" parent="22"><cxt id="11"/></node-def><node-def id="22" parent="23"><cxt id="11"/></node-def><node-def id="23" parent="9"><cxt id="11"/></node-def><node-def id="24" parent="19"><cxt id="18"/></node-def><node-def id="25" parent="19"><cxt id="21"/></node-def><node-def id="26" parent="25"><cxt id="20"/></node-def><node-def id="27" parent="25"><cxt id="20"/></node-def><node-def id="28" parent="21"><cxt id="18"/></node-def><node-def id="29" parent="21"><cxt id="11"/></node-def><node-def id="30" parent="29"><cxt id="27"/></node-def><node-def id="31" parent="29"><cxt id="27"/></node-def><node-def id="32" parent="29"><cxt id="27"/></node-def><node-def id="33" parent="29"><cxt id="18"/></node-def><node-def id="34" parent="29"><cxt id="27"/></node-def><node-def id="35" parent="29"><cxt id="35"/></node-def><node-def id="36" parent="29"><cxt id="27"/></node-def><node-def id="37" parent="29"><cxt id="18"/></node-def><node-def id="38" parent="29"><cxt id="27"/></node-def><node-def id="39" parent="29"><cxt id="35"/></node-def><node-def id="40" parent="29"><cxt id="27"/></node-def><node-def id="41" parent="29"><cxt id="27"/></node-def><node-def id="42" parent="29"><cxt id="35"/></node-def><node-def id="43" parent="29"><cxt id="27"/></node-def><node-def id="44" parent="29"><cxt id="27"/></node-def><node-def id="45" parent="29"><cxt id="35"/></node-def><node-def id="46" parent="29"><cxt id="27"/></node-def><node-def id="47" parent="29"><cxt id="27"/></node-def><node-def id="48" parent="29"><cxt id="35"/></node-def><node-def id="49" parent="29"><cxt id="27"/></node-def><node-def id="50" parent="29"><cxt id="27"/></node-def><node-def id="51" parent="29"><cxt id="27"/></node-def><node-def id="52" parent="29"><cxt id="27"/></node-def><node-def id="53" parent="29"><cxt id="35"/></node-def><node-def id="54" parent="29"><cxt id="27"/></node-def><node-def id="55" parent="29"><cxt id="27"/></node-def><node-def id="56" parent="29"><cxt id="21"/></node-def><node-def id="57" parent="56"><cxt id="20"/></node-def><node-def id="58" parent="56"><cxt id="20"/></node-def><node-def id="59" parent="56"><cxt id="20"/></node-def><node-def id="60" parent="56"><cxt id="20"/></node-def><node-def id="61" parent="56"><cxt id="20"/></node-def><node-def id="62" parent="56"><cxt id="20"/></node-def><node-def id="63" parent="11"><cxt id="11"/></node-def><node-def id="64" parent="63"><cxt id="27"/></node-def></node-defs><tag-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><tag id="4"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdoc/supported-platforms-and-configurations.html#qt-5-7&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="7"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-index.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="10"><bpt name="a" word-end="false">&lt;a name=&quot;toc&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="13"><bpt name="a" word-end="false">&lt;a href=&quot;#imagewidget-class-definition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="16"><bpt name="a" word-end="false">&lt;a href=&quot;#imagewidget-class-implementation&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="19"><bpt name="span" word-end="false">&lt;span class=&quot;subtitle&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="23"><bpt name="a" word-end="false">&lt;a name=&quot;details&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="27"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="30"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="33"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="36"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="39"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="42"><bpt name="a" word-end="false">&lt;a name=&quot;imagewidget-class-definition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="45"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="48"><bpt name="a" word-end="false">&lt;a href=&quot;qwidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="51"><bpt name="a" word-end="false">&lt;a href=&quot;qwidget.html#event&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="54"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="57"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="60"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="63"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="66"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="69"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="72"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="75"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="78"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="81"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="84"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="87"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="90"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="93"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="96"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="99"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="102"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="105"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="108"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="111"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="114"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="117"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="120"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="123"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="126"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="129"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="132"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="135"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="138"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="141"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="144"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="147"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="150"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="153"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="156"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="159"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="162"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="165"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="168"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="171"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="174"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="177"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="180"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="183"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="186"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="189"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="192"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="195"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="198"><bpt name="a" word-end="false">&lt;a name=&quot;imagewidget-class-implementation&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="201"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="204"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="207"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="210"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="213"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="216"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="219"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="222"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="225"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="228"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="231"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="234"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="237"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="240"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="243"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="246"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="249"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="252"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="255"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="258"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="261"><bpt name="a" word-end="false">&lt;a href=&quot;qwidget.html#grabGesture&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="264"><bpt name="a" word-end="false">&lt;a href=&quot;qwidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="267"><bpt name="a" word-end="false">&lt;a href=&quot;qwidget.html#event&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="270"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="273"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="276"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="279"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="282"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="285"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="288"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="291"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="294"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="297"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="300"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="303"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="306"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="309"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="312"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="315"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="318"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="321"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="324"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="327"><bpt name="a" word-end="false">&lt;a href=&quot;qwidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="330"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="333"><bpt name="a" word-end="false">&lt;a href=&quot;qgestureevent.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="336"><bpt name="a" word-end="false">&lt;a href=&quot;qgestureevent.html#gesture&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="339"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="342"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="345"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="348"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="351"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="354"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="357"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="360"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="363"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="366"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="369"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="372"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="375"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="378"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="381"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="384"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="387"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="390"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="393"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="396"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="399"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="402"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="405"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="408"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="411"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="414"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="417"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="420"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="423"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="426"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="429"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="432"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="435"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="438"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="441"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="444"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="447"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="450"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="453"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="456"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="459"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="462"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="465"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="468"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="471"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="474"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="477"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="480"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="483"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="486"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="489"><bpt name="a" word-end="false">&lt;a href=&quot;qgesture.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="492"><bpt name="a" word-end="false">&lt;a href=&quot;qgesture.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="495"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="498"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="501"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="504"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="507"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="510"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="513"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="516"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="519"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="522"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="525"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="528"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="531"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="534"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="537"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="540"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="543"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="546"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="549"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="552"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="555"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="558"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="561"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="564"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="567"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="570"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="573"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="576"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="579"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="582"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="585"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="588"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="591"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="594"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="597"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="600"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="603"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="606"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="609"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="612"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="615"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="618"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="621"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="624"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="627"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="630"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="633"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="636"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="639"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="642"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="645"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="648"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="651"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="654"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="657"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="660"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="663"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="666"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="669"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="672"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="675"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="678"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="681"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="684"><bpt name="a" word-end="false">&lt;a href=&quot;qpinchgesture.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="687"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="690"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="693"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="696"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="699"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="702"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="705"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="708"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="711"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="714"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="717"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="720"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="723"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="726"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="729"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="732"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="735"><bpt name="a" word-end="false">&lt;a href=&quot;qgesture.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="738"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="741"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="744"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="747"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="750"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="753"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="756"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="759"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="762"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="765"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="768"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="771"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="774"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="777"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="780"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="783"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="786"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="789"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="792"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="795"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="798"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="801"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="804"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="807"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="810"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="813"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="816"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="819"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="822"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="825"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="828"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="831"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="834"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="837"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="840"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="843"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="846"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="849"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="852"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="855"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="858"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="861"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="864"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="867"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="870"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="873"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="876"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="879"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-gestures-imagegestures-imagewidget-cpp.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="882"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-gestures-imagegestures-imagewidget-h.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="885"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-gestures-imagegestures-mainwidget-cpp.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="888"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-gestures-imagegestures-mainwidget-h.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="891"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-gestures-imagegestures-main-cpp.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="894"><bpt name="a" word-end="false">&lt;a href=&quot;qtwidgets-gestures-imagegestures-imagegestures-pro.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="900"><bpt name="a" word-end="false">&lt;a href=&quot;http://www.gnu.org/licenses/fdl.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="0"><ph name="xml" word-end="false">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</ph><props><value key="ProcessingInstructionTag">xml</value></props></tag><tag id="1"><ph name="Comment" word-end="false">&lt;!-- imagegestures.qdoc --&gt;</ph></tag><tag id="20"><ph name="Comment" word-end="false">&lt;!-- $$$gestures/imagegestures-description --&gt;</ph></tag><tag id="24"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/imagegestures-example.jpg&quot; alt=&quot;<sub xid="8fa9c12b-5053-463a-b980-c8e13075196e"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="895"><ph name="Comment" word-end="false">&lt;!-- @@@gestures/imagegestures --&gt;</ph></tag><tag id="896"><ph name="copy" word-end="false" seg-hint="IncludeWithText">&amp;copy;</ph><props><value key="PlaceholderForMappedEntity">true</value></props></tag><tag id="897"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="901"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag></tag-defs></header><body><group><sdl:cxts><sdl:cxt id="1"/></sdl:cxts><trans-unit id="1f024183-a6b2-4b15-8513-90f3a7ddfc3f"><source><x id="0"/>
</source><seg-source><x id="0"/>
</seg-source><target><x id="0"/>
</target></trans-unit></group><group><sdl:cxts><sdl:cxt id="2"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="3"/></sdl:cxts><trans-unit id="75ec6ea6-3a15-4210-b071-764e362a62a0"><source><x id="1"/></source><seg-source><x id="1"/></seg-source><target><x id="1"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="5"/><sdl:cxt id="6"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="4"/></sdl:cxts><trans-unit id="b907f381-415e-4683-8ecc-1d9fce22e686"><source>Image Gestures Example | Qt Widgets 5.7</source><seg-source><mrk mtype="seg" mid="1">Image Gestures Example | Qt Widgets 5.7</mrk></seg-source><target><mrk mtype="seg" mid="1"/></target><sdl:seg-defs><sdl:seg id="1"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="13"/></sdl:cxts><trans-unit id="0f04ad31-060a-4277-8fab-fa118bec0976"><source><g id="4">Qt 5.7</g></source><seg-source><g id="4"><mrk mtype="seg" mid="2">Qt 5.7</mrk></g></seg-source><target><g id="4"><mrk mtype="seg" mid="2">Qt 5.7</mrk></g></target><sdl:seg-defs><sdl:seg id="2" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/19/2019 12:14:40</sdl:value><sdl:value key="modified_on">03/19/2019 12:14:40</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">-1724339963</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="14"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="14"/></sdl:cxts><trans-unit id="b7ed07c5-a5e4-4c2c-bf59-f8fe2bcef658"><source><g id="7">Qt Widgets</g></source><seg-source><g id="7"><mrk mtype="seg" mid="3">Qt Widgets</mrk></g></seg-source><target><g id="7"><mrk mtype="seg" mid="3"/></g></target><sdl:seg-defs><sdl:seg id="3"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="15"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="15"/></sdl:cxts><trans-unit id="91d5ca71-0fba-4e70-9b11-f2bc9123287e"><source>Image Gestures Example</source><seg-source><mrk mtype="seg" mid="4">Image Gestures Example</mrk></seg-source><target><mrk mtype="seg" mid="4"/></target><sdl:seg-defs><sdl:seg id="4"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="16"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="18"/></sdl:cxts><trans-unit id="3bd72554-bdab-45c5-bb29-519aa1e47557"><source>Qt 5.7.1 Reference Documentation</source><seg-source><mrk mtype="seg" mid="5">Qt 5.7.1 Reference Documentation</mrk></seg-source><target><mrk mtype="seg" mid="5"/></target><sdl:seg-defs><sdl:seg id="5"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="17"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="24"/></sdl:cxts><trans-unit id="834e06ed-2829-4c97-85a8-129291d1fe15"><source><g id="10">Contents</g></source><seg-source><g id="10"><mrk mtype="seg" mid="6">Contents</mrk></g></seg-source><target><g id="10"><mrk mtype="seg" mid="6">Содержание</mrk></g></target><sdl:seg-defs><sdl:seg id="6" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">TRAPP</sdl:value><sdl:value key="created_on">03/15/2019 00:04:32</sdl:value><sdl:value key="modified_on">03/15/2019 00:04:32</sdl:value><sdl:value key="last_modified_by">TRAPP</sdl:value><sdl:value key="SDL:OriginalTranslationHash">-1819472995</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="19"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="26"/></sdl:cxts><trans-unit id="58dca186-8460-4de7-b8fc-98df951affd0"><source><g id="13">ImageWidget Class Definition</g></source><seg-source><g id="13"><mrk mtype="seg" mid="7">ImageWidget Class Definition</mrk></g></seg-source><target><g id="13"><mrk mtype="seg" mid="7"/></g></target><sdl:seg-defs><sdl:seg id="7"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="22"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="27"/></sdl:cxts><trans-unit id="f5313b3c-d258-487e-bb6c-7583459ca3cb"><source><g id="16">ImageWidget Class Implementation</g></source><seg-source><g id="16"><mrk mtype="seg" mid="8">ImageWidget Class Implementation</mrk></g></seg-source><target><g id="16"><mrk mtype="seg" mid="8"/></g></target><sdl:seg-defs><sdl:seg id="8"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="23"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="28"/></sdl:cxts><trans-unit id="2b919b20-9b15-4ca0-9a6b-b8e5476002b9"><source>Image Gestures Example</source><seg-source><mrk mtype="seg" mid="9">Image Gestures Example</mrk></seg-source><target><mrk mtype="seg" mid="9"/></target><sdl:seg-defs><sdl:seg id="9"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="24"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="21"/></sdl:cxts><trans-unit id="cb6eed48-4f9d-41f7-9198-629f5d85edb6"><source><g id="19"/> <x id="20"/></source><seg-source><g id="19"/> <x id="20"/></seg-source><target><g id="19"/> <x id="20"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="25"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="29"/></sdl:cxts><trans-unit id="edab5958-1cc5-4846-8203-489c9cff1935"><source><g id="23"/></source><seg-source><g id="23"/></seg-source><target><g id="23"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="26"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="30"/></sdl:cxts><trans-unit id="b91136e5-2291-4361-8f68-8ca3254651d8"><source>This example shows how to enable gestures for a widget and use gesture input to perform actions.</source><seg-source><mrk mtype="seg" mid="10">This example shows how to enable gestures for a widget and use gesture input to perform actions.</mrk></seg-source><target><mrk mtype="seg" mid="10"/></target><sdl:seg-defs><sdl:seg id="10"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="28"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="52ac2c70-1c7d-467c-b7f8-e13234c4596e"><source><x id="24" xid="8fa9c12b-5053-463a-b980-c8e13075196e"/></source><seg-source><x id="24" xid="8fa9c12b-5053-463a-b980-c8e13075196e"/></seg-source><target><x id="24" xid="8fa9c12b-5053-463a-b980-c8e13075196e"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="29"/></sdl:cxts><trans-unit id="8fa9c12b-5053-463a-b980-c8e13075196e"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="30"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="32"/></sdl:cxts><trans-unit id="lockTU_8329b21b-9672-4408-a77b-e6c21d939e9c" translate="no" sdl:locktype="Structure"><source><g id="27">MainWidget</g></source></trans-unit><trans-unit id="lockTU_eee30c39-97df-43ea-a15f-ae12f4a980e5" translate="no" sdl:locktype="Structure"><source><g id="30">ImageWidget</g></source></trans-unit><trans-unit id="lockTU_51c0d21b-0532-4042-9c55-45c4f66d4a13" translate="no" sdl:locktype="Structure"><source><g id="33">MainWidget</g></source></trans-unit><trans-unit id="lockTU_f838e762-dcff-49e1-947d-7f7f1b72cabd" translate="no" sdl:locktype="Structure"><source><g id="36">ImageWidget</g></source></trans-unit><trans-unit id="lockTU_f5d67b44-2bd7-476b-bfda-bc5eaddce914" translate="no" sdl:locktype="Structure"><source><g id="39">ImageWidget</g></source></trans-unit><trans-unit id="lockTU_6820634c-2058-4537-a02f-5c3a2629dc71" translate="no" sdl:locktype="Structure"><source><g id="27">MainWidget</g></source></trans-unit><trans-unit id="lockTU_a52802d5-3c67-4ded-bda5-2104f9234636" translate="no" sdl:locktype="Structure"><source><g id="30">ImageWidget</g></source></trans-unit><trans-unit id="lockTU_b07ef6a2-884b-491f-9c01-b101db9266c5" translate="no" sdl:locktype="Structure"><source><g id="33">MainWidget</g></source></trans-unit><trans-unit id="lockTU_7209364e-5d28-455a-84a1-6db4f291392d" translate="no" sdl:locktype="Structure"><source><g id="36">ImageWidget</g></source></trans-unit><trans-unit id="lockTU_16e21862-d00c-4fca-a60a-ca4d5473a262" translate="no" sdl:locktype="Structure"><source><g id="39">ImageWidget</g></source></trans-unit><trans-unit id="3a9143cf-7eed-4a31-bb93-cb236d4bb132"><source>We use two classes to create the user interface for the application: <x id="locked1" xid="lockTU_6820634c-2058-4537-a02f-5c3a2629dc71"/> and <x id="locked2" xid="lockTU_a52802d5-3c67-4ded-bda5-2104f9234636"/>. The <x id="locked3" xid="lockTU_b07ef6a2-884b-491f-9c01-b101db9266c5"/> class is simply used as a container for the <x id="locked4" xid="lockTU_7209364e-5d28-455a-84a1-6db4f291392d"/> class, which we will configure to accept gesture input. Since we are interested in the way gestures are used, we will concentrate on the implementation of the <x id="locked5" xid="lockTU_16e21862-d00c-4fca-a60a-ca4d5473a262"/> class.</source><seg-source><mrk mtype="seg" mid="11">We use two classes to create the user interface for the application:</mrk> <mrk mtype="seg" mid="12"><x id="locked6" xid="lockTU_8329b21b-9672-4408-a77b-e6c21d939e9c"/> and <x id="locked7" xid="lockTU_eee30c39-97df-43ea-a15f-ae12f4a980e5"/>.</mrk> <mrk mtype="seg" mid="13">The <x id="locked8" xid="lockTU_51c0d21b-0532-4042-9c55-45c4f66d4a13"/> class is simply used as a container for the <x id="locked9" xid="lockTU_f838e762-dcff-49e1-947d-7f7f1b72cabd"/> class, which we will configure to accept gesture input.</mrk> <mrk mtype="seg" mid="14">Since we are interested in the way gestures are used, we will concentrate on the implementation of the <x id="locked10" xid="lockTU_f5d67b44-2bd7-476b-bfda-bc5eaddce914"/> class.</mrk></seg-source><target><mrk mtype="seg" mid="11"/> <mrk mtype="seg" mid="12"/> <mrk mtype="seg" mid="13"/> <mrk mtype="seg" mid="14"/></target><sdl:seg-defs><sdl:seg id="11"/><sdl:seg id="12"/><sdl:seg id="13"/><sdl:seg id="14"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="29"/></sdl:cxts><trans-unit id="33b35ce2-b247-4274-abc6-01229c92bba2"><source><g id="42"/></source><seg-source><g id="42"/></seg-source><target><g id="42"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="32"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="33"/></sdl:cxts><trans-unit id="70ffe906-c273-4fac-b3ce-f3b5e983c2a6"><source>ImageWidget Class Definition</source><seg-source><mrk mtype="seg" mid="15">ImageWidget Class Definition</mrk></seg-source><target><mrk mtype="seg" mid="15"/></target><sdl:seg-defs><sdl:seg id="15"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="33"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="34"/></sdl:cxts><trans-unit id="lockTU_b25fa6ac-687a-47a6-84cf-0fa028d76005" translate="no" sdl:locktype="Structure"><source><g id="45">ImageWidget</g></source></trans-unit><trans-unit id="lockTU_b2efd4b1-c065-4603-9f76-044c381dc356" translate="no" sdl:locktype="Structure"><source><g id="45">ImageWidget</g></source></trans-unit><trans-unit id="846214b1-4291-4631-bfaf-a5e25625cd9f"><source>The <x id="locked11" xid="lockTU_b2efd4b1-c065-4603-9f76-044c381dc356"/> class is a simple <g id="48">QWidget</g> subclass that reimplements the general <g id="51">QWidget::event</g>() handler function in addition to several more specific event handlers:</source><seg-source><mrk mtype="seg" mid="16">The <x id="locked12" xid="lockTU_b25fa6ac-687a-47a6-84cf-0fa028d76005"/> class is a simple <g id="48">QWidget</g> subclass that reimplements the general <g id="51">QWidget::event</g>() handler function in addition to several more specific event handlers:</mrk></seg-source><target><mrk mtype="seg" mid="16"/></target><sdl:seg-defs><sdl:seg id="16"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="34"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="35"/></sdl:cxts><trans-unit id="55d4140f-3b8b-4cf2-bcb4-6bf5112603f3"><source><g id="54">class</g> ImageWidget : <g id="57">public</g> <g id="60">QWidget</g> { Q_OBJECT <g id="63">public</g>: ImageWidget(<g id="66">QWidget</g> <g id="69">*</g>parent <g id="72">=</g> <g id="75">0</g>); <g id="78">void</g> openDirectory(<g id="81">const</g> <g id="84">QString</g> <g id="87">&amp;</g>path); <g id="90">void</g> grabGestures(<g id="93">const</g> <g id="96">QList</g><g id="99">&lt;</g><g id="102">Qt</g><g id="105">::</g>GestureType<g id="108">&gt;</g> <g id="111">&amp;</g>gestures); <g id="114">protected</g>: bool event(<g id="117">QEvent</g> <g id="120">*</g>event) Q_DECL_OVERRIDE; <g id="123">void</g> paintEvent(<g id="126">QPaintEvent</g> <g id="129">*</g>event) Q_DECL_OVERRIDE; <g id="132">void</g> resizeEvent(<g id="135">QResizeEvent</g> <g id="138">*</g>event) Q_DECL_OVERRIDE; <g id="141">void</g> mouseDoubleClickEvent(<g id="144">QMouseEvent</g> <g id="147">*</g>event) Q_DECL_OVERRIDE; <g id="150">private</g>: bool gestureEvent(<g id="153">QGestureEvent</g> <g id="156">*</g>event); <g id="159">void</g> panTriggered(<g id="162">QPanGesture</g><g id="165">*</g>); <g id="168">void</g> pinchTriggered(<g id="171">QPinchGesture</g><g id="174">*</g>); <g id="177">void</g> swipeTriggered(<g id="180">QSwipeGesture</g><g id="183">*</g>); ... };</source><seg-source><mrk mtype="seg" mid="17"><g id="54">class</g> ImageWidget : <g id="57">public</g> <g id="60">QWidget</g> { Q_OBJECT <g id="63">public</g>:</mrk> <mrk mtype="seg" mid="18">ImageWidget(<g id="66">QWidget</g> <g id="69">*</g>parent <g id="72">=</g> <g id="75">0</g>); <g id="78">void</g> openDirectory(<g id="81">const</g> <g id="84">QString</g> <g id="87">&amp;</g>path); <g id="90">void</g> grabGestures(<g id="93">const</g> <g id="96">QList</g><g id="99">&lt;</g><g id="102">Qt</g><g id="105">::</g>GestureType<g id="108">&gt;</g> <g id="111">&amp;</g>gestures); <g id="114">protected</g>: bool event(<g id="117">QEvent</g> <g id="120">*</g>event) Q_DECL_OVERRIDE; <g id="123">void</g> paintEvent(<g id="126">QPaintEvent</g> <g id="129">*</g>event) Q_DECL_OVERRIDE; <g id="132">void</g> resizeEvent(<g id="135">QResizeEvent</g> <g id="138">*</g>event) Q_DECL_OVERRIDE; <g id="141">void</g> mouseDoubleClickEvent(<g id="144">QMouseEvent</g> <g id="147">*</g>event) Q_DECL_OVERRIDE; <g id="150">private</g>: bool gestureEvent(<g id="153">QGestureEvent</g> <g id="156">*</g>event); <g id="159">void</g> panTriggered(<g id="162">QPanGesture</g><g id="165">*</g>); <g id="168">void</g> pinchTriggered(<g id="171">QPinchGesture</g><g id="174">*</g>); <g id="177">void</g> swipeTriggered(<g id="180">QSwipeGesture</g><g id="183">*</g>); ...</mrk> <mrk mtype="seg" mid="19">};</mrk></seg-source><target><mrk mtype="seg" mid="17"/> <mrk mtype="seg" mid="18"/> <mrk mtype="seg" mid="19"/></target><sdl:seg-defs><sdl:seg id="17"/><sdl:seg id="18"/><sdl:seg id="19"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="36"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="lockTU_afd915c7-80bf-4b03-a1bb-94ef232a1474" translate="no" sdl:locktype="Structure"><source><g id="189">panTriggered()</g></source></trans-unit><trans-unit id="lockTU_2e00fbf4-f0c1-4217-b2d1-5d5caf730384" translate="no" sdl:locktype="Structure"><source><g id="186">gestureEvent()</g></source></trans-unit><trans-unit id="lockTU_fed246a5-a466-43cc-aade-b75df5bcdc4f" translate="no" sdl:locktype="Structure"><source><g id="189">panTriggered()</g></source></trans-unit><trans-unit id="lockTU_3bc992e9-ae3c-4aee-b519-c37f5c53cd83" translate="no" sdl:locktype="Structure"><source><g id="192">pinchTriggered()</g></source></trans-unit><trans-unit id="lockTU_f22e1a87-76bb-4ffa-939f-5d6075242572" translate="no" sdl:locktype="Structure"><source><g id="195">swipeTriggered()</g></source></trans-unit><trans-unit id="lockTU_ff4f307c-48f5-43a5-91d5-68b91016242c" translate="no" sdl:locktype="Structure"><source><g id="186">gestureEvent()</g></source></trans-unit><trans-unit id="lockTU_a5861657-a2d1-4b6b-a1fa-e75f0225cdec" translate="no" sdl:locktype="Structure"><source><g id="189">panTriggered()</g></source></trans-unit><trans-unit id="lockTU_a7601f2f-87a8-46c9-83c9-720ec35c3941" translate="no" sdl:locktype="Structure"><source><g id="192">pinchTriggered()</g></source></trans-unit><trans-unit id="lockTU_15183548-4db0-4cb2-b756-ce7f2f09b42a" translate="no" sdl:locktype="Structure"><source><g id="195">swipeTriggered()</g></source></trans-unit><trans-unit id="015c35ab-0142-4730-8ad0-89a0b7bf6a05"><source>We also implement a private helper function, <x id="locked13" xid="lockTU_ff4f307c-48f5-43a5-91d5-68b91016242c"/>, to help manage gesture events delivered to the widget, and three functions to perform actions based on gestures: <x id="locked14" xid="lockTU_a5861657-a2d1-4b6b-a1fa-e75f0225cdec"/>, <x id="locked15" xid="lockTU_a7601f2f-87a8-46c9-83c9-720ec35c3941"/> and <x id="locked16" xid="lockTU_15183548-4db0-4cb2-b756-ce7f2f09b42a"/>.</source><seg-source><mrk mtype="seg" mid="20">We also implement a private helper function, <x id="locked17" xid="lockTU_2e00fbf4-f0c1-4217-b2d1-5d5caf730384"/>, to help manage gesture events delivered to the widget, and three functions to perform actions based on gestures:</mrk> <x id="locked18" xid="lockTU_fed246a5-a466-43cc-aade-b75df5bcdc4f"/><mrk mtype="seg" mid="21">, <x id="locked19" xid="lockTU_3bc992e9-ae3c-4aee-b519-c37f5c53cd83"/> and <x id="locked20" xid="lockTU_f22e1a87-76bb-4ffa-939f-5d6075242572"/>.</mrk></seg-source><target><mrk mtype="seg" mid="20"/> <x id="locked21" xid="lockTU_afd915c7-80bf-4b03-a1bb-94ef232a1474"/><mrk mtype="seg" mid="21"/></target><sdl:seg-defs><sdl:seg id="20"/><sdl:seg id="21"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="37"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="29"/></sdl:cxts><trans-unit id="e708930e-fb32-40dc-a7ea-bf825b328bea"><source><g id="198"/></source><seg-source><g id="198"/></seg-source><target><g id="198"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="38"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="37"/></sdl:cxts><trans-unit id="1f7b3b8f-972f-4735-8a52-bea281ecaacd"><source>ImageWidget Class Implementation</source><seg-source><mrk mtype="seg" mid="22">ImageWidget Class Implementation</mrk></seg-source><target><mrk mtype="seg" mid="22"/></target><sdl:seg-defs><sdl:seg id="22"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="39"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="38"/></sdl:cxts><trans-unit id="63e2c0da-676f-4f38-a2cd-6cd36e5a3499"><source>In the widget&apos;s constructor, we begin by setting up various parameters that will be used to control the way images are displayed.</source><seg-source><mrk mtype="seg" mid="23">In the widget&apos;s constructor, we begin by setting up various parameters that will be used to control the way images are displayed.</mrk></seg-source><target><mrk mtype="seg" mid="23"/></target><sdl:seg-defs><sdl:seg id="23"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="40"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="39"/></sdl:cxts><trans-unit id="97bd96b4-0294-404d-af8b-63e7c44d89ea"><source>ImageWidget<g id="201">::</g>ImageWidget(<g id="204">QWidget</g> <g id="207">*</g>parent) : <g id="210">QWidget</g>(parent)<g id="213">,</g> position(<g id="216">0</g>)<g id="219">,</g> horizontalOffset(<g id="222">0</g>)<g id="225">,</g> verticalOffset(<g id="228">0</g>)<g id="231">,</g> rotationAngle(<g id="234">0</g>)<g id="237">,</g> scaleFactor(<g id="240">1</g>)<g id="243">,</g> currentStepScaleFactor(<g id="246">1</g>) { setMinimumSize(<g id="249">QSize</g>(<g id="252">100</g><g id="255">,</g><g id="258">100</g>)); }</source><seg-source><mrk mtype="seg" mid="24">ImageWidget<g id="201">::</g>ImageWidget(<g id="204">QWidget</g> <g id="207">*</g>parent) :</mrk> <mrk mtype="seg" mid="25"><g id="210">QWidget</g>(parent)<g id="213">,</g> position(<g id="216">0</g>)<g id="219">,</g> horizontalOffset(<g id="222">0</g>)<g id="225">,</g> verticalOffset(<g id="228">0</g>)<g id="231">,</g> rotationAngle(<g id="234">0</g>)<g id="237">,</g> scaleFactor(<g id="240">1</g>)<g id="243">,</g> currentStepScaleFactor(<g id="246">1</g>) { setMinimumSize(<g id="249">QSize</g>(<g id="252">100</g><g id="255">,</g><g id="258">100</g>)); }</mrk></seg-source><target><mrk mtype="seg" mid="24"/> <mrk mtype="seg" mid="25"/></target><sdl:seg-defs><sdl:seg id="24"/><sdl:seg id="25"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="41"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="40"/></sdl:cxts><trans-unit id="15024e37-c20e-4a67-8554-4029ac900119"><source>We enable three of the standard gestures for the widget by calling <g id="261">QWidget::grabGesture</g>() with the types of gesture we need. These will be recognized by the application&apos;s default gesture recognizer, and events will be delivered to our widget.</source><seg-source><mrk mtype="seg" mid="26">We enable three of the standard gestures for the widget by calling <g id="261">QWidget::grabGesture</g>() with the types of gesture we need.</mrk> <mrk mtype="seg" mid="27">These will be recognized by the application&apos;s default gesture recognizer, and events will be delivered to our widget.</mrk></seg-source><target><mrk mtype="seg" mid="26"/> <mrk mtype="seg" mid="27"/></target><sdl:seg-defs><sdl:seg id="26"/><sdl:seg id="27"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="42"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="41"/></sdl:cxts><trans-unit id="220ef82a-5969-4b84-893d-5fbd620988d9"><source>Since <g id="264">QWidget</g> does not define a specific event handler for gestures, the widget needs to reimplement the general <g id="267">QWidget::event</g>() to receive gesture events.</source><seg-source><mrk mtype="seg" mid="28">Since <g id="264">QWidget</g> does not define a specific event handler for gestures, the widget needs to reimplement the general <g id="267">QWidget::event</g>() to receive gesture events.</mrk></seg-source><target><mrk mtype="seg" mid="28"/></target><sdl:seg-defs><sdl:seg id="28"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="43"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="42"/></sdl:cxts><trans-unit id="59e34a3e-e070-459f-8e5e-c46b7edd359b"><source>bool ImageWidget<g id="270">::</g>event(<g id="273">QEvent</g> <g id="276">*</g>event) { <g id="279">if</g> (event<g id="282">-</g><g id="285">&gt;</g>type() <g id="288">=</g><g id="291">=</g> <g id="294">QEvent</g><g id="297">::</g>Gesture) <g id="300">return</g> gestureEvent(<g id="303">static_cast</g><g id="306">&lt;</g><g id="309">QGestureEvent</g><g id="312">*</g><g id="315">&gt;</g>(event)); <g id="318">return</g> <g id="321">QWidget</g><g id="324">::</g>event(event); }</source><seg-source><mrk mtype="seg" mid="29">bool ImageWidget<g id="270">::</g>event(<g id="273">QEvent</g> <g id="276">*</g>event) { <g id="279">if</g> (event<g id="282">-</g><g id="285">&gt;</g>type() <g id="288">=</g><g id="291">=</g> <g id="294">QEvent</g><g id="297">::</g>Gesture) <g id="300">return</g> gestureEvent(<g id="303">static_cast</g><g id="306">&lt;</g><g id="309">QGestureEvent</g><g id="312">*</g><g id="315">&gt;</g>(event)); <g id="318">return</g> <g id="321">QWidget</g><g id="324">::</g>event(event); }</mrk></seg-source><target><mrk mtype="seg" mid="29"/></target><sdl:seg-defs><sdl:seg id="29"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="44"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="ec6dc2e3-6e13-4122-846d-d3c4d1a05670"><source>We implement the event handler to delegate gesture events to a private function specifically written for the task, and pass all other events to <g id="327">QWidget</g>&apos;s implementation.</source><seg-source><mrk mtype="seg" mid="30">We implement the event handler to delegate gesture events to a private function specifically written for the task, and pass all other events to <g id="327">QWidget</g>&apos;s implementation.</mrk></seg-source><target><mrk mtype="seg" mid="30"/></target><sdl:seg-defs><sdl:seg id="30"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="45"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="44"/></sdl:cxts><trans-unit id="lockTU_e28df56a-a843-4658-8960-33f06ab616d3" translate="no" sdl:locktype="Structure"><source><g id="330">gestureHandler()</g></source></trans-unit><trans-unit id="lockTU_6a923f3b-ec43-42da-80de-ed4693adc055" translate="no" sdl:locktype="Structure"><source><g id="330">gestureHandler()</g></source></trans-unit><trans-unit id="3e184f40-1ffa-4363-ab66-9a834d24ac85"><source>The <x id="locked22" xid="lockTU_6a923f3b-ec43-42da-80de-ed4693adc055"/> function examines the gestures supplied by the newly-delivered <g id="333">QGestureEvent</g>. Since only one gesture of a given type can be used on a widget at any particular time, we can check for each gesture type using the <g id="336">QGestureEvent::gesture</g>() function:</source><seg-source><mrk mtype="seg" mid="31">The <x id="locked23" xid="lockTU_e28df56a-a843-4658-8960-33f06ab616d3"/> function examines the gestures supplied by the newly-delivered <g id="333">QGestureEvent</g>.</mrk> <mrk mtype="seg" mid="32">Since only one gesture of a given type can be used on a widget at any particular time, we can check for each gesture type using the <g id="336">QGestureEvent::gesture</g>() function:</mrk></seg-source><target><mrk mtype="seg" mid="31"/> <mrk mtype="seg" mid="32"/></target><sdl:seg-defs><sdl:seg id="31"/><sdl:seg id="32"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="46"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="45"/></sdl:cxts><trans-unit id="3b3ae547-db5e-44bd-bdd4-ce18c5ba9580"><source>bool ImageWidget<g id="339">::</g>gestureEvent(<g id="342">QGestureEvent</g> <g id="345">*</g>event) { qCDebug(lcExample) <g id="348">&lt;</g><g id="351">&lt;</g> <g id="354">&quot;gestureEvent():&quot;</g> <g id="357">&lt;</g><g id="360">&lt;</g> event; <g id="363">if</g> (<g id="366">QGesture</g> <g id="369">*</g>swipe <g id="372">=</g> event<g id="375">-</g><g id="378">&gt;</g>gesture(<g id="381">Qt</g><g id="384">::</g>SwipeGesture)) swipeTriggered(<g id="387">static_cast</g><g id="390">&lt;</g><g id="393">QSwipeGesture</g> <g id="396">*</g><g id="399">&gt;</g>(swipe)); <g id="402">else</g> <g id="405">if</g> (<g id="408">QGesture</g> <g id="411">*</g>pan <g id="414">=</g> event<g id="417">-</g><g id="420">&gt;</g>gesture(<g id="423">Qt</g><g id="426">::</g>PanGesture)) panTriggered(<g id="429">static_cast</g><g id="432">&lt;</g><g id="435">QPanGesture</g> <g id="438">*</g><g id="441">&gt;</g>(pan)); <g id="444">if</g> (<g id="447">QGesture</g> <g id="450">*</g>pinch <g id="453">=</g> event<g id="456">-</g><g id="459">&gt;</g>gesture(<g id="462">Qt</g><g id="465">::</g>PinchGesture)) pinchTriggered(<g id="468">static_cast</g><g id="471">&lt;</g><g id="474">QPinchGesture</g> <g id="477">*</g><g id="480">&gt;</g>(pinch)); <g id="483">return</g> <g id="486">true</g>; }</source><seg-source><mrk mtype="seg" mid="33">bool ImageWidget<g id="339">::</g>gestureEvent(<g id="342">QGestureEvent</g> <g id="345">*</g>event) { qCDebug(lcExample) <g id="348">&lt;</g><g id="351">&lt;</g> <g id="354">&quot;gestureEvent():&quot;</g></mrk> <mrk mtype="seg" mid="34"><g id="357">&lt;</g><g id="360">&lt;</g> event; <g id="363">if</g> (<g id="366">QGesture</g> <g id="369">*</g>swipe <g id="372">=</g> event<g id="375">-</g><g id="378">&gt;</g>gesture(<g id="381">Qt</g><g id="384">::</g>SwipeGesture)) swipeTriggered(<g id="387">static_cast</g><g id="390">&lt;</g><g id="393">QSwipeGesture</g> <g id="396">*</g><g id="399">&gt;</g>(swipe)); <g id="402">else</g> <g id="405">if</g> (<g id="408">QGesture</g> <g id="411">*</g>pan <g id="414">=</g> event<g id="417">-</g><g id="420">&gt;</g>gesture(<g id="423">Qt</g><g id="426">::</g>PanGesture)) panTriggered(<g id="429">static_cast</g><g id="432">&lt;</g><g id="435">QPanGesture</g> <g id="438">*</g><g id="441">&gt;</g>(pan)); <g id="444">if</g> (<g id="447">QGesture</g> <g id="450">*</g>pinch <g id="453">=</g> event<g id="456">-</g><g id="459">&gt;</g>gesture(<g id="462">Qt</g><g id="465">::</g>PinchGesture)) pinchTriggered(<g id="468">static_cast</g><g id="471">&lt;</g><g id="474">QPinchGesture</g> <g id="477">*</g><g id="480">&gt;</g>(pinch)); <g id="483">return</g> <g id="486">true</g>; }</mrk></seg-source><target><mrk mtype="seg" mid="33"/> <mrk mtype="seg" mid="34"/></target><sdl:seg-defs><sdl:seg id="33"/><sdl:seg id="34"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="47"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="46"/></sdl:cxts><trans-unit id="2b7c43e3-f0dc-45a6-9d8e-189cf5c679df"><source>If a <g id="489">QGesture</g> object is supplied for a certain type of gesture, we call a special purpose function to deal with it, casting the gesture object to the appropriate <g id="492">QGesture</g> subclass.</source><seg-source><mrk mtype="seg" mid="35">If a <g id="489">QGesture</g> object is supplied for a certain type of gesture, we call a special purpose function to deal with it, casting the gesture object to the appropriate <g id="492">QGesture</g> subclass.</mrk></seg-source><target><mrk mtype="seg" mid="35"/></target><sdl:seg-defs><sdl:seg id="35"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="48"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="47"/></sdl:cxts><trans-unit id="lockTU_8197ec01-288e-4891-b90e-6ede61d435b5" translate="no" sdl:locktype="Structure"><source><g id="495">pinchTriggered()</g></source></trans-unit><trans-unit id="lockTU_d38fe9d2-7fdc-47a5-a037-a87eb88202aa" translate="no" sdl:locktype="Structure"><source><g id="495">pinchTriggered()</g></source></trans-unit><trans-unit id="8acb1fa6-c712-4142-8866-fade82601868"><source>To illustrate how a standard gesture can be interpreted by an application, we show the implementation of the <x id="locked24" xid="lockTU_d38fe9d2-7fdc-47a5-a037-a87eb88202aa"/> function, which handles the pinch gesture when the user moves two fingers around on the display or input device:</source><seg-source><mrk mtype="seg" mid="36">To illustrate how a standard gesture can be interpreted by an application, we show the implementation of the <x id="locked25" xid="lockTU_8197ec01-288e-4891-b90e-6ede61d435b5"/> function, which handles the pinch gesture when the user moves two fingers around on the display or input device:</mrk></seg-source><target><mrk mtype="seg" mid="36"/></target><sdl:seg-defs><sdl:seg id="36"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="49"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="48"/></sdl:cxts><trans-unit id="4813a0c0-a6dc-45fc-b478-6eedfab9d094"><source><g id="498">void</g> ImageWidget<g id="501">::</g>pinchTriggered(<g id="504">QPinchGesture</g> <g id="507">*</g>gesture) { <g id="510">QPinchGesture</g><g id="513">::</g>ChangeFlags changeFlags <g id="516">=</g> gesture<g id="519">-</g><g id="522">&gt;</g>changeFlags(); <g id="525">if</g> (changeFlags <g id="528">&amp;</g> <g id="531">QPinchGesture</g><g id="534">::</g>RotationAngleChanged) { <g id="537">qreal</g> rotationDelta <g id="540">=</g> gesture<g id="543">-</g><g id="546">&gt;</g>rotationAngle() <g id="549">-</g> gesture<g id="552">-</g><g id="555">&gt;</g>lastRotationAngle(); rotationAngle <g id="558">+</g><g id="561">=</g> rotationDelta; qCDebug(lcExample) <g id="564">&lt;</g><g id="567">&lt;</g> <g id="570">&quot;pinchTriggered(): rotate by&quot;</g> <g id="573">&lt;</g><g id="576">&lt;</g> rotationDelta <g id="579">&lt;</g><g id="582">&lt;</g> <g id="585">&quot;-&gt;&quot;</g> <g id="588">&lt;</g><g id="591">&lt;</g> rotationAngle; } <g id="594">if</g> (changeFlags <g id="597">&amp;</g> <g id="600">QPinchGesture</g><g id="603">::</g>ScaleFactorChanged) { currentStepScaleFactor <g id="606">=</g> gesture<g id="609">-</g><g id="612">&gt;</g>totalScaleFactor(); qCDebug(lcExample) <g id="615">&lt;</g><g id="618">&lt;</g> <g id="621">&quot;pinchTriggered(): zoom by&quot;</g> <g id="624">&lt;</g><g id="627">&lt;</g> gesture<g id="630">-</g><g id="633">&gt;</g>scaleFactor() <g id="636">&lt;</g><g id="639">&lt;</g> <g id="642">&quot;-&gt;&quot;</g> <g id="645">&lt;</g><g id="648">&lt;</g> currentStepScaleFactor; } <g id="651">if</g> (gesture<g id="654">-</g><g id="657">&gt;</g>state() <g id="660">=</g><g id="663">=</g> <g id="666">Qt</g><g id="669">::</g>GestureFinished) { scaleFactor <g id="672">*</g><g id="675">=</g> currentStepScaleFactor; currentStepScaleFactor <g id="678">=</g> <g id="681">1</g>; } update(); }</source><seg-source><mrk mtype="seg" mid="37"><g id="498">void</g> ImageWidget<g id="501">::</g>pinchTriggered(<g id="504">QPinchGesture</g> <g id="507">*</g>gesture) { <g id="510">QPinchGesture</g><g id="513">::</g>ChangeFlags changeFlags <g id="516">=</g> gesture<g id="519">-</g><g id="522">&gt;</g>changeFlags(); <g id="525">if</g> (changeFlags <g id="528">&amp;</g> <g id="531">QPinchGesture</g><g id="534">::</g>RotationAngleChanged) { <g id="537">qreal</g> rotationDelta <g id="540">=</g> gesture<g id="543">-</g><g id="546">&gt;</g>rotationAngle() <g id="549">-</g> gesture<g id="552">-</g><g id="555">&gt;</g>lastRotationAngle(); rotationAngle <g id="558">+</g><g id="561">=</g> rotationDelta; qCDebug(lcExample) <g id="564">&lt;</g><g id="567">&lt;</g> <g id="570">&quot;pinchTriggered(): rotate by&quot;</g> <g id="573">&lt;</g><g id="576">&lt;</g> rotationDelta <g id="579">&lt;</g><g id="582">&lt;</g> <g id="585">&quot;-&gt;&quot;</g> <g id="588">&lt;</g><g id="591">&lt;</g> rotationAngle; } <g id="594">if</g> (changeFlags <g id="597">&amp;</g> <g id="600">QPinchGesture</g><g id="603">::</g>ScaleFactorChanged) { currentStepScaleFactor <g id="606">=</g> gesture<g id="609">-</g><g id="612">&gt;</g>totalScaleFactor(); qCDebug(lcExample) <g id="615">&lt;</g><g id="618">&lt;</g> <g id="621">&quot;pinchTriggered(): zoom by&quot;</g> <g id="624">&lt;</g><g id="627">&lt;</g> gesture<g id="630">-</g><g id="633">&gt;</g>scaleFactor() <g id="636">&lt;</g><g id="639">&lt;</g> <g id="642">&quot;-&gt;&quot;</g> <g id="645">&lt;</g><g id="648">&lt;</g> currentStepScaleFactor; } <g id="651">if</g> (gesture<g id="654">-</g><g id="657">&gt;</g>state() <g id="660">=</g><g id="663">=</g> <g id="666">Qt</g><g id="669">::</g>GestureFinished) { scaleFactor <g id="672">*</g><g id="675">=</g> currentStepScaleFactor; currentStepScaleFactor <g id="678">=</g> <g id="681">1</g>; } update(); }</mrk></seg-source><target><mrk mtype="seg" mid="37"/></target><sdl:seg-defs><sdl:seg id="37"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="50"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="49"/></sdl:cxts><trans-unit id="6f993c60-766d-4bdf-8921-f47f86505366"><source>The <g id="684">QPinchGesture</g> class provides properties to interpret the changing distance between the two touch points as a zoom factor, and the angle delta as a rotation to be applied to the image. The center point between the touch points could be used to drag the image, but in this example we use the pan gesture for that purpose.</source><seg-source><mrk mtype="seg" mid="38">The <g id="684">QPinchGesture</g> class provides properties to interpret the changing distance between the two touch points as a zoom factor, and the angle delta as a rotation to be applied to the image.</mrk> <mrk mtype="seg" mid="39">The center point between the touch points could be used to drag the image, but in this example we use the pan gesture for that purpose.</mrk></seg-source><target><mrk mtype="seg" mid="38"/> <mrk mtype="seg" mid="39"/></target><sdl:seg-defs><sdl:seg id="38"/><sdl:seg id="39"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="51"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="50"/></sdl:cxts><trans-unit id="lockTU_c95bb3ac-4280-431a-af09-949cc1e9c851" translate="no" sdl:locktype="Structure"><source><g id="687">scaleFactor()</g></source></trans-unit><trans-unit id="lockTU_be762ae2-4b10-49fb-8a6e-4281c95fb564" translate="no" sdl:locktype="Structure"><source><g id="690">totalScaleFactor()</g></source></trans-unit><trans-unit id="lockTU_f77846c8-f020-4350-a6ea-0e07a299cc87" translate="no" sdl:locktype="Structure"><source><g id="693">totalScaleFactor()</g></source></trans-unit><trans-unit id="lockTU_303c3e24-3368-400b-995d-7fe7e331e560" translate="no" sdl:locktype="Structure"><source><g id="696">totalScaleFactor()</g></source></trans-unit><trans-unit id="lockTU_f6bf46ba-8c08-43d9-8a6b-d34be9eb77d8" translate="no" sdl:locktype="Structure"><source><g id="699">currentStepScaleFactor</g></source></trans-unit><trans-unit id="lockTU_4a9ba6b7-df1f-4205-b850-2f617acbd8e8" translate="no" sdl:locktype="Structure"><source><g id="702">paintEvent()</g></source></trans-unit><trans-unit id="lockTU_95ceb5ac-449f-432b-adbe-17c097cad897" translate="no" sdl:locktype="Structure"><source><g id="705">scaleFactor()</g></source></trans-unit><trans-unit id="lockTU_3dac3821-97db-46be-a308-3d13430ba4d9" translate="no" sdl:locktype="Structure"><source><g id="687">scaleFactor()</g></source></trans-unit><trans-unit id="lockTU_0f8034ca-28a6-452f-8a32-7688985a4937" translate="no" sdl:locktype="Structure"><source><g id="690">totalScaleFactor()</g></source></trans-unit><trans-unit id="lockTU_fbaa5c79-a33b-426b-8b16-d50147cf8db1" translate="no" sdl:locktype="Structure"><source><g id="693">totalScaleFactor()</g></source></trans-unit><trans-unit id="lockTU_01ede173-0f0a-452b-8b49-b0d3ff00b64e" translate="no" sdl:locktype="Structure"><source><g id="696">totalScaleFactor()</g></source></trans-unit><trans-unit id="lockTU_33c927d4-7f04-458b-8e09-529a3ace8876" translate="no" sdl:locktype="Structure"><source><g id="699">currentStepScaleFactor</g></source></trans-unit><trans-unit id="lockTU_cb78056f-c5d3-4732-93c0-d1540cd9a9a0" translate="no" sdl:locktype="Structure"><source><g id="702">paintEvent()</g></source></trans-unit><trans-unit id="lockTU_81d99b61-fd06-4a43-b06d-c4a629560e91" translate="no" sdl:locktype="Structure"><source><g id="705">scaleFactor()</g></source></trans-unit><trans-unit id="1dafc260-290e-414b-9b60-b26118e8d795"><source>The <x id="locked26" xid="lockTU_3dac3821-97db-46be-a308-3d13430ba4d9"/> is a relative value representing how much the zoom should change from one event to the next, whereas <x id="locked27" xid="lockTU_0f8034ca-28a6-452f-8a32-7688985a4937"/> provides the amount of zoom that has been expressed since the gesture began. When the touch points are released and another gesture begins, <x id="locked28" xid="lockTU_fbaa5c79-a33b-426b-8b16-d50147cf8db1"/> will begin again at 1.0. In this case we store <x id="locked29" xid="lockTU_01ede173-0f0a-452b-8b49-b0d3ff00b64e"/> into the <x id="locked30" xid="lockTU_33c927d4-7f04-458b-8e09-529a3ace8876"/> variable so that it can be used in <x id="locked31" xid="lockTU_cb78056f-c5d3-4732-93c0-d1540cd9a9a0"/> to scale the image. Alternatively it would be possible to simply multiply the stored total scale factor by <x id="locked32" xid="lockTU_81d99b61-fd06-4a43-b06d-c4a629560e91"/> here in the pinch handler.</source><seg-source><mrk mtype="seg" mid="40">The <x id="locked33" xid="lockTU_c95bb3ac-4280-431a-af09-949cc1e9c851"/> is a relative value representing how much the zoom should change from one event to the next, whereas <x id="locked34" xid="lockTU_be762ae2-4b10-49fb-8a6e-4281c95fb564"/> provides the amount of zoom that has been expressed since the gesture began.</mrk> <mrk mtype="seg" mid="41">When the touch points are released and another gesture begins, <x id="locked35" xid="lockTU_f77846c8-f020-4350-a6ea-0e07a299cc87"/> will begin again at 1.0.</mrk> <mrk mtype="seg" mid="42">In this case we store <x id="locked36" xid="lockTU_303c3e24-3368-400b-995d-7fe7e331e560"/> into the <x id="locked37" xid="lockTU_f6bf46ba-8c08-43d9-8a6b-d34be9eb77d8"/> variable so that it can be used in <x id="locked38" xid="lockTU_4a9ba6b7-df1f-4205-b850-2f617acbd8e8"/> to scale the image.</mrk> <mrk mtype="seg" mid="43">Alternatively it would be possible to simply multiply the stored total scale factor by <x id="locked39" xid="lockTU_95ceb5ac-449f-432b-adbe-17c097cad897"/> here in the pinch handler.</mrk></seg-source><target><mrk mtype="seg" mid="40"/> <mrk mtype="seg" mid="41"/> <mrk mtype="seg" mid="42"/> <mrk mtype="seg" mid="43"/></target><sdl:seg-defs><sdl:seg id="40"/><sdl:seg id="41"/><sdl:seg id="42"/><sdl:seg id="43"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="52"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="51"/></sdl:cxts><trans-unit id="lockTU_a0628b7d-2c50-4dcd-8002-db048ffcbcc6" translate="no" sdl:locktype="Structure"><source><g id="708">rotationAngle()</g></source></trans-unit><trans-unit id="lockTU_9bda8105-6b45-4a77-9f16-796855db9c4d" translate="no" sdl:locktype="Structure"><source><g id="711">lastRotationAngle()</g></source></trans-unit><trans-unit id="lockTU_5558a748-51d8-4158-9ab9-576460a40954" translate="no" sdl:locktype="Structure"><source><g id="714">rotationAngle()</g></source></trans-unit><trans-unit id="lockTU_45b4065f-c927-4ef5-a6fe-1a875afa3136" translate="no" sdl:locktype="Structure"><source><g id="717">rotationAngle</g></source></trans-unit><trans-unit id="lockTU_ef6766db-2ce0-49d2-8ec7-e9446320463f" translate="no" sdl:locktype="Structure"><source><g id="720">paintEvent()</g></source></trans-unit><trans-unit id="lockTU_e5712126-1950-47a4-acfb-e182908fd051" translate="no" sdl:locktype="Structure"><source><g id="723">totalRotationAngle()</g></source></trans-unit><trans-unit id="lockTU_0b9ed6de-1993-498d-a91a-6fdf26fcfdd5" translate="no" sdl:locktype="Structure"><source><g id="726">rotationAngle</g></source></trans-unit><trans-unit id="lockTU_753e49da-9ab7-4ef0-b055-d3cb1ad023e0" translate="no" sdl:locktype="Structure"><source><g id="729">rotationAngle</g></source></trans-unit><trans-unit id="lockTU_b7d62ee4-11de-4e46-a528-627b674c4f6f" translate="no" sdl:locktype="Structure"><source><g id="732">paintEvent()</g></source></trans-unit><trans-unit id="lockTU_82bee135-1f60-45f6-b62c-e852e70a39b0" translate="no" sdl:locktype="Structure"><source><g id="708">rotationAngle()</g></source></trans-unit><trans-unit id="lockTU_702734d4-c744-49b1-95aa-f99f549e4e3a" translate="no" sdl:locktype="Structure"><source><g id="711">lastRotationAngle()</g></source></trans-unit><trans-unit id="lockTU_5863f4e4-9203-4d8f-9187-d0570968038e" translate="no" sdl:locktype="Structure"><source><g id="714">rotationAngle()</g></source></trans-unit><trans-unit id="lockTU_ba4a3b79-fdc0-4d9e-b466-afdbe18462ff" translate="no" sdl:locktype="Structure"><source><g id="717">rotationAngle</g></source></trans-unit><trans-unit id="lockTU_dbf77c17-15d9-4ae5-9ce1-0dff1dd64c76" translate="no" sdl:locktype="Structure"><source><g id="720">paintEvent()</g></source></trans-unit><trans-unit id="lockTU_2b32ac13-16bf-47a2-9065-4dd185c18bae" translate="no" sdl:locktype="Structure"><source><g id="723">totalRotationAngle()</g></source></trans-unit><trans-unit id="lockTU_b9a60ebe-0f0c-4f1b-842d-aec4ba2032c6" translate="no" sdl:locktype="Structure"><source><g id="726">rotationAngle</g></source></trans-unit><trans-unit id="lockTU_6a27ce92-d03b-4a39-8324-d4a107bfaf64" translate="no" sdl:locktype="Structure"><source><g id="729">rotationAngle</g></source></trans-unit><trans-unit id="lockTU_e2f9951b-7698-4a0e-b8c5-e9fad23a6ced" translate="no" sdl:locktype="Structure"><source><g id="732">paintEvent()</g></source></trans-unit><trans-unit id="6e5f7f12-04e9-4c97-a61b-132bfbc7db0a"><source>In contrast, <x id="locked40" xid="lockTU_82bee135-1f60-45f6-b62c-e852e70a39b0"/> represents the amount of rotation since the pinch gesture began, while <x id="locked41" xid="lockTU_702734d4-c744-49b1-95aa-f99f549e4e3a"/> provides the previous value. So it is necessary to subtract in order to get an incremental delta. When the user begins a new pinch gesture, <x id="locked42" xid="lockTU_5863f4e4-9203-4d8f-9187-d0570968038e"/> will start from zero, and we want the image to begin to rotate from its current angle. This is achieved by adding the delta to the stored <x id="locked43" xid="lockTU_ba4a3b79-fdc0-4d9e-b466-afdbe18462ff"/> (which will be applied in <x id="locked44" xid="lockTU_dbf77c17-15d9-4ae5-9ce1-0dff1dd64c76"/>). If we simply assigned <x id="locked45" xid="lockTU_2b32ac13-16bf-47a2-9065-4dd185c18bae"/> to the stored <x id="locked46" xid="lockTU_b9a60ebe-0f0c-4f1b-842d-aec4ba2032c6"/>, a new gesture would cause the image to reset to a right-side-up orientation before beginning to rotate again. But it would be possible to store the rotation angle since the gesture began and add it to <x id="locked47" xid="lockTU_6a27ce92-d03b-4a39-8324-d4a107bfaf64"/> in <x id="locked48" xid="lockTU_e2f9951b-7698-4a0e-b8c5-e9fad23a6ced"/>, just as we store the amount of zoom since the gesture began.</source><seg-source><mrk mtype="seg" mid="44">In contrast, <x id="locked49" xid="lockTU_a0628b7d-2c50-4dcd-8002-db048ffcbcc6"/> represents the amount of rotation since the pinch gesture began, while <x id="locked50" xid="lockTU_9bda8105-6b45-4a77-9f16-796855db9c4d"/> provides the previous value.</mrk> <mrk mtype="seg" mid="45">So it is necessary to subtract in order to get an incremental delta.</mrk> <mrk mtype="seg" mid="46">When the user begins a new pinch gesture, <x id="locked51" xid="lockTU_5558a748-51d8-4158-9ab9-576460a40954"/> will start from zero, and we want the image to begin to rotate from its current angle.</mrk> <mrk mtype="seg" mid="47">This is achieved by adding the delta to the stored <x id="locked52" xid="lockTU_45b4065f-c927-4ef5-a6fe-1a875afa3136"/> (which will be applied in <x id="locked53" xid="lockTU_ef6766db-2ce0-49d2-8ec7-e9446320463f"/>).</mrk> <mrk mtype="seg" mid="48">If we simply assigned <x id="locked54" xid="lockTU_e5712126-1950-47a4-acfb-e182908fd051"/> to the stored <x id="locked55" xid="lockTU_0b9ed6de-1993-498d-a91a-6fdf26fcfdd5"/>, a new gesture would cause the image to reset to a right-side-up orientation before beginning to rotate again.</mrk> <mrk mtype="seg" mid="49">But it would be possible to store the rotation angle since the gesture began and add it to <x id="locked56" xid="lockTU_753e49da-9ab7-4ef0-b055-d3cb1ad023e0"/> in <x id="locked57" xid="lockTU_b7d62ee4-11de-4e46-a528-627b674c4f6f"/>, just as we store the amount of zoom since the gesture began.</mrk></seg-source><target><mrk mtype="seg" mid="44"/> <mrk mtype="seg" mid="45"/> <mrk mtype="seg" mid="46"/> <mrk mtype="seg" mid="47"/> <mrk mtype="seg" mid="48"/> <mrk mtype="seg" mid="49"/></target><sdl:seg-defs><sdl:seg id="44"/><sdl:seg id="45"/><sdl:seg id="46"/><sdl:seg id="47"/><sdl:seg id="48"/><sdl:seg id="49"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="53"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="52"/></sdl:cxts><trans-unit id="28709de8-7a06-4a19-96d4-aa3dca3cdebb"><source>The pan and swipe gestures in this example are also handled in separate functions, and use the values of properties from the <g id="735">QGesture</g> objects passed to them.</source><seg-source><mrk mtype="seg" mid="50">The pan and swipe gestures in this example are also handled in separate functions, and use the values of properties from the <g id="735">QGesture</g> objects passed to them.</mrk></seg-source><target><mrk mtype="seg" mid="50"/></target><sdl:seg-defs><sdl:seg id="50"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="54"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="53"/></sdl:cxts><trans-unit id="9b0e63b8-85ee-4521-8abd-192230854774"><source><g id="738">void</g> ImageWidget<g id="741">::</g>paintEvent(<g id="744">QPaintEvent</g><g id="747">*</g>) { <g id="750">QPainter</g> p(<g id="753">this</g>); <g id="756">const</g> <g id="759">qreal</g> iw <g id="762">=</g> currentImage<g id="765">.</g>width(); <g id="768">const</g> <g id="771">qreal</g> ih <g id="774">=</g> currentImage<g id="777">.</g>height(); <g id="780">const</g> <g id="783">qreal</g> wh <g id="786">=</g> height(); <g id="789">const</g> <g id="792">qreal</g> ww <g id="795">=</g> width(); p<g id="798">.</g>translate(ww<g id="801">/</g><g id="804">2</g><g id="807">,</g> wh<g id="810">/</g><g id="813">2</g>); p<g id="816">.</g>translate(horizontalOffset<g id="819">,</g> verticalOffset); p<g id="822">.</g>rotate(rotationAngle); p<g id="825">.</g>scale(currentStepScaleFactor <g id="828">*</g> scaleFactor<g id="831">,</g> currentStepScaleFactor <g id="834">*</g> scaleFactor); p<g id="837">.</g>translate(<g id="840">-</g>iw<g id="843">/</g><g id="846">2</g><g id="849">,</g> <g id="852">-</g>ih<g id="855">/</g><g id="858">2</g>); p<g id="861">.</g>drawImage(<g id="864">0</g><g id="867">,</g> <g id="870">0</g><g id="873">,</g> currentImage); }</source><seg-source><mrk mtype="seg" mid="51"><g id="738">void</g> ImageWidget<g id="741">::</g>paintEvent(<g id="744">QPaintEvent</g><g id="747">*</g>) { <g id="750">QPainter</g> p(<g id="753">this</g>); <g id="756">const</g> <g id="759">qreal</g> iw <g id="762">=</g> currentImage<g id="765">.</g>width(); <g id="768">const</g> <g id="771">qreal</g> ih <g id="774">=</g> currentImage<g id="777">.</g>height(); <g id="780">const</g> <g id="783">qreal</g> wh <g id="786">=</g> height(); <g id="789">const</g> <g id="792">qreal</g> ww <g id="795">=</g> width(); p<g id="798">.</g>translate(ww<g id="801">/</g><g id="804">2</g><g id="807">,</g> wh<g id="810">/</g><g id="813">2</g>); p<g id="816">.</g>translate(horizontalOffset<g id="819">,</g> verticalOffset); p<g id="822">.</g>rotate(rotationAngle); p<g id="825">.</g>scale(currentStepScaleFactor <g id="828">*</g> scaleFactor<g id="831">,</g> currentStepScaleFactor <g id="834">*</g> scaleFactor); p<g id="837">.</g>translate(<g id="840">-</g>iw<g id="843">/</g><g id="846">2</g><g id="849">,</g> <g id="852">-</g>ih<g id="855">/</g><g id="858">2</g>); p<g id="861">.</g>drawImage(<g id="864">0</g><g id="867">,</g> <g id="870">0</g><g id="873">,</g> currentImage); }</mrk></seg-source><target><mrk mtype="seg" mid="51"/></target><sdl:seg-defs><sdl:seg id="51"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="55"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="54"/></sdl:cxts><trans-unit id="lockTU_89f266a0-a5d2-4812-b449-0eb4384d06b3" translate="no" sdl:locktype="Structure"><source><g id="876">paintEvent()</g></source></trans-unit><trans-unit id="lockTU_9c6b9377-f251-499f-8ed2-6a210b008d33" translate="no" sdl:locktype="Structure"><source><g id="876">paintEvent()</g></source></trans-unit><trans-unit id="6c33bed2-415f-4800-9d36-dbb9130f9c53"><source>In <x id="locked58" xid="lockTU_9c6b9377-f251-499f-8ed2-6a210b008d33"/>, scaleFactor represents the zoom level before the pinch gesture began, while currentStepScaleFactor represents the additional zoom factor while a pinch gesture is in progress. But for rotation, only the current rotationAngle is stored. The horizontal and vertical offsets represent the distance that the image has been dragged by the pan gesture.</source><seg-source><mrk mtype="seg" mid="52">In <x id="locked59" xid="lockTU_89f266a0-a5d2-4812-b449-0eb4384d06b3"/>, scaleFactor represents the zoom level before the pinch gesture began, while currentStepScaleFactor represents the additional zoom factor while a pinch gesture is in progress.</mrk> <mrk mtype="seg" mid="53">But for rotation, only the current rotationAngle is stored.</mrk> <mrk mtype="seg" mid="54">The horizontal and vertical offsets represent the distance that the image has been dragged by the pan gesture.</mrk></seg-source><target><mrk mtype="seg" mid="52"/> <mrk mtype="seg" mid="53"/> <mrk mtype="seg" mid="54"/></target><sdl:seg-defs><sdl:seg id="52"/><sdl:seg id="53"/><sdl:seg id="54"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="56"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="55"/></sdl:cxts><trans-unit id="850052d1-d7b7-4474-87ca-a5dc4221a102"><source>Files:</source><seg-source><mrk mtype="seg" mid="55">Files:</mrk></seg-source><target><mrk mtype="seg" mid="55">Файлы:</mrk></target><sdl:seg-defs><sdl:seg id="55" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100"><sdl:value key="created_by">TRAPP</sdl:value><sdl:value key="created_on">03/15/2019 00:04:31</sdl:value><sdl:value key="modified_on">03/15/2019 00:04:31</sdl:value><sdl:value key="last_modified_by">TRAPP</sdl:value><sdl:value key="SDL:OriginalTranslationHash">874853416</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="57"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="57"/></sdl:cxts><trans-unit id="ecda356d-ea00-4a86-93db-7d074d7aae4a"><source><g id="879">gestures/imagegestures/imagewidget.cpp</g></source><seg-source><g id="879"><mrk mtype="seg" mid="56">gestures/imagegestures/imagewidget.cpp</mrk></g></seg-source><target><g id="879"><mrk mtype="seg" mid="56"/></g></target><sdl:seg-defs><sdl:seg id="56"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="58"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="58"/></sdl:cxts><trans-unit id="816505e4-9a7e-491d-bf0e-fb50e619c266"><source><g id="882">gestures/imagegestures/imagewidget.h</g></source><seg-source><g id="882"><mrk mtype="seg" mid="57">gestures/imagegestures/imagewidget.h</mrk></g></seg-source><target><g id="882"><mrk mtype="seg" mid="57"/></g></target><sdl:seg-defs><sdl:seg id="57"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="59"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="59"/></sdl:cxts><trans-unit id="25e3b266-6295-4c79-a090-95493be08b78"><source><g id="885">gestures/imagegestures/mainwidget.cpp</g></source><seg-source><g id="885"><mrk mtype="seg" mid="58">gestures/imagegestures/mainwidget.cpp</mrk></g></seg-source><target><g id="885"><mrk mtype="seg" mid="58"/></g></target><sdl:seg-defs><sdl:seg id="58"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="60"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="60"/></sdl:cxts><trans-unit id="b3119538-5270-44e7-980c-05f580320148"><source><g id="888">gestures/imagegestures/mainwidget.h</g></source><seg-source><g id="888"><mrk mtype="seg" mid="59">gestures/imagegestures/mainwidget.h</mrk></g></seg-source><target><g id="888"><mrk mtype="seg" mid="59"/></g></target><sdl:seg-defs><sdl:seg id="59"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="61"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="61"/></sdl:cxts><trans-unit id="14a02f9e-6f26-4740-a224-fc3070998e24"><source><g id="891">gestures/imagegestures/main.cpp</g></source><seg-source><g id="891"><mrk mtype="seg" mid="60">gestures/imagegestures/main.cpp</mrk></g></seg-source><target><g id="891"><mrk mtype="seg" mid="60"/></g></target><sdl:seg-defs><sdl:seg id="60"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="62"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="62"/></sdl:cxts><trans-unit id="c5d7007a-5194-4d59-9192-035d0678196b"><source><g id="894">gestures/imagegestures/imagegestures.pro</g></source><seg-source><g id="894"><mrk mtype="seg" mid="61">gestures/imagegestures/imagegestures.pro</mrk></g></seg-source><target><g id="894"><mrk mtype="seg" mid="61"/></g></target><sdl:seg-defs><sdl:seg id="61"/></sdl:seg-defs></trans-unit></group><group><sdl:cxts><sdl:cxt id="63"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="21"/></sdl:cxts><trans-unit id="831a2d71-28d3-4b41-b3a3-dbf1032e5087"><source><x id="895"/></source><seg-source><x id="895"/></seg-source><target><x id="895"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="64"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="64"/></sdl:cxts><trans-unit id="b2b1ff25-4968-49df-b0a1-65aa46aeb215"><source><x id="896"/></source><seg-source><x id="896"/></seg-source><target><x id="896"/></target></trans-unit></group><group><sdl:cxts><sdl:cxt id="65"/><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="64"/></sdl:cxts><trans-unit id="5927cf9a-81da-48dd-952d-09a24e88dc1b"><source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="897"/> The documentation provided herein is licensed under the terms of the <g id="900">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="901"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</source><seg-source><mrk mtype="seg" mid="62">2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.</mrk><x id="897"/> <mrk mtype="seg" mid="63">The documentation provided herein is licensed under the terms of the <g id="900">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.</mrk><x id="901"/> <mrk mtype="seg" mid="64">Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide.</mrk> <mrk mtype="seg" mid="65">All other trademarks are property of their respective owners.</mrk></seg-source><target><mrk mtype="seg" mid="62"/><x id="897"/> <mrk mtype="seg" mid="63">Документация, представленная здесь, лицензирована в соответствии с условиями <g id="900">Лицензии свободной документации GNU версии 1.3</g> , опубликованной Фондом свободного программного обеспечения.</mrk><x id="901"/> <mrk mtype="seg" mid="64">Qt и соответствующие логотипы являются товарными знаками The Qt Company Ltd. в Финляндии и/или других странах мира.</mrk> <mrk mtype="seg" mid="65">Все остальные товарные знаки являются собственностью соответствующих владельцев.</mrk></target><sdl:seg-defs><sdl:seg id="62"/><sdl:seg id="63" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/18/2019 08:01:56</sdl:value><sdl:value key="modified_on">04/23/2019 08:53:32</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">460311339</sdl:value></sdl:seg><sdl:seg id="64" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/18/2019 08:02:00</sdl:value><sdl:value key="modified_on">04/23/2019 08:53:35</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">998242797</sdl:value></sdl:seg><sdl:seg id="65" conf="Translated" origin="tm" origin-system="Microsoft_TM_en-US_ru-RU" percent="100" text-match="SourceAndTarget"><sdl:value key="created_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="created_on">03/18/2019 08:02:06</sdl:value><sdl:value key="modified_on">04/23/2019 08:53:37</sdl:value><sdl:value key="last_modified_by">FONTANKA\a.gorchakov</sdl:value><sdl:value key="SDL:OriginalTranslationHash">1633633558</sdl:value></sdl:seg></sdl:seg-defs></trans-unit></group></body></file></xliff>