<?xml version="1.0" encoding="utf-8"?><xliff xmlns:sdl="http://sdl.com/FileTypes/SdlXliff/1.0" xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2" sdl:version="1.0"><file original="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qt3d\qt3d-wireframe-shaders-robustwireframe-geom.html" datatype="x-sdlfilterframework2" source-language="en-US"><header><reference><internal-file form="base64">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
AAEAAQA/AAAAoggAAAAA
</internal-file></reference><sdl:ref-files><sdl:ref-file uid="0" id="Html.DependencyFileId" name="qt3d-wireframe-shaders-robustwireframe-geom.html" o-path="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qt3d\qt3d-wireframe-shaders-robustwireframe-geom.html" date="12/02/2016 08:04:52" expected-use="Generation"/></sdl:ref-files><file-info xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><value key="SDL:FileId">fe55f319-c463-49a0-bde6-ef5707b96dcf</value><value key="SDL:CreationDate">08/28/2019 11:15:55</value><value key="SDL:OriginalFilePath">D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qt3d\qt3d-wireframe-shaders-robustwireframe-geom.html</value><value key="SDL:OriginalEncoding">utf-8</value><value key="SDL:QuickInsertsList">qBold;qItalic;qUnderline;qSubscript;qSuperscript;qSmallCaps</value><value key="NeedsSegmentRenumbering">True</value><value key="HtmlEntityFound">True</value><value key="HeadEntityFound">True</value><value key="MetaEntityFound">True</value><value key="BodyEntityFound">True</value><value key="HtmlVersion">html5</value><value key="OperatingSystem">Linux</value><value key="ParagraphTextDirections"></value><sniff-info><detected-encoding detection-level="Certain" encoding="utf-8"/><detected-source-lang detection-level="Likely" lang="en-US"/></sniff-info></file-info><sdl:filetype-info><sdl:filetype-id>Html 5 2.0.0.0</sdl:filetype-id></sdl:filetype-info><fmt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><fmt-def id="1"/><fmt-def id="2"><value key="TextColor">Blue</value><value key="Underline">True</value></fmt-def></fmt-defs><cxt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><cxt-def id="1" type="LocationDetails" purpose="Location"><props><value key="StartsAt">-1</value><value key="EndsAt">39</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="2" type="LocationDetails" purpose="Location"><props><value key="StartsAt">153</value><value key="EndsAt">205</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="3" type="sdl:title" color="Control"><fmt id="1"/></cxt-def><cxt-def id="4" type="sdl:meta" color="Control"><fmt id="1"/></cxt-def><cxt-def id="5" type="sdl:html-control" color="Control"><fmt id="1"/></cxt-def><cxt-def id="6" type="LocationDetails" purpose="Location"><props><value key="StartsAt">617</value><value key="EndsAt">702</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="7" type="x-tm-table-cell"><fmt id="1"/></cxt-def><cxt-def id="8" type="sdl:table-row" color="Control"><fmt id="1"/></cxt-def><cxt-def id="9" type="sdl:table" color="Control"><fmt id="1"/></cxt-def><cxt-def id="10" type="div" code="DIV" name="Div" descr="A div section" color=""><fmt id="1"/></cxt-def><cxt-def id="11" type="sdl:body" color="Control"><fmt id="1"/></cxt-def><cxt-def id="12" type="sdl:link" color="Control"><fmt id="1"/></cxt-def><cxt-def id="13" type="LocationDetails" purpose="Location"><props><value key="StartsAt">707</value><value key="EndsAt">747</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="14" type="LocationDetails" purpose="Location"><props><value key="StartsAt">752</value><value key="EndsAt">827</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="15" type="LocationDetails" purpose="Location"><props><value key="StartsAt">832</value><value key="EndsAt">870</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="16" type="LocationDetails" purpose="Location"><props><value key="StartsAt">921</value><value key="EndsAt">1002</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="17" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1213</value><value key="EndsAt">1264</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="18" type="x-tm-heading"><fmt id="1"/></cxt-def><cxt-def id="19" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1264</value><value key="EndsAt">1402</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="20" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1402</value><value key="EndsAt">1445</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="21" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1445</value><value key="EndsAt">6019</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="22" type="pre" code="PRE" name="Pre" descr="A preformated text section" color=""><fmt id="1"/></cxt-def><cxt-def id="23" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6026</value><value key="EndsAt">6092</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="24" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6171</value><value key="EndsAt">6204</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="25" type="sdl:paragraph" color="Control"><fmt id="1"/></cxt-def><cxt-def id="26" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6204</value><value key="EndsAt">6742</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def></cxt-defs><node-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><node-def id="1" parent="2"><cxt id="4"/></node-def><node-def id="2" parent="3"><cxt id="4"/></node-def><node-def id="3"><cxt id="5"/></node-def><node-def id="4" parent="1"><cxt id="3"/></node-def><node-def id="5" parent="6"><cxt id="8"/></node-def><node-def id="6" parent="7"><cxt id="9"/></node-def><node-def id="7" parent="8"><cxt id="10"/></node-def><node-def id="8" parent="9"><cxt id="10"/></node-def><node-def id="9" parent="10"><cxt id="10"/></node-def><node-def id="10" parent="11"><cxt id="10"/></node-def><node-def id="11" parent="12"><cxt id="11"/></node-def><node-def id="12" parent="1"><cxt id="12"/></node-def><node-def id="13" parent="5"><cxt id="7"/></node-def><node-def id="14" parent="5"><cxt id="7"/></node-def><node-def id="15" parent="5"><cxt id="7"/></node-def><node-def id="16" parent="5"><cxt id="7"/></node-def><node-def id="17" parent="18"><cxt id="8"/></node-def><node-def id="18" parent="7"><cxt id="9"/></node-def><node-def id="19" parent="17"><cxt id="7"/></node-def><node-def id="20" parent="21"><cxt id="10"/></node-def><node-def id="21" parent="22"><cxt id="10"/></node-def><node-def id="22" parent="9"><cxt id="10"/></node-def><node-def id="23" parent="20"><cxt id="18"/></node-def><node-def id="24" parent="20"><cxt id="10"/></node-def><node-def id="25" parent="24"><cxt id="22"/></node-def><node-def id="26" parent="11"><cxt id="10"/></node-def><node-def id="27" parent="26"><cxt id="25"/></node-def></node-defs><tag-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><tag id="3"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdoc/supported-platforms-and-configurations.html#qt-5-7&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="6"><bpt name="a" word-end="false">&lt;a href=&quot;qt3d-index.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="9"><bpt name="a" word-end="false">&lt;a href=&quot;qt3d-wireframe-example.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="12"><bpt name="span" word-end="false">&lt;span class=&quot;subtitle&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="16"><bpt name="a" word-end="false">&lt;a name=&quot;details&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="22"><bpt name="a" word-end="false">&lt;a href=&quot;http://www.gnu.org/licenses/fdl.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="0"><ph name="xml" word-end="false">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</ph><props><value key="ProcessingInstructionTag">xml</value></props></tag><tag id="13"><ph name="Comment" word-end="false">&lt;!-- $$$wireframe/shaders/robustwireframe.geom-description --&gt;</ph></tag><tag id="17"><ph name="Comment" word-end="false">&lt;!-- @@@wireframe/shaders/robustwireframe.geom --&gt;</ph></tag><tag id="18"><ph name="copy" word-end="false" seg-hint="IncludeWithText">&amp;copy;</ph><props><value key="PlaceholderForMappedEntity">true</value></props></tag><tag id="19"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="23"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag></tag-defs></header><body><group><sdl:cxts><sdl:cxt id="1"/></sdl:cxts><trans-unit id="3e6f872e-1ae9-4482-af9a-1e595819599d"><source><x id="0"/>
</source><seg-source><x id="0"/>
</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="2"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="4"/></sdl:cxts><trans-unit id="98ab912f-da3d-4e99-b0aa-4e84d325f882"><source>robustwireframe.geom Example File | Qt 3D 5.7</source><seg-source>robustwireframe.geom Example File | Qt 3D 5.7</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="6"/><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="13"/></sdl:cxts><trans-unit id="b5618e30-85ef-45b1-ba0a-c833b6349fa1"><source><g id="3">Qt 5.7</g></source><seg-source><g id="3">Qt 5.7</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="13"/><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="14"/></sdl:cxts><trans-unit id="0ac36429-49cd-4204-8929-e86508bc1ea1"><source><g id="6">Qt 3D</g></source><seg-source><g id="6">Qt 3D</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="14"/><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="15"/></sdl:cxts><trans-unit id="97668dbe-0d6c-4ff7-9774-85e95993b21f"><source><g id="9">Qt 3D: Wireframe QML Example</g></source><seg-source><g id="9">Qt 3D: Wireframe QML Example</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="15"/><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="16"/></sdl:cxts><trans-unit id="1f58364f-1117-4d9d-9f9a-6d46cdbb40aa"><source>robustwireframe.geom Example File</source><seg-source>robustwireframe.geom Example File</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="16"/><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="19"/></sdl:cxts><trans-unit id="6acbe68f-4b6e-4613-857c-582d42f5ac88"><source>Qt 5.7.1 Reference Documentation</source><seg-source>Qt 5.7.1 Reference Documentation</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="17"/><sdl:cxt id="18"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="23"/></sdl:cxts><trans-unit id="ad27e970-5c06-46fd-ad6a-0f5ea1abd15f"><source>robustwireframe.geom Example File</source><seg-source>robustwireframe.geom Example File</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="19"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="20"/></sdl:cxts><trans-unit id="dc20b322-0879-4cd7-bbca-7447768882ed"><source><g id="12">wireframe/shaders/robustwireframe.geom</g> <x id="13"/></source><seg-source><g id="12">wireframe/shaders/robustwireframe.geom</g> <x id="13"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="20"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="24"/></sdl:cxts><trans-unit id="958e06d2-1f1f-4229-8711-8b9a5ab4f754"><source><g id="16"/></source><seg-source><g id="16"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="25"/></sdl:cxts><trans-unit id="5e1c4a2c-ecf2-4ab8-a07e-5d9a80958804"><source>#version 330 core layout( triangles ) in; layout( triangle_strip, max_vertices = 3 ) out; in EyeSpaceVertex { vec3 position; vec3 normal; } gs_in[]; out WireframeVertex { vec3 position; vec3 normal; noperspective vec4 edgeA; noperspective vec4 edgeB; flat int configuration; } gs_out; uniform mat4 viewportMatrix; const int infoA[] = int[]( 0, 0, 0, 0, 1, 1, 2 ); const int infoB[] = int[]( 1, 1, 2, 0, 2, 1, 2 ); const int infoAd[] = int[]( 2, 2, 1, 1, 0, 0, 0 ); const int infoBd[] = int[]( 2, 2, 1, 2, 0, 2, 1 ); vec2 transformToViewport( const in vec4 p ) { return vec2( viewportMatrix * ( p / p.w ) ); } void main() { gs_out.configuration = int(gl_in[0].gl_Position.z &lt; 0) * int(4) + int(gl_in[1].gl_Position.z &lt; 0) * int(2) + int(gl_in[2].gl_Position.z &lt; 0); // If all vertices are behind us, cull the primitive if (gs_out.configuration == 7) return; // Transform each vertex into viewport space vec2 p[3]; p[0] = transformToViewport( gl_in[0].gl_Position ); p[1] = transformToViewport( gl_in[1].gl_Position ); p[2] = transformToViewport( gl_in[2].gl_Position ); if (gs_out.configuration == 0) { // Common configuration where all vertices are within the viewport gs_out.edgeA = vec4(0.0); gs_out.edgeB = vec4(0.0); // Calculate lengths of 3 edges of triangle float a = length( p[1] - p[2] ); float b = length( p[2] - p[0] ); float c = length( p[1] - p[0] ); // Calculate internal angles using the cosine rule float alpha = acos( ( b * b + c * c - a * a ) / ( 2.0 * b * c ) ); float beta = acos( ( a * a + c * c - b * b ) / ( 2.0 * a * c ) ); // Calculate the perpendicular distance of each vertex from the opposing edge float ha = abs( c * sin( beta ) ); float hb = abs( c * sin( alpha ) ); float hc = abs( b * sin( alpha ) ); // Now add this perpendicular distance as a per-vertex property in addition to // the position and normal calculated in the vertex shader. // Vertex 0 (a) gs_out.edgeA = vec4( ha, 0.0, 0.0, 0.0 ); gs_out.normal = gs_in[0].normal; gs_out.position = gs_in[0].position; gl_Position = gl_in[0].gl_Position; EmitVertex(); // Vertex 1 (b) gs_out.edgeA = vec4( 0.0, hb, 0.0, 0.0 ); gs_out.normal = gs_in[1].normal; gs_out.position = gs_in[1].position; gl_Position = gl_in[1].gl_Position; EmitVertex(); // Vertex 2 (c) gs_out.edgeA = vec4( 0.0, 0.0, hc, 0.0 ); gs_out.normal = gs_in[2].normal; gs_out.position = gs_in[2].position; gl_Position = gl_in[2].gl_Position; EmitVertex(); // Finish the primitive off EndPrimitive(); } else { // Viewport projection breaks down for one or two vertices. // Caclulate what we can here and defer rest to fragment shader. // Since this is coherent for the entire primitive the conditional // in the fragment shader is still cheap as all concurrent // fragment shader invocations will take the same code path. // Copy across the viewport-space points for the (up to) two vertices // in the viewport gs_out.edgeA.xy = p[infoA[gs_out.configuration]]; gs_out.edgeB.xy = p[infoB[gs_out.configuration]]; // Copy across the viewport-space edge vectors for the (up to) two vertices // in the viewport gs_out.edgeA.zw = normalize( gs_out.edgeA.xy - p[ infoAd[gs_out.configuration] ] ); gs_out.edgeB.zw = normalize( gs_out.edgeB.xy - p[ infoBd[gs_out.configuration] ] ); // Pass through the other vertex attributes gs_out.normal = gs_in[0].normal; gs_out.position = gs_in[0].position; gl_Position = gl_in[0].gl_Position; EmitVertex(); gs_out.normal = gs_in[1].normal; gs_out.position = gs_in[1].position; gl_Position = gl_in[1].gl_Position; EmitVertex(); gs_out.normal = gs_in[2].normal; gs_out.position = gs_in[2].position; gl_Position = gl_in[2].gl_Position; EmitVertex(); // Finish the primitive off EndPrimitive(); } }</source><seg-source>#version 330 core layout( triangles ) in; layout( triangle_strip, max_vertices = 3 ) out; in EyeSpaceVertex { vec3 position; vec3 normal; } gs_in[]; out WireframeVertex { vec3 position; vec3 normal; noperspective vec4 edgeA; noperspective vec4 edgeB; flat int configuration; } gs_out; uniform mat4 viewportMatrix; const int infoA[] = int[]( 0, 0, 0, 0, 1, 1, 2 ); const int infoB[] = int[]( 1, 1, 2, 0, 2, 1, 2 ); const int infoAd[] = int[]( 2, 2, 1, 1, 0, 0, 0 ); const int infoBd[] = int[]( 2, 2, 1, 2, 0, 2, 1 ); vec2 transformToViewport( const in vec4 p ) { return vec2( viewportMatrix * ( p / p.w ) ); } void main() { gs_out.configuration = int(gl_in[0].gl_Position.z &lt; 0) * int(4) + int(gl_in[1].gl_Position.z &lt; 0) * int(2) + int(gl_in[2].gl_Position.z &lt; 0); // If all vertices are behind us, cull the primitive if (gs_out.configuration == 7) return; // Transform each vertex into viewport space vec2 p[3]; p[0] = transformToViewport( gl_in[0].gl_Position ); p[1] = transformToViewport( gl_in[1].gl_Position ); p[2] = transformToViewport( gl_in[2].gl_Position ); if (gs_out.configuration == 0) { // Common configuration where all vertices are within the viewport gs_out.edgeA = vec4(0.0); gs_out.edgeB = vec4(0.0); // Calculate lengths of 3 edges of triangle float a = length( p[1] - p[2] ); float b = length( p[2] - p[0] ); float c = length( p[1] - p[0] ); // Calculate internal angles using the cosine rule float alpha = acos( ( b * b + c * c - a * a ) / ( 2.0 * b * c ) ); float beta = acos( ( a * a + c * c - b * b ) / ( 2.0 * a * c ) ); // Calculate the perpendicular distance of each vertex from the opposing edge float ha = abs( c * sin( beta ) ); float hb = abs( c * sin( alpha ) ); float hc = abs( b * sin( alpha ) ); // Now add this perpendicular distance as a per-vertex property in addition to // the position and normal calculated in the vertex shader. // Vertex 0 (a) gs_out.edgeA = vec4( ha, 0.0, 0.0, 0.0 ); gs_out.normal = gs_in[0].normal; gs_out.position = gs_in[0].position; gl_Position = gl_in[0].gl_Position; EmitVertex(); // Vertex 1 (b) gs_out.edgeA = vec4( 0.0, hb, 0.0, 0.0 ); gs_out.normal = gs_in[1].normal; gs_out.position = gs_in[1].position; gl_Position = gl_in[1].gl_Position; EmitVertex(); // Vertex 2 (c) gs_out.edgeA = vec4( 0.0, 0.0, hc, 0.0 ); gs_out.normal = gs_in[2].normal; gs_out.position = gs_in[2].position; gl_Position = gl_in[2].gl_Position; EmitVertex(); // Finish the primitive off EndPrimitive(); } else { // Viewport projection breaks down for one or two vertices. // Caclulate what we can here and defer rest to fragment shader. // Since this is coherent for the entire primitive the conditional // in the fragment shader is still cheap as all concurrent // fragment shader invocations will take the same code path. // Copy across the viewport-space points for the (up to) two vertices // in the viewport gs_out.edgeA.xy = p[infoA[gs_out.configuration]]; gs_out.edgeB.xy = p[infoB[gs_out.configuration]]; // Copy across the viewport-space edge vectors for the (up to) two vertices // in the viewport gs_out.edgeA.zw = normalize( gs_out.edgeA.xy - p[ infoAd[gs_out.configuration] ] ); gs_out.edgeB.zw = normalize( gs_out.edgeB.xy - p[ infoBd[gs_out.configuration] ] ); // Pass through the other vertex attributes gs_out.normal = gs_in[0].normal; gs_out.position = gs_in[0].position; gl_Position = gl_in[0].gl_Position; EmitVertex(); gs_out.normal = gs_in[1].normal; gs_out.position = gs_in[1].position; gl_Position = gl_in[1].gl_Position; EmitVertex(); gs_out.normal = gs_in[2].normal; gs_out.position = gs_in[2].position; gl_Position = gl_in[2].gl_Position; EmitVertex(); // Finish the primitive off EndPrimitive(); } }</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="23"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="20"/></sdl:cxts><trans-unit id="548fe827-22db-44b3-9720-3a5270eff706"><source><x id="17"/></source><seg-source><x id="17"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="24"/><sdl:cxt id="25"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="27"/></sdl:cxts><trans-unit id="a4805171-c841-4859-a399-b63203db8810"><source><x id="18"/></source><seg-source><x id="18"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="26"/><sdl:cxt id="25"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="27"/></sdl:cxts><trans-unit id="22daa412-df7c-44c2-9350-6409f175164d"><source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="19"/> The documentation provided herein is licensed under the terms of the <g id="22">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="23"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</source><seg-source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="19"/> The documentation provided herein is licensed under the terms of the <g id="22">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="23"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</seg-source><target/></trans-unit></group></body></file></xliff>