<?xml version="1.0" encoding="utf-8"?><xliff xmlns:sdl="http://sdl.com/FileTypes/SdlXliff/1.0" xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2" sdl:version="1.0"><file original="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qt3d\qt3d-wave-shaders-robustwireframe-geom.html" datatype="x-sdlfilterframework2" source-language="en-US"><header><reference><internal-file form="base64">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
AAABAAEAPwAAAKMIAAAAAA==
</internal-file></reference><sdl:ref-files><sdl:ref-file uid="0" id="Html.DependencyFileId" name="qt3d-wave-shaders-robustwireframe-geom.html" o-path="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qt3d\qt3d-wave-shaders-robustwireframe-geom.html" date="12/02/2016 08:04:52" expected-use="Generation"/></sdl:ref-files><file-info xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><value key="SDL:FileId">aca75bde-2451-4660-a15a-68f4c4a55485</value><value key="SDL:CreationDate">08/28/2019 11:15:53</value><value key="SDL:OriginalFilePath">D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qt3d\qt3d-wave-shaders-robustwireframe-geom.html</value><value key="SDL:OriginalEncoding">utf-8</value><value key="SDL:QuickInsertsList">qBold;qItalic;qUnderline;qSubscript;qSuperscript;qSmallCaps</value><value key="NeedsSegmentRenumbering">True</value><value key="HtmlEntityFound">True</value><value key="HeadEntityFound">True</value><value key="MetaEntityFound">True</value><value key="BodyEntityFound">True</value><value key="HtmlVersion">html5</value><value key="OperatingSystem">Linux</value><value key="ParagraphTextDirections"></value><sniff-info><detected-encoding detection-level="Certain" encoding="utf-8"/><detected-source-lang detection-level="Likely" lang="en-US"/></sniff-info></file-info><sdl:filetype-info><sdl:filetype-id>Html 5 2.0.0.0</sdl:filetype-id></sdl:filetype-info><fmt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><fmt-def id="1"/><fmt-def id="2"><value key="TextColor">Blue</value><value key="Underline">True</value></fmt-def></fmt-defs><cxt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><cxt-def id="1" type="LocationDetails" purpose="Location"><props><value key="StartsAt">-1</value><value key="EndsAt">39</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="2" type="LocationDetails" purpose="Location"><props><value key="StartsAt">153</value><value key="EndsAt">205</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="3" type="sdl:title" color="Control"><fmt id="1"/></cxt-def><cxt-def id="4" type="sdl:meta" color="Control"><fmt id="1"/></cxt-def><cxt-def id="5" type="sdl:html-control" color="Control"><fmt id="1"/></cxt-def><cxt-def id="6" type="LocationDetails" purpose="Location"><props><value key="StartsAt">617</value><value key="EndsAt">702</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="7" type="x-tm-table-cell"><fmt id="1"/></cxt-def><cxt-def id="8" type="sdl:table-row" color="Control"><fmt id="1"/></cxt-def><cxt-def id="9" type="sdl:table" color="Control"><fmt id="1"/></cxt-def><cxt-def id="10" type="div" code="DIV" name="Div" descr="A div section" color=""><fmt id="1"/></cxt-def><cxt-def id="11" type="sdl:body" color="Control"><fmt id="1"/></cxt-def><cxt-def id="12" type="sdl:link" color="Control"><fmt id="1"/></cxt-def><cxt-def id="13" type="LocationDetails" purpose="Location"><props><value key="StartsAt">707</value><value key="EndsAt">747</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="14" type="LocationDetails" purpose="Location"><props><value key="StartsAt">752</value><value key="EndsAt">817</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="15" type="LocationDetails" purpose="Location"><props><value key="StartsAt">822</value><value key="EndsAt">860</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="16" type="LocationDetails" purpose="Location"><props><value key="StartsAt">911</value><value key="EndsAt">992</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="17" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1203</value><value key="EndsAt">1254</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="18" type="x-tm-heading"><fmt id="1"/></cxt-def><cxt-def id="19" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1254</value><value key="EndsAt">1382</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="20" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1382</value><value key="EndsAt">1425</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="21" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1425</value><value key="EndsAt">5999</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="22" type="pre" code="PRE" name="Pre" descr="A preformated text section" color=""><fmt id="1"/></cxt-def><cxt-def id="23" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6006</value><value key="EndsAt">6067</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="24" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6146</value><value key="EndsAt">6179</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="25" type="sdl:paragraph" color="Control"><fmt id="1"/></cxt-def><cxt-def id="26" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6179</value><value key="EndsAt">6717</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def></cxt-defs><node-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><node-def id="1" parent="2"><cxt id="4"/></node-def><node-def id="2" parent="3"><cxt id="4"/></node-def><node-def id="3"><cxt id="5"/></node-def><node-def id="4" parent="1"><cxt id="3"/></node-def><node-def id="5" parent="6"><cxt id="8"/></node-def><node-def id="6" parent="7"><cxt id="9"/></node-def><node-def id="7" parent="8"><cxt id="10"/></node-def><node-def id="8" parent="9"><cxt id="10"/></node-def><node-def id="9" parent="10"><cxt id="10"/></node-def><node-def id="10" parent="11"><cxt id="10"/></node-def><node-def id="11" parent="12"><cxt id="11"/></node-def><node-def id="12" parent="1"><cxt id="12"/></node-def><node-def id="13" parent="5"><cxt id="7"/></node-def><node-def id="14" parent="5"><cxt id="7"/></node-def><node-def id="15" parent="5"><cxt id="7"/></node-def><node-def id="16" parent="5"><cxt id="7"/></node-def><node-def id="17" parent="18"><cxt id="8"/></node-def><node-def id="18" parent="7"><cxt id="9"/></node-def><node-def id="19" parent="17"><cxt id="7"/></node-def><node-def id="20" parent="21"><cxt id="10"/></node-def><node-def id="21" parent="22"><cxt id="10"/></node-def><node-def id="22" parent="9"><cxt id="10"/></node-def><node-def id="23" parent="20"><cxt id="18"/></node-def><node-def id="24" parent="20"><cxt id="10"/></node-def><node-def id="25" parent="24"><cxt id="22"/></node-def><node-def id="26" parent="11"><cxt id="10"/></node-def><node-def id="27" parent="26"><cxt id="25"/></node-def></node-defs><tag-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><tag id="3"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdoc/supported-platforms-and-configurations.html#qt-5-7&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="6"><bpt name="a" word-end="false">&lt;a href=&quot;qt3d-index.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="9"><bpt name="a" word-end="false">&lt;a href=&quot;qt3d-wave-example.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="12"><bpt name="span" word-end="false">&lt;span class=&quot;subtitle&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="16"><bpt name="a" word-end="false">&lt;a name=&quot;details&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="22"><bpt name="a" word-end="false">&lt;a href=&quot;http://www.gnu.org/licenses/fdl.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="0"><ph name="xml" word-end="false">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</ph><props><value key="ProcessingInstructionTag">xml</value></props></tag><tag id="13"><ph name="Comment" word-end="false">&lt;!-- $$$wave/shaders/robustwireframe.geom-description --&gt;</ph></tag><tag id="17"><ph name="Comment" word-end="false">&lt;!-- @@@wave/shaders/robustwireframe.geom --&gt;</ph></tag><tag id="18"><ph name="copy" word-end="false" seg-hint="IncludeWithText">&amp;copy;</ph><props><value key="PlaceholderForMappedEntity">true</value></props></tag><tag id="19"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="23"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag></tag-defs></header><body><group><sdl:cxts><sdl:cxt id="1"/></sdl:cxts><trans-unit id="fa11581c-c065-4614-a41b-c5c02a24d442"><source><x id="0"/>
</source><seg-source><x id="0"/>
</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="2"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="4"/></sdl:cxts><trans-unit id="5b3ad3d9-1e8b-4902-b9a8-d99d1597a446"><source>robustwireframe.geom Example File | Qt 3D 5.7</source><seg-source>robustwireframe.geom Example File | Qt 3D 5.7</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="6"/><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="13"/></sdl:cxts><trans-unit id="aafe0cae-89d9-408d-b958-3c006514dd37"><source><g id="3">Qt 5.7</g></source><seg-source><g id="3">Qt 5.7</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="13"/><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="14"/></sdl:cxts><trans-unit id="5f0a6ebc-a88f-4f36-be0b-20428b36af61"><source><g id="6">Qt 3D</g></source><seg-source><g id="6">Qt 3D</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="14"/><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="15"/></sdl:cxts><trans-unit id="9442422a-041f-48d5-811e-6fe039958f20"><source><g id="9">Qt 3D: Wave QML Example</g></source><seg-source><g id="9">Qt 3D: Wave QML Example</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="15"/><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="16"/></sdl:cxts><trans-unit id="509af8d5-d1d7-4aeb-85f7-a973cd1fe6b2"><source>robustwireframe.geom Example File</source><seg-source>robustwireframe.geom Example File</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="16"/><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="19"/></sdl:cxts><trans-unit id="f08d44b7-835e-46f9-9e7f-2b3f0f73ad38"><source>Qt 5.7.1 Reference Documentation</source><seg-source>Qt 5.7.1 Reference Documentation</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="17"/><sdl:cxt id="18"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="23"/></sdl:cxts><trans-unit id="f4f15348-a18d-4096-a603-41a6df929118"><source>robustwireframe.geom Example File</source><seg-source>robustwireframe.geom Example File</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="19"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="20"/></sdl:cxts><trans-unit id="120f0963-510e-420d-88ee-8ee53444e1d6"><source><g id="12">wave/shaders/robustwireframe.geom</g> <x id="13"/></source><seg-source><g id="12">wave/shaders/robustwireframe.geom</g> <x id="13"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="20"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="24"/></sdl:cxts><trans-unit id="de17cb61-a06a-4de4-a643-a4afd134df8d"><source><g id="16"/></source><seg-source><g id="16"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="25"/></sdl:cxts><trans-unit id="db43c105-5e2c-40dc-914b-ff6aca6e6727"><source>#version 330 core layout( triangles ) in; layout( triangle_strip, max_vertices = 3 ) out; in EyeSpaceVertex { vec3 position; vec3 normal; } gs_in[]; out WireframeVertex { vec3 position; vec3 normal; noperspective vec4 edgeA; noperspective vec4 edgeB; flat int configuration; } gs_out; uniform mat4 viewportMatrix; const int infoA[] = int[]( 0, 0, 0, 0, 1, 1, 2 ); const int infoB[] = int[]( 1, 1, 2, 0, 2, 1, 2 ); const int infoAd[] = int[]( 2, 2, 1, 1, 0, 0, 0 ); const int infoBd[] = int[]( 2, 2, 1, 2, 0, 2, 1 ); vec2 transformToViewport( const in vec4 p ) { return vec2( viewportMatrix * ( p / p.w ) ); } void main() { gs_out.configuration = int(gl_in[0].gl_Position.z &lt; 0) * int(4) + int(gl_in[1].gl_Position.z &lt; 0) * int(2) + int(gl_in[2].gl_Position.z &lt; 0); // If all vertices are behind us, cull the primitive if (gs_out.configuration == 7) return; // Transform each vertex into viewport space vec2 p[3]; p[0] = transformToViewport( gl_in[0].gl_Position ); p[1] = transformToViewport( gl_in[1].gl_Position ); p[2] = transformToViewport( gl_in[2].gl_Position ); if (gs_out.configuration == 0) { // Common configuration where all vertices are within the viewport gs_out.edgeA = vec4(0.0); gs_out.edgeB = vec4(0.0); // Calculate lengths of 3 edges of triangle float a = length( p[1] - p[2] ); float b = length( p[2] - p[0] ); float c = length( p[1] - p[0] ); // Calculate internal angles using the cosine rule float alpha = acos( ( b * b + c * c - a * a ) / ( 2.0 * b * c ) ); float beta = acos( ( a * a + c * c - b * b ) / ( 2.0 * a * c ) ); // Calculate the perpendicular distance of each vertex from the opposing edge float ha = abs( c * sin( beta ) ); float hb = abs( c * sin( alpha ) ); float hc = abs( b * sin( alpha ) ); // Now add this perpendicular distance as a per-vertex property in addition to // the position and normal calculated in the vertex shader. // Vertex 0 (a) gs_out.edgeA = vec4( ha, 0.0, 0.0, 0.0 ); gs_out.normal = gs_in[0].normal; gs_out.position = gs_in[0].position; gl_Position = gl_in[0].gl_Position; EmitVertex(); // Vertex 1 (b) gs_out.edgeA = vec4( 0.0, hb, 0.0, 0.0 ); gs_out.normal = gs_in[1].normal; gs_out.position = gs_in[1].position; gl_Position = gl_in[1].gl_Position; EmitVertex(); // Vertex 2 (c) gs_out.edgeA = vec4( 0.0, 0.0, hc, 0.0 ); gs_out.normal = gs_in[2].normal; gs_out.position = gs_in[2].position; gl_Position = gl_in[2].gl_Position; EmitVertex(); // Finish the primitive off EndPrimitive(); } else { // Viewport projection breaks down for one or two vertices. // Caclulate what we can here and defer rest to fragment shader. // Since this is coherent for the entire primitive the conditional // in the fragment shader is still cheap as all concurrent // fragment shader invocations will take the same code path. // Copy across the viewport-space points for the (up to) two vertices // in the viewport gs_out.edgeA.xy = p[infoA[gs_out.configuration]]; gs_out.edgeB.xy = p[infoB[gs_out.configuration]]; // Copy across the viewport-space edge vectors for the (up to) two vertices // in the viewport gs_out.edgeA.zw = normalize( gs_out.edgeA.xy - p[ infoAd[gs_out.configuration] ] ); gs_out.edgeB.zw = normalize( gs_out.edgeB.xy - p[ infoBd[gs_out.configuration] ] ); // Pass through the other vertex attributes gs_out.normal = gs_in[0].normal; gs_out.position = gs_in[0].position; gl_Position = gl_in[0].gl_Position; EmitVertex(); gs_out.normal = gs_in[1].normal; gs_out.position = gs_in[1].position; gl_Position = gl_in[1].gl_Position; EmitVertex(); gs_out.normal = gs_in[2].normal; gs_out.position = gs_in[2].position; gl_Position = gl_in[2].gl_Position; EmitVertex(); // Finish the primitive off EndPrimitive(); } }</source><seg-source>#version 330 core layout( triangles ) in; layout( triangle_strip, max_vertices = 3 ) out; in EyeSpaceVertex { vec3 position; vec3 normal; } gs_in[]; out WireframeVertex { vec3 position; vec3 normal; noperspective vec4 edgeA; noperspective vec4 edgeB; flat int configuration; } gs_out; uniform mat4 viewportMatrix; const int infoA[] = int[]( 0, 0, 0, 0, 1, 1, 2 ); const int infoB[] = int[]( 1, 1, 2, 0, 2, 1, 2 ); const int infoAd[] = int[]( 2, 2, 1, 1, 0, 0, 0 ); const int infoBd[] = int[]( 2, 2, 1, 2, 0, 2, 1 ); vec2 transformToViewport( const in vec4 p ) { return vec2( viewportMatrix * ( p / p.w ) ); } void main() { gs_out.configuration = int(gl_in[0].gl_Position.z &lt; 0) * int(4) + int(gl_in[1].gl_Position.z &lt; 0) * int(2) + int(gl_in[2].gl_Position.z &lt; 0); // If all vertices are behind us, cull the primitive if (gs_out.configuration == 7) return; // Transform each vertex into viewport space vec2 p[3]; p[0] = transformToViewport( gl_in[0].gl_Position ); p[1] = transformToViewport( gl_in[1].gl_Position ); p[2] = transformToViewport( gl_in[2].gl_Position ); if (gs_out.configuration == 0) { // Common configuration where all vertices are within the viewport gs_out.edgeA = vec4(0.0); gs_out.edgeB = vec4(0.0); // Calculate lengths of 3 edges of triangle float a = length( p[1] - p[2] ); float b = length( p[2] - p[0] ); float c = length( p[1] - p[0] ); // Calculate internal angles using the cosine rule float alpha = acos( ( b * b + c * c - a * a ) / ( 2.0 * b * c ) ); float beta = acos( ( a * a + c * c - b * b ) / ( 2.0 * a * c ) ); // Calculate the perpendicular distance of each vertex from the opposing edge float ha = abs( c * sin( beta ) ); float hb = abs( c * sin( alpha ) ); float hc = abs( b * sin( alpha ) ); // Now add this perpendicular distance as a per-vertex property in addition to // the position and normal calculated in the vertex shader. // Vertex 0 (a) gs_out.edgeA = vec4( ha, 0.0, 0.0, 0.0 ); gs_out.normal = gs_in[0].normal; gs_out.position = gs_in[0].position; gl_Position = gl_in[0].gl_Position; EmitVertex(); // Vertex 1 (b) gs_out.edgeA = vec4( 0.0, hb, 0.0, 0.0 ); gs_out.normal = gs_in[1].normal; gs_out.position = gs_in[1].position; gl_Position = gl_in[1].gl_Position; EmitVertex(); // Vertex 2 (c) gs_out.edgeA = vec4( 0.0, 0.0, hc, 0.0 ); gs_out.normal = gs_in[2].normal; gs_out.position = gs_in[2].position; gl_Position = gl_in[2].gl_Position; EmitVertex(); // Finish the primitive off EndPrimitive(); } else { // Viewport projection breaks down for one or two vertices. // Caclulate what we can here and defer rest to fragment shader. // Since this is coherent for the entire primitive the conditional // in the fragment shader is still cheap as all concurrent // fragment shader invocations will take the same code path. // Copy across the viewport-space points for the (up to) two vertices // in the viewport gs_out.edgeA.xy = p[infoA[gs_out.configuration]]; gs_out.edgeB.xy = p[infoB[gs_out.configuration]]; // Copy across the viewport-space edge vectors for the (up to) two vertices // in the viewport gs_out.edgeA.zw = normalize( gs_out.edgeA.xy - p[ infoAd[gs_out.configuration] ] ); gs_out.edgeB.zw = normalize( gs_out.edgeB.xy - p[ infoBd[gs_out.configuration] ] ); // Pass through the other vertex attributes gs_out.normal = gs_in[0].normal; gs_out.position = gs_in[0].position; gl_Position = gl_in[0].gl_Position; EmitVertex(); gs_out.normal = gs_in[1].normal; gs_out.position = gs_in[1].position; gl_Position = gl_in[1].gl_Position; EmitVertex(); gs_out.normal = gs_in[2].normal; gs_out.position = gs_in[2].position; gl_Position = gl_in[2].gl_Position; EmitVertex(); // Finish the primitive off EndPrimitive(); } }</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="23"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="20"/></sdl:cxts><trans-unit id="9d5ee08e-b05d-4e5e-9635-7367a00d2a41"><source><x id="17"/></source><seg-source><x id="17"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="24"/><sdl:cxt id="25"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="27"/></sdl:cxts><trans-unit id="6d795c8b-5a3a-41f9-ac1f-9b31ad7b4e7d"><source><x id="18"/></source><seg-source><x id="18"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="26"/><sdl:cxt id="25"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="27"/></sdl:cxts><trans-unit id="a4185acc-c97c-4ea7-beeb-006bdbb29df8"><source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="19"/> The documentation provided herein is licensed under the terms of the <g id="22">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="23"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</source><seg-source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="19"/> The documentation provided herein is licensed under the terms of the <g id="22">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="23"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</seg-source><target/></trans-unit></group></body></file></xliff>