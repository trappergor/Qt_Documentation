<?xml version="1.0" encoding="utf-8"?><xliff xmlns:sdl="http://sdl.com/FileTypes/SdlXliff/1.0" xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2" sdl:version="1.0"><file original="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtcore\qtcore-threads-waitconditions-example.html" datatype="x-sdlfilterframework2" source-language="en-US"><header><reference><internal-file form="base64">UEsDBBQAAAAIABtAgkk2685k+A4AAKs1AAARAAAAaHdsZDFiMmMuc3J3Lmh0bWztW3tz28YR/1+f
4grnQbZ8WE7TpHowsWUp445qx7GcTibtZI7AkbgKL90dSDGpv3t39+5AAAQfcpzpdFqNLRHAYW9f
t/u7veXZV/dpwhZCaZln58Hx6HHARBbmkczm58Hbm6vhl8FXk6Oz3z1/dXHzw7eXLDZpAtf4hyUc
B4kswBuCR5Mjxs5SYTiMMsVQ3JVycR5c5JkRmRnerAoRsNBenQdG3JsxkjllYcyVFua8NDOYjo1x
vuGQLbk0MDySBnjTo7soD9lwSJMYaRIx+RsMYBfVCHZ5z9MiEexf7DXeV4J9PvribGwH42uJzG6Z
Esl5oM0qEToWwgTMAGOOn1DrgMVKzNyIcT6bwUtiqCVSHtHzMdHSoZKFqb/8T77g9m6AIxhbyizK
l6M8S3IesXM2K7MQOe31fwFZyhT0MJoLc5kI/KifrW74/CVPRS9ARoP+SBqR9h73R6Ccp8YoOS0N
PET+ggFrckis9U/fnSJvY8sG6HFs7XI2zaMV/InkgoUJ1/o8wAdCBUxG58GdAX7cDRKuNi7lMnPy
tG8PVV5mkYjc4+aAjC/knKO4U66qEWg7PgVznBkF/JiITc640/hoNCZGxrosilwZEQ2LhJtZrlI9
5Fk0BGeYyXmpuHUIdJ5Hd2b4+fCLYAIWJ2PzCRg8mjQp34EfKTEEc4h7eo3Go4c0X9jiUHbAGDiG
X457/ONFnZYyidwaCtaSoWYbj8AhIhPDKnv8+OOA8UTOYckpOY+N5390zL4TM6FgCQr23PkIiUs8
rJVYZ8Yrfwzad4ayH+vmcOsuaN5Fzwk6BzI08EXnS1pGwtq0ftfkIcWBz1DtGXixu+VoaKtpeHx0
VmIESWTFhFiI5DhYm+vRPMmnPBkuuJIooQ4m39Ad9r2/Y6klcg+hQuVRGQo1pBHB5Ft3zS7w+kAi
oBENhqiIXLjrBxExsRjSmvFBIJjcxIK03OuzK3ezRmxMWto0pNP+0BuU3Kx9c2Jf9K/Hx5WVMBYG
2x09PobhuuBZNV05de9AVIH7LjZ/9NFHBiTjkR43w/QwEjb4wAVF6zrv9CyYsMpDIkgWMtFInMPQ
gnTijcaWCgKgZhGHjGJyBipk03IGy4OVmZEJAxmABQhcmp6JLGL5rDZswLhhy1iGMStyCT5NL2jD
ldFspvLUjhVzmWWQ7wYsh5WKk8IFE/dS0wecfsSQMe8IzIrOSH6iQSxyjRNI7QWIGAQtLwQ8ARFg
7iziKmJCqVyNzsYFSU3mWOsQvOJW4BtFrrXEQAOvxnwhGLgThAvggBwMpYW3wlJhwFgBJ2C3Zcwt
E/7dpTQxSyFz3AMbPMkhV7AXM8bDUGiNqmtodgnBh1G2W7F5CayCGNMVTLwOpkTLh9G/4gVab0BU
2ioK8zKJsk+Nm64+E7CJVxocgRkJv7h9XJnfkhixH4Qh4sAYyJWhKlTKZIYqQQNNcxDQeSNb5uoW
b4L3nclJJGcUTUGVaPSzsZw0XWSDi8omaHDhAEWYp4WSpKxlbp1Z6BN2BjhJVDHlbEyXZHT7xAcK
92TEniGnMgNRwLjkgLUUZaV1ar2hK9Srcz2pwjLhqloAGuwCmRFZS8tMhpx8dSrMUogMRdKizixx
RYKusjBWeSZ/prQC1s8T1DvoARRvREirhIOubRBmVRCuNPM0AzcyQmVAYUG+WWqcfC1LIyR4kdDJ
q5CDkllN7XErWjV5gvPUfGNY+RncAeZS9AxiRNQoapHyIoYs76m+8Te8YuEt+EdLBsm3AYNzqmFF
SA+dSziKFcFaCAWeo7xSl490mynNhrz4CQXwQzJe/ITUfy3Mp5pRFMOVqcRCiiXq33T4iTc7OEEe
Sg6YqtsDTpxxVQVqwqKAfE5It5YObsUKVhggPjSAcSmhOQQRcTCBcOufPofg+Eb+LJrD8kIAkMsh
HZx3ksnKdIpwFMAS/Lghpx+EoWekm/dn6cvjPz+pGGJdk+GOxpOwltgy0Y9u1JqlLQP/sVUDdsb2
8qrP/TI3l2lhVqfv9epVmSTb3nTL1L5BC3jLyJr2QYtvIXo9W2FafC/917wB3FYJWhY25Hpf88FY
2pzCU9ipGAz9Fkz4Bb+GGjJJ2FxkyADkx5uc3QpRWFjhkgCkJ7sLxE8+uw4gYVbpmlP6gxRvRi4D
1MzaZEij87lM1FqzkJ0pgSc2X4L4naINWCp4Ztc9SAP/dA45zAKdTdkIKHXDJAoSDhd1wKJ1Rsxr
saMZj6s44+My6SUTEG4wCS1b+AZHAw6xHmMTnJWx6a9eZ9WbqBYNuyaeJEB5GdtMt+YiBst4I0ZW
H2hvQA8iSaoQuYYonJJdCCq2wmO0x2HSdDKFK+FQnqpZkCeCQlvYqcGdNTteCJZi9qrxUl88LZey
qwNNO6WlJbO6jYk6bg9gw2Eh7dqsc4HoygK4lqnsTbLToDLydlZCXGYwmwDhlehYZwjgALoqEqzu
3ZsrxUrBsSxRrZTKuywrjnqla0vaAsEtCx3MgXB07SUrYVqpur1pbCTqfTvKRpK2udnxGAkCbGsF
toEjUXx4Irbz2nBZcXOyZXRRThMZ7kiTFfK0mz3Gftk6c4PWiatCeA56XbRfTf8JALNz9nXs/717
Dogdgfu+DPHy7fV1vy1vlyw9S7DvGP3F/X135OsnmwQWufRvM1XiRv31T88vL65/evX95XffvXh+
2aKFP3dagXN2in8D+wvPzM7EtkXmQdfjD/luf8vLI/dci1Df5Ptk20Lk5MQ9t/tVg2/0+v3+6VFN
e92eBuvGm6G3G1zIX4kothP4JDGnbUR7um3wH3arwj+W/Ybr4A+F2j1mSPLwttc/bb3ZrTo5qzT3
EOC1T4vrcN1vsYE/zYy5WxhMOL1tOgfk5ZVOitkQ+hB1lZlX2FEXm3uQ+VaH+HhTF3uw+8N8UxsF
GAGUcFfm5vTpxTc39tNuC/3YGWDa66R/R0Gqv1e2ztXyx90sNLYqv4FvP3iZ1R3/9GiLq1rEuc9X
b8XTJOn9Sjdcv/fuaP33XWM70yiEerSiu7cCDiq53c2IPRMzRFcA5FzxkdMIX+lr7TcGODAtNWB/
qeB3GIvwFoEsgsI6hATsNoP1zHpyJD55dP9EnA52QEFxV/JEb0N3fapBbhK3eNMVDzE0aKzkmQOx
+LpEZfxWZ9DCn1mo7GnbDtYRXDpIrxso0yH+XXsVBOOqhH2hlniGsxO1ZwJrolxJrLWCxMbi9Iw9
XleGha3CMuBlo2S7nbivI9niL/cbrRcZ45EVYtAqeG2W7B7hrXZ14OQE7yIihuDhjzKIscJoP5Gt
hMOlmttDTltps8/gg10JWFi2jlozORauS1sqT3ADjqZwg6utVeUdt6CKshixq1Khr+KWwvkPRDdt
bVXtZx0V2OitVwJtduwdmBiWayrDAT6EVbhA8Kl4KOobV6KWh4hg1jtjv29onxM19g37DpEa+wZT
qqxp5FYp+UPsFSoOPuxeAX9e//Tq2V8uL24etnXwDP3Pbh3+D37/O8Dv7j3ULjx8GMj4jwHiWQFh
zcx62kRCqT07yV1o9ePwEKw6eFCJ/AMC8f5vD02Hu0UfPgSaHrSL+o2Q6Qd1i79nDbeoJny3PWVZ
HKZbqWJPwLWzunzSqsUcfGD0+g1R2ZNy6isSu8BIpk0oT+U/wBgLoVZ4jCARf7sM78FpBdyXwlaM
CR6DZ1AxfRcsFxhWIDvsApuP+wB+tXHVVE9HItwgVE+9CoiHuvH2toL8zJIgDkbs6cxQD8Gniy4R
IuHA9w7k2qsxWYF1W5Pv27LvUjhwfvC2oEH0YNn6LXjX0cHTQHiHdvg4pPfC7yPsgOpUB01NewGL
ZJd51dqAwoe4D+hsGvBw3QKXBk4HP6sX5Bv9EnNhbPcFDJrJTOrYo/IlHn1JcyjI3EAjJNfuIbBB
CB8UTjZPV/cgQZhhsSev7MsVNVzbFSWwi/BpUSTUgrE+PuVF0TtEPGSwioNV+d6HhNMWNK6OOvwD
P3Bf4RaPt9YB3lN52FsHzkX45aFTNV/qDthK4L7owJNhSirrGPwmt10eMdgF1oLdTGKcLasjxLni
6VewRYbFD4tsNehqRvJnbXkGW3Y8wbTHasBIlMP6XJkYQtVp81AKXpn6LSy3vWXNc6B9MRZW5lTU
zhj3xfkRe4Wlh42TUdxYI89UC2qcDg521ym2ndAN2XHrTPAh57eQLYxrPMIz64GLdaAfTRq1pjph
l7LKeO3uMkMlAOzac2fYth8PYxzlHKfmWh3NaLu9pxuMMy2QORre6PzabDRKQZQECwMaEhJYgRSI
ude1B6TES6tpj+pv1LMH/lK16mG5LTHSCoFtguvwodF4VEeBAcAEFnxAipSHoBgxqPuqbfLDdk/y
V1YWBCiWMqQOhRnXxrfUUSc+T+zMgFKGU479Y46Qr1W18w0aARyPh9TmtdGuB+Zstdc12woqfT6D
l5ecsk9ezuOqoqaxySATM1sqEtQlmCz5is7LE/AzcJFrWDi4YtC8FqbS1f62MXR47MfQhspehUIx
QkHFziU2JVLnGJ+C4kBGCDAmXsbSWi2SCxmJBsbK4HYYl9mt66TLmY1hpAb3oIFciEYJIIVqs/YI
3xGj3g+sNyUaggaqDnRq/Bk9VWJxvYtEhOhoIegGERpEJGs2mFHcw+yyag6vVH0FEviykOuynmxr
amv17bYuIck7pXb3+bYuRzC+0Qn9ntOCUR40LYzf1jONbcpff/11Nx33RZKNzvnG1canjnbsWQ5L
0H2/AQxAf3io8myVMmqcxi/AFCvX5f9JCJ9hu+BGTNiTx8d/It+g7yOkkLtW7NpEI6TT6P+n3g36
BgixDws2KTF2YFsshCLuyqihnwsXIxKBmxJbInQh7DrOl5lQenQ2VROUFueOGhOBStH9K9LYigQr
J0PXw6972JgKQqfVgiehnbnxqz8n4/FyuRzNs3KUq/nYva7Hsyhx1v3m5Vt2pUTrSw5I6NoO9t9J
Ysejz2yzKCawaQIA1XYk47xE4U0+MxRervDbKG49OOlAq665yYuf5PNcW3UpCL4pV7ckRocNyBtA
AVcyS5AK/B9DLM4pHVGni5KCOo6TaAkag4QG4Nw+rhHHuUCnsGDNCi1iddZpFGZXrnc296Wdsf3O
1b8BUEsBAjMAFAAAAAgAG0CCSTbrzmT4DgAAqzUAABEAAAAAAAAAAAAAAAAAAAAAAGh3bGQxYjJj
LnNydy5odG1sUEsFBgAAAAABAAEAPwAAACcPAAAAAA==
</internal-file></reference><sdl:ref-files><sdl:ref-file uid="0" id="Html.DependencyFileId" name="qtcore-threads-waitconditions-example.html" o-path="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtcore\qtcore-threads-waitconditions-example.html" date="12/02/2016 08:00:55" expected-use="Generation"/></sdl:ref-files><file-info xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><value key="SDL:FileId">254c4d5e-9202-4751-9fae-3c1f3bb44c76</value><value key="SDL:CreationDate">03/14/2019 16:18:35</value><value key="SDL:OriginalFilePath">D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtcore\qtcore-threads-waitconditions-example.html</value><value key="SDL:OriginalEncoding">utf-8</value><value key="NeedsSegmentRenumbering">True</value><value key="HtmlEntityFound">True</value><value key="HeadEntityFound">True</value><value key="MetaEntityFound">True</value><value key="BodyEntityFound">True</value><value key="HtmlVersion">html5</value><value key="OperatingSystem">Linux</value><value key="ParagraphTextDirections"></value><sniff-info><detected-encoding detection-level="Certain" encoding="utf-8"/><detected-source-lang detection-level="Likely" lang="en-US"/></sniff-info></file-info><sdl:filetype-info><sdl:filetype-id>Html 5 2.0.0.0</sdl:filetype-id></sdl:filetype-info><fmt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><fmt-def id="1"/><fmt-def id="2"><value key="TextColor">Blue</value><value key="Underline">True</value></fmt-def><fmt-def id="3"><value key="Italic">True</value></fmt-def></fmt-defs><cxt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><cxt-def id="1" type="LocationDetails" purpose="Location"><props><value key="StartsAt">-1</value><value key="EndsAt">39</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="2" type="LocationDetails" purpose="Location"><props><value key="StartsAt">81</value><value key="EndsAt">182</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="3" type="sdl:meta" color="Control"><fmt id="1"/></cxt-def><cxt-def id="4" type="sdl:html-control" color="Control"><fmt id="1"/></cxt-def><cxt-def id="5" type="LocationDetails" purpose="Location"><props><value key="StartsAt">182</value><value key="EndsAt">226</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="6" type="sdl:title" color="Control"><fmt id="1"/></cxt-def><cxt-def id="7" type="LocationDetails" purpose="Location"><props><value key="StartsAt">638</value><value key="EndsAt">723</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="8" type="x-tm-table-cell"><fmt id="1"/></cxt-def><cxt-def id="9" type="sdl:table-row" color="Control"><fmt id="1"/></cxt-def><cxt-def id="10" type="sdl:table" color="Control"><fmt id="1"/></cxt-def><cxt-def id="11" type="div" code="DIV" name="Div" descr="A div section" color=""><fmt id="1"/></cxt-def><cxt-def id="12" type="sdl:body" color="Control"><fmt id="1"/></cxt-def><cxt-def id="13" type="sdl:link" color="Control"><fmt id="1"/></cxt-def><cxt-def id="14" type="LocationDetails" purpose="Location"><props><value key="StartsAt">728</value><value key="EndsAt">772</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="15" type="LocationDetails" purpose="Location"><props><value key="StartsAt">777</value><value key="EndsAt">805</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="16" type="LocationDetails" purpose="Location"><props><value key="StartsAt">856</value><value key="EndsAt">937</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="17" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1104</value><value key="EndsAt">1134</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="18" type="x-tm-heading"><fmt id="1"/></cxt-def><cxt-def id="19" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1145</value><value key="EndsAt">1212</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="20" type="x-tm-listitem"><fmt id="1"/></cxt-def><cxt-def id="21" type="sdl:unordered-list" color="Control"><fmt id="1"/></cxt-def><cxt-def id="22" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1218</value><value key="EndsAt">1281</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="23" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1287</value><value key="EndsAt">1350</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="24" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1356</value><value key="EndsAt">1427</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="25" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1509</value><value key="EndsAt">1550</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="26" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1550</value><value key="EndsAt">1634</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="27" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1634</value><value key="EndsAt">1677</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="28" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1677</value><value key="EndsAt">1918</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="29" type="sdl:paragraph" color="Control"><fmt id="1"/></cxt-def><cxt-def id="30" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1923</value><value key="EndsAt">2322</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="31" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2327</value><value key="EndsAt">2604</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="32" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2609</value><value key="EndsAt">2907</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="33" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2907</value><value key="EndsAt">2944</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="34" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2944</value><value key="EndsAt">2986</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="35" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2992</value><value key="EndsAt">3081</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="36" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3086</value><value key="EndsAt">3776</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="37" type="pre" code="PRE" name="Pre" descr="A preformated text section" color=""><fmt id="1"/></cxt-def><cxt-def id="38" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3783</value><value key="EndsAt">4132</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="39" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4137</value><value key="EndsAt">4603</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="40" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4608</value><value key="EndsAt">4870</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="41" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4870</value><value key="EndsAt">4905</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="42" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4905</value><value key="EndsAt">4943</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="43" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4949</value><value key="EndsAt">5010</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="44" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5015</value><value key="EndsAt">7055</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="45" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7062</value><value key="EndsAt">7375</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="46" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7380</value><value key="EndsAt">7576</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="47" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7581</value><value key="EndsAt">7998</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="48" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7998</value><value key="EndsAt">8033</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="49" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8033</value><value key="EndsAt">8071</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="50" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8077</value><value key="EndsAt">8126</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="51" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8131</value><value key="EndsAt">10074</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="52" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10081</value><value key="EndsAt">10525</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="53" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10525</value><value key="EndsAt">10563</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="54" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10563</value><value key="EndsAt">10609</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="55" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10615</value><value key="EndsAt">10787</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="56" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10792</value><value key="EndsAt">11486</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="57" type="LocationDetails" purpose="Location"><props><value key="StartsAt">11493</value><value key="EndsAt">12044</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="58" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12049</value><value key="EndsAt">12380</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="59" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12385</value><value key="EndsAt">12743</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="60" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12748</value><value key="EndsAt">12757</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="61" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12767</value><value key="EndsAt">12880</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="62" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12886</value><value key="EndsAt">12999</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="63" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13011</value><value key="EndsAt">13061</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="64" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13140</value><value key="EndsAt">13173</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="65" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13173</value><value key="EndsAt">13711</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def></cxt-defs><node-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><node-def id="1" parent="2"><cxt id="3"/></node-def><node-def id="2"><cxt id="4"/></node-def><node-def id="3" parent="1"><cxt id="3"/></node-def><node-def id="4" parent="3"><cxt id="6"/></node-def><node-def id="5" parent="6"><cxt id="9"/></node-def><node-def id="6" parent="7"><cxt id="10"/></node-def><node-def id="7" parent="8"><cxt id="11"/></node-def><node-def id="8" parent="9"><cxt id="11"/></node-def><node-def id="9" parent="10"><cxt id="11"/></node-def><node-def id="10" parent="11"><cxt id="11"/></node-def><node-def id="11" parent="12"><cxt id="12"/></node-def><node-def id="12" parent="3"><cxt id="13"/></node-def><node-def id="13" parent="5"><cxt id="8"/></node-def><node-def id="14" parent="5"><cxt id="8"/></node-def><node-def id="15" parent="5"><cxt id="8"/></node-def><node-def id="16" parent="17"><cxt id="9"/></node-def><node-def id="17" parent="7"><cxt id="10"/></node-def><node-def id="18" parent="16"><cxt id="8"/></node-def><node-def id="19" parent="20"><cxt id="11"/></node-def><node-def id="20" parent="21"><cxt id="11"/></node-def><node-def id="21" parent="22"><cxt id="11"/></node-def><node-def id="22" parent="23"><cxt id="11"/></node-def><node-def id="23" parent="9"><cxt id="11"/></node-def><node-def id="24" parent="19"><cxt id="18"/></node-def><node-def id="25" parent="19"><cxt id="21"/></node-def><node-def id="26" parent="25"><cxt id="20"/></node-def><node-def id="27" parent="25"><cxt id="20"/></node-def><node-def id="28" parent="25"><cxt id="20"/></node-def><node-def id="29" parent="25"><cxt id="20"/></node-def><node-def id="30" parent="21"><cxt id="18"/></node-def><node-def id="31" parent="21"><cxt id="11"/></node-def><node-def id="32" parent="31"><cxt id="29"/></node-def><node-def id="33" parent="31"><cxt id="29"/></node-def><node-def id="34" parent="31"><cxt id="29"/></node-def><node-def id="35" parent="31"><cxt id="29"/></node-def><node-def id="36" parent="31"><cxt id="18"/></node-def><node-def id="37" parent="31"><cxt id="29"/></node-def><node-def id="38" parent="31"><cxt id="37"/></node-def><node-def id="39" parent="31"><cxt id="29"/></node-def><node-def id="40" parent="31"><cxt id="29"/></node-def><node-def id="41" parent="31"><cxt id="29"/></node-def><node-def id="42" parent="31"><cxt id="18"/></node-def><node-def id="43" parent="31"><cxt id="29"/></node-def><node-def id="44" parent="31"><cxt id="37"/></node-def><node-def id="45" parent="31"><cxt id="29"/></node-def><node-def id="46" parent="31"><cxt id="29"/></node-def><node-def id="47" parent="31"><cxt id="29"/></node-def><node-def id="48" parent="31"><cxt id="18"/></node-def><node-def id="49" parent="31"><cxt id="29"/></node-def><node-def id="50" parent="31"><cxt id="37"/></node-def><node-def id="51" parent="31"><cxt id="29"/></node-def><node-def id="52" parent="31"><cxt id="18"/></node-def><node-def id="53" parent="31"><cxt id="29"/></node-def><node-def id="54" parent="31"><cxt id="37"/></node-def><node-def id="55" parent="31"><cxt id="29"/></node-def><node-def id="56" parent="31"><cxt id="29"/></node-def><node-def id="57" parent="31"><cxt id="29"/></node-def><node-def id="58" parent="31"><cxt id="29"/></node-def><node-def id="59" parent="31"><cxt id="21"/></node-def><node-def id="60" parent="59"><cxt id="20"/></node-def><node-def id="61" parent="59"><cxt id="20"/></node-def><node-def id="62" parent="11"><cxt id="11"/></node-def><node-def id="63" parent="62"><cxt id="29"/></node-def></node-defs><tag-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><tag id="4"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdoc/supported-platforms-and-configurations.html#qt-5-7&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="7"><bpt name="a" word-end="false">&lt;a href=&quot;qtcore-index.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="10"><bpt name="a" word-end="false">&lt;a name=&quot;toc&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="13"><bpt name="a" word-end="false">&lt;a href=&quot;#global-variables&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="16"><bpt name="a" word-end="false">&lt;a href=&quot;#producer-class&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="19"><bpt name="a" word-end="false">&lt;a href=&quot;#consumer-class&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="22"><bpt name="a" word-end="false">&lt;a href=&quot;#the-main-function&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="25"><bpt name="span" word-end="false">&lt;span class=&quot;subtitle&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="29"><bpt name="a" word-end="false">&lt;a name=&quot;details&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="32"><bpt name="a" word-end="false">&lt;a href=&quot;qmutex.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="35"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="38"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="41"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="44"><bpt name="a" word-end="false">&lt;a href=&quot;qthread.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="47"><bpt name="a" word-end="false">&lt;a href=&quot;qwaitcondition.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="50"><bpt name="a" word-end="false">&lt;a href=&quot;qmutex.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="53"><bpt name="a" word-end="false">&lt;a href=&quot;qsemaphore.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="56"><bpt name="a" word-end="false">&lt;a href=&quot;qtcore-threads-semaphores-example.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="59"><bpt name="a" word-end="false">&lt;a name=&quot;global-variables&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="62"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="65"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="68"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="71"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="74"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="77"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="80"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="83"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="86"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="89"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="92"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="95"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="98"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="101"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="104"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="107"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="110"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="113"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="116"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="119"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="122"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="125"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="128"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="131"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="134"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="137"><bpt name="a" word-end="false">&lt;a name=&quot;producer-class&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="140"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="143"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="146"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="149"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="152"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="155"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="158"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="161"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="164"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="167"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="170"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="173"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="176"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="179"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="182"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="185"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="188"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="191"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="194"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="197"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="200"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="203"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="206"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="209"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="212"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="215"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="218"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="221"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="224"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="227"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="230"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="233"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="236"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="239"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="242"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="245"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="248"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="251"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="254"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="257"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="260"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="263"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="266"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="269"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="272"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="275"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="278"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="281"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="284"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="287"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="290"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="293"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="296"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="299"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="302"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="305"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="308"><bpt name="a" word-end="false">&lt;a href=&quot;qwaitcondition.html#wait&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="311"><bpt name="a" word-end="false">&lt;a name=&quot;consumer-class&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="314"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="317"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="320"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="323"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="326"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="329"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="332"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="335"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="338"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="341"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="344"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="347"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="350"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="353"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="356"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="359"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="362"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="365"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="368"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="371"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="374"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="377"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="380"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="383"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="386"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="389"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="392"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="395"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="398"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="401"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="404"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="407"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="410"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="413"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="416"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="419"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="422"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="425"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="428"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="431"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="434"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="437"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="440"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="443"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="446"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="449"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="452"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="455"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="458"><bpt name="a" word-end="false">&lt;a name=&quot;the-main-function&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="461"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="464"><bpt name="a" word-end="false">&lt;a href=&quot;qthread.html#wait&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="467"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="470"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="473"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="476"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="479"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="482"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="485"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="488"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="491"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="494"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="497"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="500"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="503"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="506"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="509"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="512"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="515"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="518"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="521"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="524"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="527"><bpt name="a" word-end="false">&lt;a href=&quot;qmutex.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="530"><bpt name="a" word-end="false">&lt;a href=&quot;qtcore-threads-waitconditions-waitconditions-cpp.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="533"><bpt name="a" word-end="false">&lt;a href=&quot;qtcore-threads-waitconditions-waitconditions-pro.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="539"><bpt name="a" word-end="false">&lt;a href=&quot;http://www.gnu.org/licenses/fdl.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="0"><ph name="xml" word-end="false">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</ph><props><value key="ProcessingInstructionTag">xml</value></props></tag><tag id="1"><ph name="Comment" word-end="false">&lt;!-- waitconditions.qdoc --&gt;</ph></tag><tag id="26"><ph name="Comment" word-end="false">&lt;!-- $$$threads/waitconditions-description --&gt;</ph></tag><tag id="534"><ph name="Comment" word-end="false">&lt;!-- @@@threads/waitconditions --&gt;</ph></tag><tag id="535"><ph name="copy" word-end="false" seg-hint="IncludeWithText">&amp;copy;</ph><props><value key="PlaceholderForMappedEntity">true</value></props></tag><tag id="536"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="540"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag></tag-defs></header><body><group><sdl:cxts><sdl:cxt id="1"/></sdl:cxts><trans-unit id="7da02afc-e090-42e3-9cc0-6b26efae22f6"><source><x id="0"/>
</source><seg-source><x id="0"/>
</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="2"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="3"/></sdl:cxts><trans-unit id="d92899b0-0561-4c75-8399-ed1d2c491974"><source><x id="1"/></source><seg-source><x id="1"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="5"/><sdl:cxt id="6"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="4"/></sdl:cxts><trans-unit id="248ab42b-5b84-4356-9944-b0a43b6988c7"><source>Wait Conditions Example | Qt Core 5.7</source><seg-source>Wait Conditions Example | Qt Core 5.7</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="13"/></sdl:cxts><trans-unit id="64cde3ef-4e36-413c-9222-9d0807ae0f61"><source><g id="4">Qt 5.7</g></source><seg-source><g id="4">Qt 5.7</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="14"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="14"/></sdl:cxts><trans-unit id="ffb3f594-dec4-4b73-ae96-b6a21b6079fc"><source><g id="7">Qt Core</g></source><seg-source><g id="7">Qt Core</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="15"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="15"/></sdl:cxts><trans-unit id="123cfb9f-3582-4b40-9e0c-fcc9ded904ab"><source>Wait Conditions Example</source><seg-source>Wait Conditions Example</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="16"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="18"/></sdl:cxts><trans-unit id="9fa49d0d-f224-47de-ab3b-6314a81bfe7f"><source>Qt 5.7.1 Reference Documentation</source><seg-source>Qt 5.7.1 Reference Documentation</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="17"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="24"/></sdl:cxts><trans-unit id="8a9f30c3-5f7c-4d7b-a3e1-54cb18f5628b"><source><g id="10">Contents</g></source><seg-source><g id="10">Contents</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="19"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="26"/></sdl:cxts><trans-unit id="a7d85fb1-93a8-4712-9389-766903a00307"><source><g id="13">Global Variables</g></source><seg-source><g id="13">Global Variables</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="22"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="27"/></sdl:cxts><trans-unit id="10e7aec3-c8c2-4ab7-bf50-dd1676567412"><source><g id="16">Producer Class</g></source><seg-source><g id="16">Producer Class</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="23"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="28"/></sdl:cxts><trans-unit id="c3591c2a-92ab-4896-a7ec-bec22a863007"><source><g id="19">Consumer Class</g></source><seg-source><g id="19">Consumer Class</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="24"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="29"/></sdl:cxts><trans-unit id="c30c3979-d4ac-4025-801e-31bb299151f2"><source><g id="22">The main() Function</g></source><seg-source><g id="22">The main() Function</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="25"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="30"/></sdl:cxts><trans-unit id="2d23afd8-e111-4a44-ba5a-b7a70ee9c69b"><source>Wait Conditions Example</source><seg-source>Wait Conditions Example</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="26"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="21"/></sdl:cxts><trans-unit id="4c7dc54d-61e4-4f1e-9aa6-01b9da27b026"><source><g id="25"/> <x id="26"/></source><seg-source><g id="25"/> <x id="26"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="b59b8fac-801c-4c2b-88b6-b51bfa0406bb"><source><g id="29"/></source><seg-source><g id="29"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="28"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="32"/></sdl:cxts><trans-unit id="09acd915-8c02-41a5-b58c-3ac769b8b9dd"><source>The producer writes data to the buffer until it reaches the end of the buffer, at which point it restarts from the beginning, overwriting existing data. The consumer thread reads the data as it is produced and writes it to standard error.</source><seg-source>The producer writes data to the buffer until it reaches the end of the buffer, at which point it restarts from the beginning, overwriting existing data. The consumer thread reads the data as it is produced and writes it to standard error.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="30"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="33"/></sdl:cxts><trans-unit id="c3c129a7-89dc-4861-a9e3-41e0fdb5a537"><source>Wait conditions make it possible to have a higher level of concurrency than what is possible with mutexes alone. If accesses to the buffer were simply guarded by a <g id="32">QMutex</g>, the consumer thread couldn&apos;t access the buffer at the same time as the producer thread. Yet, there is no harm in having both threads working on <g id="35">different parts</g> of the buffer at the same time.</source><seg-source>Wait conditions make it possible to have a higher level of concurrency than what is possible with mutexes alone. If accesses to the buffer were simply guarded by a <g id="32">QMutex</g>, the consumer thread couldn&apos;t access the buffer at the same time as the producer thread. Yet, there is no harm in having both threads working on <g id="35">different parts</g> of the buffer at the same time.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="31"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="34"/></sdl:cxts><trans-unit id="lockTU_4cb53ba8-7f70-4901-b319-6bf6ee76d60d" translate="no" sdl:locktype="Structure"><source><g id="38">Producer</g></source></trans-unit><trans-unit id="lockTU_ed3c5dc1-7a63-4201-aed6-7d2b16f1c56f" translate="no" sdl:locktype="Structure"><source><g id="41">Consumer</g></source></trans-unit><trans-unit id="lockTU_294f9bde-1ea3-41f9-b414-f0968752cfe5" translate="no" sdl:locktype="Structure"><source><g id="38">Producer</g></source></trans-unit><trans-unit id="lockTU_6a022629-1608-424f-b935-2b8f715c77a6" translate="no" sdl:locktype="Structure"><source><g id="41">Consumer</g></source></trans-unit><trans-unit id="a9b229ed-5d15-4909-9e39-0f911d6ba914"><source>The example comprises two classes: <x id="locked1" xid="lockTU_294f9bde-1ea3-41f9-b414-f0968752cfe5"/> and <x id="locked2" xid="lockTU_6a022629-1608-424f-b935-2b8f715c77a6"/>. Both inherit from <g id="44">QThread</g>. The circular buffer used for communicating between these two classes and the synchronization tools that protect it are global variables.</source><seg-source>The example comprises two classes: <x id="locked3" xid="lockTU_4cb53ba8-7f70-4901-b319-6bf6ee76d60d"/> and <x id="locked4" xid="lockTU_ed3c5dc1-7a63-4201-aed6-7d2b16f1c56f"/>. Both inherit from <g id="44">QThread</g>. The circular buffer used for communicating between these two classes and the synchronization tools that protect it are global variables.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="32"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="35"/></sdl:cxts><trans-unit id="82fc30b5-52a4-4dde-acab-d69083d04b78"><source>An alternative to using <g id="47">QWaitCondition</g> and <g id="50">QMutex</g> to solve the producer-consumer problem is to use <g id="53">QSemaphore</g>. This is what the <g id="56">Semaphores Example</g> does.</source><seg-source>An alternative to using <g id="47">QWaitCondition</g> and <g id="50">QMutex</g> to solve the producer-consumer problem is to use <g id="53">QSemaphore</g>. This is what the <g id="56">Semaphores Example</g> does.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="33"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="7c4061fe-f91d-400f-8b01-5b2a7fc94e1f"><source><g id="59"/></source><seg-source><g id="59"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="34"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="77aa43b4-1795-4ecc-a6a1-7f91ece8bd28"><source>Global Variables</source><seg-source>Global Variables</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="35"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="37"/></sdl:cxts><trans-unit id="2c7b8775-e2ef-4d0d-9ff2-8ccdbc840dfc"><source>Let&apos;s start by reviewing the circular buffer and the associated synchronization tools:</source><seg-source>Let&apos;s start by reviewing the circular buffer and the associated synchronization tools:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="36"/><sdl:cxt id="37"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="38"/></sdl:cxts><trans-unit id="b1cba25d-a7ae-4deb-8e85-8cd83d3fea68"><source><g id="62">const</g> <g id="65">int</g> DataSize <g id="68">=</g> <g id="71">100000</g>; <g id="74">const</g> <g id="77">int</g> BufferSize <g id="80">=</g> <g id="83">8192</g>; <g id="86">char</g> buffer<g id="89">[</g>BufferSize<g id="92">]</g>; <g id="95">QWaitCondition</g> bufferNotEmpty; <g id="98">QWaitCondition</g> bufferNotFull; <g id="101">QMutex</g> mutex; <g id="104">int</g> numUsedBytes <g id="107">=</g> <g id="110">0</g>;</source><seg-source><g id="62">const</g> <g id="65">int</g> DataSize <g id="68">=</g> <g id="71">100000</g>; <g id="74">const</g> <g id="77">int</g> BufferSize <g id="80">=</g> <g id="83">8192</g>; <g id="86">char</g> buffer<g id="89">[</g>BufferSize<g id="92">]</g>; <g id="95">QWaitCondition</g> bufferNotEmpty; <g id="98">QWaitCondition</g> bufferNotFull; <g id="101">QMutex</g> mutex; <g id="104">int</g> numUsedBytes <g id="107">=</g> <g id="110">0</g>;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="38"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="39"/></sdl:cxts><trans-unit id="lockTU_f8a1b07d-48e4-4b37-959b-04c8c8e2717f" translate="no" sdl:locktype="Structure"><source><g id="113">DataSize</g></source></trans-unit><trans-unit id="lockTU_40311927-f284-44f2-a450-0ec2b86a203c" translate="no" sdl:locktype="Structure"><source><g id="116">BufferSize</g></source></trans-unit><trans-unit id="lockTU_90008340-7df3-43ea-a74b-9ec0e121dedb" translate="no" sdl:locktype="Structure"><source><g id="119">DataSize</g></source></trans-unit><trans-unit id="lockTU_17fde0dd-d641-4b90-a7fe-074cf054611c" translate="no" sdl:locktype="Structure"><source><g id="113">DataSize</g></source></trans-unit><trans-unit id="lockTU_b21ba4b0-f61d-4768-a1b8-0e663169b90f" translate="no" sdl:locktype="Structure"><source><g id="116">BufferSize</g></source></trans-unit><trans-unit id="lockTU_ce815b6a-a5ef-4e92-8eb0-c866f01b8e0f" translate="no" sdl:locktype="Structure"><source><g id="119">DataSize</g></source></trans-unit><trans-unit id="106cf9af-ab5c-410b-a8f3-bea0145a2f3b"><source><x id="locked5" xid="lockTU_17fde0dd-d641-4b90-a7fe-074cf054611c"/> is the amount of data that the producer will generate. To keep the example as simple as possible, we make it a constant. <x id="locked6" xid="lockTU_b21ba4b0-f61d-4768-a1b8-0e663169b90f"/> is the size of the circular buffer. It is less than <x id="locked7" xid="lockTU_ce815b6a-a5ef-4e92-8eb0-c866f01b8e0f"/>, meaning that at some point the producer will reach the end of the buffer and restart from the beginning.</source><seg-source><x id="locked8" xid="lockTU_f8a1b07d-48e4-4b37-959b-04c8c8e2717f"/> is the amount of data that the producer will generate. To keep the example as simple as possible, we make it a constant. <x id="locked9" xid="lockTU_40311927-f284-44f2-a450-0ec2b86a203c"/> is the size of the circular buffer. It is less than <x id="locked10" xid="lockTU_90008340-7df3-43ea-a74b-9ec0e121dedb"/>, meaning that at some point the producer will reach the end of the buffer and restart from the beginning.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="39"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="40"/></sdl:cxts><trans-unit id="lockTU_82dd9efa-891e-45b3-b805-48a60a25216a" translate="no" sdl:locktype="Structure"><source><g id="122">bufferNotEmpty</g></source></trans-unit><trans-unit id="lockTU_6143636a-3a85-4640-a394-bcaddedf8117" translate="no" sdl:locktype="Structure"><source><g id="125">bufferNotFull</g></source></trans-unit><trans-unit id="lockTU_d52e2a4d-77df-4aa5-92b4-cf351ac1ac0d" translate="no" sdl:locktype="Structure"><source><g id="128">numUsedBytes</g></source></trans-unit><trans-unit id="lockTU_4c7eedc2-3c06-4b34-a381-f16eaf8ad749" translate="no" sdl:locktype="Structure"><source><g id="122">bufferNotEmpty</g></source></trans-unit><trans-unit id="lockTU_532b5f7f-f8ac-49de-8167-97bd050fbe9a" translate="no" sdl:locktype="Structure"><source><g id="125">bufferNotFull</g></source></trans-unit><trans-unit id="lockTU_b940ad26-9ba8-42a0-b5b9-a3d9fb92ee41" translate="no" sdl:locktype="Structure"><source><g id="128">numUsedBytes</g></source></trans-unit><trans-unit id="9aa38fc6-16c1-4de7-86f6-f455336558db"><source>To synchronize the producer and the consumer, we need two wait conditions and one mutex. The <x id="locked11" xid="lockTU_4c7eedc2-3c06-4b34-a381-f16eaf8ad749"/> condition is signalled when the producer has generated some data, telling the consumer that it can start reading it. The <x id="locked12" xid="lockTU_532b5f7f-f8ac-49de-8167-97bd050fbe9a"/> condition is signalled when the consumer has read some data, telling the producer that it can generate more. The <x id="locked13" xid="lockTU_b940ad26-9ba8-42a0-b5b9-a3d9fb92ee41"/> is the number of bytes in the buffer that contain data.</source><seg-source>To synchronize the producer and the consumer, we need two wait conditions and one mutex. The <x id="locked14" xid="lockTU_82dd9efa-891e-45b3-b805-48a60a25216a"/> condition is signalled when the producer has generated some data, telling the consumer that it can start reading it. The <x id="locked15" xid="lockTU_6143636a-3a85-4640-a394-bcaddedf8117"/> condition is signalled when the consumer has read some data, telling the producer that it can generate more. The <x id="locked16" xid="lockTU_d52e2a4d-77df-4aa5-92b4-cf351ac1ac0d"/> is the number of bytes in the buffer that contain data.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="40"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="41"/></sdl:cxts><trans-unit id="lockTU_aedbc44e-0a5c-4454-85d2-033c10dfe1b4" translate="no" sdl:locktype="Structure"><source><g id="131">numUsedBytes</g></source></trans-unit><trans-unit id="lockTU_db80004d-f574-427d-be60-40fce0785456" translate="no" sdl:locktype="Structure"><source><g id="134">BufferSize</g></source></trans-unit><trans-unit id="lockTU_97983a89-e64d-4c3e-be21-732c5bb4632d" translate="no" sdl:locktype="Structure"><source><g id="131">numUsedBytes</g></source></trans-unit><trans-unit id="lockTU_e5624a56-4916-49e9-838d-f53ea5b798f1" translate="no" sdl:locktype="Structure"><source><g id="134">BufferSize</g></source></trans-unit><trans-unit id="2206bfc7-79d9-4545-bdf9-6f2523f1cf0b"><source>Together, the wait conditions, the mutex, and the <x id="locked17" xid="lockTU_97983a89-e64d-4c3e-be21-732c5bb4632d"/> counter ensure that the producer is never more than <x id="locked18" xid="lockTU_e5624a56-4916-49e9-838d-f53ea5b798f1"/> bytes ahead of the consumer, and that the consumer never reads data that the producer hasn&apos;t generated yet.</source><seg-source>Together, the wait conditions, the mutex, and the <x id="locked19" xid="lockTU_aedbc44e-0a5c-4454-85d2-033c10dfe1b4"/> counter ensure that the producer is never more than <x id="locked20" xid="lockTU_db80004d-f574-427d-be60-40fce0785456"/> bytes ahead of the consumer, and that the consumer never reads data that the producer hasn&apos;t generated yet.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="0d9598d6-215a-4a49-b510-c3b59bf653fc"><source><g id="137"/></source><seg-source><g id="137"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="42"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="42"/></sdl:cxts><trans-unit id="6434a254-3dac-4ffa-9458-5b476fd0f4a5"><source>Producer Class</source><seg-source>Producer Class</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="43"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="lockTU_18b29c6e-7ccb-44ec-97ea-694c6eaba04a" translate="no" sdl:locktype="Structure"><source><g id="140">Producer</g></source></trans-unit><trans-unit id="lockTU_0c62467d-ba57-44c3-ae7c-f14fb3291833" translate="no" sdl:locktype="Structure"><source><g id="140">Producer</g></source></trans-unit><trans-unit id="82e1ceb6-42ff-40ce-b758-500965c06ee0"><source>Let&apos;s review the code for the <x id="locked21" xid="lockTU_0c62467d-ba57-44c3-ae7c-f14fb3291833"/> class:</source><seg-source>Let&apos;s review the code for the <x id="locked22" xid="lockTU_18b29c6e-7ccb-44ec-97ea-694c6eaba04a"/> class:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="44"/><sdl:cxt id="37"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="44"/></sdl:cxts><trans-unit id="41d4c974-183c-4b76-aefc-824cdffa9871"><source><g id="143">class</g> Producer : <g id="146">public</g> <g id="149">QThread</g> { <g id="152">public</g>: Producer(<g id="155">QObject</g> <g id="158">*</g>parent <g id="161">=</g> NULL) : <g id="164">QThread</g>(parent) { } <g id="167">void</g> run() Q_DECL_OVERRIDE { qsrand(<g id="170">QTime</g>(<g id="173">0</g><g id="176">,</g><g id="179">0</g><g id="182">,</g><g id="185">0</g>)<g id="188">.</g>secsTo(<g id="191">QTime</g><g id="194">::</g>currentTime())); <g id="197">for</g> (<g id="200">int</g> i <g id="203">=</g> <g id="206">0</g>; i <g id="209">&lt;</g> DataSize; <g id="212">+</g><g id="215">+</g>i) { mutex<g id="218">.</g>lock(); <g id="221">if</g> (numUsedBytes <g id="224">=</g><g id="227">=</g> BufferSize) bufferNotFull<g id="230">.</g>wait(<g id="233">&amp;</g>mutex); mutex<g id="236">.</g>unlock(); buffer<g id="239">[</g>i <g id="242">%</g> BufferSize<g id="245">]</g> <g id="248">=</g> <g id="251">&quot;ACGT&quot;</g><g id="254">[</g>(<g id="257">int</g>)qrand() <g id="260">%</g> <g id="263">4</g><g id="266">]</g>; mutex<g id="269">.</g>lock(); <g id="272">+</g><g id="275">+</g>numUsedBytes; bufferNotEmpty<g id="278">.</g>wakeAll(); mutex<g id="281">.</g>unlock(); } } };</source><seg-source><g id="143">class</g> Producer : <g id="146">public</g> <g id="149">QThread</g> { <g id="152">public</g>: Producer(<g id="155">QObject</g> <g id="158">*</g>parent <g id="161">=</g> NULL) : <g id="164">QThread</g>(parent) { } <g id="167">void</g> run() Q_DECL_OVERRIDE { qsrand(<g id="170">QTime</g>(<g id="173">0</g><g id="176">,</g><g id="179">0</g><g id="182">,</g><g id="185">0</g>)<g id="188">.</g>secsTo(<g id="191">QTime</g><g id="194">::</g>currentTime())); <g id="197">for</g> (<g id="200">int</g> i <g id="203">=</g> <g id="206">0</g>; i <g id="209">&lt;</g> DataSize; <g id="212">+</g><g id="215">+</g>i) { mutex<g id="218">.</g>lock(); <g id="221">if</g> (numUsedBytes <g id="224">=</g><g id="227">=</g> BufferSize) bufferNotFull<g id="230">.</g>wait(<g id="233">&amp;</g>mutex); mutex<g id="236">.</g>unlock(); buffer<g id="239">[</g>i <g id="242">%</g> BufferSize<g id="245">]</g> <g id="248">=</g> <g id="251">&quot;ACGT&quot;</g><g id="254">[</g>(<g id="257">int</g>)qrand() <g id="260">%</g> <g id="263">4</g><g id="266">]</g>; mutex<g id="269">.</g>lock(); <g id="272">+</g><g id="275">+</g>numUsedBytes; bufferNotEmpty<g id="278">.</g>wakeAll(); mutex<g id="281">.</g>unlock(); } } };</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="45"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="45"/></sdl:cxts><trans-unit id="lockTU_98da9058-d9cf-4857-8382-60fb0c57afcc" translate="no" sdl:locktype="Structure"><source><g id="284">DataSize</g></source></trans-unit><trans-unit id="lockTU_ef42fa18-4bd7-4b87-b911-053c4932ae42" translate="no" sdl:locktype="Structure"><source><g id="287">numUsedBytes</g></source></trans-unit><trans-unit id="lockTU_2940f26c-ff0b-49d9-b788-be12cf7df9a7" translate="no" sdl:locktype="Structure"><source><g id="290">BufferSize</g></source></trans-unit><trans-unit id="lockTU_418c2ec1-6f9e-4a4d-8733-11be281456a6" translate="no" sdl:locktype="Structure"><source><g id="293">bufferNotFull</g></source></trans-unit><trans-unit id="lockTU_288ace4f-c460-4b23-b4be-9ea21efe7eac" translate="no" sdl:locktype="Structure"><source><g id="284">DataSize</g></source></trans-unit><trans-unit id="lockTU_cf6c8ffb-15b8-4595-88ee-b5099600b54c" translate="no" sdl:locktype="Structure"><source><g id="287">numUsedBytes</g></source></trans-unit><trans-unit id="lockTU_7cb8b957-a7c7-49b8-99b7-698d2f6b495e" translate="no" sdl:locktype="Structure"><source><g id="290">BufferSize</g></source></trans-unit><trans-unit id="lockTU_571420cd-3c97-4a42-8c7f-57fa39545f77" translate="no" sdl:locktype="Structure"><source><g id="293">bufferNotFull</g></source></trans-unit><trans-unit id="59f92745-89d7-48b9-a7c3-8bb2f2051504"><source>The producer generates <x id="locked23" xid="lockTU_288ace4f-c460-4b23-b4be-9ea21efe7eac"/> bytes of data. Before it writes a byte to the circular buffer, it must first check whether the buffer is full (i.e., <x id="locked24" xid="lockTU_cf6c8ffb-15b8-4595-88ee-b5099600b54c"/> equals <x id="locked25" xid="lockTU_7cb8b957-a7c7-49b8-99b7-698d2f6b495e"/>). If the buffer is full, the thread waits on the <x id="locked26" xid="lockTU_571420cd-3c97-4a42-8c7f-57fa39545f77"/> condition.</source><seg-source>The producer generates <x id="locked27" xid="lockTU_98da9058-d9cf-4857-8382-60fb0c57afcc"/> bytes of data. Before it writes a byte to the circular buffer, it must first check whether the buffer is full (i.e., <x id="locked28" xid="lockTU_ef42fa18-4bd7-4b87-b911-053c4932ae42"/> equals <x id="locked29" xid="lockTU_2940f26c-ff0b-49d9-b788-be12cf7df9a7"/>). If the buffer is full, the thread waits on the <x id="locked30" xid="lockTU_418c2ec1-6f9e-4a4d-8733-11be281456a6"/> condition.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="46"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="46"/></sdl:cxts><trans-unit id="lockTU_e8b463b4-1cb7-4213-a205-bfbfde62fdd0" translate="no" sdl:locktype="Structure"><source><g id="296">numUsedBytes</g></source></trans-unit><trans-unit id="lockTU_711e41b2-b2d2-419d-bc58-d45cc624923d" translate="no" sdl:locktype="Structure"><source><g id="299">bufferNotEmpty</g></source></trans-unit><trans-unit id="lockTU_9223c7ee-fe70-4602-ae61-b0b5ffe11825" translate="no" sdl:locktype="Structure"><source><g id="302">numUsedBytes</g></source></trans-unit><trans-unit id="lockTU_24b50dd4-58d4-4f6f-84d3-af223aeaf266" translate="no" sdl:locktype="Structure"><source><g id="296">numUsedBytes</g></source></trans-unit><trans-unit id="lockTU_841b27f3-39bf-4484-b86c-6332a465b6e1" translate="no" sdl:locktype="Structure"><source><g id="299">bufferNotEmpty</g></source></trans-unit><trans-unit id="lockTU_a0cc95cf-02fd-4898-b3fd-9f2cd01a8e94" translate="no" sdl:locktype="Structure"><source><g id="302">numUsedBytes</g></source></trans-unit><trans-unit id="3981ca29-e011-427f-a97a-319c068e0717"><source>At the end, the producer increments <x id="locked31" xid="lockTU_24b50dd4-58d4-4f6f-84d3-af223aeaf266"/> and signalls that the condition <x id="locked32" xid="lockTU_841b27f3-39bf-4484-b86c-6332a465b6e1"/> is true, since <x id="locked33" xid="lockTU_a0cc95cf-02fd-4898-b3fd-9f2cd01a8e94"/> is necessarily greater than 0.</source><seg-source>At the end, the producer increments <x id="locked34" xid="lockTU_e8b463b4-1cb7-4213-a205-bfbfde62fdd0"/> and signalls that the condition <x id="locked35" xid="lockTU_711e41b2-b2d2-419d-bc58-d45cc624923d"/> is true, since <x id="locked36" xid="lockTU_9223c7ee-fe70-4602-ae61-b0b5ffe11825"/> is necessarily greater than 0.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="47"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="47"/></sdl:cxts><trans-unit id="lockTU_676bdd0c-1612-45f5-b997-2f5a4fa40ee1" translate="no" sdl:locktype="Structure"><source><g id="305">numUsedBytes</g></source></trans-unit><trans-unit id="lockTU_0ae9527a-0873-4ea1-84aa-260090c0d974" translate="no" sdl:locktype="Structure"><source><g id="305">numUsedBytes</g></source></trans-unit><trans-unit id="884ecab3-6c10-4a14-af92-0ecd420f6ef5"><source>We guard all accesses to the <x id="locked37" xid="lockTU_0ae9527a-0873-4ea1-84aa-260090c0d974"/> variable with a mutex. In addition, the <g id="308">QWaitCondition::wait</g>() function accepts a mutex as its argument. This mutex is unlocked before the thread is put to sleep and locked when the thread wakes up. Furthermore, the transition from the locked state to the wait state is atomic, to prevent race conditions from occurring.</source><seg-source>We guard all accesses to the <x id="locked38" xid="lockTU_676bdd0c-1612-45f5-b997-2f5a4fa40ee1"/> variable with a mutex. In addition, the <g id="308">QWaitCondition::wait</g>() function accepts a mutex as its argument. This mutex is unlocked before the thread is put to sleep and locked when the thread wakes up. Furthermore, the transition from the locked state to the wait state is atomic, to prevent race conditions from occurring.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="48"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="ad1b39d8-c0b8-4f32-bb38-d966a4c642ec"><source><g id="311"/></source><seg-source><g id="311"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="49"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="48"/></sdl:cxts><trans-unit id="4cab7eaa-b807-4edf-9858-4604b71dd1bd"><source>Consumer Class</source><seg-source>Consumer Class</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="50"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="49"/></sdl:cxts><trans-unit id="lockTU_2dabd85a-b24a-4e29-89a1-d032a6b5611c" translate="no" sdl:locktype="Structure"><source><g id="314">Consumer</g></source></trans-unit><trans-unit id="lockTU_7497f3ce-c8df-4eba-8498-d32a07817fa8" translate="no" sdl:locktype="Structure"><source><g id="314">Consumer</g></source></trans-unit><trans-unit id="922d7914-da2b-41da-a8c0-c3c3510de4f7"><source>Let&apos;s turn to the <x id="locked39" xid="lockTU_7497f3ce-c8df-4eba-8498-d32a07817fa8"/> class:</source><seg-source>Let&apos;s turn to the <x id="locked40" xid="lockTU_2dabd85a-b24a-4e29-89a1-d032a6b5611c"/> class:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="51"/><sdl:cxt id="37"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="50"/></sdl:cxts><trans-unit id="febe7b13-3907-4fc5-aa11-2bc6aeb9eed9"><source><g id="317">class</g> Consumer : <g id="320">public</g> <g id="323">QThread</g> { Q_OBJECT <g id="326">public</g>: Consumer(<g id="329">QObject</g> <g id="332">*</g>parent <g id="335">=</g> NULL) : <g id="338">QThread</g>(parent) { } <g id="341">void</g> run() Q_DECL_OVERRIDE { <g id="344">for</g> (<g id="347">int</g> i <g id="350">=</g> <g id="353">0</g>; i <g id="356">&lt;</g> DataSize; <g id="359">+</g><g id="362">+</g>i) { mutex<g id="365">.</g>lock(); <g id="368">if</g> (numUsedBytes <g id="371">=</g><g id="374">=</g> <g id="377">0</g>) bufferNotEmpty<g id="380">.</g>wait(<g id="383">&amp;</g>mutex); mutex<g id="386">.</g>unlock(); fprintf(stderr<g id="389">,</g> <g id="392">&quot;%c&quot;</g><g id="395">,</g> buffer<g id="398">[</g>i <g id="401">%</g> BufferSize<g id="404">]</g>); mutex<g id="407">.</g>lock(); <g id="410">-</g><g id="413">-</g>numUsedBytes; bufferNotFull<g id="416">.</g>wakeAll(); mutex<g id="419">.</g>unlock(); } fprintf(stderr<g id="422">,</g> <g id="425">&quot;\n&quot;</g>); } <g id="428">signals</g>: <g id="431">void</g> stringConsumed(<g id="434">const</g> <g id="437">QString</g> <g id="440">&amp;</g>text); };</source><seg-source><g id="317">class</g> Consumer : <g id="320">public</g> <g id="323">QThread</g> { Q_OBJECT <g id="326">public</g>: Consumer(<g id="329">QObject</g> <g id="332">*</g>parent <g id="335">=</g> NULL) : <g id="338">QThread</g>(parent) { } <g id="341">void</g> run() Q_DECL_OVERRIDE { <g id="344">for</g> (<g id="347">int</g> i <g id="350">=</g> <g id="353">0</g>; i <g id="356">&lt;</g> DataSize; <g id="359">+</g><g id="362">+</g>i) { mutex<g id="365">.</g>lock(); <g id="368">if</g> (numUsedBytes <g id="371">=</g><g id="374">=</g> <g id="377">0</g>) bufferNotEmpty<g id="380">.</g>wait(<g id="383">&amp;</g>mutex); mutex<g id="386">.</g>unlock(); fprintf(stderr<g id="389">,</g> <g id="392">&quot;%c&quot;</g><g id="395">,</g> buffer<g id="398">[</g>i <g id="401">%</g> BufferSize<g id="404">]</g>); mutex<g id="407">.</g>lock(); <g id="410">-</g><g id="413">-</g>numUsedBytes; bufferNotFull<g id="416">.</g>wakeAll(); mutex<g id="419">.</g>unlock(); } fprintf(stderr<g id="422">,</g> <g id="425">&quot;\n&quot;</g>); } <g id="428">signals</g>: <g id="431">void</g> stringConsumed(<g id="434">const</g> <g id="437">QString</g> <g id="440">&amp;</g>text); };</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="52"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="51"/></sdl:cxts><trans-unit id="lockTU_8cb61063-ead8-4fe1-8a5d-347363dee23f" translate="no" sdl:locktype="Structure"><source><g id="443">numUsedBytes</g></source></trans-unit><trans-unit id="lockTU_6c46066b-f038-409f-9f22-ed3fb2de2fe0" translate="no" sdl:locktype="Structure"><source><g id="446">bufferNotEmpty</g></source></trans-unit><trans-unit id="lockTU_3868c938-b519-4278-bbe1-79c7d0fdef3c" translate="no" sdl:locktype="Structure"><source><g id="449">numUsedBytes</g></source></trans-unit><trans-unit id="lockTU_037fe86b-64a4-4f34-be3f-f11f2b77074b" translate="no" sdl:locktype="Structure"><source><g id="452">bufferNotFull</g></source></trans-unit><trans-unit id="lockTU_85d7667d-0b28-4b22-bb24-69aae37be86e" translate="no" sdl:locktype="Structure"><source><g id="455">bufferNotEmpty</g></source></trans-unit><trans-unit id="lockTU_798781b3-9883-49c9-988c-480509a3c228" translate="no" sdl:locktype="Structure"><source><g id="443">numUsedBytes</g></source></trans-unit><trans-unit id="lockTU_213bb7dd-7c8a-4b20-bf7b-47b779586d81" translate="no" sdl:locktype="Structure"><source><g id="446">bufferNotEmpty</g></source></trans-unit><trans-unit id="lockTU_41ea5c35-56aa-4973-9405-6cf7895a6ba5" translate="no" sdl:locktype="Structure"><source><g id="449">numUsedBytes</g></source></trans-unit><trans-unit id="lockTU_37198d62-0f1c-4651-a9f7-a6206c9c86ea" translate="no" sdl:locktype="Structure"><source><g id="452">bufferNotFull</g></source></trans-unit><trans-unit id="lockTU_41717324-881a-4fa0-ae91-106e121aba21" translate="no" sdl:locktype="Structure"><source><g id="455">bufferNotEmpty</g></source></trans-unit><trans-unit id="972be1b2-63f6-40b5-830b-44ad0f48aa5d"><source>The code is very similar to the producer. Before we read the byte, we check whether the buffer is empty (<x id="locked41" xid="lockTU_798781b3-9883-49c9-988c-480509a3c228"/> is 0) instead of whether it&apos;s full and wait on the <x id="locked42" xid="lockTU_213bb7dd-7c8a-4b20-bf7b-47b779586d81"/> condition if it&apos;s empty. After we&apos;ve read the byte, we decrement <x id="locked43" xid="lockTU_41ea5c35-56aa-4973-9405-6cf7895a6ba5"/> (instead of incrementing it), and we signal the <x id="locked44" xid="lockTU_37198d62-0f1c-4651-a9f7-a6206c9c86ea"/> condition (instead of the <x id="locked45" xid="lockTU_41717324-881a-4fa0-ae91-106e121aba21"/> condition).</source><seg-source>The code is very similar to the producer. Before we read the byte, we check whether the buffer is empty (<x id="locked46" xid="lockTU_8cb61063-ead8-4fe1-8a5d-347363dee23f"/> is 0) instead of whether it&apos;s full and wait on the <x id="locked47" xid="lockTU_6c46066b-f038-409f-9f22-ed3fb2de2fe0"/> condition if it&apos;s empty. After we&apos;ve read the byte, we decrement <x id="locked48" xid="lockTU_3868c938-b519-4278-bbe1-79c7d0fdef3c"/> (instead of incrementing it), and we signal the <x id="locked49" xid="lockTU_037fe86b-64a4-4f34-be3f-f11f2b77074b"/> condition (instead of the <x id="locked50" xid="lockTU_85d7667d-0b28-4b22-bb24-69aae37be86e"/> condition).</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="53"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="09e79ba6-bf7e-43f2-9f4e-e827ecb9f41e"><source><g id="458"/></source><seg-source><g id="458"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="54"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="52"/></sdl:cxts><trans-unit id="400829b9-419c-4517-a1f7-5cf05f139ac0"><source>The main() Function</source><seg-source>The main() Function</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="55"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="53"/></sdl:cxts><trans-unit id="lockTU_6d46d5dc-c3f1-40dc-8851-704e24ec4c63" translate="no" sdl:locktype="Structure"><source><g id="461">main()</g></source></trans-unit><trans-unit id="lockTU_15b10deb-dc2d-4ee4-acfa-30700a82f724" translate="no" sdl:locktype="Structure"><source><g id="461">main()</g></source></trans-unit><trans-unit id="67d44126-4216-4b5f-8ad9-855ee6a8e184"><source>In <x id="locked51" xid="lockTU_15b10deb-dc2d-4ee4-acfa-30700a82f724"/>, we create the two threads and call <g id="464">QThread::wait</g>() to ensure that both threads get time to finish before we exit:</source><seg-source>In <x id="locked52" xid="lockTU_6d46d5dc-c3f1-40dc-8851-704e24ec4c63"/>, we create the two threads and call <g id="464">QThread::wait</g>() to ensure that both threads get time to finish before we exit:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="56"/><sdl:cxt id="37"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="54"/></sdl:cxts><trans-unit id="fb792a61-bfad-4e14-927e-52171656f087"><source><g id="467">int</g> main(<g id="470">int</g> argc<g id="473">,</g> <g id="476">char</g> <g id="479">*</g>argv<g id="482">[</g><g id="485">]</g>) { <g id="488">QCoreApplication</g> app(argc<g id="491">,</g> argv); Producer producer; Consumer consumer; producer<g id="494">.</g>start(); consumer<g id="497">.</g>start(); producer<g id="500">.</g>wait(); consumer<g id="503">.</g>wait(); <g id="506">return</g> <g id="509">0</g>; }</source><seg-source><g id="467">int</g> main(<g id="470">int</g> argc<g id="473">,</g> <g id="476">char</g> <g id="479">*</g>argv<g id="482">[</g><g id="485">]</g>) { <g id="488">QCoreApplication</g> app(argc<g id="491">,</g> argv); Producer producer; Consumer consumer; producer<g id="494">.</g>start(); consumer<g id="497">.</g>start(); producer<g id="500">.</g>wait(); consumer<g id="503">.</g>wait(); <g id="506">return</g> <g id="509">0</g>; }</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="57"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="55"/></sdl:cxts><trans-unit id="lockTU_9366d3cc-a839-43a2-9ce6-707e4fd471c4" translate="no" sdl:locktype="Structure"><source><g id="512">bufferNotEmpty</g></source></trans-unit><trans-unit id="lockTU_12cd4033-14aa-4c83-88b1-0cf935b91728" translate="no" sdl:locktype="Structure"><source><g id="515">numUsedBytes</g></source></trans-unit><trans-unit id="lockTU_a43d7834-89cd-4487-bead-9e8cb5ab9022" translate="no" sdl:locktype="Structure"><source><g id="518">numUsedBytes</g></source></trans-unit><trans-unit id="lockTU_13ff8371-f873-4735-b9ed-b051f31a7280" translate="no" sdl:locktype="Structure"><source><g id="521">BufferSize</g></source></trans-unit><trans-unit id="lockTU_f0594973-836a-4eb0-a489-9b62e20a7e82" translate="no" sdl:locktype="Structure"><source><g id="524">bufferNotEmpty</g></source></trans-unit><trans-unit id="lockTU_862e8105-6ced-4e77-93eb-7a265e9eec6a" translate="no" sdl:locktype="Structure"><source><g id="512">bufferNotEmpty</g></source></trans-unit><trans-unit id="lockTU_65191223-736c-4643-86b7-ddddc3ceeadd" translate="no" sdl:locktype="Structure"><source><g id="515">numUsedBytes</g></source></trans-unit><trans-unit id="lockTU_bcb3cbd6-af80-4329-925f-42e07a16c7e1" translate="no" sdl:locktype="Structure"><source><g id="518">numUsedBytes</g></source></trans-unit><trans-unit id="lockTU_512fffd4-7d9d-4b23-bb22-92a241b6fbbc" translate="no" sdl:locktype="Structure"><source><g id="521">BufferSize</g></source></trans-unit><trans-unit id="lockTU_1afebca3-f2ba-4105-8ddb-b75079496c44" translate="no" sdl:locktype="Structure"><source><g id="524">bufferNotEmpty</g></source></trans-unit><trans-unit id="07145cf8-063e-4efd-bbb3-38c8f704af91"><source>So what happens when we run the program? Initially, the producer thread is the only one that can do anything; the consumer is blocked waiting for the <x id="locked53" xid="lockTU_862e8105-6ced-4e77-93eb-7a265e9eec6a"/> condition to be signalled (<x id="locked54" xid="lockTU_65191223-736c-4643-86b7-ddddc3ceeadd"/> is 0). Once the producer has put one byte in the buffer, <x id="locked55" xid="lockTU_bcb3cbd6-af80-4329-925f-42e07a16c7e1"/> is <x id="locked56" xid="lockTU_512fffd4-7d9d-4b23-bb22-92a241b6fbbc"/> - 1 and the <x id="locked57" xid="lockTU_1afebca3-f2ba-4105-8ddb-b75079496c44"/> condition is signalled. At that point, two things can happen: Either the consumer thread takes over and reads that byte, or the producer gets to produce a second byte.</source><seg-source>So what happens when we run the program? Initially, the producer thread is the only one that can do anything; the consumer is blocked waiting for the <x id="locked58" xid="lockTU_9366d3cc-a839-43a2-9ce6-707e4fd471c4"/> condition to be signalled (<x id="locked59" xid="lockTU_12cd4033-14aa-4c83-88b1-0cf935b91728"/> is 0). Once the producer has put one byte in the buffer, <x id="locked60" xid="lockTU_a43d7834-89cd-4487-bead-9e8cb5ab9022"/> is <x id="locked61" xid="lockTU_13ff8371-f873-4735-b9ed-b051f31a7280"/> - 1 and the <x id="locked62" xid="lockTU_f0594973-836a-4eb0-a489-9b62e20a7e82"/> condition is signalled. At that point, two things can happen: Either the consumer thread takes over and reads that byte, or the producer gets to produce a second byte.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="58"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="56"/></sdl:cxts><trans-unit id="317ba81d-d1b2-485b-a113-1763d44a2124"><source>The producer-consumer model presented in this example makes it possible to write highly concurrent multithreaded applications. On a multiprocessor machine, the program is potentially up to twice as fast as the equivalent mutex-based program, since the two threads can be active at the same time on different parts of the buffer.</source><seg-source>The producer-consumer model presented in this example makes it possible to write highly concurrent multithreaded applications. On a multiprocessor machine, the program is potentially up to twice as fast as the equivalent mutex-based program, since the two threads can be active at the same time on different parts of the buffer.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="59"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="57"/></sdl:cxts><trans-unit id="42a44e5c-fbe7-40a2-b068-078eeaaa010a"><source>Be aware though that these benefits aren&apos;t always realized. Locking and unlocking a <g id="527">QMutex</g> has a cost. In practice, it would probably be worthwhile to divide the buffer into chunks and to operate on chunks instead of individual bytes. The buffer size is also a parameter that must be selected carefully, based on experimentation.</source><seg-source>Be aware though that these benefits aren&apos;t always realized. Locking and unlocking a <g id="527">QMutex</g> has a cost. In practice, it would probably be worthwhile to divide the buffer into chunks and to operate on chunks instead of individual bytes. The buffer size is also a parameter that must be selected carefully, based on experimentation.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="60"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="58"/></sdl:cxts><trans-unit id="0d117ca5-2f55-4efd-9a02-2fbeb52918a4"><source>Files:</source><seg-source>Files:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="61"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="60"/></sdl:cxts><trans-unit id="cb85caa5-d6e5-4384-a59a-b6ae297d79d0"><source><g id="530">threads/waitconditions/waitconditions.cpp</g></source><seg-source><g id="530">threads/waitconditions/waitconditions.cpp</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="62"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="61"/></sdl:cxts><trans-unit id="b6a8cf4a-ae3c-47cd-843b-3891035a2eea"><source><g id="533">threads/waitconditions/waitconditions.pro</g></source><seg-source><g id="533">threads/waitconditions/waitconditions.pro</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="63"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="21"/></sdl:cxts><trans-unit id="7e864474-4010-4327-8c96-aa26427a24da"><source><x id="534"/></source><seg-source><x id="534"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="64"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="63"/></sdl:cxts><trans-unit id="00bd3e1a-0965-4d26-b3f1-e8b1a6b508c2"><source><x id="535"/></source><seg-source><x id="535"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="65"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="63"/></sdl:cxts><trans-unit id="94f51732-7e1b-43f2-927b-20f28ef4e4bb"><source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="536"/> The documentation provided herein is licensed under the terms of the <g id="539">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="540"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</source><seg-source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="536"/> The documentation provided herein is licensed under the terms of the <g id="539">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="540"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</seg-source><target/></trans-unit></group></body></file></xliff>