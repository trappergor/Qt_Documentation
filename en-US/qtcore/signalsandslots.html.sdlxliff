<?xml version="1.0" encoding="utf-8"?><xliff xmlns:sdl="http://sdl.com/FileTypes/SdlXliff/1.0" xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2" sdl:version="1.0"><file original="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtcore\signalsandslots.html" datatype="x-sdlfilterframework2" source-language="en-US"><header><reference><internal-file form="base64">UEsDBBQAAAAIABtAgkmq7KAPcB8AAAN0AAARAAAAaGxsdHUwY3QuZWNqLmh0bWztXVmT2za2fvev
wChzk9ZES+zcWaoXzdiOnXgqtuPYntTUrVspioRamKZImgBbVuXmv9+zAQS1q+1kHiZ5iNUUiOXg
LN9ZAF3+9f0iV7e6tqYsrnr3R1/0lC7SMjPF9VXv7Zunw7/0/jq5d/m7r14+fvPP756ouVvk8Df+
o/IEG+mihw90kk3uKXW50C6BVq4a6neNub3qPS4Lpws3fLOqdE+l/NdVz+n3bozdXKh0ntRWu6vG
zWA4NcbxhkNlzXWR5DYpMpuXzo7eZWWqhkMaxRmX68lrbqE+TRbVhXqNrdT/qVdOPS5rrf44+vPl
mBviK7kpblSt86uedatc27nWrqcczEomk1rbU/Naz6TFuJzN4CU9tGZR5XpE34+pL5vWpnLxy/9K
bhN+2sMWSi1NkZXLUVnkZZKpKzVritQBkc/6P8E6mgUQYXSt3ZNc40f7aPUmuX6RLPRZDyfa64+M
04uzL/ojoMxD52ozbRx8ifPrDVR3hjS1/sXPFzi3MU8DiDjmTbmcltkK/snMrUrzxNqrHn6h654y
2VXvnYP5yANaXNRukZhC1rP+eFiXTZHpTL7uNiiSW3Od4HKnSR1a4L4lU9iOS1fDfFymJpeJUHw0
GtNExrapqrJ2OhtWeeJmZb2wQ2CBITDOzFw3NfVqR8g5n7xzwz8O/9ybwI7TZicT2PBs0u35nUuB
G4awHfo9vUbtkUO6L2xhJv5yDLOF/8nM8R+/zGlj8kyEp9euCqna+QqYIXNzEK8vvvivnkpyGOmq
V5vrufNzH91X3+uZrkH2tPpK+IOWSnNoCRhPxhN+DJSXTeKP8VaIwPW6T5FrelsbKtzcx1tfsibT
vJ/xU1empAC+RJIXwMHySPqwTGX4+t5lg6ojN2ES+lbn93vtVn1iCleXWUOC0ps8i/7iXnJzoAPR
GcQxpDV6YV/hkd/VU7oKHRz7mox6wkjJ0C6SPB/q9wkqmt7koXqND9QTfnB0N7VOOr18D3+f2MkG
AYdL4+bDTM+SJnfDpL4m1ozo+tDTVf0ALdVX3FI99C2PnX12mwDzw6gbM2hsco3rkRZqY0fVW2yx
e6AH8UCNBds2BNVBC/uyBkWT1G413MI6b7Ep2hNsqqCp+g6bqn0sNSYm35RDEZ6hl0fSEusPJ/yi
f31+PwgZmrHedh01vw9NbZUUYahmKu3BGMBzsae///3v100qqkPYW7YYIGVkXuNZ03e9iQqinYF5
NygVuOR7l1VHvKhTlYDtbSzsEyhvsPeLRVOYlHSZmmq31LpQ5fRfOoXx1Zu59nY+6mGhARIUxi6U
gccqBdLUwMkznbgGOi9nuCfYvKrLKajClXLQD24jfEicyswMdCn0U1qnZnW5oO/ldYtv3QLhMzVd
qRK+qaENLG5Z1jcwpe0LWoB9VFVprUH9Dy++cp9ZFbgKUY9fFNsYfDLkR8quLBhzpNjoclwB2Tw1
u/qOSTp/QKyxTxXOHxDpnxXq67fPcDnXMP8F8OpALedA3qVGTFVcA6kKjcYHgMYAn5Yzh18nBZKP
l87fKlfC5ih4ZmZGZyP1HBHUtS40ED5f0cv0miwS9yApVuoGzKq8S4YRPrY7rllucA4y2kg9BZ4Q
DTVQBjpBVgE2yU16g3t9OZ08zksLwjydKIA8rixo8LDTNAvcTgZY8SYQhuD12PE7/sBAIcUuexP6
56yPdA54TGafwjJh3bw91eQl0caVZX5jkAPSuQFFAuMCQ9KaYf1d1ia1Qt1MkxT56GH4g7m4KmFL
qVP4w48+ULZEMqzKRrYFV5pqS73Fc6StWVHDZFo2wFTlQiuYFLyEDyuQ17VRZIdDL2dINj+pPjYh
sdkcj+Vy60SQvbALq+LOmO2SCl6pagM7P1I/zA3wg21S7GPW5JGMCa2ImCAm8zJTWQlcYSxwaaAg
fEKFoYDEhWuMM7eaZHKRrKBbFHAWbeQMANFWmQJcF9vU3LcmdA6ata6BYQuYBO2Zn3AwZGsSucUK
dMTyOIDRCugrFrx5QrMH7AebUyS0GKF/mJIDrVeYd40+Vz+QBt3UjMhV/BB5Si+MA6AsxCf9Z9Im
T2phizJNmxreIVUlcsEzWaDsVrUGsw5AMPMDDVDiSHvQVJfJygKpp2QLQgfIWRkIQFOrclmEOfJq
FjRDmCrzfMQ3CT1iMcOtAkVcAZDXLA/R3LnDfbMehmkjTXjShrsHkYTRqjqBYVPqe2P+SExcwCqs
gJS8LXmSKEu4fNCfGSq0yECF79EgkJhp62g1Xm8ELK3x24cI9IF/zOJa2ToFnb4AmGLHydQ6nCGa
/UKn7NBUxTW6BuAZo5OJ/QEDHWEekcuVTWbANaG1t5KJZ5ZFYxHYu3TeLsg3wgcgItrcouDgCCN1
Bpw7gxliD7iZKHPMwsrO0Turoz6ALEVEJ9wK7g9M7VSnCXIyPEOiQgO0K+Aw10kkgn0wuuj4dObG
dhd2tAJxmaK5IGmBv0Gx1LxHOq9AUBSAEjSzRIoF0AUXCu+TXHhdo1tmFB05nCaIUuwKPK33AkUc
ag/54vWzr188/JbF+tuXb6Qh8BEg8x0jAn/UTeHMQu/CEXkJJgjMWFo2YAKzczQTzJ5zA7uDIm3b
fSu0IRV+U5RLCyYAl11r35h7FVpHOyCys49xSFFqYWmxP8KN7egkmfgmk544gVYf7CUb+HZkGBUk
GRSpQ/iVsKEmR1ftIgruo0tuNMGJollMYbnIup45PNJAUtMmrQJf5DBMvmolIFjvhzBHompYYQFU
NIIF28gAgxkfFHhJfxE4AEIjaoGhcTu8CoHezvTo+tNP3j/QF4MjcAd0+gP9hZ32aamI9MHB3qba
A21QQkS1I0IVxEXc7HD9gu3gswE5dAi0DBoA0Ne8XBTXaauiSABKgboR9AbtgVoaiIXbJFg1K7Vd
g3Ej9UyeA6IgXlTCiTgp6hV2CMw5jGNspExi5QnUJ+ZuB3Z1g3PEEA9DKF2kSWXBCDAyQtJ0+DSa
pccGKKcJCQxA26VnDNi7wgVueB34bBo5JpHKi42f8wwGTxB0wdxAfWpiS69AYA1/R4WKAxcdugX6
mFlLkqAMiZf8YKJZN14DOs2p41UgnQimJqRtnFCwS5q6AUnAGFel4X9g/AMdwtLTGhwgL7OvWvr8
UyxekH/LljawqG3hKasEWFWuRTOQOfUaw48UTzh0xzqQOys0OhnPyGgjWGldK2K9NUWUGcRwKOot
qvWq7oyIQWoJ+Yt5TkMXWbBHi4XOEJSi9wBCBOPVbBBMbV0EpEZ9T5I35TXx9WCbEkVl1VSEtZe6
RmgbaB37Yq223Q4xtwPLKNwkIHKHWmg5jxQD8hbJO66YdQKyEasKAlzkL7QqgpTyppJoZQx0OXhl
hCMJJ6H3Fs+laqbgtIFrhAC/lQ2ilPCBny6pXeABmGmtA8iEPQUdo9mBLAvYHb+Bi9ZpZ+PIXj2h
PhtDDRyrq6EDV//AoHgDLbe2bEOwJHLRoMcLGEWnDaG7ln0G6l8o97lBc+WVQ4AVaBLR7yE1bRCz
ViCMdtBRg7tQXOlo1FiCxfChi894HrBDNVJPaGI4oIC3tMyAl8s8L5de6V7iswmu+HJMH5kl0KCy
qJBrAERPNel/nhEhvFoD+CpQOhlOuoaVM0zS5sg0MEuOr1BnLcSKAu7sdD8O6BZTP0MNxr03Afem
AaJGyBel4IIYtAFMkwAZbcB6RyzsRq/Aqcx4WWhdTYFmJd40pHm76R7BhA0GewO87fnm2QzUxy2G
PSLU1mEURAa8nYN93VLYY+ZE15SsTgwjZZgwPxdYPcWgWBhkEGz9Jvu2Vi0SxaRxJdrQlHiIozai
JohoG0mWRZn6MFWZEuIhzxqZG20RqgWEV8gvrDxa2o/SqvK0nwESF0yGEs+aNeIigmYAmsxIM2gi
r5b7uS1NJv30W+CGw2sJcAQIeK5eNhg1qgDDUYIEfJClKAW7PVqHXkatG0tBKTNjUmcURWHPutKp
QYiLEwRDNNuF5ryvBrwPW8aMfZvkjX7MmhUg3uu0Bh59lNTn5/E3SNazPii6mowajpp0xhWGZ4U2
X1XIIrSHKu7ye+xsQA5U2eQZK8p1G8srzzRSA10aHGUm7IBgZ8fiLA0zTWqPVsO4FKtUXoJB+FqR
N0WF+jtEA9hSqiXNjjlHbPm63dsWTulkS8TitREE72V0dPm61o6EQ9IByAKinR9//vl22yRdc7N8
dSFwmsjrd8kHnM0as22DORT8aIWT2HR9Mus4csB8ySqO2CCaNSA678PKXD0MGqlvAHncoj5JrA+C
OC+FZNNvyxsPE1YtPBmATFwndZZLNIxDm2S/KU8yULcmCYSm+FakqQV3LnRSCD3ClqwZepgA2Bsk
AdkwIMHUgBTVKzHnhDYTloiqNreIVmgwjsX66aNTs9FXU9Q6J+1GfW2gWMLtDBVkA7jTW1ODKcsH
4jv7mNwMs9jqXWMc+QaI5kwbQAq9P8YwRM07HSKUgx3aJ9hJeATiH4IgYq+BNwCJkx+S6/dmanLj
Vrx/kpkYYCBoXjbX7Ft72Uu1eC6IfKoql9AzOVNAJZgLCT24PupZ4YP3A94clOHWsffRuI4OQXwo
zIRuIQZz35sF42ZMG6AHb/2aKOiDlPCWWbwccPs9mw7Y0yjKYijE72Kl2BVEmwgvYxkC9ATbIbTO
S8ojMBrwjCgAdUCzBr8fcZMjk0edEKKJAEZsf9K5Tm94yijPzdTCYKjV2ukTW7AVhEWDTnV1uULp
ayPLQFGLif2+YIsSnILaznFcClG2IRDyy2knACrPEjsnOeLYONJ0N3E4zk3cKXiT3C2DuHyBhoOF
2BON9gMHZ+ta6KU30qj+6VOmMWASHle6Fkd71uZkRuohhkJhEuKoQSt00JF3KDYGKgLIih5BDfMC
vBD6YZJO9dx4uJXCuv1u2mMntgsuh5UCu5CSlgAyOY24ggTLmIBklDnHRERZd1EyB4y6ZIbHNuQh
YdNCXCI4ikiEjLxeSuLxW7StOK8LXAUs2Duo9C2hD46KwhZHUQNG1AuUXBR5XFysAmSmB1yFpYYh
APJK4M3TxSs2CmtjTg1alsVnjt1rzB5F6uxFSUIF+8XOdG6moJ6N7nha6hYeIYAKdpi3y3oHdW0b
LRtxforcy1ovRGyXSV0AB/HCdF2XtTdv3CIDwS3he1CAQN1XTsKwkaYDCqKeyn0mTlI/A5nAJ1iQ
NPMzIOKA4iywlg3TBpLPgvna1WJa5mvwZKMKowNUDtdoBPACzr/xRpztXabhX5ESdrxBh2fnsht1
qCcCaN2b3KMCsyidLx4Opi/hb0npAzZr0HOHxj/tfIFddHnjXMqF5EWApj+pxY+EWLuvs0SXdW9y
5QfrfM9B2t7kC/n2Qv18z5cixe0Q4/YmpnC+FxoLxt2xOhCR0PSnHY3Yr/CtZPo4gZ3js5/B7a12
/6A5HDHP/sXujRDMskbY/Z36uULjn6Fr2Ptae7RLjHQ4LC0CwTx1Oh/FItCbfAIwJG9A1D7N3YUM
8um1u/AlIydxoTo/hgO3USgsj0dlbsb/Xv348tHfnzx+c+837v75SBrsaCN6+RCv/hKCEkzFKYPH
TvSBCQCa+MevKqxv4nDKIUGV8k8KxLoAMDpB2oEvY0LYb31MlYsiONXO7hm9zi9QtrvAFLbhwBwn
DKRu1hddbYlHc5huS+KJUHjrmTntM0KNI2MMdMwzcRow2LoRXZ6uNp0Mb5Q7u9kPII8jt5zqkMwi
wZdOkoqmY3UI5SNFdif51lNraOgZPlH2G8iB5Nq6e594bQPbKJ84Ksb5BFdWAs5MHRtziX1R/+J3
1piKPQt4sIMO+8fmH9dSV1RuEMXjJKwXAaOwzxik/0ZzyCJpkyrh7SSGxLxBojHPz4PQ90PQGIY/
1rpsyrF0vEP7np9Lu5N0TWQgtku7mfkXzvYq/99Js0O2QTRBPwyL/x1rWIISCeXbW+fM4ewtys/r
V34ZQc7PG8poIyCOpd1SRxBFkPcIY5ts8X51yOqDfuUZUa5T4rFtqJzjwm2EngL2tjBVJfWGnHJU
bll2mS34DiLnFJeTrF+bmQt5qH2Tb2sVoszf2pvbOXsjbxErBJlNEMvzc3nCYd09UhGhEJXs4JCB
3+7pxW571IVGh8RIpne2ox1VDEvTg7M6oo8jhbsTEN8/aiQmnf+OmMz011uQZyVGHPjfLmqO9uo3
DzPvP5Bm/YvN1XJ+FJhwPFbJyAPMqyt1/wHggO6DLhWnHzSp//7LR5lU6CZWWo8lZsiSmYzCTO4/
6LfBg5sQMEr8Q0oOJ9t0QfSmxx4MJrjt1H9JKTpfLmU4Z75PQQxUGziUrrZONyQqCA8U68NGuhgB
4GFlxhjPUg6h4OQOAaVulhBVXnekozTlYC2vyCV52ZbQUAsRNskTgmhWy9rETGBoZ932ULjOzOLJ
qd9deSsqXQoMBTa5paIVU8xMgVF5zHpTZVEh5bIcSU9XWDPejfNGxVlhOOHIDWpQXm4LMSOO7G/k
Jx+tlJyEkagphRyjyDRGC5F7B9tKDy7IENot9RzYV9YwnIsj3QDOfV5jCqb0hkLbjN5spx2b7FCa
s92mZcYGs9Z+lnp4rl54NmuLyTup471J/VdgHt9S6XL7NXV6aSZoyy7HZjJYD+JzHYJkM+l4BVc/
Ga6HSlqC0LTQL2BYm2PQYxU3gJ1/j9WqJF9dQBB/gXJUFq0kCvrob5/aLDF5B5iI+qDE9gx2UIdq
ISrH4jiggkYNpoydd0tiXwbL36OUqcEkj6NiKCm/oSowDOPHdXGcDteJd48oDKoLPnABYw8i8CbB
cezSn2yIeNxXNXFFhAmZTDnfILVhnAkin+Fu6GgtlTFAN4h6ZhFrMGIRNFa3OIFT2PXYfxjyca1k
2JghlRvQ+KHgIS6h7k3C4/X6Ep/J3Qj5dk/MrUV89x+nk3hv620JxcQ+AjE9S1AltpSF3jFWN8PI
tvr28Vcv3j5/9OT7H79pzf2+9ySQv+W9U4KDTzGddXps8Ns0e8H1vHePDtLQ+4KDLbBg3gqDBuPM
pb/2CLfbwwa0tXR0rJOQ4XQ4CihYeizJwFz5jsIKOuviB5A1SJHNiVXDvkgSZXLJNQgLg8ckRL/h
OWM3NMWufvM0Y1Tnu0ZeEAIlkzWu3B3e2hUgWSRpXZKJew9blLXBiU6+xZUSNdGhtmq9FEIKCrZH
OnhrqVSJPl34knU8uRbyS5JSoiQSvZZTuSBs4qfvmtJdUHaIzo3U4ag1zOyWj3TPQh5rnYX47QEN
SMnhcBYN3rkuHeXGy71VVnXDZsdXWzFNvJDJNxhvqzi4J7O/IWUCdB2dmiraGhsPC9sWagk8t9dj
+oN8j8UQhfuwyHq/E1l9hu46Gv5yemvKxlKGN9e3UnUsNJLwJ+++r+o/UaT4CE9OEp7qGmOG4Vxh
yTvcMh0v1CsTHwLBPaJEK4X164Yy4hTJReBkwowxDszL/8zGbdsAH5paqjGg5xwJ2ZANFItSoCLC
oIutUiFQ3m6Wq5/KPXcK22MiepaXy7Puvu5Qy2sHXaSGmQypvZGClDlhoaigjJ2MuFSTs/OY5qbj
CIyU/EwId2ALQlUMxuQrBD7EbFgHOwiHvuR8UkvddlHrXlTrGsr4ghJ5833BezxXgZ4c4cbjZZ2y
eqocQP+grbQjhRaxQagK9cdkZHJUiARac9WJoUU4uNOrBP1fCaClcacwKXW2WZzadZL6H6aGPl56
CpyXKk9Wh5JDzaJ/8cEdZiWsQX+sPrfnA7ep49dUbnNCAAt0yLFTAw/3G/3+OfDz2QmvfKXTU195
mbpTX3lkilNfoUIMmB1WXXyHZ/vOpmWZ8zG/vs/h7ce7WCUy2xKtig+ztieGgntDp4lAwhCHbHps
nCjjJBmVgsUn7kEEd6jGxtJZoYEvDaaoOvRIQauMHF7LtW/aSX0gcRpWszLUk+OUUl0lfBiHq+iq
BF8YJeaJEpOzJNVt+B/PhfhmkmGKjgIan69srZmAO3nF+z/yqu2opzvXW6+Hc5KQAyA/606lzt5e
76AYBwMttwEA7RWwHDdgtOKL0n0ozDsPNI7CkTdDbLt3CHU73hyFUSOvqi3gIaFedNQ+pJnJPOw6
yOl3bcS3tEQ1rPDGZ5nAnlLNsHpvhgHS1mKgs8zI5EbrSuH+3PjlcYU/YiGY3ayLa0wdENwGpGmP
PZRx7bCLQimHTubvvJlm/4H9j3Chjbj+b7rHlYEi206LrUJiOozVHklpj7nymXOku4xHXGSpCB+z
8PWuoJ4vUI2CMeHZwWTVIRvmOzq7a37qDwcs2F1cBTnadcQ5XoO1d1j1mQ3CAVTmsTsTMxw8/EFH
2I1P1hsbJSB0TfWjSy2lWnJ+PgPFlfOx0MgJJTXOMz0qUAG6SK5pSHOdEHRuKrp7oTHsz5KKbg/p
+/N+d+cFnsxXH48joMOPyRVvyl3wd+7Pqi75Wo07xTQpt4MuRhTEoAsyogOr0anEUFoTHTOVU0Dr
9xDYPXviY/RYBLMzOXlKmvOD88ytOJwymYB7UUj2j3TKap6vZO4HJr3Gu/31mq61faW7yBze1cF7
ducyAYZSGxs+Uk+RJ0gnJVg8Ybt3WyBL4UGFNg8XrldoDUb3dozoJgbgvLjhqLVc7QEZOeGHdejs
NsLCo4Cbnwnl0TCXECUIOwdtgsSVvEoMYYDP+vjzz+/fV3mymGbJfwJ7t9//z3F1RTu+/l/5+qz/
053lZ7j/6yiOv/hRckYHigVqvQA4KpvUv1A/d+WnhbMcl6tbRg63G/jqRGYMOlgAnoxyeoG3fJI/
Q9aTr1ihFBZfFWVm6+e9JR0OxvRP8S0hNR2I6USyxd1KVlsvFQi3m0Sq+W5C7sEco3m+NiZEDAt/
bALvkGkLHMArEPOA5/zEYfS3aUSx4c4KkZKdw7g8Vus4dEc763fHG3hqtp1uQZyDcNyxe1UQhjbD
Uccd43M6gOohL80EpouZXzlop/HYWDty99ag3SNsrqNTARqS4Xz+FJnmo+kbWd3HA8H9/i9uNIle
61Dt1T4j2U6OYiX/oST6OKv/t84+UsmP6CYbOimn5RjYLysZ/66Ffzi7dQk3Go38ad2NK6/wAoJU
atyP8D3XsBt3Q7YQSOyL7tdqTmpNVjLxt4hxCmBL4GjdHnZhIY5CAHIT0XUvRdvpCB8yeT48tV5Q
cfAS326JxUe481diMU/pRirLJ+aBBFyItfLHTzvRWV8DRKzeTfIPMNgWjmO4nelwfjcij8hNt/zF
FxRw0dDa9ZzRbVa8pbqI+WVHTp6/XODVMm0ok549p2dcy0VnOUx00y1mt8NdLp5G3Vue6s0LDaK6
qfgOFfIILCdL6ZJEKk0KdzVJ2DBftdFARH9Wtxl0B6vBG4TsXO54DQdPgTgLLFlhwmHFD2fJqFis
0sW5JPPfAEx8Ct/65Dz/+zBNsYzXdr6CpfPH71m62u/iSnbJepU0iogMXR1Kk+AUYRcibmwFcIXD
XQDZWtsVOlwhXwmP0KHxKty+diAczlTyl9kalGwY4jsg4CP6BuSTn3aCVHyC6FTuET7nWtY4nsyV
+bnefefuh003IL89JIbPG7SFZ76fKOW6ozTfRq+eFn4KRovOsO/J3HUIyv7cQesX0l3x/D7Yw2u5
7gz8KmR8pv9JxnpbQrK7IL4aoCeVMjASVeq5944fBFv7S68xYfH/ldYpo9l/02IZK/xKa+XBdq5U
lupB5N157fioTqtMjj0gIxrn6FMoR2zchy5ii6o4tAxQdoG1PL0/jO9/o/ldaP5B4vcbyY8jeTdK
Xww24MgBqFAh7uB/u6UC4bgHniXATYwOhnA6IMp/Ewr1XiDCQ0wn8j2N6EZR6h3RaoRnGXxrjGcd
wCPB8T5hG8T9loUdVOwHnfODJ1RPddMDVY+YW7zN3o/c+6ss9GMrvuUJv+YirueX6pTfdaHfLcLq
VNrR6JJa9AV8Dwn1QQMLg4352vRwA2w4xkO38eC7VHIXGlgf1yWPC9w2huB8zXCWrZ2zpSO+MAcK
tr+jC2nlFXU2gk99vplxN+M9fvni6bOvd4nz50eejS7KH4VDbLeSl64QsEiegi91k3MIvtDZv7X1
QqHBluuEBlFkOzrrPFBRsAb+z4UqXlKpOAuvwIt2hy86Wg1UOCqmHpWl9d4O5wn4CtHGM8lmUUfI
tcmdVi0dwvm4PLkOVZlgKvJEblql4i4JOUDfHWr4omIL/0t1NAx5onjbVSZT4nj+zlJ91g+vsVZf
PpLuOyvrA6+0b9CN5YPdzUHKuX/8cLh3aOVbS8+dsxBrzZ88f0bN8d/oPgT5VaRqcjmdvNZyRTf+
UMyen+F5jj/Dw0Ea9Tr8DE93dCyl0rUz2obfhwMX9zt+uopek3ngjyn97W9/2/ZjSvL7hBs/zNb5
a+PTlp+LmpWlkx/kU7Bi+gc3vVgtFP24E/6wYrWSH5H7NIXPYIGlxUQ9+OL+nyi7RD91t6gw0vOt
y0bYT+fn5Yjf6ccF+SZBTjtxmTmVLPnL92QsZF7shO/CQK7E+OWt5hui7ehyWk9wtTh21hkoxKKk
a9CnAFV0gVLaFFJyrDD+EwSEFi2bhD8peT4eL5fL0XXRjMr6eiyv2/Esy2Xnvn7xVj3F2FJ3kXj4
gRuHarn7oy+ZE6SK0c7bYCn18NrfKP8UL+Hj+z786uTnp6Ll5+V1yUE0VyeZXiSYvIRlbNkD4gYg
wFNT5HR7epGN8UI9Sv0RkKeb2OjWlSVQbKQo0cWZwbZzuoNbeBR3JFxQsrkpqiM/Y/k9yDH/luf/
A1BLAQIzABQAAAAIABtAgkmq7KAPcB8AAAN0AAARAAAAAAAAAAAAAAAAAAAAAABobGx0dTBjdC5l
Y2ouaHRtbFBLBQYAAAAAAQABAD8AAACfHwAAAAA=
</internal-file></reference><sdl:ref-files><sdl:ref-file uid="0" id="Html.DependencyFileId" name="signalsandslots.html" o-path="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtcore\signalsandslots.html" date="12/02/2016 08:00:55" expected-use="Generation"/></sdl:ref-files><file-info xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><value key="SDL:FileId">bcb73c99-31f8-47d0-acf0-150d45459317</value><value key="SDL:CreationDate">03/14/2019 16:19:01</value><value key="SDL:OriginalFilePath">D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtcore\signalsandslots.html</value><value key="SDL:OriginalEncoding">utf-8</value><value key="NeedsSegmentRenumbering">True</value><value key="HtmlEntityFound">True</value><value key="HeadEntityFound">True</value><value key="MetaEntityFound">True</value><value key="BodyEntityFound">True</value><value key="HtmlVersion">html5</value><value key="OperatingSystem">Linux</value><value key="ParagraphTextDirections"></value><sniff-info><detected-encoding detection-level="Certain" encoding="utf-8"/><detected-source-lang detection-level="Likely" lang="en-US"/></sniff-info></file-info><sdl:filetype-info><sdl:filetype-id>Html 5 2.0.0.0</sdl:filetype-id></sdl:filetype-info><fmt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><fmt-def id="1"/><fmt-def id="2"><value key="TextColor">Blue</value><value key="Underline">True</value></fmt-def><fmt-def id="3"><value key="Bold">True</value></fmt-def><fmt-def id="4"><value key="Italic">True</value></fmt-def></fmt-defs><cxt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><cxt-def id="1" type="LocationDetails" purpose="Location"><props><value key="StartsAt">-1</value><value key="EndsAt">39</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="2" type="LocationDetails" purpose="Location"><props><value key="StartsAt">81</value><value key="EndsAt">183</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="3" type="sdl:meta" color="Control"><fmt id="1"/></cxt-def><cxt-def id="4" type="sdl:html-control" color="Control"><fmt id="1"/></cxt-def><cxt-def id="5" type="LocationDetails" purpose="Location"><props><value key="StartsAt">183</value><value key="EndsAt">223</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="6" type="sdl:title" color="Control"><fmt id="1"/></cxt-def><cxt-def id="7" type="LocationDetails" purpose="Location"><props><value key="StartsAt">635</value><value key="EndsAt">720</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="8" type="x-tm-table-cell"><fmt id="1"/></cxt-def><cxt-def id="9" type="sdl:table-row" color="Control"><fmt id="1"/></cxt-def><cxt-def id="10" type="sdl:table" color="Control"><fmt id="1"/></cxt-def><cxt-def id="11" type="div" code="DIV" name="Div" descr="A div section" color=""><fmt id="1"/></cxt-def><cxt-def id="12" type="sdl:body" color="Control"><fmt id="1"/></cxt-def><cxt-def id="13" type="sdl:link" color="Control"><fmt id="1"/></cxt-def><cxt-def id="14" type="LocationDetails" purpose="Location"><props><value key="StartsAt">725</value><value key="EndsAt">769</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="15" type="LocationDetails" purpose="Location"><props><value key="StartsAt">774</value><value key="EndsAt">798</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="16" type="LocationDetails" purpose="Location"><props><value key="StartsAt">849</value><value key="EndsAt">930</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="17" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1097</value><value key="EndsAt">1127</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="18" type="x-tm-heading"><fmt id="1"/></cxt-def><cxt-def id="19" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1138</value><value key="EndsAt">1197</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="20" type="x-tm-listitem"><fmt id="1"/></cxt-def><cxt-def id="21" type="sdl:unordered-list" color="Control"><fmt id="1"/></cxt-def><cxt-def id="22" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1203</value><value key="EndsAt">1272</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="23" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1278</value><value key="EndsAt">1327</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="24" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1333</value><value key="EndsAt">1378</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="25" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1384</value><value key="EndsAt">1449</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="26" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1455</value><value key="EndsAt">1518</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="27" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1524</value><value key="EndsAt">1639</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="28" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1645</value><value key="EndsAt">1744</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="29" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1750</value><value key="EndsAt">1867</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="30" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1949</value><value key="EndsAt">1986</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="31" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1986</value><value key="EndsAt">2068</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="32" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2068</value><value key="EndsAt">2111</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="33" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2111</value><value key="EndsAt">2417</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="34" type="sdl:paragraph" color="Control"><fmt id="1"/></cxt-def><cxt-def id="35" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2417</value><value key="EndsAt">2450</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="36" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2450</value><value key="EndsAt">2484</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="37" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2490</value><value key="EndsAt">2832</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="38" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2837</value><value key="EndsAt">3331</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="39" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3331</value><value key="EndsAt">3369</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="40" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3369</value><value key="EndsAt">3413</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="41" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3419</value><value key="EndsAt">3912</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="42" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3917</value><value key="EndsAt">3992</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="43" type="Attribute" code="ATT" name="Attribute" descr="alt attribute"><props><value key="TranslatesAttribute">alt</value><value key="InlineTranslatesAttribute">alt</value></props></cxt-def><cxt-def id="44" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3996</value><value key="EndsAt">4814</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="45" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4819</value><value key="EndsAt">5340</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="46" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5345</value><value key="EndsAt">5628</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="47" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5633</value><value key="EndsAt">5903</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="48" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5908</value><value key="EndsAt">5990</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="49" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5990</value><value key="EndsAt">6018</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="50" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6018</value><value key="EndsAt">6042</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="51" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6048</value><value key="EndsAt">6354</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="52" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6359</value><value key="EndsAt">6922</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="53" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6927</value><value key="EndsAt">7090</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="54" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7095</value><value key="EndsAt">7303</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="55" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7308</value><value key="EndsAt">7774</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="56" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7774</value><value key="EndsAt">7800</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="57" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7800</value><value key="EndsAt">7820</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="58" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7826</value><value key="EndsAt">8015</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="59" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8020</value><value key="EndsAt">8386</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="60" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8391</value><value key="EndsAt">8480</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="61" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8485</value><value key="EndsAt">9711</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="62" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9716</value><value key="EndsAt">9981</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="63" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9981</value><value key="EndsAt">10017</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="64" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10017</value><value key="EndsAt">10057</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="65" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10063</value><value key="EndsAt">10109</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="66" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10114</value><value key="EndsAt">10617</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="67" type="pre" code="PRE" name="Pre" descr="A preformated text section" color=""><fmt id="1"/></cxt-def><cxt-def id="68" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10624</value><value key="EndsAt">10693</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="69" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10698</value><value key="EndsAt">11558</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="70" type="LocationDetails" purpose="Location"><props><value key="StartsAt">11565</value><value key="EndsAt">11955</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="71" type="LocationDetails" purpose="Location"><props><value key="StartsAt">11960</value><value key="EndsAt">12183</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="72" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12188</value><value key="EndsAt">12323</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="73" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12328</value><value key="EndsAt">12723</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="74" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12730</value><value key="EndsAt">12853</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="75" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12858</value><value key="EndsAt">13113</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="76" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13118</value><value key="EndsAt">13928</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="77" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13935</value><value key="EndsAt">14346</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="78" type="LocationDetails" purpose="Location"><props><value key="StartsAt">14351</value><value key="EndsAt">14631</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="79" type="LocationDetails" purpose="Location"><props><value key="StartsAt">14636</value><value key="EndsAt">15165</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="80" type="LocationDetails" purpose="Location"><props><value key="StartsAt">15170</value><value key="EndsAt">15600</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="81" type="LocationDetails" purpose="Location"><props><value key="StartsAt">15600</value><value key="EndsAt">15635</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="82" type="LocationDetails" purpose="Location"><props><value key="StartsAt">15635</value><value key="EndsAt">15673</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="83" type="LocationDetails" purpose="Location"><props><value key="StartsAt">15679</value><value key="EndsAt">15729</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="84" type="LocationDetails" purpose="Location"><props><value key="StartsAt">15734</value><value key="EndsAt">16065</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="85" type="LocationDetails" purpose="Location"><props><value key="StartsAt">16072</value><value key="EndsAt">16391</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="86" type="LocationDetails" purpose="Location"><props><value key="StartsAt">16396</value><value key="EndsAt">16808</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="87" type="LocationDetails" purpose="Location"><props><value key="StartsAt">16813</value><value key="EndsAt">17024</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="88" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17031</value><value key="EndsAt">17272</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="89" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17277</value><value key="EndsAt">17382</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="90" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17387</value><value key="EndsAt">17496</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="91" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17503</value><value key="EndsAt">17589</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="92" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17594</value><value key="EndsAt">17761</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="93" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17766</value><value key="EndsAt">17967</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="94" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17972</value><value key="EndsAt">18710</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="95" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18717</value><value key="EndsAt">19014</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="96" type="LocationDetails" purpose="Location"><props><value key="StartsAt">19019</value><value key="EndsAt">19309</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="97" type="LocationDetails" purpose="Location"><props><value key="StartsAt">19314</value><value key="EndsAt">19536</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="98" type="LocationDetails" purpose="Location"><props><value key="StartsAt">19541</value><value key="EndsAt">19613</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="99" type="LocationDetails" purpose="Location"><props><value key="StartsAt">19613</value><value key="EndsAt">19674</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="100" type="LocationDetails" purpose="Location"><props><value key="StartsAt">19674</value><value key="EndsAt">19764</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="101" type="LocationDetails" purpose="Location"><props><value key="StartsAt">19770</value><value key="EndsAt">19942</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="102" type="LocationDetails" purpose="Location"><props><value key="StartsAt">19947</value><value key="EndsAt">20139</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="103" type="LocationDetails" purpose="Location"><props><value key="StartsAt">20146</value><value key="EndsAt">20466</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="104" type="LocationDetails" purpose="Location"><props><value key="StartsAt">20471</value><value key="EndsAt">20673</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="105" type="LocationDetails" purpose="Location"><props><value key="StartsAt">20680</value><value key="EndsAt">20870</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="106" type="LocationDetails" purpose="Location"><props><value key="StartsAt">20875</value><value key="EndsAt">21242</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="107" type="LocationDetails" purpose="Location"><props><value key="StartsAt">21249</value><value key="EndsAt">21547</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="108" type="LocationDetails" purpose="Location"><props><value key="StartsAt">21552</value><value key="EndsAt">21605</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="109" type="LocationDetails" purpose="Location"><props><value key="StartsAt">21610</value><value key="EndsAt">22074</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="110" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22081</value><value key="EndsAt">22225</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="111" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22230</value><value key="EndsAt">22709</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="112" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22714</value><value key="EndsAt">22741</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="113" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22746</value><value key="EndsAt">23501</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="114" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23508</value><value key="EndsAt">23535</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="115" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23540</value><value key="EndsAt">23814</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="116" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23821</value><value key="EndsAt">23974</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="117" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23979</value><value key="EndsAt">24129</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="118" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24129</value><value key="EndsAt">24182</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="119" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24182</value><value key="EndsAt">24256</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="120" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24262</value><value key="EndsAt">24475</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="121" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24480</value><value key="EndsAt">24670</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="122" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24675</value><value key="EndsAt">24831</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="123" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24836</value><value key="EndsAt">25300</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="124" type="LocationDetails" purpose="Location"><props><value key="StartsAt">25305</value><value key="EndsAt">27296</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="125" type="LocationDetails" purpose="Location"><props><value key="StartsAt">27303</value><value key="EndsAt">27492</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="126" type="LocationDetails" purpose="Location"><props><value key="StartsAt">27497</value><value key="EndsAt">27783</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="127" type="LocationDetails" purpose="Location"><props><value key="StartsAt">27783</value><value key="EndsAt">27889</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="128" type="LocationDetails" purpose="Location"><props><value key="StartsAt">27889</value><value key="EndsAt">27935</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="129" type="LocationDetails" purpose="Location"><props><value key="StartsAt">27941</value><value key="EndsAt">28125</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="130" type="LocationDetails" purpose="Location"><props><value key="StartsAt">28130</value><value key="EndsAt">28234</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="131" type="LocationDetails" purpose="Location"><props><value key="StartsAt">28241</value><value key="EndsAt">28839</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="132" type="LocationDetails" purpose="Location"><props><value key="StartsAt">28851</value><value key="EndsAt">28975</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="133" type="LocationDetails" purpose="Location"><props><value key="StartsAt">28975</value><value key="EndsAt">29021</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="134" type="LocationDetails" purpose="Location"><props><value key="StartsAt">29100</value><value key="EndsAt">29133</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="135" type="LocationDetails" purpose="Location"><props><value key="StartsAt">29133</value><value key="EndsAt">29671</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def></cxt-defs><node-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><node-def id="1" parent="2"><cxt id="3"/></node-def><node-def id="2"><cxt id="4"/></node-def><node-def id="3" parent="1"><cxt id="3"/></node-def><node-def id="4" parent="3"><cxt id="6"/></node-def><node-def id="5" parent="6"><cxt id="9"/></node-def><node-def id="6" parent="7"><cxt id="10"/></node-def><node-def id="7" parent="8"><cxt id="11"/></node-def><node-def id="8" parent="9"><cxt id="11"/></node-def><node-def id="9" parent="10"><cxt id="11"/></node-def><node-def id="10" parent="11"><cxt id="11"/></node-def><node-def id="11" parent="12"><cxt id="12"/></node-def><node-def id="12" parent="3"><cxt id="13"/></node-def><node-def id="13" parent="5"><cxt id="8"/></node-def><node-def id="14" parent="5"><cxt id="8"/></node-def><node-def id="15" parent="5"><cxt id="8"/></node-def><node-def id="16" parent="17"><cxt id="9"/></node-def><node-def id="17" parent="7"><cxt id="10"/></node-def><node-def id="18" parent="16"><cxt id="8"/></node-def><node-def id="19" parent="20"><cxt id="11"/></node-def><node-def id="20" parent="21"><cxt id="11"/></node-def><node-def id="21" parent="22"><cxt id="11"/></node-def><node-def id="22" parent="23"><cxt id="11"/></node-def><node-def id="23" parent="9"><cxt id="11"/></node-def><node-def id="24" parent="19"><cxt id="18"/></node-def><node-def id="25" parent="19"><cxt id="21"/></node-def><node-def id="26" parent="25"><cxt id="20"/></node-def><node-def id="27" parent="25"><cxt id="20"/></node-def><node-def id="28" parent="25"><cxt id="20"/></node-def><node-def id="29" parent="25"><cxt id="20"/></node-def><node-def id="30" parent="25"><cxt id="20"/></node-def><node-def id="31" parent="25"><cxt id="20"/></node-def><node-def id="32" parent="25"><cxt id="20"/></node-def><node-def id="33" parent="25"><cxt id="20"/></node-def><node-def id="34" parent="25"><cxt id="20"/></node-def><node-def id="35" parent="21"><cxt id="18"/></node-def><node-def id="36" parent="21"><cxt id="11"/></node-def><node-def id="37" parent="36"><cxt id="34"/></node-def><node-def id="38" parent="36"><cxt id="18"/></node-def><node-def id="39" parent="36"><cxt id="34"/></node-def><node-def id="40" parent="36"><cxt id="34"/></node-def><node-def id="41" parent="36"><cxt id="18"/></node-def><node-def id="42" parent="36"><cxt id="34"/></node-def><node-def id="43" parent="36"><cxt id="34"/></node-def><node-def id="44" parent="36"><cxt id="34"/></node-def><node-def id="45" parent="36"><cxt id="34"/></node-def><node-def id="46" parent="36"><cxt id="34"/></node-def><node-def id="47" parent="36"><cxt id="34"/></node-def><node-def id="48" parent="36"><cxt id="34"/></node-def><node-def id="49" parent="36"><cxt id="18"/></node-def><node-def id="50" parent="36"><cxt id="34"/></node-def><node-def id="51" parent="36"><cxt id="34"/></node-def><node-def id="52" parent="36"><cxt id="34"/></node-def><node-def id="53" parent="36"><cxt id="34"/></node-def><node-def id="54" parent="36"><cxt id="34"/></node-def><node-def id="55" parent="36"><cxt id="18"/></node-def><node-def id="56" parent="36"><cxt id="34"/></node-def><node-def id="57" parent="36"><cxt id="34"/></node-def><node-def id="58" parent="36"><cxt id="34"/></node-def><node-def id="59" parent="36"><cxt id="34"/></node-def><node-def id="60" parent="36"><cxt id="34"/></node-def><node-def id="61" parent="36"><cxt id="18"/></node-def><node-def id="62" parent="36"><cxt id="34"/></node-def><node-def id="63" parent="36"><cxt id="67"/></node-def><node-def id="64" parent="36"><cxt id="34"/></node-def><node-def id="65" parent="36"><cxt id="67"/></node-def><node-def id="66" parent="36"><cxt id="34"/></node-def><node-def id="67" parent="36"><cxt id="34"/></node-def><node-def id="68" parent="36"><cxt id="34"/></node-def><node-def id="69" parent="36"><cxt id="67"/></node-def><node-def id="70" parent="36"><cxt id="34"/></node-def><node-def id="71" parent="36"><cxt id="34"/></node-def><node-def id="72" parent="36"><cxt id="67"/></node-def><node-def id="73" parent="36"><cxt id="34"/></node-def><node-def id="74" parent="36"><cxt id="34"/></node-def><node-def id="75" parent="36"><cxt id="34"/></node-def><node-def id="76" parent="36"><cxt id="34"/></node-def><node-def id="77" parent="36"><cxt id="18"/></node-def><node-def id="78" parent="36"><cxt id="34"/></node-def><node-def id="79" parent="36"><cxt id="67"/></node-def><node-def id="80" parent="36"><cxt id="34"/></node-def><node-def id="81" parent="36"><cxt id="34"/></node-def><node-def id="82" parent="36"><cxt id="67"/></node-def><node-def id="83" parent="36"><cxt id="34"/></node-def><node-def id="84" parent="36"><cxt id="34"/></node-def><node-def id="85" parent="36"><cxt id="67"/></node-def><node-def id="86" parent="36"><cxt id="34"/></node-def><node-def id="87" parent="36"><cxt id="34"/></node-def><node-def id="88" parent="36"><cxt id="34"/></node-def><node-def id="89" parent="36"><cxt id="67"/></node-def><node-def id="90" parent="36"><cxt id="34"/></node-def><node-def id="91" parent="36"><cxt id="34"/></node-def><node-def id="92" parent="36"><cxt id="34"/></node-def><node-def id="93" parent="36"><cxt id="34"/></node-def><node-def id="94" parent="36"><cxt id="18"/></node-def><node-def id="95" parent="36"><cxt id="34"/></node-def><node-def id="96" parent="36"><cxt id="67"/></node-def><node-def id="97" parent="36"><cxt id="34"/></node-def><node-def id="98" parent="36"><cxt id="67"/></node-def><node-def id="99" parent="36"><cxt id="34"/></node-def><node-def id="100" parent="36"><cxt id="67"/></node-def><node-def id="101" parent="36"><cxt id="34"/></node-def><node-def id="102" parent="36"><cxt id="34"/></node-def><node-def id="103" parent="36"><cxt id="67"/></node-def><node-def id="104" parent="36"><cxt id="34"/></node-def><node-def id="105" parent="36"><cxt id="34"/></node-def><node-def id="106" parent="36"><cxt id="34"/></node-def><node-def id="107" parent="36"><cxt id="67"/></node-def><node-def id="108" parent="36"><cxt id="34"/></node-def><node-def id="109" parent="36"><cxt id="67"/></node-def><node-def id="110" parent="36"><cxt id="34"/></node-def><node-def id="111" parent="36"><cxt id="34"/></node-def><node-def id="112" parent="36"><cxt id="18"/></node-def><node-def id="113" parent="36"><cxt id="34"/></node-def><node-def id="114" parent="36"><cxt id="34"/></node-def><node-def id="115" parent="36"><cxt id="34"/></node-def><node-def id="116" parent="36"><cxt id="34"/></node-def><node-def id="117" parent="36"><cxt id="67"/></node-def><node-def id="118" parent="36"><cxt id="34"/></node-def><node-def id="119" parent="36"><cxt id="67"/></node-def><node-def id="120" parent="36"><cxt id="18"/></node-def><node-def id="121" parent="36"><cxt id="34"/></node-def><node-def id="122" parent="36"><cxt id="67"/></node-def><node-def id="123" parent="36"><cxt id="34"/></node-def><node-def id="124" parent="21"><cxt id="34"/></node-def><node-def id="125" parent="11"><cxt id="11"/></node-def><node-def id="126" parent="125"><cxt id="34"/></node-def></node-defs><tag-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><tag id="4"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdoc/supported-platforms-and-configurations.html#qt-5-7&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="7"><bpt name="a" word-end="false">&lt;a href=&quot;qtcore-index.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="10"><bpt name="a" word-end="false">&lt;a name=&quot;toc&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="13"><bpt name="a" word-end="false">&lt;a href=&quot;#introduction&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="16"><bpt name="a" word-end="false">&lt;a href=&quot;#signals-and-slots&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="19"><bpt name="a" word-end="false">&lt;a href=&quot;#signals&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="22"><bpt name="a" word-end="false">&lt;a href=&quot;#slots&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="25"><bpt name="a" word-end="false">&lt;a href=&quot;#a-small-example&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="28"><bpt name="a" word-end="false">&lt;a href=&quot;#a-real-example&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="31"><bpt name="a" word-end="false">&lt;a href=&quot;#signals-and-slots-with-default-arguments&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="34"><bpt name="a" word-end="false">&lt;a href=&quot;#advanced-signals-and-slots-usage&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="37"><bpt name="a" word-end="false">&lt;a href=&quot;#using-qt-with-3rd-party-signals-and-slots&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="40"><bpt name="span" word-end="false">&lt;span class=&quot;subtitle&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="44"><bpt name="a" word-end="false">&lt;a name=&quot;details&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="47"><bpt name="a" word-end="false">&lt;a href=&quot;metaobjects.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="50"><bpt name="a" word-end="false">&lt;a name=&quot;introduction&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="53"><bpt name="b" word-end="false">&lt;b&gt;</bpt><bpt-props><value key="FormattingItemBold">True</value><value key="StartTag">b</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="b" word-end="false">&lt;/b&gt;</ept><fmt id="3"/></tag><tag id="56"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qwidget.html#close&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="59"><bpt name="a" word-end="false">&lt;a name=&quot;signals-and-slots&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="63"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="66"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qwidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="69"><bpt name="a" word-end="false">&lt;a name=&quot;signals&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="72"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="75"><bpt name="a" word-end="false">&lt;a href=&quot;qt.html#ConnectionType-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="78"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="81"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdoc/moc.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="84"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="87"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="90"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qabstractslider.html#valueChanged&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="93"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qscrollbar.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="96"><bpt name="a" word-end="false">&lt;a name=&quot;slots&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="99"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="102"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="105"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="108"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="111"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="114"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="117"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="120"><bpt name="a" word-end="false">&lt;a name=&quot;a-small-example&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="123"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="126"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="129"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="132"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="135"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="138"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="141"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="144"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="147"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="150"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="153"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="156"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="159"><bpt name="span" word-end="false">&lt;span class=&quot;preprocessor&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="162"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="165"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="168"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="171"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="174"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="177"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="180"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="183"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="186"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="189"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="192"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="195"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="198"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="201"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="204"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="207"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="210"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="213"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="216"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="219"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="222"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html#Q_OBJECT&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="225"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="228"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="231"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="234"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="237"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="240"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="243"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="246"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="249"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="252"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="255"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="258"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="261"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="264"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="267"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="270"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html#connect&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="273"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="276"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="279"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="282"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="285"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="288"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="291"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="294"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="297"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="300"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="303"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="306"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="309"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="312"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="315"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="318"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="321"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="324"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="327"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="330"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="333"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="336"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="339"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="342"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="345"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="348"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="351"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="354"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="357"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="360"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="363"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="366"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="369"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html#disconnect&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="372"><bpt name="a" word-end="false">&lt;a href=&quot;qt.html#ConnectionType-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="375"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="4"/></tag><tag id="378"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html#connect&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="381"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="384"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdesigner/designer-using-a-ui-file.html#automatic-connections&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="387"><bpt name="a" word-end="false">&lt;a name=&quot;a-real-example&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="390"><bpt name="span" word-end="false">&lt;span class=&quot;preprocessor&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="393"><bpt name="span" word-end="false">&lt;span class=&quot;preprocessor&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="396"><bpt name="span" word-end="false">&lt;span class=&quot;preprocessor&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="399"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="402"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="405"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="408"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="411"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="414"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qframe.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="417"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qwidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="420"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qlcdnumber.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="423"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html#Q_OBJECT&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="426"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="429"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="432"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdoc/moc.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="435"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="438"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="441"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="444"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="447"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="450"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qwidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="453"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="456"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="459"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="462"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="465"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="468"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="471"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="474"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="477"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="480"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="483"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="486"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="489"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="492"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="495"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="498"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="501"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="504"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="507"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="510"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="513"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="516"><bpt name="span" word-end="false">&lt;span class=&quot;preprocessor&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="519"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="522"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="525"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qabstractslider.html#valueChanged&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="528"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qscrollbar.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="531"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="534"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="537"><bpt name="a" word-end="false">&lt;a name=&quot;signals-and-slots-with-default-arguments&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="540"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html#destroyed&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="543"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="546"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="549"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="552"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="555"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="558"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="561"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html#destroyed&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="564"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="567"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="570"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="573"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="576"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="579"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="582"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html#connect&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="585"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="588"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="591"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="594"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="597"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="600"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="603"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="606"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="609"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="612"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html#connect&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="615"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="618"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="621"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="624"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="627"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="630"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="633"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="636"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="639"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="642"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="645"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="648"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="651"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html#connect&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="654"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="657"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="660"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="663"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="666"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="669"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="4"/></tag><tag id="672"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="675"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="678"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="681"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="684"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="687"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="690"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="693"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="696"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="699"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="702"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="705"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="708"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="711"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="714"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="717"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="720"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="723"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="726"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="729"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="732"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="735"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="738"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="741"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="744"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="747"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html#connect&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="750"><bpt name="a" word-end="false">&lt;a name=&quot;advanced-signals-and-slots-usage&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="753"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html#sender&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="756"><bpt name="a" word-end="false">&lt;a href=&quot;qsignalmapper.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="759"><bpt name="a" word-end="false">&lt;a href=&quot;qsignalmapper.html#setMapping&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="762"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qabstractbutton.html#clicked&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="765"><bpt name="a" word-end="false">&lt;a href=&quot;qsignalmapper.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="768"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qabstractbutton.html#clicked&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="771"><bpt name="a" word-end="false">&lt;a href=&quot;qsignalmapper.html#map&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="774"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="777"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="780"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="783"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="786"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="789"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="792"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="795"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="798"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="801"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="804"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="807"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="810"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="813"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="816"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="819"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="822"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="825"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="828"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="831"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="834"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="837"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="840"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="843"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="846"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="849"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="852"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="855"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="858"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="861"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="864"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="867"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="870"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="873"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="876"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="879"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="882"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="885"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="888"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="891"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="894"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="897"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="900"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="903"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="906"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="909"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="912"><bpt name="a" word-end="false">&lt;a href=&quot;qsignalmapper.html#mapped&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="915"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="918"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="921"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="924"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="927"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="930"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="933"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="936"><bpt name="a" word-end="false">&lt;a name=&quot;3rd-party-signals-and-slots&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="939"><bpt name="a" word-end="false">&lt;a name=&quot;using-qt-with-3rd-party-signals-and-slots&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="942"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="945"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="948"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="951"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="954"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="957"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="960"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html#Q_SIGNALS&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="963"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html#Q_SIGNAL&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="966"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html#Q_SLOTS&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="969"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html#Q_SLOT&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="972"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html#Q_EMIT&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="975"><bpt name="b" word-end="false">&lt;b&gt;</bpt><bpt-props><value key="FormattingItemBold">True</value><value key="StartTag">b</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="b" word-end="false">&lt;/b&gt;</ept><fmt id="3"/></tag><tag id="978"><bpt name="a" word-end="false">&lt;a href=&quot;metaobjects.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="981"><bpt name="a" word-end="false">&lt;a href=&quot;properties.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="987"><bpt name="a" word-end="false">&lt;a href=&quot;http://www.gnu.org/licenses/fdl.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="0"><ph name="xml" word-end="false">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</ph><props><value key="ProcessingInstructionTag">xml</value></props></tag><tag id="1"><ph name="Comment" word-end="false">&lt;!-- signalsandslots.qdoc --&gt;</ph></tag><tag id="41"><ph name="Comment" word-end="false">&lt;!-- $$$signalsandslots.html-description --&gt;</ph></tag><tag id="60"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/abstract-connections.png&quot; alt=&quot;<sub xid="18b22c62-d464-46dc-9576-f264ae8d805c"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="982"><ph name="Comment" word-end="false">&lt;!-- @@@signalsandslots.html --&gt;</ph></tag><tag id="983"><ph name="copy" word-end="false" seg-hint="IncludeWithText">&amp;copy;</ph><props><value key="PlaceholderForMappedEntity">true</value></props></tag><tag id="984"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="988"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag></tag-defs></header><body><group><sdl:cxts><sdl:cxt id="1"/></sdl:cxts><trans-unit id="f7fa9c7b-e79c-49a9-a1be-81973966e4e5"><source><x id="0"/>
</source><seg-source><x id="0"/>
</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="2"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="3"/></sdl:cxts><trans-unit id="513d147e-f1e9-4047-9cf0-78163dcd81d9"><source><x id="1"/></source><seg-source><x id="1"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="5"/><sdl:cxt id="6"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="4"/></sdl:cxts><trans-unit id="2f9682c6-b7ae-4316-9411-40c9fad81d8b"><source>Signals &amp; Slots | Qt Core 5.7</source><seg-source>Signals &amp; Slots | Qt Core 5.7</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="13"/></sdl:cxts><trans-unit id="94fc00f5-ba73-4470-acc7-bdfe845f6038"><source><g id="4">Qt 5.7</g></source><seg-source><g id="4">Qt 5.7</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="14"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="14"/></sdl:cxts><trans-unit id="7b4e6a84-06d1-4670-80c3-5c3e7f9ca343"><source><g id="7">Qt Core</g></source><seg-source><g id="7">Qt Core</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="15"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="15"/></sdl:cxts><trans-unit id="7718b43a-5cbe-4f8c-a413-50344a00036f"><source>Signals &amp; Slots</source><seg-source>Signals &amp; Slots</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="16"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="18"/></sdl:cxts><trans-unit id="2a6f75d9-c966-4c8e-8593-38cb0307069a"><source>Qt 5.7.1 Reference Documentation</source><seg-source>Qt 5.7.1 Reference Documentation</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="17"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="24"/></sdl:cxts><trans-unit id="59a92bbf-4a17-45ff-b179-6d6087539812"><source><g id="10">Contents</g></source><seg-source><g id="10">Contents</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="19"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="26"/></sdl:cxts><trans-unit id="a23f0002-d24a-4959-895d-ac0c4b826757"><source><g id="13">Introduction</g></source><seg-source><g id="13">Introduction</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="22"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="27"/></sdl:cxts><trans-unit id="8f479351-effb-48b5-924a-1b6d544d0710"><source><g id="16">Signals and Slots</g></source><seg-source><g id="16">Signals and Slots</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="23"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="28"/></sdl:cxts><trans-unit id="c5c7f2fd-c90d-4867-8913-38367efa38bd"><source><g id="19">Signals</g></source><seg-source><g id="19">Signals</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="24"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="29"/></sdl:cxts><trans-unit id="177790a7-c6b7-4f28-a97a-fe876043fc2e"><source><g id="22">Slots</g></source><seg-source><g id="22">Slots</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="25"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="30"/></sdl:cxts><trans-unit id="38e81e55-1fd0-4aa8-b5a1-ffdf25583e51"><source><g id="25">A Small Example</g></source><seg-source><g id="25">A Small Example</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="26"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="26717e9e-4d24-4445-a6d0-ed0f3bb0dddb"><source><g id="28">A Real Example</g></source><seg-source><g id="28">A Real Example</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="27"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="32"/></sdl:cxts><trans-unit id="8eb1b8e0-dc12-4858-8c04-8e8f4841bbaf"><source><g id="31">Signals And Slots With Default Arguments</g></source><seg-source><g id="31">Signals And Slots With Default Arguments</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="28"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="33"/></sdl:cxts><trans-unit id="e7c0290d-8054-408b-b01e-644941192002"><source><g id="34">Advanced Signals and Slots Usage</g></source><seg-source><g id="34">Advanced Signals and Slots Usage</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="29"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="34"/></sdl:cxts><trans-unit id="7e1b8ff0-6f82-4295-aa68-6031ce90576a"><source><g id="37">Using Qt with 3rd Party Signals and Slots</g></source><seg-source><g id="37">Using Qt with 3rd Party Signals and Slots</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="30"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="35"/></sdl:cxts><trans-unit id="6022913b-2762-4e4d-b72d-0abe148f5861"><source>Signals &amp; Slots</source><seg-source>Signals &amp; Slots</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="21"/></sdl:cxts><trans-unit id="15e12f0a-8aff-4b1e-ae41-84a57b5bbc4e"><source><g id="40"/> <x id="41"/></source><seg-source><g id="40"/> <x id="41"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="8bf6398d-1337-4cd7-8819-426910c9ccba"><source><g id="44"/></source><seg-source><g id="44"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="33"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="37"/></sdl:cxts><trans-unit id="7699bbfa-a361-4ec1-a948-911455c43875"><source>Signals and slots are used for communication between objects. The signals and slots mechanism is a central feature of Qt and probably the part that differs most from the features provided by other frameworks. Signals and slots are made possible by Qt&apos;s <g id="47">meta-object system</g>.</source><seg-source>Signals and slots are used for communication between objects. The signals and slots mechanism is a central feature of Qt and probably the part that differs most from the features provided by other frameworks. Signals and slots are made possible by Qt&apos;s <g id="47">meta-object system</g>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="1cbe6e46-92df-492b-85b6-1c9f9bb984ed"><source><g id="50"/></source><seg-source><g id="50"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="36"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="38"/></sdl:cxts><trans-unit id="dc219de9-07b2-4698-bede-69008e12c684"><source>Introduction</source><seg-source>Introduction</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="37"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="39"/></sdl:cxts><trans-unit id="7ee72cc4-3498-4431-bfa8-7538062c0c0e"><source>In GUI programming, when we change one widget, we often want another widget to be notified. More generally, we want objects of any kind to be able to communicate with one another. For example, if a user clicks a <g id="53">Close</g> button, we probably want the window&apos;s <g id="56">close()</g> function to be called.</source><seg-source>In GUI programming, when we change one widget, we often want another widget to be notified. More generally, we want objects of any kind to be able to communicate with one another. For example, if a user clicks a <g id="53">Close</g> button, we probably want the window&apos;s <g id="56">close()</g> function to be called.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="38"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="40"/></sdl:cxts><trans-unit id="9b2e66a3-081e-47c9-af25-45274843b298"><source>Other toolkits achieve this kind of communication using callbacks. A callback is a pointer to a function, so if you want a processing function to notify you about some event you pass a pointer to another function (the callback) to the processing function. The processing function then calls the callback when appropriate. While successful frameworks using this method do exist, callbacks can be unintuitive and may suffer from problems in ensuring the type-correctness of callback arguments.</source><seg-source>Other toolkits achieve this kind of communication using callbacks. A callback is a pointer to a function, so if you want a processing function to notify you about some event you pass a pointer to another function (the callback) to the processing function. The processing function then calls the callback when appropriate. While successful frameworks using this method do exist, callbacks can be unintuitive and may suffer from problems in ensuring the type-correctness of callback arguments.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="39"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="ed4888d6-7582-40b9-8603-760c1972d6d5"><source><g id="59"/></source><seg-source><g id="59"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="40"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="41"/></sdl:cxts><trans-unit id="b41eed94-d410-4921-8331-926f08c54441"><source>Signals and Slots</source><seg-source>Signals and Slots</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="41"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="42"/></sdl:cxts><trans-unit id="719d45e3-7752-45af-b732-18e2277e2929"><source>In Qt, we have an alternative to the callback technique: We use signals and slots. A signal is emitted when a particular event occurs. Qt&apos;s widgets have many predefined signals, but we can always subclass widgets to add our own signals to them. A slot is a function that is called in response to a particular signal. Qt&apos;s widgets have many pre-defined slots, but it is common practice to subclass widgets and add your own slots so that you can handle the signals that you are interested in.</source><seg-source>In Qt, we have an alternative to the callback technique: We use signals and slots. A signal is emitted when a particular event occurs. Qt&apos;s widgets have many predefined signals, but we can always subclass widgets to add our own signals to them. A slot is a function that is called in response to a particular signal. Qt&apos;s widgets have many pre-defined slots, but it is common practice to subclass widgets and add your own slots so that you can handle the signals that you are interested in.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="42"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="90a1cdd2-003d-4e60-8048-5ed85a513f09"><source><x id="60" xid="18b22c62-d464-46dc-9576-f264ae8d805c"/></source><seg-source><x id="60" xid="18b22c62-d464-46dc-9576-f264ae8d805c"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="43"/></sdl:cxts><trans-unit id="18b22c62-d464-46dc-9576-f264ae8d805c"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="44"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="44"/></sdl:cxts><trans-unit id="cb86cd29-ccbd-43d9-b447-58e91ba3ac6c"><source>The signals and slots mechanism is type safe: The signature of a signal must match the signature of the receiving slot. (In fact a slot may have a shorter signature than the signal it receives because it can ignore extra arguments.) Since the signatures are compatible, the compiler can help us detect type mismatches when using the function pointer-based syntax. The string-based SIGNAL and SLOT syntax will detect type mismatches at runtime. Signals and slots are loosely coupled: A class which emits a signal neither knows nor cares which slots receive the signal. Qt&apos;s signals and slots mechanism ensures that if you connect a signal to a slot, the slot will be called with the signal&apos;s parameters at the right time. Signals and slots can take any number of arguments of any type. They are completely type safe.</source><seg-source>The signals and slots mechanism is type safe: The signature of a signal must match the signature of the receiving slot. (In fact a slot may have a shorter signature than the signal it receives because it can ignore extra arguments.) Since the signatures are compatible, the compiler can help us detect type mismatches when using the function pointer-based syntax. The string-based SIGNAL and SLOT syntax will detect type mismatches at runtime. Signals and slots are loosely coupled: A class which emits a signal neither knows nor cares which slots receive the signal. Qt&apos;s signals and slots mechanism ensures that if you connect a signal to a slot, the slot will be called with the signal&apos;s parameters at the right time. Signals and slots can take any number of arguments of any type. They are completely type safe.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="45"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="45"/></sdl:cxts><trans-unit id="5234160b-2dfe-4c0c-8c58-ed054b3a2753"><source>All classes that inherit from <g id="63">QObject</g> or one of its subclasses (e.g., <g id="66">QWidget</g>) can contain signals and slots. Signals are emitted by objects when they change their state in a way that may be interesting to other objects. This is all the object does to communicate. It does not know or care whether anything is receiving the signals it emits. This is true information encapsulation, and ensures that the object can be used as a software component.</source><seg-source>All classes that inherit from <g id="63">QObject</g> or one of its subclasses (e.g., <g id="66">QWidget</g>) can contain signals and slots. Signals are emitted by objects when they change their state in a way that may be interesting to other objects. This is all the object does to communicate. It does not know or care whether anything is receiving the signals it emits. This is true information encapsulation, and ensures that the object can be used as a software component.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="46"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="46"/></sdl:cxts><trans-unit id="0b012ce2-9a2c-4faf-a29c-c57ddbd93498"><source>Slots can be used for receiving signals, but they are also normal member functions. Just as an object does not know if anything receives its signals, a slot does not know if it has any signals connected to it. This ensures that truly independent components can be created with Qt.</source><seg-source>Slots can be used for receiving signals, but they are also normal member functions. Just as an object does not know if anything receives its signals, a slot does not know if it has any signals connected to it. This ensures that truly independent components can be created with Qt.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="47"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="47"/></sdl:cxts><trans-unit id="a6a8d548-0665-4e85-9f59-724406b95363"><source>You can connect as many signals as you want to a single slot, and a signal can be connected to as many slots as you need. It is even possible to connect a signal directly to another signal. (This will emit the second signal immediately whenever the first is emitted.)</source><seg-source>You can connect as many signals as you want to a single slot, and a signal can be connected to as many slots as you need. It is even possible to connect a signal directly to another signal. (This will emit the second signal immediately whenever the first is emitted.)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="48"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="48"/></sdl:cxts><trans-unit id="922ee524-3c26-4086-a2d9-54a7949f49a6"><source>Together, signals and slots make up a powerful component programming mechanism.</source><seg-source>Together, signals and slots make up a powerful component programming mechanism.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="49"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="3c9b1e24-6901-48bd-ada7-166bdb780fdd"><source><g id="69"/></source><seg-source><g id="69"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="50"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="49"/></sdl:cxts><trans-unit id="71b8921b-68cb-47de-947c-4e96eba2f249"><source>Signals</source><seg-source>Signals</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="51"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="50"/></sdl:cxts><trans-unit id="f9f53b8c-eda5-42c8-9274-75474909d8bf"><source>Signals are emitted by an object when its internal state has changed in some way that might be interesting to the object&apos;s client or owner. Signals are public access functions and can be emitted from anywhere, but we recommend to only emit them from the class that defines the signal and its subclasses.</source><seg-source>Signals are emitted by an object when its internal state has changed in some way that might be interesting to the object&apos;s client or owner. Signals are public access functions and can be emitted from anywhere, but we recommend to only emit them from the class that defines the signal and its subclasses.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="52"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="51"/></sdl:cxts><trans-unit id="lockTU_404060cb-b415-4067-a00f-ab28c9223380" translate="no" sdl:locktype="Structure"><source><g id="72">emit</g></source></trans-unit><trans-unit id="lockTU_c5ecb03f-29ce-4a7a-9ebd-467f0e5b9162" translate="no" sdl:locktype="Structure"><source><g id="78">emit</g></source></trans-unit><trans-unit id="lockTU_36396c77-1574-4c94-8bbb-43907ff09309" translate="no" sdl:locktype="Structure"><source><g id="72">emit</g></source></trans-unit><trans-unit id="lockTU_614c0240-362e-4944-857c-dbf10e4039b6" translate="no" sdl:locktype="Structure"><source><g id="78">emit</g></source></trans-unit><trans-unit id="7bc8c014-67b4-4a07-8b88-2fb3d0f76ca2"><source>When a signal is emitted, the slots connected to it are usually executed immediately, just like a normal function call. When this happens, the signals and slots mechanism is totally independent of any GUI event loop. Execution of the code following the <x id="locked1" xid="lockTU_36396c77-1574-4c94-8bbb-43907ff09309"/> statement will occur once all slots have returned. The situation is slightly different when using <g id="75">queued connections</g>; in such a case, the code following the <x id="locked2" xid="lockTU_614c0240-362e-4944-857c-dbf10e4039b6"/> keyword will continue immediately, and the slots will be executed later.</source><seg-source>When a signal is emitted, the slots connected to it are usually executed immediately, just like a normal function call. When this happens, the signals and slots mechanism is totally independent of any GUI event loop. Execution of the code following the <x id="locked3" xid="lockTU_404060cb-b415-4067-a00f-ab28c9223380"/> statement will occur once all slots have returned. The situation is slightly different when using <g id="75">queued connections</g>; in such a case, the code following the <x id="locked4" xid="lockTU_c5ecb03f-29ce-4a7a-9ebd-467f0e5b9162"/> keyword will continue immediately, and the slots will be executed later.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="53"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="52"/></sdl:cxts><trans-unit id="92052a7e-63b2-4afa-8d15-d97966a63759"><source>If several slots are connected to one signal, the slots will be executed one after the other, in the order they have been connected, when the signal is emitted.</source><seg-source>If several slots are connected to one signal, the slots will be executed one after the other, in the order they have been connected, when the signal is emitted.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="54"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="53"/></sdl:cxts><trans-unit id="lockTU_cb5c7dac-8021-4ee5-8c6f-0cda33a749fd" translate="no" sdl:locktype="Structure"><source><g id="84">.cpp</g></source></trans-unit><trans-unit id="lockTU_ec1b9111-672a-45eb-81c8-aca3842bf43b" translate="no" sdl:locktype="Structure"><source><g id="87">void</g></source></trans-unit><trans-unit id="lockTU_07e1df32-7bd6-471f-9e97-ba42e3ffda67" translate="no" sdl:locktype="Structure"><source><g id="84">.cpp</g></source></trans-unit><trans-unit id="lockTU_1730f381-a099-42b1-bfd2-e36666756b91" translate="no" sdl:locktype="Structure"><source><g id="87">void</g></source></trans-unit><trans-unit id="2bae8c92-5e59-4ffe-9606-69f85f99eea6"><source>Signals are automatically generated by the <g id="81">moc</g> and must not be implemented in the <x id="locked5" xid="lockTU_07e1df32-7bd6-471f-9e97-ba42e3ffda67"/> file. They can never have return types (i.e. use <x id="locked6" xid="lockTU_1730f381-a099-42b1-bfd2-e36666756b91"/>).</source><seg-source>Signals are automatically generated by the <g id="81">moc</g> and must not be implemented in the <x id="locked7" xid="lockTU_cb5c7dac-8021-4ee5-8c6f-0cda33a749fd"/> file. They can never have return types (i.e. use <x id="locked8" xid="lockTU_ec1b9111-672a-45eb-81c8-aca3842bf43b"/>).</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="55"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="54"/></sdl:cxts><trans-unit id="86ebbdf0-af9a-4d60-8972-379457160c69"><source>A note about arguments: Our experience shows that signals and slots are more reusable if they do not use special types. If <g id="90">QScrollBar::valueChanged</g>() were to use a special type such as the hypothetical QScrollBar::Range, it could only be connected to slots designed specifically for <g id="93">QScrollBar</g>. Connecting different input widgets together would be impossible.</source><seg-source>A note about arguments: Our experience shows that signals and slots are more reusable if they do not use special types. If <g id="90">QScrollBar::valueChanged</g>() were to use a special type such as the hypothetical QScrollBar::Range, it could only be connected to slots designed specifically for <g id="93">QScrollBar</g>. Connecting different input widgets together would be impossible.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="56"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="d0ccc700-d14a-477c-b4d2-6a7d287968f2"><source><g id="96"/></source><seg-source><g id="96"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="57"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="55"/></sdl:cxts><trans-unit id="0a93cd45-43b3-45d4-848c-71b0befc83eb"><source>Slots</source><seg-source>Slots</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="58"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="56"/></sdl:cxts><trans-unit id="cc81a283-6409-4580-97c0-0a6eef976f74"><source>A slot is called when a signal connected to it is emitted. Slots are normal C++ functions and can be called normally; their only special feature is that signals can be connected to them.</source><seg-source>A slot is called when a signal connected to it is emitted. Slots are normal C++ functions and can be called normally; their only special feature is that signals can be connected to them.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="59"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="57"/></sdl:cxts><trans-unit id="0395b8a8-0ed8-457c-8a64-bc3b91b635a5"><source>Since slots are normal member functions, they follow the normal C++ rules when called directly. However, as slots, they can be invoked by any component, regardless of its access level, via a signal-slot connection. This means that a signal emitted from an instance of an arbitrary class can cause a private slot to be invoked in an instance of an unrelated class.</source><seg-source>Since slots are normal member functions, they follow the normal C++ rules when called directly. However, as slots, they can be invoked by any component, regardless of its access level, via a signal-slot connection. This means that a signal emitted from an instance of an arbitrary class can cause a private slot to be invoked in an instance of an unrelated class.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="60"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="58"/></sdl:cxts><trans-unit id="8e21574e-9465-4fde-b883-fb06d3bf8557"><source>You can also define slots to be virtual, which we have found quite useful in practice.</source><seg-source>You can also define slots to be virtual, which we have found quite useful in practice.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="61"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="59"/></sdl:cxts><trans-unit id="lockTU_6f3666aa-41af-40d9-a450-ed29e93a85cd" translate="no" sdl:locktype="Structure"><source><g id="99">new</g></source></trans-unit><trans-unit id="lockTU_556c24c4-c116-49df-b06a-e2d9cba3d169" translate="no" sdl:locktype="Structure"><source><g id="102">delete</g></source></trans-unit><trans-unit id="lockTU_894fd7e4-db5f-442b-ba4a-ef7bd50500e4" translate="no" sdl:locktype="Structure"><source><g id="105">new</g></source></trans-unit><trans-unit id="lockTU_ea71b6cf-333c-4e33-ad46-4c3d65e40482" translate="no" sdl:locktype="Structure"><source><g id="108">delete</g></source></trans-unit><trans-unit id="lockTU_c7e3a06a-0b63-4c97-bb0e-4eb8211854e0" translate="no" sdl:locktype="Structure"><source><g id="99">new</g></source></trans-unit><trans-unit id="lockTU_70c33b41-98a2-437c-8195-440578e7bc2e" translate="no" sdl:locktype="Structure"><source><g id="102">delete</g></source></trans-unit><trans-unit id="lockTU_8ee89042-bd96-4a49-a2ef-6bf481701612" translate="no" sdl:locktype="Structure"><source><g id="105">new</g></source></trans-unit><trans-unit id="lockTU_22c61d98-06be-4f5c-9938-980b6179eafd" translate="no" sdl:locktype="Structure"><source><g id="108">delete</g></source></trans-unit><trans-unit id="dbbc5de0-5ccf-4733-8a0a-fe2a09f6da90"><source>Compared to callbacks, signals and slots are slightly slower because of the increased flexibility they provide, although the difference for real applications is insignificant. In general, emitting a signal that is connected to some slots, is approximately ten times slower than calling the receivers directly, with non-virtual function calls. This is the overhead required to locate the connection object, to safely iterate over all connections (i.e. checking that subsequent receivers have not been destroyed during the emission), and to marshall any parameters in a generic fashion. While ten non-virtual function calls may sound like a lot, it&apos;s much less overhead than any <x id="locked9" xid="lockTU_c7e3a06a-0b63-4c97-bb0e-4eb8211854e0"/> or <x id="locked10" xid="lockTU_70c33b41-98a2-437c-8195-440578e7bc2e"/> operation, for example. As soon as you perform a string, vector or list operation that behind the scene requires <x id="locked11" xid="lockTU_8ee89042-bd96-4a49-a2ef-6bf481701612"/> or <x id="locked12" xid="lockTU_22c61d98-06be-4f5c-9938-980b6179eafd"/>, the signals and slots overhead is only responsible for a very small proportion of the complete function call costs. The same is true whenever you do a system call in a slot; or indirectly call more than ten functions. The simplicity and flexibility of the signals and slots mechanism is well worth the overhead, which your users won&apos;t even notice.</source><seg-source>Compared to callbacks, signals and slots are slightly slower because of the increased flexibility they provide, although the difference for real applications is insignificant. In general, emitting a signal that is connected to some slots, is approximately ten times slower than calling the receivers directly, with non-virtual function calls. This is the overhead required to locate the connection object, to safely iterate over all connections (i.e. checking that subsequent receivers have not been destroyed during the emission), and to marshall any parameters in a generic fashion. While ten non-virtual function calls may sound like a lot, it&apos;s much less overhead than any <x id="locked13" xid="lockTU_6f3666aa-41af-40d9-a450-ed29e93a85cd"/> or <x id="locked14" xid="lockTU_556c24c4-c116-49df-b06a-e2d9cba3d169"/> operation, for example. As soon as you perform a string, vector or list operation that behind the scene requires <x id="locked15" xid="lockTU_894fd7e4-db5f-442b-ba4a-ef7bd50500e4"/> or <x id="locked16" xid="lockTU_ea71b6cf-333c-4e33-ad46-4c3d65e40482"/>, the signals and slots overhead is only responsible for a very small proportion of the complete function call costs. The same is true whenever you do a system call in a slot; or indirectly call more than ten functions. The simplicity and flexibility of the signals and slots mechanism is well worth the overhead, which your users won&apos;t even notice.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="62"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="60"/></sdl:cxts><trans-unit id="lockTU_d2fad4ee-d5f8-4ac8-933b-323619663905" translate="no" sdl:locktype="Structure"><source><g id="111">signals</g></source></trans-unit><trans-unit id="lockTU_bc8ee5d0-3a66-4316-b278-c9762bf5951d" translate="no" sdl:locktype="Structure"><source><g id="114">slots</g></source></trans-unit><trans-unit id="lockTU_27aeed4e-32b6-4645-a003-89a94c225f5a" translate="no" sdl:locktype="Structure"><source><g id="117">#undef</g></source></trans-unit><trans-unit id="lockTU_20ad4da6-d0ad-4c6f-814d-bc4086587c9a" translate="no" sdl:locktype="Structure"><source><g id="111">signals</g></source></trans-unit><trans-unit id="lockTU_fe79efe5-4dea-4f54-b560-43b44bb78f33" translate="no" sdl:locktype="Structure"><source><g id="114">slots</g></source></trans-unit><trans-unit id="lockTU_e9072e71-35b0-4a66-ae8a-c01142181f75" translate="no" sdl:locktype="Structure"><source><g id="117">#undef</g></source></trans-unit><trans-unit id="6b08218b-2f08-40db-b695-a1aad14eafe8"><source>Note that other libraries that define variables called <x id="locked17" xid="lockTU_20ad4da6-d0ad-4c6f-814d-bc4086587c9a"/> or <x id="locked18" xid="lockTU_fe79efe5-4dea-4f54-b560-43b44bb78f33"/> may cause compiler warnings and errors when compiled alongside a Qt-based application. To solve this problem, <x id="locked19" xid="lockTU_e9072e71-35b0-4a66-ae8a-c01142181f75"/> the offending preprocessor symbol.</source><seg-source>Note that other libraries that define variables called <x id="locked20" xid="lockTU_d2fad4ee-d5f8-4ac8-933b-323619663905"/> or <x id="locked21" xid="lockTU_bc8ee5d0-3a66-4316-b278-c9762bf5951d"/> may cause compiler warnings and errors when compiled alongside a Qt-based application. To solve this problem, <x id="locked22" xid="lockTU_27aeed4e-32b6-4645-a003-89a94c225f5a"/> the offending preprocessor symbol.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="63"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="8787d7ef-c193-4405-a1ca-0203f3171540"><source><g id="120"/></source><seg-source><g id="120"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="64"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="61"/></sdl:cxts><trans-unit id="9f5ea158-c219-4a28-9440-c9387ac0c4aa"><source>A Small Example</source><seg-source>A Small Example</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="65"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="62"/></sdl:cxts><trans-unit id="94e7857c-4a1b-447f-a1e8-896f5fb61e11"><source>A minimal C++ class declaration might read:</source><seg-source>A minimal C++ class declaration might read:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="66"/><sdl:cxt id="67"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="63"/></sdl:cxts><trans-unit id="776c8863-dd97-4556-bfbd-a519ae593dfc"><source><g id="123">class</g> Counter { <g id="126">public</g>: Counter() { m_value <g id="129">=</g> <g id="132">0</g>; } <g id="135">int</g> value() <g id="138">const</g> { <g id="141">return</g> m_value; } <g id="144">void</g> setValue(<g id="147">int</g> value); <g id="150">private</g>: <g id="153">int</g> m_value; };</source><seg-source><g id="123">class</g> Counter { <g id="126">public</g>: Counter() { m_value <g id="129">=</g> <g id="132">0</g>; } <g id="135">int</g> value() <g id="138">const</g> { <g id="141">return</g> m_value; } <g id="144">void</g> setValue(<g id="147">int</g> value); <g id="150">private</g>: <g id="153">int</g> m_value; };</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="68"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="64"/></sdl:cxts><trans-unit id="ce6ce4d6-7d4e-43bf-92d5-2b3eee34bebb"><source>A small <g id="156">QObject</g>-based class might read:</source><seg-source>A small <g id="156">QObject</g>-based class might read:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="69"/><sdl:cxt id="67"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="65"/></sdl:cxts><trans-unit id="3b97ec8f-93d9-41fa-8fa5-7fc49f7331c6"><source><g id="159">#include &lt;QObject&gt;</g> <g id="162">class</g> Counter : <g id="165">public</g> <g id="168">QObject</g> { Q_OBJECT <g id="171">public</g>: Counter() { m_value <g id="174">=</g> <g id="177">0</g>; } <g id="180">int</g> value() <g id="183">const</g> { <g id="186">return</g> m_value; } <g id="189">public</g> <g id="192">slots</g>: <g id="195">void</g> setValue(<g id="198">int</g> value); <g id="201">signals</g>: <g id="204">void</g> valueChanged(<g id="207">int</g> newValue); <g id="210">private</g>: <g id="213">int</g> m_value; };</source><seg-source><g id="159">#include &lt;QObject&gt;</g> <g id="162">class</g> Counter : <g id="165">public</g> <g id="168">QObject</g> { Q_OBJECT <g id="171">public</g>: Counter() { m_value <g id="174">=</g> <g id="177">0</g>; } <g id="180">int</g> value() <g id="183">const</g> { <g id="186">return</g> m_value; } <g id="189">public</g> <g id="192">slots</g>: <g id="195">void</g> setValue(<g id="198">int</g> value); <g id="201">signals</g>: <g id="204">void</g> valueChanged(<g id="207">int</g> newValue); <g id="210">private</g>: <g id="213">int</g> m_value; };</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="70"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="66"/></sdl:cxts><trans-unit id="lockTU_e2cfb1a5-5e30-409c-93ca-00694a1f84cc" translate="no" sdl:locktype="Structure"><source><g id="219">valueChanged()</g></source></trans-unit><trans-unit id="lockTU_2f9c8ef0-b8aa-4461-91a4-b26de02ab9f5" translate="no" sdl:locktype="Structure"><source><g id="219">valueChanged()</g></source></trans-unit><trans-unit id="d061786b-b7ff-4813-bad8-7d0a8357aaf9"><source>The <g id="216">QObject</g>-based version has the same internal state, and provides public methods to access the state, but in addition it has support for component programming using signals and slots. This class can tell the outside world that its state has changed by emitting a signal, <x id="locked23" xid="lockTU_2f9c8ef0-b8aa-4461-91a4-b26de02ab9f5"/>, and it has a slot which other objects can send signals to.</source><seg-source>The <g id="216">QObject</g>-based version has the same internal state, and provides public methods to access the state, but in addition it has support for component programming using signals and slots. This class can tell the outside world that its state has changed by emitting a signal, <x id="locked24" xid="lockTU_e2cfb1a5-5e30-409c-93ca-00694a1f84cc"/>, and it has a slot which other objects can send signals to.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="71"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="67"/></sdl:cxts><trans-unit id="93030156-c321-4c94-a628-855b600bebf4"><source>All classes that contain signals or slots must mention <g id="222">Q_OBJECT</g> at the top of their declaration. They must also derive (directly or indirectly) from <g id="225">QObject</g>.</source><seg-source>All classes that contain signals or slots must mention <g id="222">Q_OBJECT</g> at the top of their declaration. They must also derive (directly or indirectly) from <g id="225">QObject</g>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="72"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="68"/></sdl:cxts><trans-unit id="lockTU_016618eb-f1c2-461d-89f0-4ae63ce4cc79" translate="no" sdl:locktype="Structure"><source><g id="228">Counter::setValue()</g></source></trans-unit><trans-unit id="lockTU_dccd050c-9ffa-4b9c-88a0-1b25161d05ef" translate="no" sdl:locktype="Structure"><source><g id="228">Counter::setValue()</g></source></trans-unit><trans-unit id="63ff7a39-a82d-4491-a7c9-c87709e39db5"><source>Slots are implemented by the application programmer. Here is a possible implementation of the <x id="locked25" xid="lockTU_dccd050c-9ffa-4b9c-88a0-1b25161d05ef"/> slot:</source><seg-source>Slots are implemented by the application programmer. Here is a possible implementation of the <x id="locked26" xid="lockTU_016618eb-f1c2-461d-89f0-4ae63ce4cc79"/> slot:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="73"/><sdl:cxt id="67"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="69"/></sdl:cxts><trans-unit id="93174eac-6e04-47ab-a2d0-7d62483186b0"><source><g id="231">void</g> Counter<g id="234">::</g>setValue(<g id="237">int</g> value) { <g id="240">if</g> (value <g id="243">!</g><g id="246">=</g> m_value) { m_value <g id="249">=</g> value; <g id="252">emit</g> valueChanged(value); } }</source><seg-source><g id="231">void</g> Counter<g id="234">::</g>setValue(<g id="237">int</g> value) { <g id="240">if</g> (value <g id="243">!</g><g id="246">=</g> m_value) { m_value <g id="249">=</g> value; <g id="252">emit</g> valueChanged(value); } }</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="74"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="70"/></sdl:cxts><trans-unit id="lockTU_5ec1f6cb-1906-4a91-b961-65c14db28bdd" translate="no" sdl:locktype="Structure"><source><g id="255">emit</g></source></trans-unit><trans-unit id="lockTU_70e6a754-aaa4-467c-aae6-a7499d6de156" translate="no" sdl:locktype="Structure"><source><g id="258">valueChanged()</g></source></trans-unit><trans-unit id="lockTU_f6d8ef8a-b3f6-4a26-8081-f1d89f50f1a2" translate="no" sdl:locktype="Structure"><source><g id="255">emit</g></source></trans-unit><trans-unit id="lockTU_03ab9e85-0683-4e13-a5cd-350c4e8de99e" translate="no" sdl:locktype="Structure"><source><g id="258">valueChanged()</g></source></trans-unit><trans-unit id="d23c02eb-baf3-45f0-8fa5-855d3d6417a9"><source>The <x id="locked27" xid="lockTU_f6d8ef8a-b3f6-4a26-8081-f1d89f50f1a2"/> line emits the signal <x id="locked28" xid="lockTU_03ab9e85-0683-4e13-a5cd-350c4e8de99e"/> from the object, with the new value as argument.</source><seg-source>The <x id="locked29" xid="lockTU_5ec1f6cb-1906-4a91-b961-65c14db28bdd"/> line emits the signal <x id="locked30" xid="lockTU_70e6a754-aaa4-467c-aae6-a7499d6de156"/> from the object, with the new value as argument.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="75"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="71"/></sdl:cxts><trans-unit id="lockTU_0772d671-f37c-475d-88a0-784335423672" translate="no" sdl:locktype="Structure"><source><g id="261">Counter</g></source></trans-unit><trans-unit id="lockTU_60cd3950-e670-4070-870c-c48cb246436a" translate="no" sdl:locktype="Structure"><source><g id="264">valueChanged()</g></source></trans-unit><trans-unit id="lockTU_392ec160-7da7-4c8a-b965-cf715ad106b8" translate="no" sdl:locktype="Structure"><source><g id="267">setValue()</g></source></trans-unit><trans-unit id="lockTU_1c7c50c6-300f-442e-868a-91d8a5bcf0b7" translate="no" sdl:locktype="Structure"><source><g id="261">Counter</g></source></trans-unit><trans-unit id="lockTU_8ed49695-46c4-4860-8314-1e5c3465d668" translate="no" sdl:locktype="Structure"><source><g id="264">valueChanged()</g></source></trans-unit><trans-unit id="lockTU_b4adfa7a-6aca-49a3-b8a1-ee111484125c" translate="no" sdl:locktype="Structure"><source><g id="267">setValue()</g></source></trans-unit><trans-unit id="71838181-e1c1-413e-b8e6-432c184880e5"><source>In the following code snippet, we create two <x id="locked31" xid="lockTU_1c7c50c6-300f-442e-868a-91d8a5bcf0b7"/> objects and connect the first object&apos;s <x id="locked32" xid="lockTU_8ed49695-46c4-4860-8314-1e5c3465d668"/> signal to the second object&apos;s <x id="locked33" xid="lockTU_b4adfa7a-6aca-49a3-b8a1-ee111484125c"/> slot using <g id="270">QObject::connect</g>():</source><seg-source>In the following code snippet, we create two <x id="locked34" xid="lockTU_0772d671-f37c-475d-88a0-784335423672"/> objects and connect the first object&apos;s <x id="locked35" xid="lockTU_60cd3950-e670-4070-870c-c48cb246436a"/> signal to the second object&apos;s <x id="locked36" xid="lockTU_392ec160-7da7-4c8a-b965-cf715ad106b8"/> slot using <g id="270">QObject::connect</g>():</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="76"/><sdl:cxt id="67"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="72"/></sdl:cxts><trans-unit id="1a0d70a8-deac-4fe7-a74a-9af901e0aafe"><source>Counter a<g id="273">,</g> b; <g id="276">QObject</g><g id="279">::</g>connect(<g id="282">&amp;</g>a<g id="285">,</g> <g id="288">&amp;</g>Counter<g id="291">::</g>valueChanged<g id="294">,</g> <g id="297">&amp;</g>b<g id="300">,</g> <g id="303">&amp;</g>Counter<g id="306">::</g>setValue); a<g id="309">.</g>setValue(<g id="312">12</g>); <g id="315">// a.value() == 12, b.value() == 12</g> b<g id="318">.</g>setValue(<g id="321">48</g>); <g id="324">// a.value() == 12, b.value() == 48</g></source><seg-source>Counter a<g id="273">,</g> b; <g id="276">QObject</g><g id="279">::</g>connect(<g id="282">&amp;</g>a<g id="285">,</g> <g id="288">&amp;</g>Counter<g id="291">::</g>valueChanged<g id="294">,</g> <g id="297">&amp;</g>b<g id="300">,</g> <g id="303">&amp;</g>Counter<g id="306">::</g>setValue); a<g id="309">.</g>setValue(<g id="312">12</g>); <g id="315">// a.value() == 12, b.value() == 12</g> b<g id="318">.</g>setValue(<g id="321">48</g>); <g id="324">// a.value() == 12, b.value() == 48</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="77"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="73"/></sdl:cxts><trans-unit id="lockTU_6e7388cd-7a9d-4ef6-850b-df5b1e73f2ff" translate="no" sdl:locktype="Structure"><source><g id="327">a.setValue(12)</g></source></trans-unit><trans-unit id="lockTU_c3099035-18b9-48ee-8b63-6fa7402e5314" translate="no" sdl:locktype="Structure"><source><g id="330">a</g></source></trans-unit><trans-unit id="lockTU_e225f607-6124-4382-8096-fbf4e2bd22bc" translate="no" sdl:locktype="Structure"><source><g id="333">valueChanged(12)</g></source></trans-unit><trans-unit id="lockTU_340ae52a-3d72-45b6-8a38-6724971ce8c8" translate="no" sdl:locktype="Structure"><source><g id="336">b</g></source></trans-unit><trans-unit id="lockTU_d8d9ad9f-f9a6-4a39-8263-06779e965415" translate="no" sdl:locktype="Structure"><source><g id="339">setValue()</g></source></trans-unit><trans-unit id="lockTU_8951a497-49c7-43d9-83f5-c63c08b21fd2" translate="no" sdl:locktype="Structure"><source><g id="342">b.setValue(12)</g></source></trans-unit><trans-unit id="lockTU_8ea0676a-4b5f-4ce7-8633-3ca1754d252d" translate="no" sdl:locktype="Structure"><source><g id="345">b</g></source></trans-unit><trans-unit id="lockTU_29ed5a59-8a93-49bb-9c90-6dea9cada11a" translate="no" sdl:locktype="Structure"><source><g id="348">valueChanged()</g></source></trans-unit><trans-unit id="lockTU_4b875ec4-5dd1-4619-9e92-b85de1fb231e" translate="no" sdl:locktype="Structure"><source><g id="351">b</g></source></trans-unit><trans-unit id="lockTU_936c7de3-3c9d-422e-9a36-5a5ab26eadd0" translate="no" sdl:locktype="Structure"><source><g id="354">valueChanged()</g></source></trans-unit><trans-unit id="lockTU_6d12da20-157d-4736-bf4c-52565cf8c7ed" translate="no" sdl:locktype="Structure"><source><g id="327">a.setValue(12)</g></source></trans-unit><trans-unit id="lockTU_f8894593-ffd1-4cbb-a5d5-5b29b2eabbee" translate="no" sdl:locktype="Structure"><source><g id="330">a</g></source></trans-unit><trans-unit id="lockTU_beb02c50-4a6b-43d8-a8a8-cbe803080f6c" translate="no" sdl:locktype="Structure"><source><g id="333">valueChanged(12)</g></source></trans-unit><trans-unit id="lockTU_25adcea5-e093-4a48-86c2-a358ad578af2" translate="no" sdl:locktype="Structure"><source><g id="336">b</g></source></trans-unit><trans-unit id="lockTU_edd6a0c0-2d38-45e1-a6ff-7b398009e713" translate="no" sdl:locktype="Structure"><source><g id="339">setValue()</g></source></trans-unit><trans-unit id="lockTU_641adcbf-86c7-4ae4-b01a-fce08d2e20bc" translate="no" sdl:locktype="Structure"><source><g id="342">b.setValue(12)</g></source></trans-unit><trans-unit id="lockTU_bbdb8a34-0c28-42ff-8fc7-b23a5c963b1c" translate="no" sdl:locktype="Structure"><source><g id="345">b</g></source></trans-unit><trans-unit id="lockTU_ef452fff-4bb5-4bf4-9ef4-e40cef515178" translate="no" sdl:locktype="Structure"><source><g id="348">valueChanged()</g></source></trans-unit><trans-unit id="lockTU_34a98a13-aad3-420c-9b9a-e3007b3d7041" translate="no" sdl:locktype="Structure"><source><g id="351">b</g></source></trans-unit><trans-unit id="lockTU_d1297709-f594-434d-87f7-e670d03464d0" translate="no" sdl:locktype="Structure"><source><g id="354">valueChanged()</g></source></trans-unit><trans-unit id="420a5abe-5a64-44ab-9054-fc677ea21643"><source>Calling <x id="locked37" xid="lockTU_6d12da20-157d-4736-bf4c-52565cf8c7ed"/> makes <x id="locked38" xid="lockTU_f8894593-ffd1-4cbb-a5d5-5b29b2eabbee"/> emit a <x id="locked39" xid="lockTU_beb02c50-4a6b-43d8-a8a8-cbe803080f6c"/> signal, which <x id="locked40" xid="lockTU_25adcea5-e093-4a48-86c2-a358ad578af2"/> will receive in its <x id="locked41" xid="lockTU_edd6a0c0-2d38-45e1-a6ff-7b398009e713"/> slot, i.e. <x id="locked42" xid="lockTU_641adcbf-86c7-4ae4-b01a-fce08d2e20bc"/> is called. Then <x id="locked43" xid="lockTU_bbdb8a34-0c28-42ff-8fc7-b23a5c963b1c"/> emits the same <x id="locked44" xid="lockTU_ef452fff-4bb5-4bf4-9ef4-e40cef515178"/> signal, but since no slot has been connected to <x id="locked45" xid="lockTU_34a98a13-aad3-420c-9b9a-e3007b3d7041"/>&apos;s <x id="locked46" xid="lockTU_d1297709-f594-434d-87f7-e670d03464d0"/> signal, the signal is ignored.</source><seg-source>Calling <x id="locked47" xid="lockTU_6e7388cd-7a9d-4ef6-850b-df5b1e73f2ff"/> makes <x id="locked48" xid="lockTU_c3099035-18b9-48ee-8b63-6fa7402e5314"/> emit a <x id="locked49" xid="lockTU_e225f607-6124-4382-8096-fbf4e2bd22bc"/> signal, which <x id="locked50" xid="lockTU_340ae52a-3d72-45b6-8a38-6724971ce8c8"/> will receive in its <x id="locked51" xid="lockTU_d8d9ad9f-f9a6-4a39-8263-06779e965415"/> slot, i.e. <x id="locked52" xid="lockTU_8951a497-49c7-43d9-83f5-c63c08b21fd2"/> is called. Then <x id="locked53" xid="lockTU_8ea0676a-4b5f-4ce7-8633-3ca1754d252d"/> emits the same <x id="locked54" xid="lockTU_29ed5a59-8a93-49bb-9c90-6dea9cada11a"/> signal, but since no slot has been connected to <x id="locked55" xid="lockTU_4b875ec4-5dd1-4619-9e92-b85de1fb231e"/>&apos;s <x id="locked56" xid="lockTU_936c7de3-3c9d-422e-9a36-5a5ab26eadd0"/> signal, the signal is ignored.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="78"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="74"/></sdl:cxts><trans-unit id="lockTU_bf9dd87b-c6ca-46d8-962e-6d9a5b04eb4c" translate="no" sdl:locktype="Structure"><source><g id="357">setValue()</g></source></trans-unit><trans-unit id="lockTU_b6e96836-47df-4b88-a5e8-57eba2679bb1" translate="no" sdl:locktype="Structure"><source><g id="360">value != m_value</g></source></trans-unit><trans-unit id="lockTU_cd970204-1744-4283-8de6-8684e4ed0a65" translate="no" sdl:locktype="Structure"><source><g id="363">b.valueChanged()</g></source></trans-unit><trans-unit id="lockTU_f2a77e21-c135-4d16-8b88-df2e3175b9ef" translate="no" sdl:locktype="Structure"><source><g id="366">a.setValue()</g></source></trans-unit><trans-unit id="lockTU_898a8804-e842-44e7-9ea2-6ba31eb43c87" translate="no" sdl:locktype="Structure"><source><g id="357">setValue()</g></source></trans-unit><trans-unit id="lockTU_d53d9343-4b3f-4f8c-bc65-3287e278cd9a" translate="no" sdl:locktype="Structure"><source><g id="360">value != m_value</g></source></trans-unit><trans-unit id="lockTU_efbd968e-7f81-458b-9e45-268e7b9c4727" translate="no" sdl:locktype="Structure"><source><g id="363">b.valueChanged()</g></source></trans-unit><trans-unit id="lockTU_83326a9b-c86d-41e2-bae4-86438c3bf06f" translate="no" sdl:locktype="Structure"><source><g id="366">a.setValue()</g></source></trans-unit><trans-unit id="ff686a8f-f999-43a9-857c-d3f61b82fc3a"><source>Note that the <x id="locked57" xid="lockTU_898a8804-e842-44e7-9ea2-6ba31eb43c87"/> function sets the value and emits the signal only if <x id="locked58" xid="lockTU_d53d9343-4b3f-4f8c-bc65-3287e278cd9a"/>. This prevents infinite looping in the case of cyclic connections (e.g., if <x id="locked59" xid="lockTU_efbd968e-7f81-458b-9e45-268e7b9c4727"/> were connected to <x id="locked60" xid="lockTU_83326a9b-c86d-41e2-bae4-86438c3bf06f"/>).</source><seg-source>Note that the <x id="locked61" xid="lockTU_bf9dd87b-c6ca-46d8-962e-6d9a5b04eb4c"/> function sets the value and emits the signal only if <x id="locked62" xid="lockTU_b6e96836-47df-4b88-a5e8-57eba2679bb1"/>. This prevents infinite looping in the case of cyclic connections (e.g., if <x id="locked63" xid="lockTU_cd970204-1744-4283-8de6-8684e4ed0a65"/> were connected to <x id="locked64" xid="lockTU_f2a77e21-c135-4d16-8b88-df2e3175b9ef"/>).</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="79"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="75"/></sdl:cxts><trans-unit id="105550d6-3914-4b6d-8431-6531d8717933"><source>By default, for every connection you make, a signal is emitted; two signals are emitted for duplicate connections. You can break all of these connections with a single <g id="369">disconnect()</g> call. If you pass the <g id="372">Qt::UniqueConnection</g> <g id="375">type</g>, the connection will only be made if it is not a duplicate. If there is already a duplicate (exact same signal to the exact same slot on the same objects), the connection will fail and connect will return false</source><seg-source>By default, for every connection you make, a signal is emitted; two signals are emitted for duplicate connections. You can break all of these connections with a single <g id="369">disconnect()</g> call. If you pass the <g id="372">Qt::UniqueConnection</g> <g id="375">type</g>, the connection will only be made if it is not a duplicate. If there is already a duplicate (exact same signal to the exact same slot on the same objects), the connection will fail and connect will return false</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="80"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="76"/></sdl:cxts><trans-unit id="lockTU_f29b9c57-a081-4396-aee1-b3181b9eed36" translate="no" sdl:locktype="Structure"><source><g id="381">uic</g></source></trans-unit><trans-unit id="lockTU_8437f742-7d26-4d9b-8faa-ff1220fbc9b5" translate="no" sdl:locktype="Structure"><source><g id="381">uic</g></source></trans-unit><trans-unit id="3539e058-cadf-4434-9df8-7c93a86c984c"><source>This example illustrates that objects can work together without needing to know any information about each other. To enable this, the objects only need to be connected together, and this can be achieved with some simple <g id="378">QObject::connect</g>() function calls, or with <x id="locked65" xid="lockTU_8437f742-7d26-4d9b-8faa-ff1220fbc9b5"/>&apos;s <g id="384">automatic connections</g> feature.</source><seg-source>This example illustrates that objects can work together without needing to know any information about each other. To enable this, the objects only need to be connected together, and this can be achieved with some simple <g id="378">QObject::connect</g>() function calls, or with <x id="locked66" xid="lockTU_f29b9c57-a081-4396-aee1-b3181b9eed36"/>&apos;s <g id="384">automatic connections</g> feature.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="81"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="b88fb6cd-dded-48fb-9480-50be2662b284"><source><g id="387"/></source><seg-source><g id="387"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="82"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="77"/></sdl:cxts><trans-unit id="efd8238b-ddc8-450d-ad20-a599f4993975"><source>A Real Example</source><seg-source>A Real Example</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="83"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="78"/></sdl:cxts><trans-unit id="e4ed1559-6f72-48c0-bf3a-7ad088c82a1e"><source>Here is a simple commented example of a widget.</source><seg-source>Here is a simple commented example of a widget.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="84"/><sdl:cxt id="67"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="79"/></sdl:cxts><trans-unit id="b91f3d91-ae7e-4340-929a-1b1f0935b21f"><source><g id="390">#ifndef LCDNUMBER_H</g> <g id="393">#define LCDNUMBER_H</g> <g id="396">#include &lt;QFrame&gt;</g> <g id="399">class</g> LcdNumber : <g id="402">public</g> <g id="405">QFrame</g> { Q_OBJECT</source><seg-source><g id="390">#ifndef LCDNUMBER_H</g> <g id="393">#define LCDNUMBER_H</g> <g id="396">#include &lt;QFrame&gt;</g> <g id="399">class</g> LcdNumber : <g id="402">public</g> <g id="405">QFrame</g> { Q_OBJECT</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="85"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="80"/></sdl:cxts><trans-unit id="lockTU_6e89ac3d-cc83-4225-bacf-2d7f921655ce" translate="no" sdl:locktype="Structure"><source><g id="408">LcdNumber</g></source></trans-unit><trans-unit id="lockTU_c50d8107-e537-49a2-88c1-c7b4d86d10c0" translate="no" sdl:locktype="Structure"><source><g id="408">LcdNumber</g></source></trans-unit><trans-unit id="7b4fa3cf-aa91-46fd-adc3-07308c7d44c6"><source><x id="locked67" xid="lockTU_c50d8107-e537-49a2-88c1-c7b4d86d10c0"/> inherits <g id="411">QObject</g>, which has most of the signal-slot knowledge, via <g id="414">QFrame</g> and <g id="417">QWidget</g>. It is somewhat similar to the built-in <g id="420">QLCDNumber</g> widget.</source><seg-source><x id="locked68" xid="lockTU_6e89ac3d-cc83-4225-bacf-2d7f921655ce"/> inherits <g id="411">QObject</g>, which has most of the signal-slot knowledge, via <g id="414">QFrame</g> and <g id="417">QWidget</g>. It is somewhat similar to the built-in <g id="420">QLCDNumber</g> widget.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="86"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="81"/></sdl:cxts><trans-unit id="lockTU_c50bc5d3-7bbb-400c-8b06-df0a34e052dc" translate="no" sdl:locktype="Structure"><source><g id="426">moc</g></source></trans-unit><trans-unit id="lockTU_c6fedf1b-69c5-472c-a56b-0c2b15daa73d" translate="no" sdl:locktype="Structure"><source><g id="429">LcdNumber</g></source></trans-unit><trans-unit id="lockTU_434bf4f9-3ad2-40c4-bd9e-41c564ec583f" translate="no" sdl:locktype="Structure"><source><g id="426">moc</g></source></trans-unit><trans-unit id="lockTU_70a216e8-a691-4188-8a94-5fab76ef0ba4" translate="no" sdl:locktype="Structure"><source><g id="429">LcdNumber</g></source></trans-unit><trans-unit id="98a1a6eb-e1a9-46f5-8b47-480a51ab9433"><source>The <g id="423">Q_OBJECT</g> macro is expanded by the preprocessor to declare several member functions that are implemented by the <x id="locked69" xid="lockTU_434bf4f9-3ad2-40c4-bd9e-41c564ec583f"/>; if you get compiler errors along the lines of &quot;undefined reference to vtable for <x id="locked70" xid="lockTU_70a216e8-a691-4188-8a94-5fab76ef0ba4"/>&quot;, you have probably forgotten to <g id="432">run the moc</g> or to include the moc output in the link command.</source><seg-source>The <g id="423">Q_OBJECT</g> macro is expanded by the preprocessor to declare several member functions that are implemented by the <x id="locked71" xid="lockTU_c50bc5d3-7bbb-400c-8b06-df0a34e052dc"/>; if you get compiler errors along the lines of &quot;undefined reference to vtable for <x id="locked72" xid="lockTU_c6fedf1b-69c5-472c-a56b-0c2b15daa73d"/>&quot;, you have probably forgotten to <g id="432">run the moc</g> or to include the moc output in the link command.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="87"/><sdl:cxt id="67"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="82"/></sdl:cxts><trans-unit id="97b15e45-e06c-4033-93e0-192e64329b67"><source><g id="435">public</g>: LcdNumber(<g id="438">QWidget</g> <g id="441">*</g>parent <g id="444">=</g> <g id="447">0</g>);</source><seg-source><g id="435">public</g>: LcdNumber(<g id="438">QWidget</g> <g id="441">*</g>parent <g id="444">=</g> <g id="447">0</g>);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="88"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="83"/></sdl:cxts><trans-unit id="lockTU_c284a24b-0f01-4a8a-9afc-7a12f247acca" translate="no" sdl:locktype="Structure"><source><g id="453">parent</g></source></trans-unit><trans-unit id="lockTU_1f3100eb-96d1-438b-a7e0-19431a8d52ab" translate="no" sdl:locktype="Structure"><source><g id="453">parent</g></source></trans-unit><trans-unit id="c6a8964b-9fb1-4838-b39d-aea050605d75"><source>It&apos;s not obviously relevant to the moc, but if you inherit <g id="450">QWidget</g> you almost certainly want to have the <x id="locked73" xid="lockTU_1f3100eb-96d1-438b-a7e0-19431a8d52ab"/> argument in your constructor and pass it to the base class&apos;s constructor.</source><seg-source>It&apos;s not obviously relevant to the moc, but if you inherit <g id="450">QWidget</g> you almost certainly want to have the <x id="locked74" xid="lockTU_c284a24b-0f01-4a8a-9afc-7a12f247acca"/> argument in your constructor and pass it to the base class&apos;s constructor.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="89"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="84"/></sdl:cxts><trans-unit id="lockTU_686f5d26-c751-4504-a663-7b8cc1d3b368" translate="no" sdl:locktype="Structure"><source><g id="456">moc</g></source></trans-unit><trans-unit id="lockTU_06465cb6-bc76-465a-8095-6b00140bf54f" translate="no" sdl:locktype="Structure"><source><g id="456">moc</g></source></trans-unit><trans-unit id="2bbee355-0490-4e36-9706-77bab7a1fd87"><source>Some destructors and member functions are omitted here; the <x id="locked75" xid="lockTU_06465cb6-bc76-465a-8095-6b00140bf54f"/> ignores member functions.</source><seg-source>Some destructors and member functions are omitted here; the <x id="locked76" xid="lockTU_686f5d26-c751-4504-a663-7b8cc1d3b368"/> ignores member functions.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="90"/><sdl:cxt id="67"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="85"/></sdl:cxts><trans-unit id="35a07e47-9dac-4c39-a42c-4a9c28e0daba"><source><g id="459">signals</g>: <g id="462">void</g> overflow();</source><seg-source><g id="459">signals</g>: <g id="462">void</g> overflow();</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="91"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="86"/></sdl:cxts><trans-unit id="lockTU_968d8f58-a794-4f7c-9990-db2e83e61f17" translate="no" sdl:locktype="Structure"><source><g id="465">LcdNumber</g></source></trans-unit><trans-unit id="lockTU_5eeb3d29-8802-4996-9e6b-3f3ae130f770" translate="no" sdl:locktype="Structure"><source><g id="465">LcdNumber</g></source></trans-unit><trans-unit id="2e910746-7723-419d-b406-db4a0996dce0"><source><x id="locked77" xid="lockTU_5eeb3d29-8802-4996-9e6b-3f3ae130f770"/> emits a signal when it is asked to show an impossible value.</source><seg-source><x id="locked78" xid="lockTU_968d8f58-a794-4f7c-9990-db2e83e61f17"/> emits a signal when it is asked to show an impossible value.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="92"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="87"/></sdl:cxts><trans-unit id="lockTU_6517460f-f090-4336-8ba7-37b8e62fcfe1" translate="no" sdl:locktype="Structure"><source><g id="468">overflow()</g></source></trans-unit><trans-unit id="lockTU_3bf5fe59-4a32-4e82-8fa2-c62ea0ba2f19" translate="no" sdl:locktype="Structure"><source><g id="468">overflow()</g></source></trans-unit><trans-unit id="6e27d3ed-9c2a-4cfd-acef-43c7feb8d8fc"><source>If you don&apos;t care about overflow, or you know that overflow cannot occur, you can ignore the <x id="locked79" xid="lockTU_3bf5fe59-4a32-4e82-8fa2-c62ea0ba2f19"/> signal, i.e. don&apos;t connect it to any slot.</source><seg-source>If you don&apos;t care about overflow, or you know that overflow cannot occur, you can ignore the <x id="locked80" xid="lockTU_6517460f-f090-4336-8ba7-37b8e62fcfe1"/> signal, i.e. don&apos;t connect it to any slot.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="93"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="88"/></sdl:cxts><trans-unit id="8d014c0d-21c6-483f-96a5-ee93d7905c70"><source>If on the other hand you want to call two different error functions when the number overflows, simply connect the signal to two different slots. Qt will call both (in the order they were connected).</source><seg-source>If on the other hand you want to call two different error functions when the number overflows, simply connect the signal to two different slots. Qt will call both (in the order they were connected).</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="94"/><sdl:cxt id="67"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="89"/></sdl:cxts><trans-unit id="31cafb69-4dac-46ae-8b2d-11cc54f7113b"><source><g id="471">public</g> <g id="474">slots</g>: <g id="477">void</g> display(<g id="480">int</g> num); <g id="483">void</g> display(<g id="486">double</g> num); <g id="489">void</g> display(<g id="492">const</g> <g id="495">QString</g> <g id="498">&amp;</g>str); <g id="501">void</g> setHexMode(); <g id="504">void</g> setDecMode(); <g id="507">void</g> setOctMode(); <g id="510">void</g> setBinMode(); <g id="513">void</g> setSmallDecimalPoint(bool point); }; <g id="516">#endif</g></source><seg-source><g id="471">public</g> <g id="474">slots</g>: <g id="477">void</g> display(<g id="480">int</g> num); <g id="483">void</g> display(<g id="486">double</g> num); <g id="489">void</g> display(<g id="492">const</g> <g id="495">QString</g> <g id="498">&amp;</g>str); <g id="501">void</g> setHexMode(); <g id="504">void</g> setDecMode(); <g id="507">void</g> setOctMode(); <g id="510">void</g> setBinMode(); <g id="513">void</g> setSmallDecimalPoint(bool point); }; <g id="516">#endif</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="95"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="90"/></sdl:cxts><trans-unit id="lockTU_6e4d1a94-106d-47ae-bae4-168ac23f3818" translate="no" sdl:locktype="Structure"><source><g id="519">LcdNumber</g></source></trans-unit><trans-unit id="lockTU_e4eacb34-7138-45c0-ba36-4da6e1710345" translate="no" sdl:locktype="Structure"><source><g id="522">display()</g></source></trans-unit><trans-unit id="lockTU_13a2374c-97c2-4948-b767-d50e9f0cf0ec" translate="no" sdl:locktype="Structure"><source><g id="519">LcdNumber</g></source></trans-unit><trans-unit id="lockTU_cff9b019-8042-47ed-bc1a-ecdbe1b8971f" translate="no" sdl:locktype="Structure"><source><g id="522">display()</g></source></trans-unit><trans-unit id="022f1169-529f-4301-b86a-722794902813"><source>A slot is a receiving function used to get information about state changes in other widgets. <x id="locked81" xid="lockTU_13a2374c-97c2-4948-b767-d50e9f0cf0ec"/> uses it, as the code above indicates, to set the displayed number. Since <x id="locked82" xid="lockTU_cff9b019-8042-47ed-bc1a-ecdbe1b8971f"/> is part of the class&apos;s interface with the rest of the program, the slot is public.</source><seg-source>A slot is a receiving function used to get information about state changes in other widgets. <x id="locked83" xid="lockTU_6e4d1a94-106d-47ae-bae4-168ac23f3818"/> uses it, as the code above indicates, to set the displayed number. Since <x id="locked84" xid="lockTU_e4eacb34-7138-45c0-ba36-4da6e1710345"/> is part of the class&apos;s interface with the rest of the program, the slot is public.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="96"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="91"/></sdl:cxts><trans-unit id="lockTU_f9db568f-1d03-4461-a2f0-d5559b33f0ea" translate="no" sdl:locktype="Structure"><source><g id="531">display()</g></source></trans-unit><trans-unit id="lockTU_b58cc112-6124-4e41-ae7a-adb9c4a76075" translate="no" sdl:locktype="Structure"><source><g id="531">display()</g></source></trans-unit><trans-unit id="e06bc354-4b01-45c9-8ad6-5adb50573024"><source>Several of the example programs connect the <g id="525">valueChanged()</g> signal of a <g id="528">QScrollBar</g> to the <x id="locked85" xid="lockTU_b58cc112-6124-4e41-ae7a-adb9c4a76075"/> slot, so the LCD number continuously shows the value of the scroll bar.</source><seg-source>Several of the example programs connect the <g id="525">valueChanged()</g> signal of a <g id="528">QScrollBar</g> to the <x id="locked86" xid="lockTU_f9db568f-1d03-4461-a2f0-d5559b33f0ea"/> slot, so the LCD number continuously shows the value of the scroll bar.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="97"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="92"/></sdl:cxts><trans-unit id="lockTU_57913c23-b9de-49d0-9129-f21ce0c081c3" translate="no" sdl:locktype="Structure"><source><g id="534">display()</g></source></trans-unit><trans-unit id="lockTU_227241e9-e122-48c0-bd5c-6cd797c299ff" translate="no" sdl:locktype="Structure"><source><g id="534">display()</g></source></trans-unit><trans-unit id="3cc34c6b-5621-4a10-81ef-57e4bc8096c7"><source>Note that <x id="locked87" xid="lockTU_227241e9-e122-48c0-bd5c-6cd797c299ff"/> is overloaded; Qt will select the appropriate version when you connect a signal to the slot. With callbacks, you&apos;d have to find five different names and keep track of the types yourself.</source><seg-source>Note that <x id="locked88" xid="lockTU_57913c23-b9de-49d0-9129-f21ce0c081c3"/> is overloaded; Qt will select the appropriate version when you connect a signal to the slot. With callbacks, you&apos;d have to find five different names and keep track of the types yourself.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="98"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="93"/></sdl:cxts><trans-unit id="b09724a1-7211-4d96-8f0d-41a8206303b6"><source>Some irrelevant member functions have been omitted from this example.</source><seg-source>Some irrelevant member functions have been omitted from this example.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="99"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="0aa37c1a-32b4-4b56-9f58-52ddf6483771"><source><g id="537"/></source><seg-source><g id="537"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="100"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="94"/></sdl:cxts><trans-unit id="a659ed0f-84e9-4cb4-9ea6-6356746c9e2b"><source>Signals And Slots With Default Arguments</source><seg-source>Signals And Slots With Default Arguments</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="101"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="95"/></sdl:cxts><trans-unit id="35069c38-3ac9-4f3a-b300-858e305812fb"><source>The signatures of signals and slots may contain arguments, and the arguments can have default values. Consider <g id="540">QObject::destroyed</g>():</source><seg-source>The signatures of signals and slots may contain arguments, and the arguments can have default values. Consider <g id="540">QObject::destroyed</g>():</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="102"/><sdl:cxt id="67"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="96"/></sdl:cxts><trans-unit id="d67d0fd2-7719-4f66-91ee-cee7e4bf04c1"><source><g id="543">void</g> destroyed(<g id="546">QObject</g><g id="549">*</g> <g id="552">=</g> <g id="555">0</g>);</source><seg-source><g id="543">void</g> destroyed(<g id="546">QObject</g><g id="549">*</g> <g id="552">=</g> <g id="555">0</g>);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="103"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="97"/></sdl:cxts><trans-unit id="98323ad0-ed8d-498a-b540-61bd75e4fe56"><source>When a <g id="558">QObject</g> is deleted, it emits this <g id="561">QObject::destroyed</g>() signal. We want to catch this signal, wherever we might have a dangling reference to the deleted <g id="564">QObject</g>, so we can clean it up. A suitable slot signature might be:</source><seg-source>When a <g id="558">QObject</g> is deleted, it emits this <g id="561">QObject::destroyed</g>() signal. We want to catch this signal, wherever we might have a dangling reference to the deleted <g id="564">QObject</g>, so we can clean it up. A suitable slot signature might be:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="104"/><sdl:cxt id="67"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="98"/></sdl:cxts><trans-unit id="725f1335-5260-4e82-ad78-275e7d72ca25"><source><g id="567">void</g> objectDestroyed(<g id="570">QObject</g><g id="573">*</g> obj <g id="576">=</g> <g id="579">0</g>);</source><seg-source><g id="567">void</g> objectDestroyed(<g id="570">QObject</g><g id="573">*</g> obj <g id="576">=</g> <g id="579">0</g>);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="105"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="99"/></sdl:cxts><trans-unit id="4b8fd30a-9d1c-43ea-96ed-3b256265e0e5"><source>To connect the signal to the slot, we use <g id="582">QObject::connect</g>(). There are several ways to connect signal and slots. The first is to use function pointers:</source><seg-source>To connect the signal to the slot, we use <g id="582">QObject::connect</g>(). There are several ways to connect signal and slots. The first is to use function pointers:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="106"/><sdl:cxt id="67"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="100"/></sdl:cxts><trans-unit id="8907b925-22ba-4fc3-8183-d3bd213d5795"><source>connect(sender<g id="585">,</g> <g id="588">&amp;</g><g id="591">QObject</g><g id="594">::</g>destroyed<g id="597">,</g> <g id="600">this</g><g id="603">,</g> <g id="606">&amp;</g>MyObject<g id="609">::</g>objectDestroyed);</source><seg-source>connect(sender<g id="585">,</g> <g id="588">&amp;</g><g id="591">QObject</g><g id="594">::</g>destroyed<g id="597">,</g> <g id="600">this</g><g id="603">,</g> <g id="606">&amp;</g>MyObject<g id="609">::</g>objectDestroyed);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="107"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="101"/></sdl:cxts><trans-unit id="35088cd9-6796-4b7a-b662-be1899cda001"><source>There are several advantages to using <g id="612">QObject::connect</g>() with function pointers. First, it allows the compiler to check that the signal&apos;s arguments are compatible with the slot&apos;s arguments. Arguments can also be implicitly converted by the compiler, if needed.</source><seg-source>There are several advantages to using <g id="612">QObject::connect</g>() with function pointers. First, it allows the compiler to check that the signal&apos;s arguments are compatible with the slot&apos;s arguments. Arguments can also be implicitly converted by the compiler, if needed.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="108"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="102"/></sdl:cxts><trans-unit id="d4887dc6-aef1-4f3c-8c34-8ab2db050318"><source>You can also connect to functors or C++11 lambdas:</source><seg-source>You can also connect to functors or C++11 lambdas:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="109"/><sdl:cxt id="67"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="103"/></sdl:cxts><trans-unit id="af5fa5a3-f3ec-429e-bdda-023baeb82e8a"><source>connect(sender<g id="615">,</g> <g id="618">&amp;</g><g id="621">QObject</g><g id="624">::</g>destroyed<g id="627">,</g> <g id="630">[</g><g id="633">=</g><g id="636">]</g>(){ <g id="639">this</g><g id="642">-</g><g id="645">&gt;</g>m_objects<g id="648">.</g>remove(sender); });</source><seg-source>connect(sender<g id="615">,</g> <g id="618">&amp;</g><g id="621">QObject</g><g id="624">::</g>destroyed<g id="627">,</g> <g id="630">[</g><g id="633">=</g><g id="636">]</g>(){ <g id="639">this</g><g id="642">-</g><g id="645">&gt;</g>m_objects<g id="648">.</g>remove(sender); });</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="110"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="104"/></sdl:cxts><trans-unit id="de011847-bf5c-42f7-8690-2ffd78f3776b"><source>Note that if your compiler does not support C++11 variadic templates, this syntax only works if the signal and slot have 6 arguments or less.</source><seg-source>Note that if your compiler does not support C++11 variadic templates, this syntax only works if the signal and slot have 6 arguments or less.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="111"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="105"/></sdl:cxts><trans-unit id="lockTU_ccbd8840-f1e4-4480-a489-9d8720c578fb" translate="no" sdl:locktype="Structure"><source><g id="654">SIGNAL</g></source></trans-unit><trans-unit id="lockTU_ea177b2c-dff2-48bf-afe8-9cd09672f5f2" translate="no" sdl:locktype="Structure"><source><g id="657">SLOT</g></source></trans-unit><trans-unit id="lockTU_619ff37c-46fb-4141-addd-b5b8ebb3ea7f" translate="no" sdl:locktype="Structure"><source><g id="660">SIGNAL()</g></source></trans-unit><trans-unit id="lockTU_b045fba4-9024-4eda-9447-63f0acd8a688" translate="no" sdl:locktype="Structure"><source><g id="663">SLOT()</g></source></trans-unit><trans-unit id="lockTU_61f5c69e-242a-479e-83fb-0a0076ccb2bf" translate="no" sdl:locktype="Structure"><source><g id="666">SIGNAL()</g></source></trans-unit><trans-unit id="lockTU_5fedd0c6-4026-48c7-8f14-9ff095d302d7" translate="no" sdl:locktype="Structure"><source><g id="672">SLOT()</g></source></trans-unit><trans-unit id="lockTU_74dda3c6-3ad5-4cac-9fbd-54dd28b59c28" translate="no" sdl:locktype="Structure"><source><g id="654">SIGNAL</g></source></trans-unit><trans-unit id="lockTU_976ef7ff-f499-4322-bb90-8af180f7cfb3" translate="no" sdl:locktype="Structure"><source><g id="657">SLOT</g></source></trans-unit><trans-unit id="lockTU_3d80540e-41b2-41bf-8194-b101d288b77a" translate="no" sdl:locktype="Structure"><source><g id="660">SIGNAL()</g></source></trans-unit><trans-unit id="lockTU_63bf4c78-8c4a-4a7c-9692-2aad354ee89b" translate="no" sdl:locktype="Structure"><source><g id="663">SLOT()</g></source></trans-unit><trans-unit id="lockTU_4cbc03d6-2a61-4dac-80ea-ebaae5e26ffd" translate="no" sdl:locktype="Structure"><source><g id="666">SIGNAL()</g></source></trans-unit><trans-unit id="lockTU_7b38dfe5-130b-4635-a0e2-0283d530fa54" translate="no" sdl:locktype="Structure"><source><g id="672">SLOT()</g></source></trans-unit><trans-unit id="aa39eb6a-ad09-4d17-bb46-2ebe84a2ca04"><source>The other way to connect a signal to a slot is to use <g id="651">QObject::connect</g>() and the <x id="locked89" xid="lockTU_74dda3c6-3ad5-4cac-9fbd-54dd28b59c28"/> and <x id="locked90" xid="lockTU_976ef7ff-f499-4322-bb90-8af180f7cfb3"/> macros. The rule about whether to include arguments or not in the <x id="locked91" xid="lockTU_3d80540e-41b2-41bf-8194-b101d288b77a"/> and <x id="locked92" xid="lockTU_63bf4c78-8c4a-4a7c-9692-2aad354ee89b"/> macros, if the arguments have default values, is that the signature passed to the <x id="locked93" xid="lockTU_4cbc03d6-2a61-4dac-80ea-ebaae5e26ffd"/> macro must <g id="669">not</g> have fewer arguments than the signature passed to the <x id="locked94" xid="lockTU_7b38dfe5-130b-4635-a0e2-0283d530fa54"/> macro.</source><seg-source>The other way to connect a signal to a slot is to use <g id="651">QObject::connect</g>() and the <x id="locked95" xid="lockTU_ccbd8840-f1e4-4480-a489-9d8720c578fb"/> and <x id="locked96" xid="lockTU_ea177b2c-dff2-48bf-afe8-9cd09672f5f2"/> macros. The rule about whether to include arguments or not in the <x id="locked97" xid="lockTU_619ff37c-46fb-4141-addd-b5b8ebb3ea7f"/> and <x id="locked98" xid="lockTU_b045fba4-9024-4eda-9447-63f0acd8a688"/> macros, if the arguments have default values, is that the signature passed to the <x id="locked99" xid="lockTU_61f5c69e-242a-479e-83fb-0a0076ccb2bf"/> macro must <g id="669">not</g> have fewer arguments than the signature passed to the <x id="locked100" xid="lockTU_5fedd0c6-4026-48c7-8f14-9ff095d302d7"/> macro.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="112"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="106"/></sdl:cxts><trans-unit id="0f7b7cf8-afd0-4d54-a680-a05100e3d71d"><source>All of these would work:</source><seg-source>All of these would work:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="113"/><sdl:cxt id="67"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="107"/></sdl:cxts><trans-unit id="fe95eb5e-b760-44fd-b7bd-bdf7ac08b9e3"><source>connect(sender<g id="675">,</g> SIGNAL(destroyed(<g id="678">QObject</g><g id="681">*</g>))<g id="684">,</g> <g id="687">this</g><g id="690">,</g> SLOT(objectDestroyed(Qbject<g id="693">*</g>))); connect(sender<g id="696">,</g> SIGNAL(destroyed(<g id="699">QObject</g><g id="702">*</g>))<g id="705">,</g> <g id="708">this</g><g id="711">,</g> SLOT(objectDestroyed())); connect(sender<g id="714">,</g> SIGNAL(destroyed())<g id="717">,</g> <g id="720">this</g><g id="723">,</g> SLOT(objectDestroyed()));</source><seg-source>connect(sender<g id="675">,</g> SIGNAL(destroyed(<g id="678">QObject</g><g id="681">*</g>))<g id="684">,</g> <g id="687">this</g><g id="690">,</g> SLOT(objectDestroyed(Qbject<g id="693">*</g>))); connect(sender<g id="696">,</g> SIGNAL(destroyed(<g id="699">QObject</g><g id="702">*</g>))<g id="705">,</g> <g id="708">this</g><g id="711">,</g> SLOT(objectDestroyed())); connect(sender<g id="714">,</g> SIGNAL(destroyed())<g id="717">,</g> <g id="720">this</g><g id="723">,</g> SLOT(objectDestroyed()));</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="114"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="108"/></sdl:cxts><trans-unit id="8e5128e7-9a5b-49d8-aa59-30357efd4b06"><source>But this one won&apos;t work:</source><seg-source>But this one won&apos;t work:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="115"/><sdl:cxt id="67"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="109"/></sdl:cxts><trans-unit id="c61e35d2-6e38-4303-b18a-f46467fe89c7"><source>connect(sender<g id="726">,</g> SIGNAL(destroyed())<g id="729">,</g> <g id="732">this</g><g id="735">,</g> SLOT(objectDestroyed(<g id="738">QObject</g><g id="741">*</g>)));</source><seg-source>connect(sender<g id="726">,</g> SIGNAL(destroyed())<g id="729">,</g> <g id="732">this</g><g id="735">,</g> SLOT(objectDestroyed(<g id="738">QObject</g><g id="741">*</g>)));</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="116"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="110"/></sdl:cxts><trans-unit id="6e1c420d-ee86-44fe-bc05-b8726dad0cd3"><source>...because the slot will be expecting a <g id="744">QObject</g> that the signal will not send. This connection will report a runtime error.</source><seg-source>...because the slot will be expecting a <g id="744">QObject</g> that the signal will not send. This connection will report a runtime error.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="117"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="111"/></sdl:cxts><trans-unit id="394a4487-377a-47ea-b9d5-e440c45992f2"><source>Note that signal and slot arguments are not checked by the compiler when using this <g id="747">QObject::connect</g>() overload.</source><seg-source>Note that signal and slot arguments are not checked by the compiler when using this <g id="747">QObject::connect</g>() overload.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="118"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="fafdc2dc-0499-4b12-9bf8-168451af7814"><source><g id="750"/></source><seg-source><g id="750"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="119"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="112"/></sdl:cxts><trans-unit id="5b99ed8b-7724-4ea4-8423-3ed7b3852cc9"><source>Advanced Signals and Slots Usage</source><seg-source>Advanced Signals and Slots Usage</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="120"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="113"/></sdl:cxts><trans-unit id="8e25c4a4-173b-45c2-b778-6c0fa8e2e240"><source>For cases where you may require information on the sender of the signal, Qt provides the <g id="753">QObject::sender</g>() function, which returns a pointer to the object that sent the signal.</source><seg-source>For cases where you may require information on the sender of the signal, Qt provides the <g id="753">QObject::sender</g>() function, which returns a pointer to the object that sent the signal.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="121"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="114"/></sdl:cxts><trans-unit id="1ddc2b41-fef5-4c00-b706-0b1f89cbf4e8"><source>The <g id="756">QSignalMapper</g> class is provided for situations where many signals are connected to the same slot and the slot needs to handle each signal differently.</source><seg-source>The <g id="756">QSignalMapper</g> class is provided for situations where many signals are connected to the same slot and the slot needs to handle each signal differently.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="122"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="115"/></sdl:cxts><trans-unit id="15d84463-d30a-4080-bc31-6bf7defa1f06"><source>Suppose you have three push buttons that determine which file you will open: &quot;Tax File&quot;, &quot;Accounts File&quot;, or &quot;Report File&quot;.</source><seg-source>Suppose you have three push buttons that determine which file you will open: &quot;Tax File&quot;, &quot;Accounts File&quot;, or &quot;Report File&quot;.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="123"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="116"/></sdl:cxts><trans-unit id="501785a2-15c8-4782-8384-7e64857acdaf"><source>In order to open the correct file, you use <g id="759">QSignalMapper::setMapping</g>() to map all the <g id="762">QPushButton::clicked</g>() signals to a <g id="765">QSignalMapper</g> object. Then you connect the file&apos;s <g id="768">QPushButton::clicked</g>() signal to the <g id="771">QSignalMapper::map</g>() slot.</source><seg-source>In order to open the correct file, you use <g id="759">QSignalMapper::setMapping</g>() to map all the <g id="762">QPushButton::clicked</g>() signals to a <g id="765">QSignalMapper</g> object. Then you connect the file&apos;s <g id="768">QPushButton::clicked</g>() signal to the <g id="771">QSignalMapper::map</g>() slot.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="124"/><sdl:cxt id="67"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="117"/></sdl:cxts><trans-unit id="4ec3ef56-4562-4514-8c87-fadbe3a8c24e"><source>signalMapper <g id="774">=</g> <g id="777">new</g> <g id="780">QSignalMapper</g>(<g id="783">this</g>); signalMapper<g id="786">-</g><g id="789">&gt;</g>setMapping(taxFileButton<g id="792">,</g> <g id="795">QString</g>(<g id="798">&quot;taxfile.txt&quot;</g>)); signalMapper<g id="801">-</g><g id="804">&gt;</g>setMapping(accountFileButton<g id="807">,</g> <g id="810">QString</g>(<g id="813">&quot;accountsfile.txt&quot;</g>)); signalMapper<g id="816">-</g><g id="819">&gt;</g>setMapping(reportFileButton<g id="822">,</g> <g id="825">QString</g>(<g id="828">&quot;reportfile.txt&quot;</g>)); connect(taxFileButton<g id="831">,</g> <g id="834">&amp;</g><g id="837">QPushButton</g><g id="840">::</g>clicked<g id="843">,</g> signalMapper<g id="846">,</g> <g id="849">&amp;</g><g id="852">QSignalMapper</g><g id="855">::</g>map); connect(accountFileButton<g id="858">,</g> <g id="861">&amp;</g><g id="864">QPushButton</g><g id="867">::</g>clicked<g id="870">,</g> signalMapper<g id="873">,</g> <g id="876">&amp;</g><g id="879">QSignalMapper</g><g id="882">::</g>map); connect(reportFileButton<g id="885">,</g> <g id="888">&amp;</g><g id="891">QPushButton</g><g id="894">::</g>clicked<g id="897">,</g> signalMapper<g id="900">,</g> <g id="903">&amp;</g><g id="906">QSignalMapper</g><g id="909">::</g>map);</source><seg-source>signalMapper <g id="774">=</g> <g id="777">new</g> <g id="780">QSignalMapper</g>(<g id="783">this</g>); signalMapper<g id="786">-</g><g id="789">&gt;</g>setMapping(taxFileButton<g id="792">,</g> <g id="795">QString</g>(<g id="798">&quot;taxfile.txt&quot;</g>)); signalMapper<g id="801">-</g><g id="804">&gt;</g>setMapping(accountFileButton<g id="807">,</g> <g id="810">QString</g>(<g id="813">&quot;accountsfile.txt&quot;</g>)); signalMapper<g id="816">-</g><g id="819">&gt;</g>setMapping(reportFileButton<g id="822">,</g> <g id="825">QString</g>(<g id="828">&quot;reportfile.txt&quot;</g>)); connect(taxFileButton<g id="831">,</g> <g id="834">&amp;</g><g id="837">QPushButton</g><g id="840">::</g>clicked<g id="843">,</g> signalMapper<g id="846">,</g> <g id="849">&amp;</g><g id="852">QSignalMapper</g><g id="855">::</g>map); connect(accountFileButton<g id="858">,</g> <g id="861">&amp;</g><g id="864">QPushButton</g><g id="867">::</g>clicked<g id="870">,</g> signalMapper<g id="873">,</g> <g id="876">&amp;</g><g id="879">QSignalMapper</g><g id="882">::</g>map); connect(reportFileButton<g id="885">,</g> <g id="888">&amp;</g><g id="891">QPushButton</g><g id="894">::</g>clicked<g id="897">,</g> signalMapper<g id="900">,</g> <g id="903">&amp;</g><g id="906">QSignalMapper</g><g id="909">::</g>map);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="125"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="118"/></sdl:cxts><trans-unit id="lockTU_d7efd804-6b86-411d-a4de-1fa30e4dc546" translate="no" sdl:locktype="Structure"><source><g id="915">readFile()</g></source></trans-unit><trans-unit id="lockTU_194b30e2-79c1-457d-8c6c-e1f48a5ed288" translate="no" sdl:locktype="Structure"><source><g id="915">readFile()</g></source></trans-unit><trans-unit id="185c4efd-9a9e-4670-9c19-cd82902115f7"><source>Then, you connect the <g id="912">mapped()</g> signal to <x id="locked101" xid="lockTU_194b30e2-79c1-457d-8c6c-e1f48a5ed288"/> where a different file will be opened, depending on which push button is pressed.</source><seg-source>Then, you connect the <g id="912">mapped()</g> signal to <x id="locked102" xid="lockTU_d7efd804-6b86-411d-a4de-1fa30e4dc546"/> where a different file will be opened, depending on which push button is pressed.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="126"/><sdl:cxt id="67"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="119"/></sdl:cxts><trans-unit id="6841f9cf-19ac-4a86-8f41-0c60f747a5a1"><source>connect(signalMapper<g id="918">,</g> SIGNAL(mapped(<g id="921">QString</g>))<g id="924">,</g> <g id="927">this</g><g id="930">,</g> SLOT(readFile(<g id="933">QString</g>)));</source><seg-source>connect(signalMapper<g id="918">,</g> SIGNAL(mapped(<g id="921">QString</g>))<g id="924">,</g> <g id="927">this</g><g id="930">,</g> SLOT(readFile(<g id="933">QString</g>)));</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="127"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="e4c5c4a0-a80b-4363-a7c1-7710e5a6cd3a"><source><g id="936"/><g id="939"/></source><seg-source><g id="936"/><g id="939"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="128"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="120"/></sdl:cxts><trans-unit id="02358817-152b-4e6c-8ddc-f50e053bc2d3"><source>Using Qt with 3rd Party Signals and Slots</source><seg-source>Using Qt with 3rd Party Signals and Slots</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="129"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="121"/></sdl:cxts><trans-unit id="3cf9b92e-e716-4c7c-a508-342f6d224703"><source>It is possible to use Qt with a 3rd party signal/slot mechanism. You can even use both mechanisms in the same project. Just add the following line to your qmake project (.pro) file.</source><seg-source>It is possible to use Qt with a 3rd party signal/slot mechanism. You can even use both mechanisms in the same project. Just add the following line to your qmake project (.pro) file.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="130"/><sdl:cxt id="67"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="122"/></sdl:cxts><trans-unit id="5995e610-9a45-43ad-b6fc-5731d8ca657f"><source>CONFIG <g id="942">+</g><g id="945">=</g> no_keywords</source><seg-source>CONFIG <g id="942">+</g><g id="945">=</g> no_keywords</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="131"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="123"/></sdl:cxts><trans-unit id="lockTU_9de30337-4721-4865-9195-04059d0f3902" translate="no" sdl:locktype="Structure"><source><g id="948">signals</g></source></trans-unit><trans-unit id="lockTU_66cee9b6-a860-4a4b-b9f6-eb399ea6b6be" translate="no" sdl:locktype="Structure"><source><g id="951">slots</g></source></trans-unit><trans-unit id="lockTU_aebc1041-5aa9-4332-99bc-2aee54dab65c" translate="no" sdl:locktype="Structure"><source><g id="954">emit</g></source></trans-unit><trans-unit id="lockTU_45f0eeaf-a7e5-4a4a-aaad-3d73926bf600" translate="no" sdl:locktype="Structure"><source><g id="957">no_keywords</g></source></trans-unit><trans-unit id="lockTU_b74aabe7-44e2-454e-b2a0-3180f5432044" translate="no" sdl:locktype="Structure"><source><g id="948">signals</g></source></trans-unit><trans-unit id="lockTU_6034f392-1fc7-4702-8312-8b8869454e47" translate="no" sdl:locktype="Structure"><source><g id="951">slots</g></source></trans-unit><trans-unit id="lockTU_73e266e9-c51e-4b71-8340-965f7d80f542" translate="no" sdl:locktype="Structure"><source><g id="954">emit</g></source></trans-unit><trans-unit id="lockTU_ad9b95f3-dbd6-4791-8754-d05fb48deb61" translate="no" sdl:locktype="Structure"><source><g id="957">no_keywords</g></source></trans-unit><trans-unit id="f4566c67-2220-4798-9fef-d4507cb63f02"><source>It tells Qt not to define the moc keywords <x id="locked103" xid="lockTU_b74aabe7-44e2-454e-b2a0-3180f5432044"/>, <x id="locked104" xid="lockTU_6034f392-1fc7-4702-8312-8b8869454e47"/>, and <x id="locked105" xid="lockTU_73e266e9-c51e-4b71-8340-965f7d80f542"/>, because these names will be used by a 3rd party library, e.g. Boost. Then to continue using Qt signals and slots with the <x id="locked106" xid="lockTU_ad9b95f3-dbd6-4791-8754-d05fb48deb61"/> flag, simply replace all uses of the Qt moc keywords in your sources with the corresponding Qt macros <g id="960">Q_SIGNALS</g> (or <g id="963">Q_SIGNAL</g>), <g id="966">Q_SLOTS</g> (or <g id="969">Q_SLOT</g>), and <g id="972">Q_EMIT</g>.</source><seg-source>It tells Qt not to define the moc keywords <x id="locked107" xid="lockTU_9de30337-4721-4865-9195-04059d0f3902"/>, <x id="locked108" xid="lockTU_66cee9b6-a860-4a4b-b9f6-eb399ea6b6be"/>, and <x id="locked109" xid="lockTU_aebc1041-5aa9-4332-99bc-2aee54dab65c"/>, because these names will be used by a 3rd party library, e.g. Boost. Then to continue using Qt signals and slots with the <x id="locked110" xid="lockTU_45f0eeaf-a7e5-4a4a-aaad-3d73926bf600"/> flag, simply replace all uses of the Qt moc keywords in your sources with the corresponding Qt macros <g id="960">Q_SIGNALS</g> (or <g id="963">Q_SIGNAL</g>), <g id="966">Q_SLOTS</g> (or <g id="969">Q_SLOT</g>), and <g id="972">Q_EMIT</g>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="132"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="124"/></sdl:cxts><trans-unit id="2430ac18-bce4-47df-97e9-ff481d0b403a"><source><g id="975">See also </g><g id="978">Meta-Object System</g> and <g id="981">Qt&apos;s Property System</g>.</source><seg-source><g id="975">See also </g><g id="978">Meta-Object System</g> and <g id="981">Qt&apos;s Property System</g>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="133"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="21"/></sdl:cxts><trans-unit id="e1cb2ea9-defe-4db6-a81b-4ad3f8be1900"><source><x id="982"/></source><seg-source><x id="982"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="134"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="126"/></sdl:cxts><trans-unit id="9cbe2b3a-6ae2-498f-acb8-d01a8f5bfda8"><source><x id="983"/></source><seg-source><x id="983"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="135"/><sdl:cxt id="34"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="126"/></sdl:cxts><trans-unit id="5c303c28-77c9-4783-965e-7b5124d1e686"><source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="984"/> The documentation provided herein is licensed under the terms of the <g id="987">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="988"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</source><seg-source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="984"/> The documentation provided herein is licensed under the terms of the <g id="987">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="988"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</seg-source><target/></trans-unit></group></body></file></xliff>