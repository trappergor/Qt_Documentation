<?xml version="1.0" encoding="utf-8"?><xliff xmlns:sdl="http://sdl.com/FileTypes/SdlXliff/1.0" xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2" sdl:version="1.0"><file original="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtcore\statemachine-api.html" datatype="x-sdlfilterframework2" source-language="en-US"><header><reference><internal-file form="base64">UEsDBBQAAAAIABtAgkkX/HOP/ysAAKbiAAARAAAAdjFkdGN0c2QuZXBxLmh0bWztfWl3G0eS4Hf/
imy4tw3OEIBIvZ7ZR0qcpi5Lu7ZsWfTTzqd+CVSCqFGhCqqsIoTx9v72jSPPqsJFgrbZ1rxpi6gj
KzIyMjLuePIfn+eZuFGlTov8ae9k+KgnVD4pkjS/ftr7+erV4H/2/uPiqyd/evHD86v//PGlmFXz
DH7jPyKT+JDKe3hByeTiKyGezFUl4alqMVCf6vTmae95kVcqrwZXq4XqiQn/etqr1OdqhMOci8lM
llpVT+tqCp8TI/zeYCB0JSs1l5NZmqvhp6SYiMGAPlGlVaYurmZKvMdHxPf8jHhVyrlaFuVH8X/F
u0o8L0ol/jr89ycjfgFfzdL8oyhV9rSnq1Wm9EypqicqAM1ANNG6J2almponRsV0Ci+pgU7ni0wN
6f6IxtKTMl1U4cv/JW8kX+3hE0Is0zwplsMizwqZiKdiWueTCjDdP/oF5lPPARPDa1W9zBT+qZ+t
ruT1W5hEv4eA9o6GKWCg/+hoCOi5rKoyHdcV3ET4escihpBAOzr/xznCNmIwAJMjXpkn4yJZwT9J
eiMmmdT6aQ9vqLIn0uRp71MF8JgLNLngublMczOf5uVBWdR5ohJzO34glzfptcTpjmXpnsD1k2NY
jidVCfBUibh4Ig3Gh8MRATLS9WJRlJVKBotMVtOinOuBzJMBUM80va5LGlUPkXy+/lQN/jr4994F
rDgttryABU8u4pE/VROghgEsh/pMr9HzSCHxCxuIih8aAdTwHzMD/MdOd1ynWWJ2Us/PDrEb3QKi
SKoZ7LVHj/5HT8gsvYaNV6bXs8rOYXgiflJTVcJGVOKFoROaMsHgERkCYxdgBCtgFov/DJfE7L5e
fBWpp9f5oMBFft75kk4TxesaXq2KCXGDx4j6HDBnLpkxNGMbbn/1pEY+kqUOCHWjspOeX7Kv6YbS
sGiDagYbEJdlYPjBYGqXBcbm50Sai2rT8uGXs3TLR6XZ6PHneheX4j1dj4ffcdCkAHY6qLWa1tkA
gRkUufkAIKVcEW2rzyng+AU+Kn6mR8UH5GVFbr75Eh8V8Kh4CY/u+OloGhoQKavBNM1TPetdRFPR
4gruiVd0b9fBgXHjzKpS5jqlPTkYrwbXwBUWeJ0+ruFD/Jy48s+JZyvxrXmO56d3/GitcehZqqsC
MMefGFTFQMsbRYgsFd5SRDSTuizx8KHHehc/47viNb9rPiuqQryHdwmzP/G7REjP+V1+bC/gFrKU
WaayADp5U6TJQAIHm4/TXMJHUpnBmi+yArnCoJg6bDGQP5oxAigvcQwhgW0FYwAxmDFEMd0Pk4mq
FBxHuIBIFgTcAoaqLPXPpDbEgiz+hX1c4OMMBz9uCBQeN/Sjkh1BqGQJ5x8cxDokot7FlbseEs2O
g8IFYDURVSJdXNeyTGDsl3T7OKJGXPtv6f5eC21JbVFk6WRF61xXxRx49QQWb+Xvl8VClVXql9cS
2o/0priC1Q3f9Pfdm7sysDzFUZAK+VXgLlrDIUMSBjAye98OvRKX/v4tKSfLgikC2cBOHCsFPE5V
yL6l3X+ehIjZXGZZMEHxGnfhM3hPvFeVeJOLy7323hJBmcnFQsGCp1P71UGqibeCMDFWU8sYDJpg
58VE/gHhes2DiDdTC4J4o4nrqgQAxEEESgqXdhB4Y2/ST9RU1lnlIdGIH7rmB951QYB/V47jOnbf
u3jL1+NTKxx0RMdwW1Iwx/vASgwkxzQvXvCL9vXZiRMDUODubZamZifwil7I3H2yHpv3QHyF60YN
+POf/xxqAgO5SEmCGySKhVzEP2oGIfh0r3chnBQCFCvTTOPYEh5ddMDmRAoBtHwDU9XCiCACVlxM
SsX7BnmF+qwmNf0i2MR1KRczPSSqAOxM1KJippIXLLkJCTQzlhoIqEA5pdD4wWIOlAPqyDdauLVE
3elsNFoul8NlqpNiPlyq9L/nMs+HcjJMs9H/S2b4zuj988u3b1++GP54+ePLn96PaDKoSlV6uEim
5njnC2dAxzepruG4QGEahE4950kVKNR8FnqlAcNEGMdiOUsnM5HCBDJd0FEIgMNPOF9+/v47M+Mk
lTDpuZmzhuXJgXfRQ/yAWS+LqiYKOuf7eFiU16Orn0B9Ab10ZEWU5zgJ8X/g2/33z+GfI4Rz+GS0
oJUM5mlXDg4nWhFkpmIpVwjVvEhUhis2K5Zwn2cMuqCcVHS6wkaZ11mK84G5wv8nBUA/XgnYqLCz
6dhTAg48naLU/yS90OawTS/4RMT7ZtgJkPVYgUh6TFSAn2zcnRc3hgLwM4wygEICwcxUKfowfhWe
fPCRsaqWyB35u0dDWNSPakXqM0xClSDWpBOcKh2Ag6RMb/BpXlrR1zWsKvApUDKAv8GxwxzmCOdK
8I8VcO4UqKKYwvaGeQMTTDSSMMAIZ1LBAjbsCbgAtGPkI/rasQDV1BMMH8E87KJUEwVKokirofiQ
VjOeAK/YMTyD6M6JLolM4KeSeoXYAPkIjlDtlnqnTQvIvfzxTbhNi5xXn+Exa1MjIeI3plM8k4Cj
roSaj/EiTsCo5DRMm7oNuYHK0cAmbwcPVQqcEkiRJDjU8eAjS0TBuwr2PNpKBsX4v+D7ZpnOaVeq
zxK3JeAmEFHi1bezqEBzvAZVMUFKxWMcloBpLn7Oas48ZziXhT+w6fE0vyk+KgRpVsCiA8p+8doz
w2gV5x/oF+7Bf8B8aSa03pa8YQEtcokGmfRDphCvaMBCu5W4AJ1azFJVynJCe3topWMzSzwGkdBy
PKlwsXgzMSoYLTi6pdzInICPtwDFR4D1VdrdBcxZItCGUyJfM0PC8koipiEJN248IhUpboDzJrt8
dpnC2zPSSpBHz5F7wqmCMqFBnT3YdtWS+dybndJBfmjVenZqF1Mrd2giWsymJOr8VMXnaMylusgj
NCygkaPXMLnAmYjHK9mfnlSlvVwkSHuLSzSt9MiuYwcZZ2hdg2uLwDQkx7pCBkogWBq/NBcDAXTh
7UR+vBcsaBhKxtONbwZEAn9J8Y4GcmYDO9aIzUQOdMTJbWD3jKI5Aa/l3HIWXTwoRo9g9qDXT2vP
FSHKaE+JFLc952OY1UAv1CSdwvHohyVqfGfOL324NQFpAZhwSEyv8MrulESPM/UcDKXGXhKBZewg
uwP2vQLcIU2UqqpLlolAZMETHuSGWjvuJ0CW3wL/vljls61NFO/p+r5U7onACaQSaYG/cjCsR+je
Hc/fqhzOONCp63KBigIzRyLX+2EjkaslBDeyc26B+nVwMAsUmavGqXZYtNrjipeMNnEX6GdnTCHE
PHaax08KhU4W/jxNMJu4H5QPliVaHJINk/jAT+w+izc5SD4pzIHZplFDsgQnNclQ58BzKTeSG7xf
TFI8Slk8hYlbKe8wa0aunWWaXKtKjz6B2rKGx/9vtboNm7+KuTqqRQdm6/EE5sDt1JopfI/3DjAJ
+saaaVgPlLG8WGFwnfciEv72dXFY4Q6keQWCKB78Fcv06FNzPk0QbauVlWZjSRHUsWORKVQUsqL4
KMh6rOcSZFyj6qCBoikBAxlWgHvlxPcnE1DiLvTJkxH94S6cmgtE4+baY3PNmCeioUGJQAtWWWQZ
S6YADJxlqNR3r/ai1jNQbyu/xj/ClWd0BVF7DoqAYhGZH6NPgE74USXHdNl+OhSmAm2fzwnxBnhm
iubf4w6VgLRkc62BiWCSpJgS+ZBeHbws0YyVZcVSnxnlyzn7gMJUafdBOr8Wupw87aVzea30KGJU
BguL/Bpdl9XTHjrDiThZdOQvkF0sT4FhAfecwRcNtSSooZEpAOZOegBKCqhBxXMdildpqatjsVT2
sTY+vI5r51M6xWCyWIBKYF2ioZERvfWtw42sjXbg822v2eejB1CXRo9M7+JfzH19su6Jp50jAM8C
ZQpUmVwtOx/ogKF/dDBoTx8UtI9/HWiB0QJVWd02bxJkpBqtBPmE6EaXBPi1TBLP4e3Hzs6iy8hN
+keOp26hbGAA3VgYmDmsuf2X6+rcPBF9vc/be81bxxZz7998+/byu75hcP2jo20v6FO38sCsHwbI
jz3Ijx8IyCcxxb5Vn5mFyiQJLVFVER1JbOCswmvf4FFDRxG/s4UMrXjfDd/Q44Aovk9w3u7N01u/
+XjPNwEj5jQOgA6QSzo6HtRLwmtZtU+og2CNxm6zok4fC9rc9CqfzMoiJ238WKRD9ZevP5+qc5Gi
fX9SzOGhBYILgtqqqMvQeO3suCCkLRpmxj1CWCJh835CX7y9UcgxOlJidMxVidb8kD2v9bQcI2aS
Qun8m0oA+tEPAfdAkqW18Db9bp5OrnPrSQ+YenS9wdWbHghj52XIcCtKa5xfsfFwuyHeC6A8CvpQ
UKhTCUqVdKMlmrGQeSOzWrFjBES1OksQMgafoZPrpOJMjlVmQfkOfyAkQEQYC+lnAKAY4xuMR94N
WKWd+MohjrdoHfoE8jY+GjulK4xcgjE/1UV1jjPjvzZDsMtYb6wwr0+iIQ96VD6E6Z+umf7jP8b0
HzenH3D6D7iriRlNI1+S293HxiM7phgC2njkOkKP30zm17Dl5ATUdIznzlaR122TA+RrM7xnaOaC
4WTGJIZwzNOKrEbr+I/3um3+IAXXBN+j3/t8jl7Yxu1Y9ArDLWKexn8wSKi5fi8/p/P0vxGy6Gef
QhCEzooA4ZLsCQRapKZbW0QnVvaGCCSzECL7cxtEXbAQym6hPdtzZ9MmODsz9ydFnsPT/bX7uSnx
GhTtIPHuKEh/98NVv7F6RxtV0XueH6H9HqbnSeEoZiPPa12B+BNEBJSKTH0Y4rB5XxY5yV5Nj+jZ
mblhdihZ3raMQ0JexzAmmLl/1BA5N4UuRzLmbWOcAykylh8p4ofiCDjmx7i3QDZj+S0HMbkUJmhQ
E88BFouXQLxp2LJQhEKJCt3W8Ce/REInmsJ0IP9VxWJAkX0YW0RORIr64dH6u/sXjTv2aCg+xFzS
aQu4wXT0xal3OcYGS2IlyHXX2zV88GTDZzENAiI9FydHhMwqdxhhoASoIoQPihkp8L8pGmiTeoKY
CaCza2KiRbQ1x4RC8o4IIkjQxJ6i/4MNOhR2TIEj6CBBG3wZmXmaJLpjAHxMrgeOmjdkfKl1PVeo
jy5lXpkwJphe2aDAT7VZzEDzI4s8iBlVOqeQNzI6UKyjeIePG7OvJ3TUC2CVFQX3pJrUYLt+bkXC
ZUNcz+VHQnaMaRm65Jt+KHw0gGD9MWlZTmCm/9qYTnoXzobCRyTRIewONEmjwoP2kQgKUhZJTQH4
buN1OMeIP2QSJrxNK4zAg0OtzhOJwXL4DpLYkgHAsDniAoC+ErjyfGxwDJAZA3kLPBh9BThfWo0W
ORua+ZPEc65pXdWlcjsNZwzM368ccAaJK24D//pI1qg5U5ycJYLGIhAF6TZfOQbQr2WZUNQ+II6D
oyx0ne6MIyQ2S/j2fLqtmyeO2vThuoQkz+oierTTY0dTUabXnmaBt8zSLCmVi9Fy2DZRfk7GNMGw
gbPDL4z1adzV6TLg4Lb1vpfuORBZYTA+rA6urkPdSQvBJ10YPnESI9HmNEPOacNdVxTklRfLTlQ1
cH7cdls9x7ecVjNHfpRiDF3KzuuWkZ0HT0s0YVHAoV0MdHVRcEpKmwAh0vV0CsPhY2YnOTdfcy81
4LIW0pB/NWhwKN7aBbZbDl5qjkOHJ23uKC0kmB6G3noHcngiIoqB3Xl/GW2TQAPEME6yq6yMkIKy
oUVMWz9irgwK0n/CUUswWX5tR+H9atZvEq0M07S1CeMO63vLIr8XvNCx241piWjeAxeuov1I98Fg
ZcO9fXz/nM66k18D3MBOf3eATx8awI9/XYAPYOtsuyxu72jZjMlQnP5NvcstQPqHRGjstUOp59m9
+0fv2yPW7dc6sClkHWrlfGFxuxnaJiqtJrkDLrsmcek1nR1nkuZwKOUT1T/ayfyCtNGyupAlEk9e
DKc2allL8bIK2bJbVYfX7dyPhS4aTtot6rjHWqD3mOgnXCc+/hsQRcNigFdwzxRcqNGQw1N2Nkcv
u0SSAKobBWgqJSVl5VbywS97sUe8inJeIsmagoaA3HWsApEAGmbuTGSNOQdNVYVVX5h4Ubatxpsi
q5ygt81FdfqA2MzJaUyhlyFKcanYEpWvrJKE8rQ2IlnoTA4ENZMNWChOFLNaLGDdpIuRhslqQBpi
3+bxrKzxRRd1OTF3G3aWu+T8R7aX36p4gLHRvAHtjmyCSL6BpcboJ7lgXxAmjZVlvTDeJlBt0JmD
OZtmv5rNAnqnntRarzdVnnsrUODdNZYgohzYV36v8Oq1Noh1i+tijtpeDljKyEZTSf3xWMgpS/Wo
BqwV/QGxZJ6CmZP1FHmeRHUdkcqJ2aFSwRkGdr6FZShBcqoJYb6tNpsG3PnI55KiscWZQ3BLKKlT
4C+ANkohVIkJ83qSXhgyEj4PFFMyo6uh3XaXFAxruyVLjlhoVSfFIDDwlD42vaGl+RTUSKtCHKdB
3iZZ+DqfMg40z8fjiXgVEverNJ+OktfQ+s3Lg6QNRw+bDND9GKfdeajP1/FkrjCgLVFrqoWDOVVh
uCgipM5xSmRQj5Vs/rCOvtyHGWRHEdrWKqPWoRgxSUOPLdQAiqcSTcodD3cuUjzbmUzCJBrkRsl5
V8xrNEPmDoD1JRauMLwiNplYGHDeISCRJ3iTHavxfdrpbAswLCpgTlj/gyxNZBC5u8HLYHmXaGMS
ExhqzLVOXZavc3MhQu2et+wTY7fwgRUy0kUmMRJ8rrQGiMS4+LzecRo430Gmmc9VgjZrIrqQbTlu
HJJA26QsblLZJqtbWDxibrKjoju7H9WsA5atysbvMQT4jxKM8rg7CqcLRd/zFnlWfN5xrea4me5l
tVqg9LFi2Qcqu+c1Y/j8IaR0Fsv7O8GxTcH84eNhwQO9/gooor9xlQ3LVsmfuhf7UJC8mRwKTW98
XYjfMmJj54iUDRiMLQYYsRuGoRw8yBwY+52Cpe/LjOYEh2f3GLjvdNxYgbxbXbYORfK3L/QWO/9J
vMRYCq9YcuETaQtXzOuqJuFRfZ5kMIkbFRYCIa/LRJZcrcJ4yxqpWd9RHp+WoduJXsZMg9JIhrYO
B115nilYshstXqRw8rHz+/viBicPF98WFRbDgV9D8aYyHvEKQwWmGJ/eAbB1u2GBF6yp0syqC1Rc
py/R09NSoZBGpXdsKQNMQnRFfeyiBaEet5FfQUW2lNEtvL6ZmrwMRZEHs7RMfMB0H3B7LH6CW4Cd
Z1mtjtgoVhUVUEFeU3BAUIOEEJYU9ZisZwXj5JyLukTfQXxWs+aHXuYTICv+2vMiv8HVhKF2/6iQ
1xILHcGnT/7NKRZM3BYNLodzw5gUERms5HWJ4jwWJ5VlRlYik8tCQTme8I6x3kulJGmjsNGKHFaK
0iiH4hXOWJX4xnGjIo7z2oLWWiqkiYS9wUYZDOCmWJQC6xuxxZGKgK28NxqJxwcw3IFwNlPNVRBb
0wCQnMPHcFWvsQqTp/174AUDBYj3cbaW+/jCkVZ52VbFgErjVGU98TVpHrR3dtsD26SKGJPd0gqW
8qHCeaORQCcu5V6dnLqAXSNoIOO0C2xr4X3xHN83wK24+85NFgdxw7KhhTyKlrCLqbGeXCVzxUYd
l48TxvMhYzHmOdBZ0ps0qWNDjTZ5SGh3xcJ9yNRe29iyIDMgemWOhzOeoJE5ik1zaNbSLYOXixXF
Altc/fK4bRVDcsUpwzdbs8aDvmFCvAoYKdqHttT2Mtnp7CYCXIHUgDzZFV/jklpuTXx+lt8+nAaX
hOILYKkq5ukE4FQLiy1Oc4MjZAIKCTxGvrW8MNcnFgKyb0XHQZgU5pbBFLsjKHRlYDGD0wQ+1fZE
OkaoJioKsQVUqmxKeVImPAn4rkzI9kjYcDUSnhdU2IwtcLCqtTQLq9jrULIEVi2LWCQiZ9lnE09F
/pju48PkJKRYFxKo0dZ8wqxBGLBukrRJtjBG9OMAszYY0SOBiwYy9hE+QpZzGCEhszcvRNAUiwCY
EU0oFSJmxe+Qxy+JqysUPM01x3gzpXG/8sdxWuO9lk62Qn3LlTq2QWn9W8Q7Hxljuw3MDQdvZhRF
2x7Dv/Xu8d9rAr83x0xSmTuDks4aF4Z9kaOR/FB+91r3Ec2AQz6D0L07VLuw8+gWxz4E1mEH5Tc6
jlYP8NodHRhZ9CnQfi+vPoUxYxC7tP792PhPu8RYvW9MLKSpGencKJwptjEP6OBmgLUD3iH0Qzfc
26yCTMNoWDgYGnSmTblKTDqm7WHVZ/KHYtiCc3fgOKaOsNGU46HOGx5yKpqK5zvHGIMCQWUp4bDD
fddyxyaFIxfvemGmfE1JwcAusYSdY/qRN11qU8yXzj88juBM9WHRUlC8+ALOrBKnauPlKegeFel8
Ihe6znhw79Ohz1D/CnazcLngfqIUuk04JPmoWb1R9E0WHidnu9AORC2H3AP64I9SK6/RBHSbpCXw
Kxi/Mzr3GxsijqHe9iJDABQxI+xRilO2QpiLzk16m9AZrnHr8hJQ/6GjfWKj762viZEYkEoTABaW
FqR2I/a51C7VofO+aIyK6TqnjWR2F17cSqV8kl7Ad0wp44Y0Saet1UzC3dQ4T9fV8o8Ozn0L/ruj
MCAPClz2skMUidLw1zrF3T7UKpvrRCIsE42ebZSpmYrcMLydk3Rqm7LYisnmPPWTCr9Nsd3mM1GV
AebJPsyG+a82m1WyFIx7hQxY6FamNHyzdBgrdeNivKmGQxzIBHxJlUB6uQuZMEjAqAYu2UiitUn6
Z6y9NDLm+kPgFmWUHp7evzFYka3iXQOG5cDC3M21SGgVrdwJH0Rc94SSboh2wc4ty9mQieDgcgWh
aP1CtV2Xc30NvxAW/mt7/Ow2P9uVLwOHcTVmxudoVy+xiPqw7Xw7mEuLpr/jUjjmtG9U7ZpNsgl9
65xfXx2qHg8iPQrdMGq4CewARk/5fC78qaNOHx7uaypxlwrdyshcye5hoolMhBeAMsRWIa2gyKXi
Y95mNVGVpQJo/tinBwKLW1pBkM0nJBCUVB6HDigPd18NrwPxcscCDo2E67iQw9a8bVeXoTlMuz6D
DmbCskUzo3tLY55IULhjEx8nN+xX5BbjyTjotVjmYTUkilFuaVg6jO/bp0KxLZl9dLwvgLHCCCIk
lak9UG1cSrxmcxRJF5hNh/TC/UxMyc9S6QWah9DhQa+fo10ozdBLc0xBgDvUKzLKaDcmd6//7fC4
Hgf719Yly1WhQ1MmJs2h6IiXWeZy9OEKqsV8w0SJrl/cr3Es+mYLIHcnqotgLA54k40cEy7r4PX6
dkYuSZGrhaEWn2ccprebYVoWw5aobPOOc9sOQXL3y6G4apbz9IMxDLoec0H525euN3xxU92KxlDc
COwKdNTOQYGJ2fuM52NjSSU1daYmH9F/6kokw6aDi5pX3+AcJi/6lMu94BK4mVUeJpjlUKbyWHim
LW0HTx3boW29BrvMrxGIpS1DISy1xcsNn7YmpfckfhiCMUHQuA0tpbB40k2nuwr8To5kl587zv2n
xdmaNxb1GE7ATcKnAd06un4xvqNg8H730OSC3Czp4xB7SDE3Mjsynz/bCmt/2wPbxDbsiXvnQX7W
qlzzzL92DcGO997FiZVAt0l/ruEo1YrrI4rEL//Y7NwN0U6voZj7j+76lIbO2wk+bEBj/qO9xYt2
AMag0FfcxiR/HRyMNZxE9h7aydMLEhpQWkHzhs8p3pv26XdM+kHN7tvTfxfDa26Gd3//4dn/evn8
aj100XfOoj0UKEi/4kaq1ZEjHdxO8787AoJbhoTWzKUsKspQa0yn++mbtMQgIad7F4Up14+8fev+
2qZ1u1n8EsymG5B0asfsqzsrtggqCNdrHvzT5nGe7spvHwiLWh9HEZ1+Mb/atFQcqb/ZZjIFgcna
ic6DUcNTb5sJS93SXoOndDr5+0TqLUj+S+YoJkTFZrC2U19fHZ1/tR8S+2aDb5vxNoTou+8dZjF2
At1n1Tr20UHsGI9pbxf5Om56C96yjQumN95SebbzgWvWoX3kGrfMXpKzZ6TsCwlEcMkC/tK66p3Q
HEQCoIhsSnskSqclOTnQVTYVuuCC6pSX5t+gkrNrBFtSAmw6IguzpXVMyTLVQRGV2NtMLrCgQwLJ
Fy5lOBKt4zjEO7iPeVRWmLpdyCjpf6MpKZLdjLEHKcyuY7CxfQbGRH5UX5oe/DM0Pdi7kgaVt/r1
ammskSK3OioOQAabJdfY5P5awT7vzmmpDlJYhd2TrZobh3df+MjJvXF++uvinMIY1uD89NA4R7K/
vx4S1akn9QfQzCBCxmHcJz+0ghI1tzVAx8hSedunN3mm1fAQDQ6crbO/I3V2PLyVGeyJrcPD1LFZ
GqU48kboJMc35IltUZVjcnGmbmRkNg+CjTNuP4uafD3nl1rWPsqw8d0HMBCoWVmOBCzXRds0qWdI
KJrGpOAzHTTaFWOtgSyruUOYL0LpS3E7QeZAUtVpt1iFvpooQinuOL0yxnxXXdMk0sssG8vJR5tI
H3qWWDzjKiaAgmu4h2Ym7HhmCvXNcXfIBaallOm6Cia2usiiyNLJitLFQneOv++SWzrTzm4zDAfD
2RIlP9KbaLe/jPxJ7r5709cuyTnuMo71ClLtPUFNC1gkDgCrKgx9Rlk2N10lKC3IZ43ZMBVYF240
Lhh6EzU37yhlmBcgB+cUwWh6Lb+hZibiY0591mXUQcME2slsKVcYzWzG59yftPKtblh3dZ9rVUsO
Kji4cjeBd/fadrp2X5Y8pCc422bnOivGMrOACF5GKiDZFdNl1oSXLErfcQ4j+0iwanJT6aJbaAc7
nzPf0uQioPs7fm+bGak1zY6sDQp1bWCWKvBWHYWtmxVD+C1KCXTfIOoCKm/QAbuKJC17HnU7Qbqg
z6UmbJ2VY62w2pGp82BLH1EPTu7rzRU9lbL6czikLUhOMf4WoNSmaNgH7VkQErhv8WLHMOcCJf0h
y7JtxXFUAN2DvXWr9ONwV75YNKA3sdl4fvmNQYxgTpKE2/82XIJTOIZHTo/HRJZ2UbD70X9/t1T+
ENXzw/fvYU/pHSpdTIvimSxvXzfDGaaHj1rFE+5Zcdi3cuPv1xByG0UpYPPfqaqVf74yFkNe36BU
z6Pho/aRTpqNDvoj7NBjdQ2vBUIIU5ZMwoyXCpiANR9LptcW6U47ffzUfRxkHn6byhe54S1T54av
Hj5KaLOMPCis3eDpgB1m4JbZmsT00savhOJznBHIX9ZWyGlB4Au1+ZqPqMdkmEOhQd7HQvjailNN
YYrR5gZ39ZR47OEX3v+F93/h/Q+I94eVrk//aSnjtE0Z91HX+/SBVVFrGhspvq2ZEoUJbJgYbBtJ
nO3W9iNMwjxdU6Jvs5BAR6QrfMrnzWl4qnMC3YZDN86g33igP+480DsH5ID0JprssRtNi2vesChS
OIgb3T2txBL29uzAR8NuJfN0Tn1UrDFpNQi0t4Z1atvDl/a+tS+txKW/HzXkiosEXP74xhat1j4B
zwxX5HQfUP2OvceoJjZUewdZaHriusPcw8RhxemjviYsiJpL5UnkMHroF4fqXfqy35eQsVsu04aj
5FoVc1WVq9sfJmbKPwGtv+qMM7WnzaO7HFV3evmvh3n76B5lgi8LuZMo++hArx/dY8XA8T023WhK
JT4aGWURW4EHc/2phjolw0zlRFHpk1bbqJk95w3IXhzRWLqHc/nTDnmFPH5jinMmOyx6XKk4e5Cq
VhW79K1qGQ7I32Bo2RpnbXai9R2qKipibLKa2bLtywtQaWffVXwa9bSIq07goPOiqGZBphtq/kGX
QK52MOcqRd7vYQUHac92mxRid7Y79F1OCLrxuJNW0QTFpB99OaK/HNFfjugvR/SXI3oDD7lDSYKN
8Wk+rPshCQYmkM2j4wCgu6OrfysO23ECMsXez0ZqBiglCdc9Fe5obtv8U2wOq7SpISRtJmkcFeE0
flsEzkZzUMlCJ4iYgnBdhY4akghXf2VRxwNnyvFh1DRWAEDgtwzF5ThJbnEmA7UO+KF4T/YhlBgL
6/O3g8M3jTe8hMGT2DXuQCSItWrIYdbMxPXSosGmXVMcxyB+4+sTNAJa/Hvs/3L1/gIQQ1DGUlOw
/joMrLFbDQNf0vpgl6hxTBh0yDUSDhoIc2wEbFfmmYxE2jZdMljRbXJmmGVX5+9mAcAsC6KtBmgr
GiBpDWA+gzQfyM5uVLcdxJcTpH72WBbTz1i8RkPVM6Tr94BM0FMuG12ouLqpnze7+0wfKna8hdWV
bcSL36ihEVJ9xgJFRD26FXvlbavLbuMoEYjXM9CImmaqQa4Y0FPnOdXpjNaHo1IrW1zT15I0cVdc
VssUAYvG9ERqotqwgqU+7oxmC0u0EeKDnkEWEmQlgAeuVM49cJyZtSsCRzb2ysFtjPv36HAv/Jad
OvxDv+N+HYcDcodqQjwJr8K7QwveXdfG46AA3lczjwemfT/ISJsvSts/ifbtWtacHr5lzTZusaF2
10O29wae45a51tUEa0UMh/Ud86pYF65l2iCSCmKDvjuNsE4IR0lmIepFowUdiaqqrHwfT6dRtY8E
LiSZhMINPsiV402RbhO3HEt/qL6gBHjMhlSC29adp9aQCyrGENQ858o4bVWQMWFBsyh1JVDbhnFV
WeEsQK1tztKqm+pDAGILd1snMtlLUQ+/zgABW/atG/JYlEU8OTGvpMpsaaAHsZhnIp5bMqytxGqF
2a7y6a0SdoYogjHXGPPbEiig1idDFzBhXZdBB8rwUy6fwXwOm2pm8dfiaSsuksbVYI20bdLEuN60
Ue3WVdr1+sWlkZOp5kfjWlR9l/XhQ43mewaEZXCbcfc+KqA12ZkypYY52ILyckMnCuwH3y3T0wEu
kyMEY5cYfhHvv4j3X8T7L+L9F/H+DyfeP8huuPfZQPOPpI3cUzmDnZXELhlpzwabRsnwTbWPQ4l7
D8WK+140BHXuCBlXYO7UuAKJdYscHx6wPmCG2E3/0bGA//8r/e/IgXBlKuF26n8bA5LX9QxfJ+b7
MtLdXzkNg6X3UL98VlDVNMNbL9mqKy7JI3WLAGvgLm16NleB9X4uiz3Tbd2qxN6phHFRgfDMxNAZ
Oe1UmpcpCeBL7GG53Cv0GtOxUevFspDYJ5WM9E03ZTcmfYv70Lwf6X+7+b/uzdXlvWpOY6WuQtUh
lSdHGNr4LNiNatuvUavOLGu4zLDK1cA0lxukU+vOGqR6wNXEB6zlDmDcgSOeTV24DjLiB1z61zwI
0rHxlok3WrzkguzPWPm+ikLOX3d17Hozdd4ypJQup6n3ujY3eeyYXu+XTG0mnu8LFjrBfCH5wGgQ
RL379QozAZyXSjvvXlhAxDcSoj5w3J/S1lq1u8+2nwsKZ2DbEdeNLSqgQJTJDjprADoUeVIhEkwy
LNOxL0MC59VNWtS47yaRC7A73cAxh7ZX0+Gtq8SKUMSXjMuuzuA/WXqB1GKTGVtpjn4FggRHeIne
fOP8+bS2HINBkQkJk80thh0RWK7NpW9VxnSzKFOkuKLB+XnLOC/sWGE/maLsduXzympn2wv7IhTN
Q667fUJHFu2afFDKpgEZKOUi3ML0tXLhEfKjytl81Mrf3eymbcLU5O0RvM6IZpNXrSO6DW7cq5GL
h+sz8WxlC+6syTbeDq1ZS4p3wC4/VATZP53aBtsdXCCdto76hB8BIIyVDIu7EBnYo59bX8iNp1wQ
BOzNyxTsA3tyohJsqeTZ4vpyFhIbtdUya4ViEMo8g9etMIv2Ay9MYSPH0MNe6gHzwN7TKUIeFg0K
eHNVNLuPU0gzmVrX1btoUY50FnkTWe160MHmXKgJdn0L1oVjEihiA4+GVg2SUl3LMqF2VMXUuCIa
falwR8RzSivqfuUqPkWf6ygkZc+D+CgIG+k1zh1HZ31quM1reoR066boG/LhNsJqPnmnaOc6T3tf
xz5Fbn53cd0PKKb7j5O9e/iWl6fr+1IdqvhSO0t8j+R0wxPvK0z1Phb6qLMC1I41NVp6MJ5pVqFr
MMFWbGBXKnGQMdzpRRqvWgYOK1C8LaxoHBwujd5RyIuj3uHtY1QUN1gWLV9tmEJ8WjQOUyz4gQGJ
rEjZKm+NA3XdQ2/5eixN+4N1z05HXLLZNo5BF3KHfuC5lLyIGyjy0RhLpSaaL2p9TCW4uGmLO9z2
bRrlS2Kv8XcW+cu8Kle+Lae5ELThwkRlvbFhELm0W3YAumob2FD6twwiFMOZBpvCWaOsZSZOl+ao
Y+unbvRz963PHFqx948OvmdvsJkKm4tSD3ZqwGEk1LxDaZDZdVGC+jRnYX0N7NieagAiALa4xL56
KfbmSelns3XXp1rV3LYenp+m1zUH85Ln3UstVHkw8IxvWoNoHOqb4X8aJdSoNzEmjEyDH3Ul0hiV
5olvdAwjiEncPrg1km0X7xsGvXd5iuuWHKQ8/DzGRbCwxeI0S6H8ZsBZrMbcsdbnogFWY3kYOPjc
ELvVAzOC31iNKIKwk4huBWIHDGtpZ/euv3GvXB8QnMTdsyMDTseSmvUZJekN87/xxXulOPT8yWjs
+eFwOPpUfZpnI/hfB8PB+bxQwAaRMm6axopXJTBubPYc1Hz802Ag/va3v0V1U+UipfHEYOA7ZBjg
Wr9af9l/4L/2cIazr0K5iZ5a8D9yUhb5ai4qOLTgNHleLFaArhlwrb9M4G84ts0TF+L00cm/0VK9
q4BU5gs8tL6rkiGO86KY1L4MPu51apxlVn6S1dgrGXVobHdrTFwT+y2kFRwELqakaWDwEuIN+ALQ
4/DJuLzA2eK3k+hDpu6tGxp16HSiclz5Ok9MMAdMeu5ImSZtlnFWVYuz0Wi5XA6v83pYlNcj87oe
TZPMrOa3b3+GNQM6iCcJ//cdP4ydujVeOhk+5iRXECewtw+Z3I2eTyO8L6bVEuf/qgDwTGC7md27
yjRMc9PPiutCWwtdAnRRfqRpdKwBUQMg4FWaZ5RimycjtPRwazP4GKyH0tzJfAkYG1IOgmubbAeX
gRKMK8I461wUEe2V0bhIVvgvouziq/8PUEsBAjMAFAAAAAgAG0CCSRf8c4//KwAApuIAABEAAAAA
AAAAAAAAAAAAAAAAAHYxZHRjdHNkLmVwcS5odG1sUEsFBgAAAAABAAEAPwAAAC4sAAAAAA==
</internal-file></reference><sdl:ref-files><sdl:ref-file uid="0" id="Html.DependencyFileId" name="statemachine-api.html" o-path="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtcore\statemachine-api.html" date="12/02/2016 08:00:55" expected-use="Generation"/></sdl:ref-files><file-info xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><value key="SDL:FileId">aae242ef-47ed-4d75-98c7-1cdd93d7db41</value><value key="SDL:CreationDate">03/14/2019 16:19:01</value><value key="SDL:OriginalFilePath">D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtcore\statemachine-api.html</value><value key="SDL:OriginalEncoding">utf-8</value><value key="NeedsSegmentRenumbering">True</value><value key="HtmlEntityFound">True</value><value key="HeadEntityFound">True</value><value key="MetaEntityFound">True</value><value key="BodyEntityFound">True</value><value key="HtmlVersion">html5</value><value key="OperatingSystem">Linux</value><value key="ParagraphTextDirections"></value><sniff-info><detected-encoding detection-level="Certain" encoding="utf-8"/><detected-source-lang detection-level="Likely" lang="en-US"/></sniff-info></file-info><sdl:filetype-info><sdl:filetype-id>Html 5 2.0.0.0</sdl:filetype-id></sdl:filetype-info><fmt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><fmt-def id="1"/><fmt-def id="2"><value key="TextColor">Blue</value><value key="Underline">True</value></fmt-def><fmt-def id="3"><value key="Italic">True</value></fmt-def><fmt-def id="4"><value key="Bold">True</value></fmt-def></fmt-defs><cxt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><cxt-def id="1" type="LocationDetails" purpose="Location"><props><value key="StartsAt">-1</value><value key="EndsAt">39</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="2" type="LocationDetails" purpose="Location"><props><value key="StartsAt">81</value><value key="EndsAt">180</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="3" type="sdl:meta" color="Control"><fmt id="1"/></cxt-def><cxt-def id="4" type="sdl:html-control" color="Control"><fmt id="1"/></cxt-def><cxt-def id="5" type="LocationDetails" purpose="Location"><props><value key="StartsAt">180</value><value key="EndsAt">228</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="6" type="sdl:title" color="Control"><fmt id="1"/></cxt-def><cxt-def id="7" type="LocationDetails" purpose="Location"><props><value key="StartsAt">640</value><value key="EndsAt">725</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="8" type="x-tm-table-cell"><fmt id="1"/></cxt-def><cxt-def id="9" type="sdl:table-row" color="Control"><fmt id="1"/></cxt-def><cxt-def id="10" type="sdl:table" color="Control"><fmt id="1"/></cxt-def><cxt-def id="11" type="div" code="DIV" name="Div" descr="A div section" color=""><fmt id="1"/></cxt-def><cxt-def id="12" type="sdl:body" color="Control"><fmt id="1"/></cxt-def><cxt-def id="13" type="sdl:link" color="Control"><fmt id="1"/></cxt-def><cxt-def id="14" type="LocationDetails" purpose="Location"><props><value key="StartsAt">730</value><value key="EndsAt">774</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="15" type="LocationDetails" purpose="Location"><props><value key="StartsAt">779</value><value key="EndsAt">811</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="16" type="LocationDetails" purpose="Location"><props><value key="StartsAt">862</value><value key="EndsAt">943</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="17" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1110</value><value key="EndsAt">1140</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="18" type="x-tm-heading"><fmt id="1"/></cxt-def><cxt-def id="19" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1151</value><value key="EndsAt">1262</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="20" type="x-tm-listitem"><fmt id="1"/></cxt-def><cxt-def id="21" type="sdl:unordered-list" color="Control"><fmt id="1"/></cxt-def><cxt-def id="22" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1268</value><value key="EndsAt">1347</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="23" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1353</value><value key="EndsAt">1470</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="24" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1476</value><value key="EndsAt">1563</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="25" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1569</value><value key="EndsAt">1680</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="26" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1686</value><value key="EndsAt">1837</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="27" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1843</value><value key="EndsAt">2010</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="28" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2016</value><value key="EndsAt">2141</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="29" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2147</value><value key="EndsAt">2226</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="30" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2232</value><value key="EndsAt">2326</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="31" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2332</value><value key="EndsAt">2479</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="32" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2485</value><value key="EndsAt">2580</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="33" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2586</value><value key="EndsAt">2729</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="34" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2735</value><value key="EndsAt">2904</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="35" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2910</value><value key="EndsAt">2981</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="36" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2987</value><value key="EndsAt">3066</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="37" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3148</value><value key="EndsAt">3193</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="38" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3193</value><value key="EndsAt">3276</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="39" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3276</value><value key="EndsAt">3319</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="40" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3319</value><value key="EndsAt">3772</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="41" type="sdl:paragraph" color="Control"><fmt id="1"/></cxt-def><cxt-def id="42" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3777</value><value key="EndsAt">4263</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="43" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4268</value><value key="EndsAt">4729</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="44" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4734</value><value key="EndsAt">5044</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="45" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5044</value><value key="EndsAt">5103</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="46" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5103</value><value key="EndsAt">5189</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="47" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5195</value><value key="EndsAt">5272</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="48" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5367</value><value key="EndsAt">5418</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="49" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5448</value><value key="EndsAt">5494</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="50" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5555</value><value key="EndsAt">5616</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="51" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5646</value><value key="EndsAt">5709</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="52" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5769</value><value key="EndsAt">5824</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="53" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5854</value><value key="EndsAt">5898</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="54" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5959</value><value key="EndsAt">6004</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="55" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6034</value><value key="EndsAt">6048</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="56" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6108</value><value key="EndsAt">6157</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="57" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6187</value><value key="EndsAt">6240</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="58" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6301</value><value key="EndsAt">6358</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="59" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6388</value><value key="EndsAt">6422</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="60" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6482</value><value key="EndsAt">6517</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="61" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6547</value><value key="EndsAt">6589</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="62" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6650</value><value key="EndsAt">6699</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="63" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6729</value><value key="EndsAt">6765</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="64" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6825</value><value key="EndsAt">6899</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="65" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6929</value><value key="EndsAt">6960</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="66" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7021</value><value key="EndsAt">7097</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="67" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7127</value><value key="EndsAt">7201</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="68" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7261</value><value key="EndsAt">7335</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="69" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7365</value><value key="EndsAt">7393</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="70" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7454</value><value key="EndsAt">7532</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="71" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7562</value><value key="EndsAt">7592</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="72" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7615</value><value key="EndsAt">7660</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="73" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7660</value><value key="EndsAt">7714</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="74" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7720</value><value key="EndsAt">8182</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="75" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8187</value><value key="EndsAt">8261</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="76" type="Attribute" code="ATT" name="Attribute" descr="alt attribute"><props><value key="TranslatesAttribute">alt</value><value key="InlineTranslatesAttribute">alt</value></props></cxt-def><cxt-def id="77" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8265</value><value key="EndsAt">8390</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="78" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8395</value><value key="EndsAt">8992</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="79" type="pre" code="PRE" name="Pre" descr="A preformated text section" color=""><fmt id="1"/></cxt-def><cxt-def id="80" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8999</value><value key="EndsAt">9120</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="81" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9125</value><value key="EndsAt">9682</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="82" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9689</value><value key="EndsAt">9767</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="83" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9772</value><value key="EndsAt">10031</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="84" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10038</value><value key="EndsAt">10077</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="85" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10082</value><value key="EndsAt">10155</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="86" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10162</value><value key="EndsAt">10267</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="87" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10267</value><value key="EndsAt">10329</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="88" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10329</value><value key="EndsAt">10421</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="89" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10427</value><value key="EndsAt">10879</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="90" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10884</value><value key="EndsAt">11669</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="91" type="LocationDetails" purpose="Location"><props><value key="StartsAt">11676</value><value key="EndsAt">11759</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="92" type="LocationDetails" purpose="Location"><props><value key="StartsAt">11764</value><value key="EndsAt">12292</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="93" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12297</value><value key="EndsAt">12764</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="94" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12771</value><value key="EndsAt">12942</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="95" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12942</value><value key="EndsAt">12989</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="96" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12989</value><value key="EndsAt">13051</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="97" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13057</value><value key="EndsAt">13436</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="98" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13441</value><value key="EndsAt">13617</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="99" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13617</value><value key="EndsAt">13676</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="100" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13676</value><value key="EndsAt">13762</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="101" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13768</value><value key="EndsAt">14310</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="102" type="LocationDetails" purpose="Location"><props><value key="StartsAt">14315</value><value key="EndsAt">14699</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="103" type="LocationDetails" purpose="Location"><props><value key="StartsAt">14704</value><value key="EndsAt">14785</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="104" type="LocationDetails" purpose="Location"><props><value key="StartsAt">14789</value><value key="EndsAt">15246</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="105" type="LocationDetails" purpose="Location"><props><value key="StartsAt">15251</value><value key="EndsAt">15530</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="106" type="LocationDetails" purpose="Location"><props><value key="StartsAt">15535</value><value key="EndsAt">17234</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="107" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17241</value><value key="EndsAt">17482</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="108" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17487</value><value key="EndsAt">17698</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="109" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17703</value><value key="EndsAt">17908</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="110" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17915</value><value key="EndsAt">18073</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="111" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18073</value><value key="EndsAt">18152</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="112" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18152</value><value key="EndsAt">18278</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="113" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18284</value><value key="EndsAt">18696</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="114" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18701</value><value key="EndsAt">18962</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="115" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18967</value><value key="EndsAt">19449</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="116" type="LocationDetails" purpose="Location"><props><value key="StartsAt">19454</value><value key="EndsAt">19548</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="117" type="LocationDetails" purpose="Location"><props><value key="StartsAt">19553</value><value key="EndsAt">19635</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="118" type="LocationDetails" purpose="Location"><props><value key="StartsAt">19639</value><value key="EndsAt">19868</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="119" type="LocationDetails" purpose="Location"><props><value key="StartsAt">19873</value><value key="EndsAt">21720</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="120" type="LocationDetails" purpose="Location"><props><value key="StartsAt">21720</value><value key="EndsAt">21809</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="121" type="LocationDetails" purpose="Location"><props><value key="StartsAt">21809</value><value key="EndsAt">21951</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="122" type="LocationDetails" purpose="Location"><props><value key="StartsAt">21957</value><value key="EndsAt">22300</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="123" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22305</value><value key="EndsAt">22384</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="124" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22388</value><value key="EndsAt">22610</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="125" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22615</value><value key="EndsAt">22869</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="126" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22874</value><value key="EndsAt">22950</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="127" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22954</value><value key="EndsAt">23112</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="128" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23117</value><value key="EndsAt">23821</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="129" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23828</value><value key="EndsAt">24149</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="130" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24154</value><value key="EndsAt">24814</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="131" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24814</value><value key="EndsAt">24880</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="132" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24880</value><value key="EndsAt">24980</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="133" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24986</value><value key="EndsAt">25316</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="134" type="LocationDetails" purpose="Location"><props><value key="StartsAt">25321</value><value key="EndsAt">25397</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="135" type="LocationDetails" purpose="Location"><props><value key="StartsAt">25401</value><value key="EndsAt">25612</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="136" type="LocationDetails" purpose="Location"><props><value key="StartsAt">25617</value><value key="EndsAt">25811</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="137" type="LocationDetails" purpose="Location"><props><value key="StartsAt">25818</value><value key="EndsAt">26516</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="138" type="LocationDetails" purpose="Location"><props><value key="StartsAt">26521</value><value key="EndsAt">26686</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="139" type="LocationDetails" purpose="Location"><props><value key="StartsAt">26686</value><value key="EndsAt">26729</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="140" type="LocationDetails" purpose="Location"><props><value key="StartsAt">26729</value><value key="EndsAt">26783</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="141" type="LocationDetails" purpose="Location"><props><value key="StartsAt">26789</value><value key="EndsAt">27153</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="142" type="LocationDetails" purpose="Location"><props><value key="StartsAt">27158</value><value key="EndsAt">28351</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="143" type="LocationDetails" purpose="Location"><props><value key="StartsAt">28358</value><value key="EndsAt">28768</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="144" type="LocationDetails" purpose="Location"><props><value key="StartsAt">28768</value><value key="EndsAt">28818</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="145" type="LocationDetails" purpose="Location"><props><value key="StartsAt">28818</value><value key="EndsAt">28887</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="146" type="LocationDetails" purpose="Location"><props><value key="StartsAt">28893</value><value key="EndsAt">29472</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="147" type="LocationDetails" purpose="Location"><props><value key="StartsAt">29477</value><value key="EndsAt">29606</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="148" type="LocationDetails" purpose="Location"><props><value key="StartsAt">29611</value><value key="EndsAt">30093</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="149" type="LocationDetails" purpose="Location"><props><value key="StartsAt">30098</value><value key="EndsAt">30210</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="150" type="LocationDetails" purpose="Location"><props><value key="StartsAt">30215</value><value key="EndsAt">30834</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="151" type="LocationDetails" purpose="Location"><props><value key="StartsAt">30841</value><value key="EndsAt">30974</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="152" type="LocationDetails" purpose="Location"><props><value key="StartsAt">30979</value><value key="EndsAt">32741</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="153" type="LocationDetails" purpose="Location"><props><value key="StartsAt">32748</value><value key="EndsAt">32979</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="154" type="LocationDetails" purpose="Location"><props><value key="StartsAt">32984</value><value key="EndsAt">33059</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="155" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33064</value><value key="EndsAt">33144</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="156" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33148</value><value key="EndsAt">33211</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="157" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33216</value><value key="EndsAt">34814</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="158" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34821</value><value key="EndsAt">34878</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="159" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34883</value><value key="EndsAt">35199</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="160" type="LocationDetails" purpose="Location"><props><value key="StartsAt">35206</value><value key="EndsAt">35449</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="161" type="LocationDetails" purpose="Location"><props><value key="StartsAt">35454</value><value key="EndsAt">35535</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="162" type="LocationDetails" purpose="Location"><props><value key="StartsAt">35539</value><value key="EndsAt">35675</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="163" type="LocationDetails" purpose="Location"><props><value key="StartsAt">35675</value><value key="EndsAt">35752</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="164" type="LocationDetails" purpose="Location"><props><value key="StartsAt">35752</value><value key="EndsAt">35874</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="165" type="LocationDetails" purpose="Location"><props><value key="StartsAt">35880</value><value key="EndsAt">36317</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="166" type="LocationDetails" purpose="Location"><props><value key="StartsAt">36322</value><value key="EndsAt">36547</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="167" type="LocationDetails" purpose="Location"><props><value key="StartsAt">36554</value><value key="EndsAt">37019</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="168" type="LocationDetails" purpose="Location"><props><value key="StartsAt">37024</value><value key="EndsAt">37051</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="169" type="LocationDetails" purpose="Location"><props><value key="StartsAt">37056</value><value key="EndsAt">38058</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="170" type="LocationDetails" purpose="Location"><props><value key="StartsAt">38065</value><value key="EndsAt">38408</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="171" type="LocationDetails" purpose="Location"><props><value key="StartsAt">38413</value><value key="EndsAt">38583</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="172" type="LocationDetails" purpose="Location"><props><value key="StartsAt">38588</value><value key="EndsAt">40043</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="173" type="LocationDetails" purpose="Location"><props><value key="StartsAt">40050</value><value key="EndsAt">40467</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="174" type="LocationDetails" purpose="Location"><props><value key="StartsAt">40467</value><value key="EndsAt">40518</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="175" type="LocationDetails" purpose="Location"><props><value key="StartsAt">40518</value><value key="EndsAt">40588</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="176" type="LocationDetails" purpose="Location"><props><value key="StartsAt">40594</value><value key="EndsAt">40732</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="177" type="LocationDetails" purpose="Location"><props><value key="StartsAt">40737</value><value key="EndsAt">40771</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="178" type="LocationDetails" purpose="Location"><props><value key="StartsAt">40776</value><value key="EndsAt">42241</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="179" type="LocationDetails" purpose="Location"><props><value key="StartsAt">42248</value><value key="EndsAt">42726</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="180" type="LocationDetails" purpose="Location"><props><value key="StartsAt">42731</value><value key="EndsAt">44576</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="181" type="LocationDetails" purpose="Location"><props><value key="StartsAt">44583</value><value key="EndsAt">45140</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="182" type="LocationDetails" purpose="Location"><props><value key="StartsAt">45145</value><value key="EndsAt">45355</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="183" type="LocationDetails" purpose="Location"><props><value key="StartsAt">45355</value><value key="EndsAt">45430</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="184" type="LocationDetails" purpose="Location"><props><value key="StartsAt">45430</value><value key="EndsAt">45548</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="185" type="LocationDetails" purpose="Location"><props><value key="StartsAt">45554</value><value key="EndsAt">45817</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="186" type="LocationDetails" purpose="Location"><props><value key="StartsAt">45822</value><value key="EndsAt">45952</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="187" type="LocationDetails" purpose="Location"><props><value key="StartsAt">45957</value><value key="EndsAt">45991</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="188" type="LocationDetails" purpose="Location"><props><value key="StartsAt">45996</value><value key="EndsAt">47857</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="189" type="LocationDetails" purpose="Location"><props><value key="StartsAt">47864</value><value key="EndsAt">48086</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="190" type="LocationDetails" purpose="Location"><props><value key="StartsAt">48091</value><value key="EndsAt">48608</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="191" type="LocationDetails" purpose="Location"><props><value key="StartsAt">48613</value><value key="EndsAt">49030</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="192" type="LocationDetails" purpose="Location"><props><value key="StartsAt">49035</value><value key="EndsAt">51257</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="193" type="LocationDetails" purpose="Location"><props><value key="StartsAt">51264</value><value key="EndsAt">51891</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="194" type="LocationDetails" purpose="Location"><props><value key="StartsAt">51896</value><value key="EndsAt">52052</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="195" type="LocationDetails" purpose="Location"><props><value key="StartsAt">52057</value><value key="EndsAt">52318</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="196" type="LocationDetails" purpose="Location"><props><value key="StartsAt">52318</value><value key="EndsAt">52406</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="197" type="LocationDetails" purpose="Location"><props><value key="StartsAt">52406</value><value key="EndsAt">52550</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="198" type="LocationDetails" purpose="Location"><props><value key="StartsAt">52556</value><value key="EndsAt">52988</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="199" type="LocationDetails" purpose="Location"><props><value key="StartsAt">52993</value><value key="EndsAt">53082</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="200" type="LocationDetails" purpose="Location"><props><value key="StartsAt">53092</value><value key="EndsAt">53144</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="201" type="LocationDetails" purpose="Location"><props><value key="StartsAt">53150</value><value key="EndsAt">53231</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="202" type="LocationDetails" purpose="Location"><props><value key="StartsAt">53243</value><value key="EndsAt">53552</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="203" type="LocationDetails" purpose="Location"><props><value key="StartsAt">53557</value><value key="EndsAt">53942</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="204" type="LocationDetails" purpose="Location"><props><value key="StartsAt">53942</value><value key="EndsAt">53981</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="205" type="LocationDetails" purpose="Location"><props><value key="StartsAt">53981</value><value key="EndsAt">54027</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="206" type="LocationDetails" purpose="Location"><props><value key="StartsAt">54033</value><value key="EndsAt">54466</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="207" type="LocationDetails" purpose="Location"><props><value key="StartsAt">54471</value><value key="EndsAt">55493</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="208" type="LocationDetails" purpose="Location"><props><value key="StartsAt">55500</value><value key="EndsAt">55681</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="209" type="LocationDetails" purpose="Location"><props><value key="StartsAt">55686</value><value key="EndsAt">55811</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="210" type="LocationDetails" purpose="Location"><props><value key="StartsAt">55811</value><value key="EndsAt">55854</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="211" type="LocationDetails" purpose="Location"><props><value key="StartsAt">55854</value><value key="EndsAt">55908</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="212" type="LocationDetails" purpose="Location"><props><value key="StartsAt">55914</value><value key="EndsAt">56357</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="213" type="LocationDetails" purpose="Location"><props><value key="StartsAt">56362</value><value key="EndsAt">56766</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="214" type="LocationDetails" purpose="Location"><props><value key="StartsAt">56771</value><value key="EndsAt">57182</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="215" type="LocationDetails" purpose="Location"><props><value key="StartsAt">57194</value><value key="EndsAt">57297</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="216" type="LocationDetails" purpose="Location"><props><value key="StartsAt">57297</value><value key="EndsAt">57344</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="217" type="LocationDetails" purpose="Location"><props><value key="StartsAt">57423</value><value key="EndsAt">57456</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="218" type="LocationDetails" purpose="Location"><props><value key="StartsAt">57456</value><value key="EndsAt">57994</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def></cxt-defs><node-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><node-def id="1" parent="2"><cxt id="3"/></node-def><node-def id="2"><cxt id="4"/></node-def><node-def id="3" parent="1"><cxt id="3"/></node-def><node-def id="4" parent="3"><cxt id="6"/></node-def><node-def id="5" parent="6"><cxt id="9"/></node-def><node-def id="6" parent="7"><cxt id="10"/></node-def><node-def id="7" parent="8"><cxt id="11"/></node-def><node-def id="8" parent="9"><cxt id="11"/></node-def><node-def id="9" parent="10"><cxt id="11"/></node-def><node-def id="10" parent="11"><cxt id="11"/></node-def><node-def id="11" parent="12"><cxt id="12"/></node-def><node-def id="12" parent="3"><cxt id="13"/></node-def><node-def id="13" parent="5"><cxt id="8"/></node-def><node-def id="14" parent="5"><cxt id="8"/></node-def><node-def id="15" parent="5"><cxt id="8"/></node-def><node-def id="16" parent="17"><cxt id="9"/></node-def><node-def id="17" parent="7"><cxt id="10"/></node-def><node-def id="18" parent="16"><cxt id="8"/></node-def><node-def id="19" parent="20"><cxt id="11"/></node-def><node-def id="20" parent="21"><cxt id="11"/></node-def><node-def id="21" parent="22"><cxt id="11"/></node-def><node-def id="22" parent="23"><cxt id="11"/></node-def><node-def id="23" parent="9"><cxt id="11"/></node-def><node-def id="24" parent="19"><cxt id="18"/></node-def><node-def id="25" parent="19"><cxt id="21"/></node-def><node-def id="26" parent="25"><cxt id="20"/></node-def><node-def id="27" parent="25"><cxt id="20"/></node-def><node-def id="28" parent="25"><cxt id="20"/></node-def><node-def id="29" parent="25"><cxt id="20"/></node-def><node-def id="30" parent="25"><cxt id="20"/></node-def><node-def id="31" parent="25"><cxt id="20"/></node-def><node-def id="32" parent="25"><cxt id="20"/></node-def><node-def id="33" parent="25"><cxt id="20"/></node-def><node-def id="34" parent="25"><cxt id="20"/></node-def><node-def id="35" parent="25"><cxt id="20"/></node-def><node-def id="36" parent="25"><cxt id="20"/></node-def><node-def id="37" parent="25"><cxt id="20"/></node-def><node-def id="38" parent="25"><cxt id="20"/></node-def><node-def id="39" parent="25"><cxt id="20"/></node-def><node-def id="40" parent="25"><cxt id="20"/></node-def><node-def id="41" parent="25"><cxt id="20"/></node-def><node-def id="42" parent="21"><cxt id="18"/></node-def><node-def id="43" parent="21"><cxt id="11"/></node-def><node-def id="44" parent="43"><cxt id="41"/></node-def><node-def id="45" parent="43"><cxt id="41"/></node-def><node-def id="46" parent="43"><cxt id="41"/></node-def><node-def id="47" parent="43"><cxt id="41"/></node-def><node-def id="48" parent="43"><cxt id="18"/></node-def><node-def id="49" parent="43"><cxt id="41"/></node-def><node-def id="50" parent="51"><cxt id="8"/></node-def><node-def id="51" parent="52"><cxt id="9"/></node-def><node-def id="52" parent="53"><cxt id="10"/></node-def><node-def id="53" parent="43"><cxt id="11"/></node-def><node-def id="54" parent="50"><cxt id="41"/></node-def><node-def id="55" parent="51"><cxt id="8"/></node-def><node-def id="56" parent="55"><cxt id="41"/></node-def><node-def id="57" parent="58"><cxt id="8"/></node-def><node-def id="58" parent="52"><cxt id="9"/></node-def><node-def id="59" parent="57"><cxt id="41"/></node-def><node-def id="60" parent="58"><cxt id="8"/></node-def><node-def id="61" parent="60"><cxt id="41"/></node-def><node-def id="62" parent="63"><cxt id="8"/></node-def><node-def id="63" parent="52"><cxt id="9"/></node-def><node-def id="64" parent="62"><cxt id="41"/></node-def><node-def id="65" parent="63"><cxt id="8"/></node-def><node-def id="66" parent="65"><cxt id="41"/></node-def><node-def id="67" parent="68"><cxt id="8"/></node-def><node-def id="68" parent="52"><cxt id="9"/></node-def><node-def id="69" parent="67"><cxt id="41"/></node-def><node-def id="70" parent="68"><cxt id="8"/></node-def><node-def id="71" parent="70"><cxt id="41"/></node-def><node-def id="72" parent="73"><cxt id="8"/></node-def><node-def id="73" parent="52"><cxt id="9"/></node-def><node-def id="74" parent="72"><cxt id="41"/></node-def><node-def id="75" parent="73"><cxt id="8"/></node-def><node-def id="76" parent="75"><cxt id="41"/></node-def><node-def id="77" parent="78"><cxt id="8"/></node-def><node-def id="78" parent="52"><cxt id="9"/></node-def><node-def id="79" parent="77"><cxt id="41"/></node-def><node-def id="80" parent="78"><cxt id="8"/></node-def><node-def id="81" parent="80"><cxt id="41"/></node-def><node-def id="82" parent="83"><cxt id="8"/></node-def><node-def id="83" parent="52"><cxt id="9"/></node-def><node-def id="84" parent="82"><cxt id="41"/></node-def><node-def id="85" parent="83"><cxt id="8"/></node-def><node-def id="86" parent="85"><cxt id="41"/></node-def><node-def id="87" parent="88"><cxt id="8"/></node-def><node-def id="88" parent="52"><cxt id="9"/></node-def><node-def id="89" parent="87"><cxt id="41"/></node-def><node-def id="90" parent="88"><cxt id="8"/></node-def><node-def id="91" parent="90"><cxt id="41"/></node-def><node-def id="92" parent="93"><cxt id="8"/></node-def><node-def id="93" parent="52"><cxt id="9"/></node-def><node-def id="94" parent="92"><cxt id="41"/></node-def><node-def id="95" parent="93"><cxt id="8"/></node-def><node-def id="96" parent="95"><cxt id="41"/></node-def><node-def id="97" parent="98"><cxt id="8"/></node-def><node-def id="98" parent="52"><cxt id="9"/></node-def><node-def id="99" parent="97"><cxt id="41"/></node-def><node-def id="100" parent="98"><cxt id="8"/></node-def><node-def id="101" parent="100"><cxt id="41"/></node-def><node-def id="102" parent="103"><cxt id="8"/></node-def><node-def id="103" parent="52"><cxt id="9"/></node-def><node-def id="104" parent="102"><cxt id="41"/></node-def><node-def id="105" parent="103"><cxt id="8"/></node-def><node-def id="106" parent="105"><cxt id="41"/></node-def><node-def id="107" parent="108"><cxt id="8"/></node-def><node-def id="108" parent="52"><cxt id="9"/></node-def><node-def id="109" parent="107"><cxt id="41"/></node-def><node-def id="110" parent="108"><cxt id="8"/></node-def><node-def id="111" parent="110"><cxt id="41"/></node-def><node-def id="112" parent="43"><cxt id="18"/></node-def><node-def id="113" parent="43"><cxt id="41"/></node-def><node-def id="114" parent="43"><cxt id="41"/></node-def><node-def id="115" parent="43"><cxt id="41"/></node-def><node-def id="116" parent="43"><cxt id="79"/></node-def><node-def id="117" parent="43"><cxt id="41"/></node-def><node-def id="118" parent="43"><cxt id="79"/></node-def><node-def id="119" parent="43"><cxt id="41"/></node-def><node-def id="120" parent="43"><cxt id="79"/></node-def><node-def id="121" parent="43"><cxt id="41"/></node-def><node-def id="122" parent="43"><cxt id="79"/></node-def><node-def id="123" parent="43"><cxt id="41"/></node-def><node-def id="124" parent="43"><cxt id="18"/></node-def><node-def id="125" parent="43"><cxt id="41"/></node-def><node-def id="126" parent="43"><cxt id="79"/></node-def><node-def id="127" parent="43"><cxt id="41"/></node-def><node-def id="128" parent="43"><cxt id="41"/></node-def><node-def id="129" parent="43"><cxt id="79"/></node-def><node-def id="130" parent="43"><cxt id="41"/></node-def><node-def id="131" parent="43"><cxt id="18"/></node-def><node-def id="132" parent="43"><cxt id="41"/></node-def><node-def id="133" parent="43"><cxt id="41"/></node-def><node-def id="134" parent="43"><cxt id="18"/></node-def><node-def id="135" parent="43"><cxt id="41"/></node-def><node-def id="136" parent="43"><cxt id="41"/></node-def><node-def id="137" parent="43"><cxt id="41"/></node-def><node-def id="138" parent="43"><cxt id="41"/></node-def><node-def id="139" parent="43"><cxt id="41"/></node-def><node-def id="140" parent="43"><cxt id="79"/></node-def><node-def id="141" parent="43"><cxt id="41"/></node-def><node-def id="142" parent="43"><cxt id="41"/></node-def><node-def id="143" parent="43"><cxt id="79"/></node-def><node-def id="144" parent="43"><cxt id="41"/></node-def><node-def id="145" parent="43"><cxt id="18"/></node-def><node-def id="146" parent="43"><cxt id="41"/></node-def><node-def id="147" parent="43"><cxt id="41"/></node-def><node-def id="148" parent="43"><cxt id="41"/></node-def><node-def id="149" parent="43"><cxt id="41"/></node-def><node-def id="150" parent="43"><cxt id="41"/></node-def><node-def id="151" parent="43"><cxt id="41"/></node-def><node-def id="152" parent="43"><cxt id="79"/></node-def><node-def id="153" parent="43"><cxt id="18"/></node-def><node-def id="154" parent="43"><cxt id="41"/></node-def><node-def id="155" parent="43"><cxt id="41"/></node-def><node-def id="156" parent="43"><cxt id="41"/></node-def><node-def id="157" parent="43"><cxt id="41"/></node-def><node-def id="158" parent="43"><cxt id="41"/></node-def><node-def id="159" parent="43"><cxt id="41"/></node-def><node-def id="160" parent="43"><cxt id="79"/></node-def><node-def id="161" parent="43"><cxt id="41"/></node-def><node-def id="162" parent="43"><cxt id="41"/></node-def><node-def id="163" parent="43"><cxt id="18"/></node-def><node-def id="164" parent="43"><cxt id="41"/></node-def><node-def id="165" parent="43"><cxt id="41"/></node-def><node-def id="166" parent="43"><cxt id="41"/></node-def><node-def id="167" parent="43"><cxt id="79"/></node-def><node-def id="168" parent="43"><cxt id="41"/></node-def><node-def id="169" parent="43"><cxt id="41"/></node-def><node-def id="170" parent="43"><cxt id="18"/></node-def><node-def id="171" parent="43"><cxt id="41"/></node-def><node-def id="172" parent="43"><cxt id="79"/></node-def><node-def id="173" parent="43"><cxt id="41"/></node-def><node-def id="174" parent="43"><cxt id="18"/></node-def><node-def id="175" parent="43"><cxt id="41"/></node-def><node-def id="176" parent="43"><cxt id="41"/></node-def><node-def id="177" parent="43"><cxt id="41"/></node-def><node-def id="178" parent="43"><cxt id="41"/></node-def><node-def id="179" parent="43"><cxt id="79"/></node-def><node-def id="180" parent="43"><cxt id="41"/></node-def><node-def id="181" parent="43"><cxt id="79"/></node-def><node-def id="182" parent="43"><cxt id="41"/></node-def><node-def id="183" parent="43"><cxt id="41"/></node-def><node-def id="184" parent="43"><cxt id="41"/></node-def><node-def id="185" parent="43"><cxt id="41"/></node-def><node-def id="186" parent="43"><cxt id="79"/></node-def><node-def id="187" parent="43"><cxt id="41"/></node-def><node-def id="188" parent="43"><cxt id="79"/></node-def><node-def id="189" parent="43"><cxt id="41"/></node-def><node-def id="190" parent="43"><cxt id="41"/></node-def><node-def id="191" parent="43"><cxt id="41"/></node-def><node-def id="192" parent="43"><cxt id="18"/></node-def><node-def id="193" parent="43"><cxt id="41"/></node-def><node-def id="194" parent="43"><cxt id="79"/></node-def><node-def id="195" parent="43"><cxt id="41"/></node-def><node-def id="196" parent="43"><cxt id="41"/></node-def><node-def id="197" parent="43"><cxt id="79"/></node-def><node-def id="198" parent="43"><cxt id="41"/></node-def><node-def id="199" parent="43"><cxt id="41"/></node-def><node-def id="200" parent="43"><cxt id="79"/></node-def><node-def id="201" parent="43"><cxt id="41"/></node-def><node-def id="202" parent="43"><cxt id="18"/></node-def><node-def id="203" parent="43"><cxt id="41"/></node-def><node-def id="204" parent="43"><cxt id="41"/></node-def><node-def id="205" parent="43"><cxt id="79"/></node-def><node-def id="206" parent="43"><cxt id="41"/></node-def><node-def id="207" parent="43"><cxt id="79"/></node-def><node-def id="208" parent="43"><cxt id="41"/></node-def><node-def id="209" parent="43"><cxt id="41"/></node-def><node-def id="210" parent="43"><cxt id="18"/></node-def><node-def id="211" parent="43"><cxt id="41"/></node-def><node-def id="212" parent="43"><cxt id="41"/></node-def><node-def id="213" parent="43"><cxt id="41"/></node-def><node-def id="214" parent="43"><cxt id="79"/></node-def><node-def id="215" parent="43"><cxt id="41"/></node-def><node-def id="216" parent="43"><cxt id="41"/></node-def><node-def id="217" parent="43"><cxt id="41"/></node-def><node-def id="218" parent="43"><cxt id="79"/></node-def><node-def id="219" parent="43"><cxt id="41"/></node-def><node-def id="220" parent="43"><cxt id="41"/></node-def><node-def id="221" parent="43"><cxt id="41"/></node-def><node-def id="222" parent="43"><cxt id="18"/></node-def><node-def id="223" parent="43"><cxt id="41"/></node-def><node-def id="224" parent="43"><cxt id="41"/></node-def><node-def id="225" parent="43"><cxt id="21"/></node-def><node-def id="226" parent="225"><cxt id="20"/></node-def><node-def id="227" parent="225"><cxt id="20"/></node-def><node-def id="228" parent="43"><cxt id="41"/></node-def><node-def id="229" parent="43"><cxt id="41"/></node-def><node-def id="230" parent="43"><cxt id="18"/></node-def><node-def id="231" parent="43"><cxt id="41"/></node-def><node-def id="232" parent="43"><cxt id="79"/></node-def><node-def id="233" parent="43"><cxt id="41"/></node-def><node-def id="234" parent="43"><cxt id="41"/></node-def><node-def id="235" parent="43"><cxt id="18"/></node-def><node-def id="236" parent="43"><cxt id="41"/></node-def><node-def id="237" parent="43"><cxt id="41"/></node-def><node-def id="238" parent="43"><cxt id="41"/></node-def><node-def id="239" parent="21"><cxt id="41"/></node-def><node-def id="240" parent="11"><cxt id="11"/></node-def><node-def id="241" parent="240"><cxt id="41"/></node-def></node-defs><tag-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><tag id="4"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdoc/supported-platforms-and-configurations.html#qt-5-7&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="7"><bpt name="a" word-end="false">&lt;a href=&quot;qtcore-index.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="10"><bpt name="a" word-end="false">&lt;a name=&quot;toc&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="13"><bpt name="a" word-end="false">&lt;a href=&quot;#classes-in-the-state-machine-framework&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="16"><bpt name="a" word-end="false">&lt;a href=&quot;#a-simple-state-machine&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="19"><bpt name="a" word-end="false">&lt;a href=&quot;#doing-useful-work-on-state-entry-and-exit&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="22"><bpt name="a" word-end="false">&lt;a href=&quot;#state-machines-that-finish&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="25"><bpt name="a" word-end="false">&lt;a href=&quot;#sharing-transitions-by-grouping-states&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="28"><bpt name="a" word-end="false">&lt;a href=&quot;#using-history-states-to-save-and-restore-the-current-state&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="31"><bpt name="a" word-end="false">&lt;a href=&quot;#using-parallel-states-to-avoid-a-combinatorial-explosion-of-states&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="34"><bpt name="a" word-end="false">&lt;a href=&quot;#detecting-that-a-composite-state-has-finished&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="37"><bpt name="a" word-end="false">&lt;a href=&quot;#targetless-transitions&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="40"><bpt name="a" word-end="false">&lt;a href=&quot;#events-transitions-and-guards&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="43"><bpt name="a" word-end="false">&lt;a href=&quot;#using-restore-policy-to-automatically-restore-properties&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="46"><bpt name="a" word-end="false">&lt;a href=&quot;#animating-property-assignments&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="49"><bpt name="a" word-end="false">&lt;a href=&quot;#detecting-that-all-properties-have-been-set-in-a-state&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="52"><bpt name="a" word-end="false">&lt;a href=&quot;#what-happens-if-a-state-is-exited-before-the-animation-has-finished&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="55"><bpt name="a" word-end="false">&lt;a href=&quot;#default-animations&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="58"><bpt name="a" word-end="false">&lt;a href=&quot;#nesting-state-machines&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="61"><bpt name="span" word-end="false">&lt;span class=&quot;subtitle&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="65"><bpt name="a" word-end="false">&lt;a name=&quot;details&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="68"><bpt name="a" word-end="false">&lt;a href=&quot;http://www.wisdom.weizmann.ac.il/~dharel/SCANNED.PAPERS/Statecharts.pdf&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="71"><bpt name="a" word-end="false">&lt;a href=&quot;http://www.w3.org/TR/scxml/&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="74"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="77"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="80"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="83"><bpt name="a" word-end="false">&lt;a name=&quot;classes-in-the-state-machine-framework&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="86"><bpt name="a" word-end="false">&lt;a href=&quot;qabstractstate.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="89"><bpt name="a" word-end="false">&lt;a href=&quot;qabstracttransition.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="92"><bpt name="a" word-end="false">&lt;a href=&quot;qeventtransition.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="95"><bpt name="a" word-end="false">&lt;a href=&quot;qfinalstate.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="98"><bpt name="a" word-end="false">&lt;a href=&quot;qhistorystate.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="101"><bpt name="a" word-end="false">&lt;a href=&quot;qsignaltransition.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="104"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="107"><bpt name="a" word-end="false">&lt;a href=&quot;qstatemachine.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="110"><bpt name="a" word-end="false">&lt;a href=&quot;qstatemachine-signalevent.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="113"><bpt name="a" word-end="false">&lt;a href=&quot;qstatemachine-wrappedevent.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="116"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qkeyeventtransition.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="119"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qmouseeventtransition.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="122"><bpt name="a" word-end="false">&lt;a name=&quot;a-simple-state-machine&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="125"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="128"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="131"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="134"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qpushbutton.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="137"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="141"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="144"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="147"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="150"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="153"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="156"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="159"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="162"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="165"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="168"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="171"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="174"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="177"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="180"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="183"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="186"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="189"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#addTransition&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="192"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="195"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="198"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="201"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="204"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="207"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="210"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="213"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="216"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="219"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="222"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="225"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="228"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="231"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="234"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="237"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="240"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="243"><bpt name="a" word-end="false">&lt;a name=&quot;doing-useful-work-on-state-entry-and-exit&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="246"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#assignProperty&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="249"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="252"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qlabel.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="255"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="258"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="261"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="264"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="267"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="270"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="273"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="276"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="279"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="282"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="285"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="288"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="291"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="294"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="297"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="300"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="303"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="306"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="309"><bpt name="a" word-end="false">&lt;a href=&quot;qabstractstate.html#entered&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="312"><bpt name="a" word-end="false">&lt;a href=&quot;qabstractstate.html#exited&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="315"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qwidget.html#showMaximized&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="318"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="321"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qwidget.html#showMinimized&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="324"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="327"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="330"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="333"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="336"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="339"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="342"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="345"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="348"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="351"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="354"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="357"><bpt name="a" word-end="false">&lt;a href=&quot;qabstractstate.html#onEntry&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="360"><bpt name="a" word-end="false">&lt;a href=&quot;qabstractstate.html#onExit&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="363"><bpt name="a" word-end="false">&lt;a name=&quot;state-machines-that-finish&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="366"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="369"><bpt name="a" word-end="false">&lt;a href=&quot;qfinalstate.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="372"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#finished&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="375"><bpt name="a" word-end="false">&lt;a href=&quot;qfinalstate.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="378"><bpt name="a" word-end="false">&lt;a name=&quot;sharing-transitions-by-grouping-states&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="381"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qabstractbutton.html#clicked&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="384"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="387"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="390"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="393"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="396"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="399"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="403"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="406"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="409"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="412"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="415"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="418"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="421"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="424"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="427"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="430"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="433"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="436"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="439"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="442"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="445"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="448"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="451"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="454"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="457"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="460"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="463"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="466"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="469"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="472"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="475"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="478"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="481"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="484"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="487"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="490"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="493"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="496"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="499"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="502"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="505"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="508"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="511"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="514"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="517"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="520"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="523"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="526"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="529"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="532"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="535"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="538"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="541"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="544"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="547"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="550"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#finished&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="553"><bpt name="a" word-end="false">&lt;a href=&quot;qcoreapplication.html#quit&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="556"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="559"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="562"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="565"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="568"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="571"><bpt name="a" word-end="false">&lt;a name=&quot;using-history-states-to-save-and-restore-the-current-state&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="574"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="577"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="580"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="583"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="586"><bpt name="a" word-end="false">&lt;a href=&quot;qhistorystate.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="590"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="593"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="596"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="599"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="602"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="605"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="608"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="611"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="614"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="617"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="620"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="623"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="626"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="629"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="632"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="635"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="638"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="641"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="644"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="647"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="650"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="653"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="656"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="659"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="662"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="665"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="668"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="671"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="674"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="677"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="680"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="683"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="686"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="689"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="692"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="695"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="698"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="701"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="704"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="707"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="710"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="713"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="716"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="719"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="722"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="725"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="728"><bpt name="a" word-end="false">&lt;a name=&quot;using-parallel-states-to-avoid-a-combinatorial-explosion-of-states&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="733"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#ChildMode-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="736"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="739"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="742"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="745"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="748"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="751"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="754"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="757"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="760"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="763"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="766"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="769"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="772"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="775"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="778"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="781"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="784"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="787"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="790"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="793"><bpt name="a" word-end="false">&lt;a name=&quot;detecting-that-a-composite-state-has-finished&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="796"><bpt name="a" word-end="false">&lt;a href=&quot;qfinalstate.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="799"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#finished&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="802"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="806"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="809"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="812"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#finished&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="815"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="818"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="821"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="824"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="827"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="830"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="833"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="836"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#finished&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="839"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="842"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#finished&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="845"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="848"><bpt name="a" word-end="false">&lt;a name=&quot;targetless-transitions&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="851"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="854"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="857"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="860"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="863"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="866"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="869"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="872"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="875"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="878"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="881"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="884"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="887"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="890"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="893"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="896"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="899"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="902"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="905"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="908"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="911"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="914"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="917"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="920"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="923"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="926"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="929"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="932"><bpt name="a" word-end="false">&lt;a href=&quot;qabstractstate.html#entered&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="935"><bpt name="a" word-end="false">&lt;a href=&quot;qabstractstate.html#exited&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="938"><bpt name="a" word-end="false">&lt;a name=&quot;events-transitions-and-guards&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="941"><bpt name="a" word-end="false">&lt;a href=&quot;qstatemachine.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="944"><bpt name="a" word-end="false">&lt;a href=&quot;qsignaltransition.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="947"><bpt name="a" word-end="false">&lt;a href=&quot;qstatemachine.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="950"><bpt name="a" word-end="false">&lt;a href=&quot;qstatemachine-signalevent.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="953"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="956"><bpt name="a" word-end="false">&lt;a href=&quot;qeventtransition.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="959"><bpt name="a" word-end="false">&lt;a href=&quot;qstatemachine-wrappedevent.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="962"><bpt name="a" word-end="false">&lt;a href=&quot;qstatemachine.html#postEvent&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="965"><bpt name="a" word-end="false">&lt;a href=&quot;qabstracttransition.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="968"><bpt name="a" word-end="false">&lt;a href=&quot;qabstracttransition.html#eventTest&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="971"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="974"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="977"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="980"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="983"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="986"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="989"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="992"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="995"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="998"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1001"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1004"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1007"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1010"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1013"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1016"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1019"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="1022"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1025"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1028"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1031"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1034"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1037"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1040"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1043"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1046"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1049"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1052"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1055"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1058"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1061"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1064"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1067"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1070"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1073"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1076"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1079"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1082"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1085"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1088"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1091"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1094"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1097"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1100"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1103"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1106"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1109"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1112"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1115"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1118"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1121"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1124"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1127"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1130"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1133"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1136"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1139"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1142"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1145"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1148"><bpt name="a" word-end="false">&lt;a href=&quot;qabstracttransition.html#eventTest&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1151"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1155"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1158"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1161"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1164"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1167"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1170"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1173"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1176"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1179"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1182"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1185"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1188"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1191"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1194"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1197"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1200"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1203"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1206"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1209"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1212"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1215"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1218"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1221"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1224"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1227"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1230"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1233"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1236"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1239"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1242"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1245"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1248"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1251"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1254"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1257"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1260"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1263"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1266"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1269"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1272"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1275"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1278"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1282"><bpt name="a" word-end="false">&lt;a name=&quot;using-restore-policy-to-automatically-restore-properties&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1285"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#RestorePolicy-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1288"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1291"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1294"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1297"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1300"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1303"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1306"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1309"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1312"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1315"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1318"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1321"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1324"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1327"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1330"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1333"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1336"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1339"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1342"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1345"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1348"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1351"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1354"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1357"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1360"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1363"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1366"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1369"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1372"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1375"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1378"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1381"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1384"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1387"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1390"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1393"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1396"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1399"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1402"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1405"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1408"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1411"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1414"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1417"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1420"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1423"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1426"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1429"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1432"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1435"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1438"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1441"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1444"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1447"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1450"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1453"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1456"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1459"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1462"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1465"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1468"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1471"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1474"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1477"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1480"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1483"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1486"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1489"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1492"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1495"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1498"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1501"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1504"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1507"><bpt name="a" word-end="false">&lt;a name=&quot;animating-property-assignments&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1510"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1513"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1516"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1519"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1522"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1525"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1528"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1531"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1534"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1537"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1540"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1543"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1546"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1549"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1552"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1555"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1558"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1561"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1564"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1567"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1570"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1573"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1576"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1579"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1582"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1585"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1588"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1591"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1594"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1597"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1600"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1603"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1606"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1609"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1612"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1615"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1618"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1621"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1624"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1627"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1630"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1633"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1636"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1639"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1642"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1645"><bpt name="a" word-end="false">&lt;a href=&quot;qpropertyanimation.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1648"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1651"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1654"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1657"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1660"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1663"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1666"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1669"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1672"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1675"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1678"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1681"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1684"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1687"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1690"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1693"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1696"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1699"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1702"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1705"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1708"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1711"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1714"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1717"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1720"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1723"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1726"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1729"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1732"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1735"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1738"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1741"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1744"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1747"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1750"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1753"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1756"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1759"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1762"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1765"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1768"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1771"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1774"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1777"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1780"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1783"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1786"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1789"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1792"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1795"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#RestorePolicy-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1798"><bpt name="a" word-end="false">&lt;a name=&quot;detecting-that-all-properties-have-been-set-in-a-state&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1801"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1804"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1807"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1810"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1813"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1816"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1819"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1822"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1825"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1828"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1831"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1834"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1837"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1840"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1843"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1846"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1849"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1852"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1855"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1858"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1861"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1864"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1867"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1870"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1873"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1876"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1879"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1882"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1885"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1888"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1891"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1894"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1897"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1900"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1903"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1906"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1909"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1912"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1915"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1918"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1921"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1924"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1927"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1930"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1933"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1936"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1939"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1942"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1945"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1948"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1951"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1954"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1957"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1960"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1963"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#propertiesAssigned&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1966"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#propertiesAssigned&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1969"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1972"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1975"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1978"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1981"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1984"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1987"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1990"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1993"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1996"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1999"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2002"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2005"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2008"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2011"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2014"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2017"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2020"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2023"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2026"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2029"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2032"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2035"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2038"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2041"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2044"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2047"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2050"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2053"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2056"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2059"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2062"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2065"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2068"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2071"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2074"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2077"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2080"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2083"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2086"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2089"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2092"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2095"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2098"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2101"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2104"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2107"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2110"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2113"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2116"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2119"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2122"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2125"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2128"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2131"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2134"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2137"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2140"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2143"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2146"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2149"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2152"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2155"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2158"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2161"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2164"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2167"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2170"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2173"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#RestorePolicy-enum&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2176"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#propertiesAssigned&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2179"><bpt name="a" word-end="false">&lt;a name=&quot;what-happens-if-a-state-is-exited-before-the-animation-has-finished&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2182"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#propertiesAssigned&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2185"><bpt name="a" word-end="false">&lt;a name=&quot;default-animations&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2188"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2191"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2194"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2197"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2200"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2203"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2206"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2209"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2212"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2215"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2218"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2221"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2224"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2227"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2230"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2233"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2236"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2239"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2242"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2245"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2248"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2251"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2254"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2257"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2260"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2263"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2266"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2269"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2272"><bpt name="a" word-end="false">&lt;a name=&quot;nesting-state-machines&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2275"><bpt name="a" word-end="false">&lt;a href=&quot;qstatemachine.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2278"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2281"><bpt name="a" word-end="false">&lt;a href=&quot;qstatemachine.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2284"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#onEntry&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2287"><bpt name="a" word-end="false">&lt;a href=&quot;qstatemachine.html#start&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2290"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2293"><bpt name="a" word-end="false">&lt;a href=&quot;qstatemachine.html#configuration&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2296"><bpt name="a" word-end="false">&lt;a href=&quot;qstate.html#finished&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2299"><bpt name="b" word-end="false">&lt;b&gt;</bpt><bpt-props><value key="FormattingItemBold">True</value><value key="StartTag">b</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="b" word-end="false">&lt;/b&gt;</ept><fmt id="4"/></tag><tag id="2302"><bpt name="a" word-end="false">&lt;a href=&quot;../qtqml/qmlstatemachine.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2308"><bpt name="a" word-end="false">&lt;a href=&quot;http://www.gnu.org/licenses/fdl.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="0"><ph name="xml" word-end="false">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</ph><props><value key="ProcessingInstructionTag">xml</value></props></tag><tag id="1"><ph name="Comment" word-end="false">&lt;!-- statemachine.qdoc --&gt;</ph></tag><tag id="62"><ph name="Comment" word-end="false">&lt;!-- $$$statemachine-api.html-description --&gt;</ph></tag><tag id="138"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/statemachine-button.png&quot; alt=&quot;<sub xid="9324c75c-d82a-4929-8abe-5463631462eb"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="400"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/statemachine-button-nested.png&quot; alt=&quot;<sub xid="cfc60a72-1e5a-4107-8ab0-bab93b1bb9b2"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="587"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/statemachine-button-history.png&quot; alt=&quot;<sub xid="6122adab-02cc-4492-bc37-909159c5169b"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="729"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/statemachine-nonparallel.png&quot; alt=&quot;<sub xid="19482a74-cb08-40da-abd5-b9150c53c62f"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="730"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/statemachine-parallel.png&quot; alt=&quot;<sub xid="ade22015-018c-42a0-a1c8-560d2f534dd0"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="803"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/statemachine-finished.png&quot; alt=&quot;<sub xid="f32ad670-e3ed-429b-99c1-acc41fcde7cf"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="1152"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/statemachine-customevents.png&quot; alt=&quot;<sub xid="2e0ebd61-eb12-4c34-b573-4d736d4ee7ff"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="1279"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/statemachine-customevents2.png&quot; alt=&quot;<sub xid="a4cdd260-c380-4ed5-ba08-5e395ff703a3"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="2303"><ph name="Comment" word-end="false">&lt;!-- @@@statemachine-api.html --&gt;</ph></tag><tag id="2304"><ph name="copy" word-end="false" seg-hint="IncludeWithText">&amp;copy;</ph><props><value key="PlaceholderForMappedEntity">true</value></props></tag><tag id="2305"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="2309"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag></tag-defs></header><body><group><sdl:cxts><sdl:cxt id="1"/></sdl:cxts><trans-unit id="15abfee0-0246-4e73-bea9-99f37f439e2f"><source><x id="0"/>
</source><seg-source><x id="0"/>
</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="2"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="3"/></sdl:cxts><trans-unit id="ed49320f-4c9d-4d69-986a-03e73f87c2a1"><source><x id="1"/></source><seg-source><x id="1"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="5"/><sdl:cxt id="6"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="4"/></sdl:cxts><trans-unit id="0096042d-47d4-4e7e-9bda-cb2acc305a68"><source>The State Machine Framework | Qt Core 5.7</source><seg-source>The State Machine Framework | Qt Core 5.7</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="13"/></sdl:cxts><trans-unit id="e386e5b9-6f54-48c1-af24-a412b902e080"><source><g id="4">Qt 5.7</g></source><seg-source><g id="4">Qt 5.7</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="14"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="14"/></sdl:cxts><trans-unit id="51f810c3-eb97-46e5-846d-3becec6747da"><source><g id="7">Qt Core</g></source><seg-source><g id="7">Qt Core</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="15"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="15"/></sdl:cxts><trans-unit id="34ac23fb-957c-4c5e-a1d6-5a7c45a62a2e"><source>The State Machine Framework</source><seg-source>The State Machine Framework</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="16"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="18"/></sdl:cxts><trans-unit id="2f5e587a-0917-4a51-b6a0-23ea1c924ff6"><source>Qt 5.7.1 Reference Documentation</source><seg-source>Qt 5.7.1 Reference Documentation</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="17"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="24"/></sdl:cxts><trans-unit id="bc689a57-5be1-49d1-89a6-8b93efc09454"><source><g id="10">Contents</g></source><seg-source><g id="10">Contents</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="19"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="26"/></sdl:cxts><trans-unit id="5e2cbd8f-7876-4a12-b75b-17e1d55bfd0e"><source><g id="13">Classes in the State Machine Framework</g></source><seg-source><g id="13">Classes in the State Machine Framework</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="22"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="27"/></sdl:cxts><trans-unit id="462e9bb5-6817-4d8f-9156-01026e438552"><source><g id="16">A Simple State Machine</g></source><seg-source><g id="16">A Simple State Machine</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="23"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="28"/></sdl:cxts><trans-unit id="d375529d-aa13-431d-9265-ea01d3e7c70d"><source><g id="19">Doing Useful Work on State Entry and Exit</g></source><seg-source><g id="19">Doing Useful Work on State Entry and Exit</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="24"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="29"/></sdl:cxts><trans-unit id="62714b40-7be0-45c5-99b1-b623a52a0daf"><source><g id="22">State Machines That Finish</g></source><seg-source><g id="22">State Machines That Finish</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="25"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="30"/></sdl:cxts><trans-unit id="d4810275-c6e8-423b-9af1-9f4e5267c05c"><source><g id="25">Sharing Transitions By Grouping States</g></source><seg-source><g id="25">Sharing Transitions By Grouping States</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="26"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="c987bd44-97ad-4e68-ab90-b8e7df73b7bf"><source><g id="28">Using History States to Save and Restore the Current State</g></source><seg-source><g id="28">Using History States to Save and Restore the Current State</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="27"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="32"/></sdl:cxts><trans-unit id="2448be1b-6db5-43d2-b1bd-d4bb86cc6455"><source><g id="31">Using Parallel States to Avoid a Combinatorial Explosion of States</g></source><seg-source><g id="31">Using Parallel States to Avoid a Combinatorial Explosion of States</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="28"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="33"/></sdl:cxts><trans-unit id="35a9f945-06da-442c-86ea-b942f5c63780"><source><g id="34">Detecting that a Composite State has Finished</g></source><seg-source><g id="34">Detecting that a Composite State has Finished</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="29"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="34"/></sdl:cxts><trans-unit id="a9950ecc-f812-47fe-a203-adb5de5e89ea"><source><g id="37">Targetless Transitions</g></source><seg-source><g id="37">Targetless Transitions</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="30"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="35"/></sdl:cxts><trans-unit id="b8730f12-dda7-4a8f-bd3d-224b987280e8"><source><g id="40">Events, Transitions and Guards</g></source><seg-source><g id="40">Events, Transitions and Guards</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="31"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="70d2aeee-ccbc-4488-bc18-31fb62f92290"><source><g id="43">Using Restore Policy To Automatically Restore Properties</g></source><seg-source><g id="43">Using Restore Policy To Automatically Restore Properties</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="32"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="37"/></sdl:cxts><trans-unit id="3860f870-bed5-4851-bf63-70ce11148dfc"><source><g id="46">Animating Property Assignments</g></source><seg-source><g id="46">Animating Property Assignments</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="33"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="38"/></sdl:cxts><trans-unit id="1a86fcd2-9238-4c51-b22a-fe57f10a9249"><source><g id="49">Detecting That All Properties Have Been Set In A State</g></source><seg-source><g id="49">Detecting That All Properties Have Been Set In A State</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="34"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="39"/></sdl:cxts><trans-unit id="ba87b57f-5353-44c8-9fc7-590ef05f612f"><source><g id="52">What Happens If A State Is Exited Before The Animation Has Finished</g></source><seg-source><g id="52">What Happens If A State Is Exited Before The Animation Has Finished</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="35"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="40"/></sdl:cxts><trans-unit id="3e90d45c-a383-41e3-bbb9-e4ff53b0c350"><source><g id="55">Default Animations</g></source><seg-source><g id="55">Default Animations</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="36"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="41"/></sdl:cxts><trans-unit id="7b284f5d-1d58-4fa6-8556-b040935b987d"><source><g id="58">Nesting State Machines</g></source><seg-source><g id="58">Nesting State Machines</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="37"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="42"/></sdl:cxts><trans-unit id="6ce2bdfb-c9e3-4feb-8105-709fe7c77f23"><source>The State Machine Framework</source><seg-source>The State Machine Framework</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="38"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="21"/></sdl:cxts><trans-unit id="979e37f1-5fda-4af6-9c12-7bded44e0c0f"><source><g id="61"/> <x id="62"/></source><seg-source><g id="61"/> <x id="62"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="39"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="f65a8013-b21c-4997-a675-5d90e7213d0e"><source><g id="65"/></source><seg-source><g id="65"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="40"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="44"/></sdl:cxts><trans-unit id="bc3b34f6-8c2a-4587-b3ce-8902138d2e09"><source>The State Machine framework provides classes for creating and executing state graphs. The concepts and notation are based on those from Harel&apos;s <g id="68">Statecharts: A visual formalism for complex systems</g>, which is also the basis of UML state diagrams. The semantics of state machine execution are based on <g id="71">State Chart XML (SCXML)</g>.</source><seg-source>The State Machine framework provides classes for creating and executing state graphs. The concepts and notation are based on those from Harel&apos;s <g id="68">Statecharts: A visual formalism for complex systems</g>, which is also the basis of UML state diagrams. The semantics of state machine execution are based on <g id="71">State Chart XML (SCXML)</g>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="42"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="45"/></sdl:cxts><trans-unit id="16ad699b-7b1f-4168-a583-789237f9902f"><source>Statecharts provide a graphical way of modeling how a system reacts to stimuli. This is done by defining the possible <g id="74">states</g> that the system can be in, and how the system can move from one state to another (<g id="77">transitions</g> between states). A key characteristic of event-driven systems (such as Qt applications) is that behavior often depends not only on the last or current event, but also the events that preceded it. With statecharts, this information is easy to express.</source><seg-source>Statecharts provide a graphical way of modeling how a system reacts to stimuli. This is done by defining the possible <g id="74">states</g> that the system can be in, and how the system can move from one state to another (<g id="77">transitions</g> between states). A key characteristic of event-driven systems (such as Qt applications) is that behavior often depends not only on the last or current event, but also the events that preceded it. With statecharts, this information is easy to express.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="43"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="46"/></sdl:cxts><trans-unit id="49bbcc46-62a0-4bdc-bba3-d8c53f8e5e54"><source>The State Machine framework provides an API and execution model that can be used to effectively embed the elements and semantics of statecharts in Qt applications. The framework integrates tightly with Qt&apos;s meta-object system; for example, transitions between states can be triggered by signals, and states can be configured to set properties and invoke methods on {<g id="80">QObject</g>}s. Qt&apos;s event system is used to drive the state machines.</source><seg-source>The State Machine framework provides an API and execution model that can be used to effectively embed the elements and semantics of statecharts in Qt applications. The framework integrates tightly with Qt&apos;s meta-object system; for example, transitions between states can be triggered by signals, and states can be configured to set properties and invoke methods on {<g id="80">QObject</g>}s. Qt&apos;s event system is used to drive the state machines.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="44"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="47"/></sdl:cxts><trans-unit id="cd322a03-96b2-42d7-9c7a-53cf7c7bef18"><source>The state graph in the State Machine framework is hierarchical. States can be nested inside of other states, and the current configuration of the state machine consists of the set of states which are currently active. All the states in a valid configuration of the state machine will have a common ancestor.</source><seg-source>The state graph in the State Machine framework is hierarchical. States can be nested inside of other states, and the current configuration of the state machine consists of the set of states which are currently active. All the states in a valid configuration of the state machine will have a common ancestor.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="45"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="f45c6cae-c762-4e52-b407-91886a4559e8"><source><g id="83"/></source><seg-source><g id="83"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="46"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="48"/></sdl:cxts><trans-unit id="3673bda9-636a-4ba7-80be-350457b1de6b"><source>Classes in the State Machine Framework</source><seg-source>Classes in the State Machine Framework</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="47"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="49"/></sdl:cxts><trans-unit id="74590a46-7d80-4591-9722-de991a13ecad"><source>These classes are provided by qt for creating event-driven state machines.</source><seg-source>These classes are provided by qt for creating event-driven state machines.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="48"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="54"/></sdl:cxts><trans-unit id="ae08b8d0-2ece-4ac4-a392-03db4be9147c"><source><g id="86">QAbstractState</g></source><seg-source><g id="86">QAbstractState</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="49"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="56"/></sdl:cxts><trans-unit id="f8d601bb-b12d-4d89-8503-dd4c4ebf6e53"><source>The base class of states of a QStateMachine</source><seg-source>The base class of states of a QStateMachine</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="50"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="59"/></sdl:cxts><trans-unit id="700f502d-a3e1-40c8-b0dd-20929fa490ed"><source><g id="89">QAbstractTransition</g></source><seg-source><g id="89">QAbstractTransition</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="51"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="61"/></sdl:cxts><trans-unit id="4ed33555-5c0f-40ed-a0b1-d7444f7e8bcb"><source>The base class of transitions between QAbstractState objects</source><seg-source>The base class of transitions between QAbstractState objects</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="52"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="64"/></sdl:cxts><trans-unit id="a1a61e09-6612-4a98-9c41-794b3c815bc6"><source><g id="92">QEventTransition</g></source><seg-source><g id="92">QEventTransition</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="53"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="66"/></sdl:cxts><trans-unit id="e69e3e72-b0f3-4aef-940b-222736c83b96"><source>QObject-specific transition for Qt events</source><seg-source>QObject-specific transition for Qt events</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="54"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="69"/></sdl:cxts><trans-unit id="7d7bf4cc-4a94-4d6a-9581-3357ac1b0135"><source><g id="95">QFinalState</g></source><seg-source><g id="95">QFinalState</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="55"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="71"/></sdl:cxts><trans-unit id="215f39c9-f60b-4c9d-b8df-d8da8cf1c9fb"><source>Final state</source><seg-source>Final state</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="56"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="74"/></sdl:cxts><trans-unit id="24054388-bb52-4525-9a56-28fa202c2d1d"><source><g id="98">QHistoryState</g></source><seg-source><g id="98">QHistoryState</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="57"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="76"/></sdl:cxts><trans-unit id="ff378471-1cfc-41fe-8769-e08da0f410a5"><source>Means of returning to a previously active substate</source><seg-source>Means of returning to a previously active substate</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="58"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="79"/></sdl:cxts><trans-unit id="4cdc9d50-52d4-4498-8b0e-4179781ec329"><source><g id="101">QSignalTransition</g></source><seg-source><g id="101">QSignalTransition</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="59"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="81"/></sdl:cxts><trans-unit id="7185e448-a138-422f-b96d-eee74c95c43e"><source>Transition based on a Qt signal</source><seg-source>Transition based on a Qt signal</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="60"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="84"/></sdl:cxts><trans-unit id="28f07f63-7ec9-456d-b3f8-6ac9aa05bbb6"><source><g id="104">QState</g></source><seg-source><g id="104">QState</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="61"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="86"/></sdl:cxts><trans-unit id="2d3b9bb9-c7d7-467c-9713-fe98ebea4d7a"><source>General-purpose state for QStateMachine</source><seg-source>General-purpose state for QStateMachine</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="62"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="89"/></sdl:cxts><trans-unit id="d0b92b74-0346-4321-a8f7-f10410859b15"><source><g id="107">QStateMachine</g></source><seg-source><g id="107">QStateMachine</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="63"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="91"/></sdl:cxts><trans-unit id="1eca4379-f468-4633-9847-e5166d3e6a31"><source>Hierarchical finite state machine</source><seg-source>Hierarchical finite state machine</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="64"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="94"/></sdl:cxts><trans-unit id="7778a736-4b34-45bc-85b4-c847632ce3c5"><source><g id="110">QStateMachine::SignalEvent</g></source><seg-source><g id="110">QStateMachine::SignalEvent</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="65"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="96"/></sdl:cxts><trans-unit id="cb2f70ea-26e0-41ac-916e-7864ae4771c4"><source>Represents a Qt signal event</source><seg-source>Represents a Qt signal event</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="66"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="99"/></sdl:cxts><trans-unit id="3dd72385-3c64-4e26-87e4-b45e1f79ff88"><source><g id="113">QStateMachine::WrappedEvent</g></source><seg-source><g id="113">QStateMachine::WrappedEvent</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="67"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="101"/></sdl:cxts><trans-unit id="e97b7ba5-17e2-4a52-b503-209d5331e5ea"><source>Inherits QEvent and holds a clone of an event associated with a QObject</source><seg-source>Inherits QEvent and holds a clone of an event associated with a QObject</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="68"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="104"/></sdl:cxts><trans-unit id="d358646e-35c1-4259-8e89-524a7c0f0409"><source><g id="116">QKeyEventTransition</g></source><seg-source><g id="116">QKeyEventTransition</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="69"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="106"/></sdl:cxts><trans-unit id="89611ae0-5732-4030-aef2-0c271c7d23c0"><source>Transition for key events</source><seg-source>Transition for key events</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="70"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="109"/></sdl:cxts><trans-unit id="548715d4-5f55-4570-9a1d-be071805b79f"><source><g id="119">QMouseEventTransition</g></source><seg-source><g id="119">QMouseEventTransition</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="71"/><sdl:cxt id="41"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="111"/></sdl:cxts><trans-unit id="a6e39ba2-822a-415f-9377-047a519a952b"><source>Transition for mouse events</source><seg-source>Transition for mouse events</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="72"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="54be6456-54a6-4ce0-a151-dcadbe707e85"><source><g id="122"/></source><seg-source><g id="122"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="73"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="112"/></sdl:cxts><trans-unit id="b2e3b44e-ffa4-4dd9-9f2b-93952f480834"><source>A Simple State Machine</source><seg-source>A Simple State Machine</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="74"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="113"/></sdl:cxts><trans-unit id="lockTU_0886c81e-98ff-4aef-a34b-c93122bba50c" translate="no" sdl:locktype="Structure"><source><g id="125">s1</g></source></trans-unit><trans-unit id="lockTU_df971e42-762e-46f5-af28-35c45d96c262" translate="no" sdl:locktype="Structure"><source><g id="128">s2</g></source></trans-unit><trans-unit id="lockTU_3d27f10f-f8c5-41e2-b82a-7165f368a653" translate="no" sdl:locktype="Structure"><source><g id="131">s3</g></source></trans-unit><trans-unit id="lockTU_c13f93fa-8643-482e-a8bc-3f77e103bb97" translate="no" sdl:locktype="Structure"><source><g id="137">s1</g></source></trans-unit><trans-unit id="lockTU_2de3bd36-1248-4672-80e4-3ee869b81bd8" translate="no" sdl:locktype="Structure"><source><g id="125">s1</g></source></trans-unit><trans-unit id="lockTU_8f143c95-c124-4974-a183-4b4f91dc095b" translate="no" sdl:locktype="Structure"><source><g id="128">s2</g></source></trans-unit><trans-unit id="lockTU_ea486185-939f-4f36-9060-3916658972b7" translate="no" sdl:locktype="Structure"><source><g id="131">s3</g></source></trans-unit><trans-unit id="lockTU_298bb3ea-a5f6-4dc7-b339-72cac9e85294" translate="no" sdl:locktype="Structure"><source><g id="137">s1</g></source></trans-unit><trans-unit id="be30f7e8-547b-49d3-8772-6d2f008a1d42"><source>To demonstrate the core functionality of the State Machine API, let&apos;s look at a small example: A state machine with three states, <x id="locked1" xid="lockTU_2de3bd36-1248-4672-80e4-3ee869b81bd8"/>, <x id="locked2" xid="lockTU_8f143c95-c124-4974-a183-4b4f91dc095b"/> and <x id="locked3" xid="lockTU_ea486185-939f-4f36-9060-3916658972b7"/>. The state machine is controlled by a single <g id="134">QPushButton</g>; when the button is clicked, the machine transitions to another state. Initially, the state machine is in state <x id="locked4" xid="lockTU_298bb3ea-a5f6-4dc7-b339-72cac9e85294"/>. The statechart for this machine is as follows:</source><seg-source>To demonstrate the core functionality of the State Machine API, let&apos;s look at a small example: A state machine with three states, <x id="locked5" xid="lockTU_0886c81e-98ff-4aef-a34b-c93122bba50c"/>, <x id="locked6" xid="lockTU_df971e42-762e-46f5-af28-35c45d96c262"/> and <x id="locked7" xid="lockTU_3d27f10f-f8c5-41e2-b82a-7165f368a653"/>. The state machine is controlled by a single <g id="134">QPushButton</g>; when the button is clicked, the machine transitions to another state. Initially, the state machine is in state <x id="locked8" xid="lockTU_c13f93fa-8643-482e-a8bc-3f77e103bb97"/>. The statechart for this machine is as follows:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="75"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="114"/></sdl:cxts><trans-unit id="e6880a6c-f9c9-4681-8d76-3e7ab71a815f"><source><x id="138" xid="9324c75c-d82a-4929-8abe-5463631462eb"/></source><seg-source><x id="138" xid="9324c75c-d82a-4929-8abe-5463631462eb"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="76"/></sdl:cxts><trans-unit id="9324c75c-d82a-4929-8abe-5463631462eb"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="77"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="115"/></sdl:cxts><trans-unit id="55ebcdf7-820a-43fa-9b00-cca5d2ee9775"><source>The following snippet shows the code needed to create such a state machine. First, we create the state machine and states:</source><seg-source>The following snippet shows the code needed to create such a state machine. First, we create the state machine and states:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="78"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="116"/></sdl:cxts><trans-unit id="ed0fc41c-a830-4677-8a23-ff7439f8d67e"><source><g id="141">QStateMachine</g> machine; <g id="144">QState</g> <g id="147">*</g>s1 <g id="150">=</g> <g id="153">new</g> <g id="156">QState</g>(); <g id="159">QState</g> <g id="162">*</g>s2 <g id="165">=</g> <g id="168">new</g> <g id="171">QState</g>(); <g id="174">QState</g> <g id="177">*</g>s3 <g id="180">=</g> <g id="183">new</g> <g id="186">QState</g>();</source><seg-source><g id="141">QStateMachine</g> machine; <g id="144">QState</g> <g id="147">*</g>s1 <g id="150">=</g> <g id="153">new</g> <g id="156">QState</g>(); <g id="159">QState</g> <g id="162">*</g>s2 <g id="165">=</g> <g id="168">new</g> <g id="171">QState</g>(); <g id="174">QState</g> <g id="177">*</g>s3 <g id="180">=</g> <g id="183">new</g> <g id="186">QState</g>();</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="80"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="117"/></sdl:cxts><trans-unit id="f38888a7-2b8f-4893-8220-360f4ab46aad"><source>Then, we create the transitions by using the <g id="189">QState::addTransition</g>() function:</source><seg-source>Then, we create the transitions by using the <g id="189">QState::addTransition</g>() function:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="81"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="118"/></sdl:cxts><trans-unit id="6ce31beb-d182-4846-b2bf-697ddb6d8902"><source>s1<g id="192">-</g><g id="195">&gt;</g>addTransition(button<g id="198">,</g> SIGNAL(clicked())<g id="201">,</g> s2); s2<g id="204">-</g><g id="207">&gt;</g>addTransition(button<g id="210">,</g> SIGNAL(clicked())<g id="213">,</g> s3); s3<g id="216">-</g><g id="219">&gt;</g>addTransition(button<g id="222">,</g> SIGNAL(clicked())<g id="225">,</g> s1);</source><seg-source>s1<g id="192">-</g><g id="195">&gt;</g>addTransition(button<g id="198">,</g> SIGNAL(clicked())<g id="201">,</g> s2); s2<g id="204">-</g><g id="207">&gt;</g>addTransition(button<g id="210">,</g> SIGNAL(clicked())<g id="213">,</g> s3); s3<g id="216">-</g><g id="219">&gt;</g>addTransition(button<g id="222">,</g> SIGNAL(clicked())<g id="225">,</g> s1);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="82"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="119"/></sdl:cxts><trans-unit id="efca34a0-0597-4d50-b04f-b795f71a1703"><source>Next, we add the states to the machine and set the machine&apos;s initial state:</source><seg-source>Next, we add the states to the machine and set the machine&apos;s initial state:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="83"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="120"/></sdl:cxts><trans-unit id="b111336c-44d6-4658-85fe-37910ac133d3"><source>machine<g id="228">.</g>addState(s1); machine<g id="231">.</g>addState(s2); machine<g id="234">.</g>addState(s3); machine<g id="237">.</g>setInitialState(s1);</source><seg-source>machine<g id="228">.</g>addState(s1); machine<g id="231">.</g>addState(s2); machine<g id="234">.</g>addState(s3); machine<g id="237">.</g>setInitialState(s1);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="84"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="121"/></sdl:cxts><trans-unit id="62610a6a-aafa-421d-8b96-23f7b95ec255"><source>Finally, we start the state machine:</source><seg-source>Finally, we start the state machine:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="85"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="122"/></sdl:cxts><trans-unit id="88b0502f-387b-4d70-a3cb-c573ab47bbb0"><source>machine<g id="240">.</g>start();</source><seg-source>machine<g id="240">.</g>start();</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="86"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="123"/></sdl:cxts><trans-unit id="862f4127-f7a5-4b62-85a8-440138916f10"><source>The state machine executes asynchronously, i.e. it becomes part of your application&apos;s event loop.</source><seg-source>The state machine executes asynchronously, i.e. it becomes part of your application&apos;s event loop.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="87"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="524d57df-a68c-491a-a96e-7e7b921be15a"><source><g id="243"/></source><seg-source><g id="243"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="88"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="124"/></sdl:cxts><trans-unit id="92bd413b-3d1d-4084-9760-9ccd45cd0cb8"><source>Doing Useful Work on State Entry and Exit</source><seg-source>Doing Useful Work on State Entry and Exit</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="89"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="125"/></sdl:cxts><trans-unit id="2a7ce1cf-c1b8-490b-9c3c-1239f392f717"><source>The above state machine merely transitions from one state to another, it doesn&apos;t perform any operations. The <g id="246">QState::assignProperty</g>() function can be used to have a state set a property of a <g id="249">QObject</g> when the state is entered. In the following snippet, the value that should be assigned to a <g id="252">QLabel</g>&apos;s text property is specified for each state:</source><seg-source>The above state machine merely transitions from one state to another, it doesn&apos;t perform any operations. The <g id="246">QState::assignProperty</g>() function can be used to have a state set a property of a <g id="249">QObject</g> when the state is entered. In the following snippet, the value that should be assigned to a <g id="252">QLabel</g>&apos;s text property is specified for each state:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="90"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="126"/></sdl:cxts><trans-unit id="bba5a021-3a9a-4f4a-86c2-adf361796ce8"><source>s1<g id="255">-</g><g id="258">&gt;</g>assignProperty(label<g id="261">,</g> <g id="264">&quot;text&quot;</g><g id="267">,</g> <g id="270">&quot;In state s1&quot;</g>); s2<g id="273">-</g><g id="276">&gt;</g>assignProperty(label<g id="279">,</g> <g id="282">&quot;text&quot;</g><g id="285">,</g> <g id="288">&quot;In state s2&quot;</g>); s3<g id="291">-</g><g id="294">&gt;</g>assignProperty(label<g id="297">,</g> <g id="300">&quot;text&quot;</g><g id="303">,</g> <g id="306">&quot;In state s3&quot;</g>);</source><seg-source>s1<g id="255">-</g><g id="258">&gt;</g>assignProperty(label<g id="261">,</g> <g id="264">&quot;text&quot;</g><g id="267">,</g> <g id="270">&quot;In state s1&quot;</g>); s2<g id="273">-</g><g id="276">&gt;</g>assignProperty(label<g id="279">,</g> <g id="282">&quot;text&quot;</g><g id="285">,</g> <g id="288">&quot;In state s2&quot;</g>); s3<g id="291">-</g><g id="294">&gt;</g>assignProperty(label<g id="297">,</g> <g id="300">&quot;text&quot;</g><g id="303">,</g> <g id="306">&quot;In state s3&quot;</g>);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="91"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="127"/></sdl:cxts><trans-unit id="50d0e7b1-883f-4790-8edc-510bbff29308"><source>When any of the states is entered, the label&apos;s text will be changed accordingly.</source><seg-source>When any of the states is entered, the label&apos;s text will be changed accordingly.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="92"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="128"/></sdl:cxts><trans-unit id="lockTU_897b17e6-6e40-4a26-8b6d-e5393c065cb2" translate="no" sdl:locktype="Structure"><source><g id="318">s3</g></source></trans-unit><trans-unit id="lockTU_db8f7d32-2905-4ede-9c39-8ef4ba834e03" translate="no" sdl:locktype="Structure"><source><g id="324">s3</g></source></trans-unit><trans-unit id="lockTU_6d820cb5-06b8-4688-9f55-7a48faa0df95" translate="no" sdl:locktype="Structure"><source><g id="318">s3</g></source></trans-unit><trans-unit id="lockTU_49700a5b-e1ba-439f-8c43-30d35f27da26" translate="no" sdl:locktype="Structure"><source><g id="324">s3</g></source></trans-unit><trans-unit id="f100c5af-51f3-4375-89bf-c03f9a3e73b0"><source>The <g id="309">QState::entered</g>() signal is emitted when the state is entered, and the <g id="312">QState::exited</g>() signal is emitted when the state is exited. In the following snippet, the button&apos;s <g id="315">showMaximized()</g> slot will be called when state <x id="locked9" xid="lockTU_6d820cb5-06b8-4688-9f55-7a48faa0df95"/> is entered, and the button&apos;s <g id="321">showMinimized()</g> slot will be called when <x id="locked10" xid="lockTU_49700a5b-e1ba-439f-8c43-30d35f27da26"/> is exited:</source><seg-source>The <g id="309">QState::entered</g>() signal is emitted when the state is entered, and the <g id="312">QState::exited</g>() signal is emitted when the state is exited. In the following snippet, the button&apos;s <g id="315">showMaximized()</g> slot will be called when state <x id="locked11" xid="lockTU_897b17e6-6e40-4a26-8b6d-e5393c065cb2"/> is entered, and the button&apos;s <g id="321">showMinimized()</g> slot will be called when <x id="locked12" xid="lockTU_db8f7d32-2905-4ede-9c39-8ef4ba834e03"/> is exited:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="93"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="129"/></sdl:cxts><trans-unit id="532222f5-a283-4731-9875-cf03ce29de20"><source><g id="327">QObject</g><g id="330">::</g>connect(s3<g id="333">,</g> SIGNAL(entered())<g id="336">,</g> button<g id="339">,</g> SLOT(showMaximized())); <g id="342">QObject</g><g id="345">::</g>connect(s3<g id="348">,</g> SIGNAL(exited())<g id="351">,</g> button<g id="354">,</g> SLOT(showMinimized()));</source><seg-source><g id="327">QObject</g><g id="330">::</g>connect(s3<g id="333">,</g> SIGNAL(entered())<g id="336">,</g> button<g id="339">,</g> SLOT(showMaximized())); <g id="342">QObject</g><g id="345">::</g>connect(s3<g id="348">,</g> SIGNAL(exited())<g id="351">,</g> button<g id="354">,</g> SLOT(showMinimized()));</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="94"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="130"/></sdl:cxts><trans-unit id="1cc7f06a-35e2-4cf1-b9c6-c9406d937283"><source>Custom states can reimplement <g id="357">QAbstractState::onEntry</g>() and <g id="360">QAbstractState::onExit</g>().</source><seg-source>Custom states can reimplement <g id="357">QAbstractState::onEntry</g>() and <g id="360">QAbstractState::onExit</g>().</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="95"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="78b6d1dc-bfa2-4022-b12d-7d4b43fe8cf1"><source><g id="363"/></source><seg-source><g id="363"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="96"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="131"/></sdl:cxts><trans-unit id="7163d7fd-8763-4dd8-9b9d-9ed2628afd0c"><source>State Machines That Finish</source><seg-source>State Machines That Finish</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="97"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="132"/></sdl:cxts><trans-unit id="40b58e5b-c804-4c39-9eea-c0792f11a279"><source>The state machine defined in the previous section never finishes. In order for a state machine to be able to finish, it needs to have a top-level <g id="366">final</g> state (<g id="369">QFinalState</g> object). When the state machine enters a top-level final state, the machine will emit the <g id="372">QStateMachine::finished</g>() signal and halt.</source><seg-source>The state machine defined in the previous section never finishes. In order for a state machine to be able to finish, it needs to have a top-level <g id="366">final</g> state (<g id="369">QFinalState</g> object). When the state machine enters a top-level final state, the machine will emit the <g id="372">QStateMachine::finished</g>() signal and halt.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="98"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="133"/></sdl:cxts><trans-unit id="e9fe72bd-c41e-42cc-9c1f-9e32e12a0be0"><source>All you need to do to introduce a final state in the graph is create a <g id="375">QFinalState</g> object and use it as the target of one or more transitions.</source><seg-source>All you need to do to introduce a final state in the graph is create a <g id="375">QFinalState</g> object and use it as the target of one or more transitions.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="99"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="d3fdaa3e-0b00-4890-aaf6-47b14c19d9f4"><source><g id="378"/></source><seg-source><g id="378"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="100"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="134"/></sdl:cxts><trans-unit id="37d87847-bbf2-42ee-aa05-23149d2abd38"><source>Sharing Transitions By Grouping States</source><seg-source>Sharing Transitions By Grouping States</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="101"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="135"/></sdl:cxts><trans-unit id="lockTU_33730248-2173-429d-a4b0-d2d19cb5a39b" translate="no" sdl:locktype="Structure"><source><g id="384">s1</g></source></trans-unit><trans-unit id="lockTU_b9abcb77-f070-4d98-9cce-b3c9539152ea" translate="no" sdl:locktype="Structure"><source><g id="387">s2</g></source></trans-unit><trans-unit id="lockTU_3081fe71-a446-43a1-a4e1-8906bd167a8e" translate="no" sdl:locktype="Structure"><source><g id="390">s3</g></source></trans-unit><trans-unit id="lockTU_b77fb39a-2e5a-418f-843a-1abd653be7fc" translate="no" sdl:locktype="Structure"><source><g id="384">s1</g></source></trans-unit><trans-unit id="lockTU_1ab0a18d-8bee-4fcc-b357-bcd61b29d687" translate="no" sdl:locktype="Structure"><source><g id="387">s2</g></source></trans-unit><trans-unit id="lockTU_c9520f4e-aeb7-4fe8-a7cd-b8788c7e9f98" translate="no" sdl:locktype="Structure"><source><g id="390">s3</g></source></trans-unit><trans-unit id="7dc549c7-6778-4643-9f08-544d3a0fda0a"><source>Assume we wanted the user to be able to quit the application at any time by clicking a Quit button. In order to achieve this, we need to create a final state and make it the target of a transition associated with the Quit button&apos;s <g id="381">clicked()</g> signal. We could add a transition from each of <x id="locked13" xid="lockTU_b77fb39a-2e5a-418f-843a-1abd653be7fc"/>, <x id="locked14" xid="lockTU_1ab0a18d-8bee-4fcc-b357-bcd61b29d687"/> and <x id="locked15" xid="lockTU_c9520f4e-aeb7-4fe8-a7cd-b8788c7e9f98"/>; however, this seems redundant, and one would also have to remember to add such a transition from every new state that is added in the future.</source><seg-source>Assume we wanted the user to be able to quit the application at any time by clicking a Quit button. In order to achieve this, we need to create a final state and make it the target of a transition associated with the Quit button&apos;s <g id="381">clicked()</g> signal. We could add a transition from each of <x id="locked16" xid="lockTU_33730248-2173-429d-a4b0-d2d19cb5a39b"/>, <x id="locked17" xid="lockTU_b9abcb77-f070-4d98-9cce-b3c9539152ea"/> and <x id="locked18" xid="lockTU_3081fe71-a446-43a1-a4e1-8906bd167a8e"/>; however, this seems redundant, and one would also have to remember to add such a transition from every new state that is added in the future.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="102"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="136"/></sdl:cxts><trans-unit id="lockTU_56409051-85e6-4de7-a1f8-9fbeeb899ffc" translate="no" sdl:locktype="Structure"><source><g id="393">s1</g></source></trans-unit><trans-unit id="lockTU_8740d170-2e89-43e7-bcbb-480b4d63ffec" translate="no" sdl:locktype="Structure"><source><g id="396">s2</g></source></trans-unit><trans-unit id="lockTU_4d717457-43fe-4852-8a97-c59992e82f1b" translate="no" sdl:locktype="Structure"><source><g id="399">s3</g></source></trans-unit><trans-unit id="lockTU_27d0d1a0-b84d-4551-ad25-1898905488d6" translate="no" sdl:locktype="Structure"><source><g id="393">s1</g></source></trans-unit><trans-unit id="lockTU_7697df3b-a559-4270-8e0c-16ac2aed9867" translate="no" sdl:locktype="Structure"><source><g id="396">s2</g></source></trans-unit><trans-unit id="lockTU_3795a67e-6d2f-4d51-8f67-80b78c9e18c8" translate="no" sdl:locktype="Structure"><source><g id="399">s3</g></source></trans-unit><trans-unit id="2a0f243f-a48b-4df4-a744-d0e2318b8b2b"><source>We can achieve the same behavior (namely that clicking the Quit button quits the state machine, regardless of which state the state machine is in) by grouping states <x id="locked19" xid="lockTU_27d0d1a0-b84d-4551-ad25-1898905488d6"/>, <x id="locked20" xid="lockTU_7697df3b-a559-4270-8e0c-16ac2aed9867"/> and <x id="locked21" xid="lockTU_3795a67e-6d2f-4d51-8f67-80b78c9e18c8"/>. This is done by creating a new top-level state and making the three original states children of the new state. The following diagram shows the new state machine.</source><seg-source>We can achieve the same behavior (namely that clicking the Quit button quits the state machine, regardless of which state the state machine is in) by grouping states <x id="locked22" xid="lockTU_56409051-85e6-4de7-a1f8-9fbeeb899ffc"/>, <x id="locked23" xid="lockTU_8740d170-2e89-43e7-bcbb-480b4d63ffec"/> and <x id="locked24" xid="lockTU_4d717457-43fe-4852-8a97-c59992e82f1b"/>. This is done by creating a new top-level state and making the three original states children of the new state. The following diagram shows the new state machine.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="103"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="137"/></sdl:cxts><trans-unit id="0904e25f-eda5-437b-9658-f367289c75f0"><source><x id="400" xid="cfc60a72-1e5a-4107-8ab0-bab93b1bb9b2"/></source><seg-source><x id="400" xid="cfc60a72-1e5a-4107-8ab0-bab93b1bb9b2"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="76"/></sdl:cxts><trans-unit id="cfc60a72-1e5a-4107-8ab0-bab93b1bb9b2"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="104"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="138"/></sdl:cxts><trans-unit id="lockTU_c9b4fde3-eeb6-4ea6-b317-e29cffcfe9a0" translate="no" sdl:locktype="Structure"><source><g id="403">s11</g></source></trans-unit><trans-unit id="lockTU_7c725b1e-a792-40f2-9adf-2ffbe9e03840" translate="no" sdl:locktype="Structure"><source><g id="406">s12</g></source></trans-unit><trans-unit id="lockTU_ac55282f-b542-4fba-9737-b8821406da42" translate="no" sdl:locktype="Structure"><source><g id="409">s13</g></source></trans-unit><trans-unit id="lockTU_937b69b7-f625-41d2-92a4-0bf0e276dd55" translate="no" sdl:locktype="Structure"><source><g id="412">s1</g></source></trans-unit><trans-unit id="lockTU_1501d1a6-23c2-4ca9-b65d-4e491ba539ab" translate="no" sdl:locktype="Structure"><source><g id="415">s1</g></source></trans-unit><trans-unit id="lockTU_3d7ec3ba-254c-4e29-8289-fc4d10b4fdca" translate="no" sdl:locktype="Structure"><source><g id="418">s2</g></source></trans-unit><trans-unit id="lockTU_d0eb3381-c10e-4fa5-9618-1e3a4232aef5" translate="no" sdl:locktype="Structure"><source><g id="421">s1</g></source></trans-unit><trans-unit id="lockTU_762e910e-2ac0-4215-b522-01f36cf79db0" translate="no" sdl:locktype="Structure"><source><g id="403">s11</g></source></trans-unit><trans-unit id="lockTU_6a9726c4-15c3-41f9-8f89-357a5126b2ed" translate="no" sdl:locktype="Structure"><source><g id="406">s12</g></source></trans-unit><trans-unit id="lockTU_ff5acdcd-6203-4873-b589-cd3f6b9ec44f" translate="no" sdl:locktype="Structure"><source><g id="409">s13</g></source></trans-unit><trans-unit id="lockTU_e6abf26f-bdcf-40de-85c7-7b5c1d14b41f" translate="no" sdl:locktype="Structure"><source><g id="412">s1</g></source></trans-unit><trans-unit id="lockTU_80d4846a-868f-4f7c-9d94-a52b943777df" translate="no" sdl:locktype="Structure"><source><g id="415">s1</g></source></trans-unit><trans-unit id="lockTU_f71bffde-5e10-4732-b073-c403388ead19" translate="no" sdl:locktype="Structure"><source><g id="418">s2</g></source></trans-unit><trans-unit id="lockTU_b5a94aea-3ae9-49b9-a13a-6d920ba09a14" translate="no" sdl:locktype="Structure"><source><g id="421">s1</g></source></trans-unit><trans-unit id="3a92e37a-4704-486e-9843-a58bd555e8d4"><source>The three original states have been renamed <x id="locked25" xid="lockTU_762e910e-2ac0-4215-b522-01f36cf79db0"/>, <x id="locked26" xid="lockTU_6a9726c4-15c3-41f9-8f89-357a5126b2ed"/> and <x id="locked27" xid="lockTU_ff5acdcd-6203-4873-b589-cd3f6b9ec44f"/> to reflect that they are now children of the new top-level state, <x id="locked28" xid="lockTU_e6abf26f-bdcf-40de-85c7-7b5c1d14b41f"/>. Child states implicitly inherit the transitions of their parent state. This means it is now sufficient to add a single transition from <x id="locked29" xid="lockTU_80d4846a-868f-4f7c-9d94-a52b943777df"/> to the final state <x id="locked30" xid="lockTU_f71bffde-5e10-4732-b073-c403388ead19"/>. New states added to <x id="locked31" xid="lockTU_b5a94aea-3ae9-49b9-a13a-6d920ba09a14"/> will also automatically inherit this transition.</source><seg-source>The three original states have been renamed <x id="locked32" xid="lockTU_c9b4fde3-eeb6-4ea6-b317-e29cffcfe9a0"/>, <x id="locked33" xid="lockTU_7c725b1e-a792-40f2-9adf-2ffbe9e03840"/> and <x id="locked34" xid="lockTU_ac55282f-b542-4fba-9737-b8821406da42"/> to reflect that they are now children of the new top-level state, <x id="locked35" xid="lockTU_937b69b7-f625-41d2-92a4-0bf0e276dd55"/>. Child states implicitly inherit the transitions of their parent state. This means it is now sufficient to add a single transition from <x id="locked36" xid="lockTU_1501d1a6-23c2-4ca9-b65d-4e491ba539ab"/> to the final state <x id="locked37" xid="lockTU_3d7ec3ba-254c-4e29-8289-fc4d10b4fdca"/>. New states added to <x id="locked38" xid="lockTU_d0eb3381-c10e-4fa5-9618-1e3a4232aef5"/> will also automatically inherit this transition.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="105"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="139"/></sdl:cxts><trans-unit id="316e720b-ff4e-436e-b107-4a5fa509e74b"><source>All that&apos;s needed to group states is to specify the proper parent when the state is created. You also need to specify which of the child states is the initial one (i.e. which child state the state machine should enter when the parent state is the target of a transition).</source><seg-source>All that&apos;s needed to group states is to specify the proper parent when the state is created. You also need to specify which of the child states is the initial one (i.e. which child state the state machine should enter when the parent state is the target of a transition).</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="106"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="140"/></sdl:cxts><trans-unit id="a1a97556-435d-47f0-a587-213ae0877a12"><source><g id="424">QState</g> <g id="427">*</g>s1 <g id="430">=</g> <g id="433">new</g> <g id="436">QState</g>(); <g id="439">QState</g> <g id="442">*</g>s11 <g id="445">=</g> <g id="448">new</g> <g id="451">QState</g>(s1); <g id="454">QState</g> <g id="457">*</g>s12 <g id="460">=</g> <g id="463">new</g> <g id="466">QState</g>(s1); <g id="469">QState</g> <g id="472">*</g>s13 <g id="475">=</g> <g id="478">new</g> <g id="481">QState</g>(s1); s1<g id="484">-</g><g id="487">&gt;</g>setInitialState(s11); machine<g id="490">.</g>addState(s1); <g id="493">QFinalState</g> <g id="496">*</g>s2 <g id="499">=</g> <g id="502">new</g> <g id="505">QFinalState</g>(); s1<g id="508">-</g><g id="511">&gt;</g>addTransition(quitButton<g id="514">,</g> SIGNAL(clicked())<g id="517">,</g> s2); machine<g id="520">.</g>addState(s2); machine<g id="523">.</g>setInitialState(s1); <g id="526">QObject</g><g id="529">::</g>connect(<g id="532">&amp;</g>machine<g id="535">,</g> SIGNAL(finished())<g id="538">,</g> <g id="541">QApplication</g><g id="544">::</g>instance()<g id="547">,</g> SLOT(quit()));</source><seg-source><g id="424">QState</g> <g id="427">*</g>s1 <g id="430">=</g> <g id="433">new</g> <g id="436">QState</g>(); <g id="439">QState</g> <g id="442">*</g>s11 <g id="445">=</g> <g id="448">new</g> <g id="451">QState</g>(s1); <g id="454">QState</g> <g id="457">*</g>s12 <g id="460">=</g> <g id="463">new</g> <g id="466">QState</g>(s1); <g id="469">QState</g> <g id="472">*</g>s13 <g id="475">=</g> <g id="478">new</g> <g id="481">QState</g>(s1); s1<g id="484">-</g><g id="487">&gt;</g>setInitialState(s11); machine<g id="490">.</g>addState(s1); <g id="493">QFinalState</g> <g id="496">*</g>s2 <g id="499">=</g> <g id="502">new</g> <g id="505">QFinalState</g>(); s1<g id="508">-</g><g id="511">&gt;</g>addTransition(quitButton<g id="514">,</g> SIGNAL(clicked())<g id="517">,</g> s2); machine<g id="520">.</g>addState(s2); machine<g id="523">.</g>setInitialState(s1); <g id="526">QObject</g><g id="529">::</g>connect(<g id="532">&amp;</g>machine<g id="535">,</g> SIGNAL(finished())<g id="538">,</g> <g id="541">QApplication</g><g id="544">::</g>instance()<g id="547">,</g> SLOT(quit()));</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="107"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="141"/></sdl:cxts><trans-unit id="86f34d14-4fd3-4d6c-adbb-281ac90e0d4d"><source>In this case we want the application to quit when the state machine is finished, so the machine&apos;s <g id="550">finished()</g> signal is connected to the application&apos;s <g id="553">quit()</g> slot.</source><seg-source>In this case we want the application to quit when the state machine is finished, so the machine&apos;s <g id="550">finished()</g> signal is connected to the application&apos;s <g id="553">quit()</g> slot.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="108"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="142"/></sdl:cxts><trans-unit id="lockTU_66a8a955-a3b4-4502-8013-9061eee29744" translate="no" sdl:locktype="Structure"><source><g id="556">s12</g></source></trans-unit><trans-unit id="lockTU_09e6a050-9aec-4ab9-abec-fef3d751adf8" translate="no" sdl:locktype="Structure"><source><g id="556">s12</g></source></trans-unit><trans-unit id="77990b6e-95b2-4852-a65c-e40a79094b46"><source>A child state can override an inherited transition. For example, the following code adds a transition that effectively causes the Quit button to be ignored when the state machine is in state <x id="locked39" xid="lockTU_09e6a050-9aec-4ab9-abec-fef3d751adf8"/>.</source><seg-source>A child state can override an inherited transition. For example, the following code adds a transition that effectively causes the Quit button to be ignored when the state machine is in state <x id="locked40" xid="lockTU_66a8a955-a3b4-4502-8013-9061eee29744"/>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="109"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="143"/></sdl:cxts><trans-unit id="970ed311-f341-434d-8fba-6e2eb8e3648d"><source>s12<g id="559">-</g><g id="562">&gt;</g>addTransition(quitButton<g id="565">,</g> SIGNAL(clicked())<g id="568">,</g> s12);</source><seg-source>s12<g id="559">-</g><g id="562">&gt;</g>addTransition(quitButton<g id="565">,</g> SIGNAL(clicked())<g id="568">,</g> s12);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="110"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="144"/></sdl:cxts><trans-unit id="6fa530e5-da47-4333-a7fc-91dcf2986105"><source>A transition can have any state as its target, i.e. the target state does not have to be on the same level in the state hierarchy as the source state.</source><seg-source>A transition can have any state as its target, i.e. the target state does not have to be on the same level in the state hierarchy as the source state.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="111"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="9135f9fe-af54-426a-b8d2-4fbac5f3a200"><source><g id="571"/></source><seg-source><g id="571"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="112"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="145"/></sdl:cxts><trans-unit id="0ba5244f-eb5a-425c-8b92-1484d05ddfac"><source>Using History States to Save and Restore the Current State</source><seg-source>Using History States to Save and Restore the Current State</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="113"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="146"/></sdl:cxts><trans-unit id="lockTU_05769a19-0e94-4b1d-855d-afe9a8aca303" translate="no" sdl:locktype="Structure"><source><g id="574">s11</g></source></trans-unit><trans-unit id="lockTU_58436f13-e974-4b98-889b-d1ba33c192b3" translate="no" sdl:locktype="Structure"><source><g id="577">s12</g></source></trans-unit><trans-unit id="lockTU_99cb5a04-d000-420a-8e73-0be2add3fffd" translate="no" sdl:locktype="Structure"><source><g id="580">s13</g></source></trans-unit><trans-unit id="lockTU_ac81c13b-c2be-4b08-9148-53313a2985d4" translate="no" sdl:locktype="Structure"><source><g id="574">s11</g></source></trans-unit><trans-unit id="lockTU_ad35c16d-ca8f-4b7e-b95c-15f0fa411e43" translate="no" sdl:locktype="Structure"><source><g id="577">s12</g></source></trans-unit><trans-unit id="lockTU_1c25768f-936b-488e-a55a-fc77477788c1" translate="no" sdl:locktype="Structure"><source><g id="580">s13</g></source></trans-unit><trans-unit id="bf014e5f-340c-4ba1-93fb-ea5113defd8b"><source>Imagine that we wanted to add an &quot;interrupt&quot; mechanism to the example discussed in the previous section; the user should be able to click a button to have the state machine perform some non-related task, after which the state machine should resume whatever it was doing before (i.e. return to the old state, which is one of <x id="locked41" xid="lockTU_ac81c13b-c2be-4b08-9148-53313a2985d4"/>, <x id="locked42" xid="lockTU_ad35c16d-ca8f-4b7e-b95c-15f0fa411e43"/> and <x id="locked43" xid="lockTU_1c25768f-936b-488e-a55a-fc77477788c1"/> in this case).</source><seg-source>Imagine that we wanted to add an &quot;interrupt&quot; mechanism to the example discussed in the previous section; the user should be able to click a button to have the state machine perform some non-related task, after which the state machine should resume whatever it was doing before (i.e. return to the old state, which is one of <x id="locked44" xid="lockTU_05769a19-0e94-4b1d-855d-afe9a8aca303"/>, <x id="locked45" xid="lockTU_58436f13-e974-4b98-889b-d1ba33c192b3"/> and <x id="locked46" xid="lockTU_99cb5a04-d000-420a-8e73-0be2add3fffd"/> in this case).</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="114"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="147"/></sdl:cxts><trans-unit id="9fd45069-5e7a-4707-bdc9-5ce6aa80ed42"><source>Such behavior can easily be modeled using <g id="583">history states</g>. A history state (<g id="586">QHistoryState</g> object) is a pseudo-state that represents the child state that the parent state was in the last time the parent state was exited.</source><seg-source>Such behavior can easily be modeled using <g id="583">history states</g>. A history state (<g id="586">QHistoryState</g> object) is a pseudo-state that represents the child state that the parent state was in the last time the parent state was exited.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="115"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="148"/></sdl:cxts><trans-unit id="f389597d-643b-4cb3-a066-65c65940deb6"><source>A history state is created as a child of the state for which we wish to record the current child state; when the state machine detects the presence of such a state at runtime, it automatically records the current (real) child state when the parent state is exited. A transition to the history state is in fact a transition to the child state that the state machine had previously saved; the state machine automatically &quot;forwards&quot; the transition to the real child state.</source><seg-source>A history state is created as a child of the state for which we wish to record the current child state; when the state machine detects the presence of such a state at runtime, it automatically records the current (real) child state when the parent state is exited. A transition to the history state is in fact a transition to the child state that the state machine had previously saved; the state machine automatically &quot;forwards&quot; the transition to the real child state.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="116"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="149"/></sdl:cxts><trans-unit id="0762585a-23a6-4dc6-be45-076630730c2a"><source>The following diagram shows the state machine after the interrupt mechanism has been added.</source><seg-source>The following diagram shows the state machine after the interrupt mechanism has been added.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="117"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="150"/></sdl:cxts><trans-unit id="dd165ab8-886a-41b7-86bb-65be8a8e6a7c"><source><x id="587" xid="6122adab-02cc-4492-bc37-909159c5169b"/></source><seg-source><x id="587" xid="6122adab-02cc-4492-bc37-909159c5169b"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="76"/></sdl:cxts><trans-unit id="6122adab-02cc-4492-bc37-909159c5169b"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="118"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="151"/></sdl:cxts><trans-unit id="lockTU_3a52f898-760f-4d35-8c0d-28bcb5306056" translate="no" sdl:locktype="Structure"><source><g id="590">s3</g></source></trans-unit><trans-unit id="lockTU_777e88e4-a4b3-4ec5-b80f-0069063493d9" translate="no" sdl:locktype="Structure"><source><g id="593">s1</g></source></trans-unit><trans-unit id="lockTU_281d526c-cc53-4f5a-944b-e37cf9f35e00" translate="no" sdl:locktype="Structure"><source><g id="590">s3</g></source></trans-unit><trans-unit id="lockTU_1d246596-d320-4a17-a774-28bc4401a170" translate="no" sdl:locktype="Structure"><source><g id="593">s1</g></source></trans-unit><trans-unit id="70afcb0a-d271-49b1-b064-fe33fb6a376e"><source>The following code shows how it can be implemented; in this example we simply display a message box when <x id="locked47" xid="lockTU_281d526c-cc53-4f5a-944b-e37cf9f35e00"/> is entered, then immediately return to the previous child state of <x id="locked48" xid="lockTU_1d246596-d320-4a17-a774-28bc4401a170"/> via the history state.</source><seg-source>The following code shows how it can be implemented; in this example we simply display a message box when <x id="locked49" xid="lockTU_3a52f898-760f-4d35-8c0d-28bcb5306056"/> is entered, then immediately return to the previous child state of <x id="locked50" xid="lockTU_777e88e4-a4b3-4ec5-b80f-0069063493d9"/> via the history state.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="119"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="152"/></sdl:cxts><trans-unit id="4a67106b-1b38-470e-b6e5-32456e03729a"><source><g id="596">QHistoryState</g> <g id="599">*</g>s1h <g id="602">=</g> <g id="605">new</g> <g id="608">QHistoryState</g>(s1); <g id="611">QState</g> <g id="614">*</g>s3 <g id="617">=</g> <g id="620">new</g> <g id="623">QState</g>(); s3<g id="626">-</g><g id="629">&gt;</g>assignProperty(label<g id="632">,</g> <g id="635">&quot;text&quot;</g><g id="638">,</g> <g id="641">&quot;In s3&quot;</g>); <g id="644">QMessageBox</g> <g id="647">*</g>mbox <g id="650">=</g> <g id="653">new</g> <g id="656">QMessageBox</g>(mainWindow); mbox<g id="659">-</g><g id="662">&gt;</g>addButton(<g id="665">QMessageBox</g><g id="668">::</g>Ok); mbox<g id="671">-</g><g id="674">&gt;</g>setText(<g id="677">&quot;Interrupted!&quot;</g>); mbox<g id="680">-</g><g id="683">&gt;</g>setIcon(<g id="686">QMessageBox</g><g id="689">::</g>Information); <g id="692">QObject</g><g id="695">::</g>connect(s3<g id="698">,</g> SIGNAL(entered())<g id="701">,</g> mbox<g id="704">,</g> SLOT(exec())); s3<g id="707">-</g><g id="710">&gt;</g>addTransition(s1h); machine<g id="713">.</g>addState(s3); s1<g id="716">-</g><g id="719">&gt;</g>addTransition(interruptButton<g id="722">,</g> SIGNAL(clicked())<g id="725">,</g> s3);</source><seg-source><g id="596">QHistoryState</g> <g id="599">*</g>s1h <g id="602">=</g> <g id="605">new</g> <g id="608">QHistoryState</g>(s1); <g id="611">QState</g> <g id="614">*</g>s3 <g id="617">=</g> <g id="620">new</g> <g id="623">QState</g>(); s3<g id="626">-</g><g id="629">&gt;</g>assignProperty(label<g id="632">,</g> <g id="635">&quot;text&quot;</g><g id="638">,</g> <g id="641">&quot;In s3&quot;</g>); <g id="644">QMessageBox</g> <g id="647">*</g>mbox <g id="650">=</g> <g id="653">new</g> <g id="656">QMessageBox</g>(mainWindow); mbox<g id="659">-</g><g id="662">&gt;</g>addButton(<g id="665">QMessageBox</g><g id="668">::</g>Ok); mbox<g id="671">-</g><g id="674">&gt;</g>setText(<g id="677">&quot;Interrupted!&quot;</g>); mbox<g id="680">-</g><g id="683">&gt;</g>setIcon(<g id="686">QMessageBox</g><g id="689">::</g>Information); <g id="692">QObject</g><g id="695">::</g>connect(s3<g id="698">,</g> SIGNAL(entered())<g id="701">,</g> mbox<g id="704">,</g> SLOT(exec())); s3<g id="707">-</g><g id="710">&gt;</g>addTransition(s1h); machine<g id="713">.</g>addState(s3); s1<g id="716">-</g><g id="719">&gt;</g>addTransition(interruptButton<g id="722">,</g> SIGNAL(clicked())<g id="725">,</g> s3);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="120"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="983459ad-e35c-456f-8f83-5261ab1325e9"><source><g id="728"/></source><seg-source><g id="728"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="121"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="153"/></sdl:cxts><trans-unit id="bd9ff8db-3f13-43d1-aa60-ef32785cea91"><source>Using Parallel States to Avoid a Combinatorial Explosion of States</source><seg-source>Using Parallel States to Avoid a Combinatorial Explosion of States</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="122"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="154"/></sdl:cxts><trans-unit id="769db973-ed2d-44f2-a4ae-76c30e5403b3"><source>Assume that you wanted to model a set of mutually exclusive properties of a car in a single state machine. Let&apos;s say the properties we are interested in are Clean vs Dirty, and Moving vs Not moving. It would take four mutually exclusive states and eight transitions to be able to represent and freely move between all possible combinations.</source><seg-source>Assume that you wanted to model a set of mutually exclusive properties of a car in a single state machine. Let&apos;s say the properties we are interested in are Clean vs Dirty, and Moving vs Not moving. It would take four mutually exclusive states and eight transitions to be able to represent and freely move between all possible combinations.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="123"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="155"/></sdl:cxts><trans-unit id="5bf06695-6f8d-4552-a6c3-530d7b5cf506"><source><x id="729" xid="19482a74-cb08-40da-abd5-b9150c53c62f"/></source><seg-source><x id="729" xid="19482a74-cb08-40da-abd5-b9150c53c62f"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="76"/></sdl:cxts><trans-unit id="19482a74-cb08-40da-abd5-b9150c53c62f"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="124"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="156"/></sdl:cxts><trans-unit id="1c71dac6-3bf8-413b-b677-e622383a0f1c"><source>If we added a third property (say, Red vs Blue), the total number of states would double, to eight; and if we added a fourth property (say, Enclosed vs Convertible), the total number of states would double again, to 16.</source><seg-source>If we added a third property (say, Red vs Blue), the total number of states would double, to eight; and if we added a fourth property (say, Enclosed vs Convertible), the total number of states would double again, to 16.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="125"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="157"/></sdl:cxts><trans-unit id="805bdfae-55e2-4737-9649-b2960700d21d"><source>Using parallel states, the total number of states and transitions grows linearly as we add more properties, instead of exponentially. Furthermore, states can be added to or removed from the parallel state without affecting any of their sibling states.</source><seg-source>Using parallel states, the total number of states and transitions grows linearly as we add more properties, instead of exponentially. Furthermore, states can be added to or removed from the parallel state without affecting any of their sibling states.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="126"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="158"/></sdl:cxts><trans-unit id="5dd68fb2-d641-45ff-b258-4c43c0f2ae35"><source><x id="730" xid="ade22015-018c-42a0-a1c8-560d2f534dd0"/></source><seg-source><x id="730" xid="ade22015-018c-42a0-a1c8-560d2f534dd0"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="76"/></sdl:cxts><trans-unit id="ade22015-018c-42a0-a1c8-560d2f534dd0"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="127"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="159"/></sdl:cxts><trans-unit id="ff9a8d51-7f39-47e3-b503-91437cf812be"><source>To create a parallel state group, pass <g id="733">QState::ParallelStates</g> to the <g id="736">QState</g> constructor.</source><seg-source>To create a parallel state group, pass <g id="733">QState::ParallelStates</g> to the <g id="736">QState</g> constructor.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="128"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="160"/></sdl:cxts><trans-unit id="88d58a9d-3f96-4972-b89b-d5dd865aaa12"><source><g id="739">QState</g> <g id="742">*</g>s1 <g id="745">=</g> <g id="748">new</g> <g id="751">QState</g>(<g id="754">QState</g><g id="757">::</g>ParallelStates); <g id="760">// s11 and s12 will be entered in parallel</g> <g id="763">QState</g> <g id="766">*</g>s11 <g id="769">=</g> <g id="772">new</g> <g id="775">QState</g>(s1); <g id="778">QState</g> <g id="781">*</g>s12 <g id="784">=</g> <g id="787">new</g> <g id="790">QState</g>(s1);</source><seg-source><g id="739">QState</g> <g id="742">*</g>s1 <g id="745">=</g> <g id="748">new</g> <g id="751">QState</g>(<g id="754">QState</g><g id="757">::</g>ParallelStates); <g id="760">// s11 and s12 will be entered in parallel</g> <g id="763">QState</g> <g id="766">*</g>s11 <g id="769">=</g> <g id="772">new</g> <g id="775">QState</g>(s1); <g id="778">QState</g> <g id="781">*</g>s12 <g id="784">=</g> <g id="787">new</g> <g id="790">QState</g>(s1);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="129"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="161"/></sdl:cxts><trans-unit id="f6e7a049-9621-478a-af98-73a157998111"><source>When a parallel state group is entered, all its child states will be simultaneously entered. Transitions within the individual child states operate normally. However, any of the child states may take a transition which exits the parent state. When this happens, the parent state and all of its child states are exited.</source><seg-source>When a parallel state group is entered, all its child states will be simultaneously entered. Transitions within the individual child states operate normally. However, any of the child states may take a transition which exits the parent state. When this happens, the parent state and all of its child states are exited.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="130"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="162"/></sdl:cxts><trans-unit id="fda53031-1b8b-4dd1-b709-98eeb86f4c6e"><source>The parallelism in the State Machine framework follows an interleaved semantics. All parallel operations will be executed in a single, atomic step of the event processing, so no event can interrupt the parallel operations. However, events will still be processed sequentially, since the machine itself is single threaded. As an example: Consider the situation where there are two transitions that exit the same parallel state group, and their conditions become true simultaneously. In this case, the event that is processed last of the two will not have any effect, since the first event will already have caused the machine to exit from the parallel state.</source><seg-source>The parallelism in the State Machine framework follows an interleaved semantics. All parallel operations will be executed in a single, atomic step of the event processing, so no event can interrupt the parallel operations. However, events will still be processed sequentially, since the machine itself is single threaded. As an example: Consider the situation where there are two transitions that exit the same parallel state group, and their conditions become true simultaneously. In this case, the event that is processed last of the two will not have any effect, since the first event will already have caused the machine to exit from the parallel state.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="131"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="e7712b4f-82b0-43a8-83e2-47d2d3c7a183"><source><g id="793"/></source><seg-source><g id="793"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="132"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="163"/></sdl:cxts><trans-unit id="72303e0c-7078-4d4d-9af4-aa6d74354828"><source>Detecting that a Composite State has Finished</source><seg-source>Detecting that a Composite State has Finished</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="133"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="164"/></sdl:cxts><trans-unit id="lockTU_0d3f2a8b-9e7f-4e21-b0e9-8b92f0c09745" translate="no" sdl:locktype="Structure"><source><g id="802">s1</g></source></trans-unit><trans-unit id="lockTU_1a6c1876-34cf-4e4e-8a4a-ca3b1c8eec38" translate="no" sdl:locktype="Structure"><source><g id="802">s1</g></source></trans-unit><trans-unit id="f63e7d68-84b1-4d71-9d10-a83011b3c624"><source>A child state can be final (a <g id="796">QFinalState</g> object); when a final child state is entered, the parent state emits the <g id="799">QState::finished</g>() signal. The following diagram shows a composite state <x id="locked51" xid="lockTU_1a6c1876-34cf-4e4e-8a4a-ca3b1c8eec38"/> which does some processing before entering a final state:</source><seg-source>A child state can be final (a <g id="796">QFinalState</g> object); when a final child state is entered, the parent state emits the <g id="799">QState::finished</g>() signal. The following diagram shows a composite state <x id="locked52" xid="lockTU_0d3f2a8b-9e7f-4e21-b0e9-8b92f0c09745"/> which does some processing before entering a final state:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="134"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="165"/></sdl:cxts><trans-unit id="5c9d7102-2c40-431c-a32f-df9381fe2b3f"><source><x id="803" xid="f32ad670-e3ed-429b-99c1-acc41fcde7cf"/></source><seg-source><x id="803" xid="f32ad670-e3ed-429b-99c1-acc41fcde7cf"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="76"/></sdl:cxts><trans-unit id="f32ad670-e3ed-429b-99c1-acc41fcde7cf"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="135"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="166"/></sdl:cxts><trans-unit id="lockTU_a030dec3-5b89-4ce5-9be1-622ea5bfad4b" translate="no" sdl:locktype="Structure"><source><g id="806">s1</g></source></trans-unit><trans-unit id="lockTU_d6bfb950-1f0f-4699-8189-4cb31938c0f7" translate="no" sdl:locktype="Structure"><source><g id="809">s1</g></source></trans-unit><trans-unit id="lockTU_6fd9204e-4adc-4196-8123-0ab149fec37b" translate="no" sdl:locktype="Structure"><source><g id="806">s1</g></source></trans-unit><trans-unit id="lockTU_b041d34b-37e8-4a80-8fbc-d445d05780e2" translate="no" sdl:locktype="Structure"><source><g id="809">s1</g></source></trans-unit><trans-unit id="206df3f0-c4b0-49c2-afe0-eb1ba1de1b67"><source>When <x id="locked53" xid="lockTU_6fd9204e-4adc-4196-8123-0ab149fec37b"/> &apos;s final state is entered, <x id="locked54" xid="lockTU_b041d34b-37e8-4a80-8fbc-d445d05780e2"/> will automatically emit <g id="812">finished()</g>. We use a signal transition to cause this event to trigger a state change:</source><seg-source>When <x id="locked55" xid="lockTU_a030dec3-5b89-4ce5-9be1-622ea5bfad4b"/> &apos;s final state is entered, <x id="locked56" xid="lockTU_d6bfb950-1f0f-4699-8189-4cb31938c0f7"/> will automatically emit <g id="812">finished()</g>. We use a signal transition to cause this event to trigger a state change:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="136"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="167"/></sdl:cxts><trans-unit id="340135b1-46c8-40e5-80a2-c1f39e55b965"><source>s1<g id="815">-</g><g id="818">&gt;</g>addTransition(s1<g id="821">,</g> SIGNAL(finished())<g id="824">,</g> s2);</source><seg-source>s1<g id="815">-</g><g id="818">&gt;</g>addTransition(s1<g id="821">,</g> SIGNAL(finished())<g id="824">,</g> s2);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="137"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="168"/></sdl:cxts><trans-unit id="lockTU_064cc789-3118-4c62-8d0a-c1ccad4a1f95" translate="no" sdl:locktype="Structure"><source><g id="827">s1</g></source></trans-unit><trans-unit id="lockTU_cacdafff-3127-416e-8e24-50d28e02b8bc" translate="no" sdl:locktype="Structure"><source><g id="830">done</g></source></trans-unit><trans-unit id="lockTU_7f2091e5-2595-4ef2-abf2-ae4dfa955390" translate="no" sdl:locktype="Structure"><source><g id="833">s1</g></source></trans-unit><trans-unit id="lockTU_dc3afdd6-0599-46a9-8c8f-0f0860822f5d" translate="no" sdl:locktype="Structure"><source><g id="839">s1</g></source></trans-unit><trans-unit id="lockTU_0ebd48e7-8c0f-4065-9a51-f04d3995e08d" translate="no" sdl:locktype="Structure"><source><g id="827">s1</g></source></trans-unit><trans-unit id="lockTU_fd7e89e5-6505-435f-bb60-5f9c54628865" translate="no" sdl:locktype="Structure"><source><g id="830">done</g></source></trans-unit><trans-unit id="lockTU_7a11a9a1-3b4f-47f2-9d30-52de4ae39e93" translate="no" sdl:locktype="Structure"><source><g id="833">s1</g></source></trans-unit><trans-unit id="lockTU_8f59f6b8-531f-4dfb-90fb-664520a9f926" translate="no" sdl:locktype="Structure"><source><g id="839">s1</g></source></trans-unit><trans-unit id="4dc5c75f-2581-43e9-ac4c-051e591baf75"><source>Using final states in composite states is useful when you want to hide the internal details of a composite state; i.e. the only thing the outside world should be able to do is enter the state, and get a notification when the state has completed its work. This is a very powerful abstraction and encapsulation mechanism when building complex (deeply nested) state machines. (In the above example, you could of course create a transition directly from <x id="locked57" xid="lockTU_0ebd48e7-8c0f-4065-9a51-f04d3995e08d"/> &apos;s <x id="locked58" xid="lockTU_fd7e89e5-6505-435f-bb60-5f9c54628865"/> state rather than relying on <x id="locked59" xid="lockTU_7a11a9a1-3b4f-47f2-9d30-52de4ae39e93"/> &apos;s <g id="836">finished()</g> signal, but with the consequence that implementation details of <x id="locked60" xid="lockTU_8f59f6b8-531f-4dfb-90fb-664520a9f926"/> are exposed and depended on).</source><seg-source>Using final states in composite states is useful when you want to hide the internal details of a composite state; i.e. the only thing the outside world should be able to do is enter the state, and get a notification when the state has completed its work. This is a very powerful abstraction and encapsulation mechanism when building complex (deeply nested) state machines. (In the above example, you could of course create a transition directly from <x id="locked61" xid="lockTU_064cc789-3118-4c62-8d0a-c1ccad4a1f95"/> &apos;s <x id="locked62" xid="lockTU_cacdafff-3127-416e-8e24-50d28e02b8bc"/> state rather than relying on <x id="locked63" xid="lockTU_7f2091e5-2595-4ef2-abf2-ae4dfa955390"/> &apos;s <g id="836">finished()</g> signal, but with the consequence that implementation details of <x id="locked64" xid="lockTU_dc3afdd6-0599-46a9-8c8f-0f0860822f5d"/> are exposed and depended on).</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="138"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="169"/></sdl:cxts><trans-unit id="766cdcd1-70d8-4f8c-92ec-0f6c01b5e186"><source>For parallel state groups, the <g id="842">QState::finished</g>() signal is emitted when <g id="845">all</g> the child states have entered final states.</source><seg-source>For parallel state groups, the <g id="842">QState::finished</g>() signal is emitted when <g id="845">all</g> the child states have entered final states.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="139"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="bba366eb-2c54-4744-820a-7b79a57ef7f6"><source><g id="848"/></source><seg-source><g id="848"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="140"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="170"/></sdl:cxts><trans-unit id="189eb304-edf2-471a-9029-f2e037ebe2e0"><source>Targetless Transitions</source><seg-source>Targetless Transitions</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="141"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="171"/></sdl:cxts><trans-unit id="a918d5a4-ac01-47de-a32c-3101f0f8f2cd"><source>A transition need not have a target state. A transition without a target can be triggered the same way as any other transition; the difference is that when a targetless transition is triggered, it doesn&apos;t cause any state changes. This allows you to react to a signal or event when your machine is in a certain state, without having to leave that state. Example:</source><seg-source>A transition need not have a target state. A transition without a target can be triggered the same way as any other transition; the difference is that when a targetless transition is triggered, it doesn&apos;t cause any state changes. This allows you to react to a signal or event when your machine is in a certain state, without having to leave that state. Example:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="142"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="172"/></sdl:cxts><trans-unit id="0c4b1c64-ac63-495c-98cc-b289ee79ef1d"><source><g id="851">QStateMachine</g> machine; <g id="854">QState</g> <g id="857">*</g>s1 <g id="860">=</g> <g id="863">new</g> <g id="866">QState</g>(<g id="869">&amp;</g>machine); <g id="872">QPushButton</g> button; <g id="875">QSignalTransition</g> <g id="878">*</g>trans <g id="881">=</g> <g id="884">new</g> <g id="887">QSignalTransition</g>(<g id="890">&amp;</g>button<g id="893">,</g> SIGNAL(clicked())); s1<g id="896">-</g><g id="899">&gt;</g>addTransition(trans); <g id="902">QMessageBox</g> msgBox; msgBox<g id="905">.</g>setText(<g id="908">&quot;The button was clicked; carry on.&quot;</g>); <g id="911">QObject</g><g id="914">::</g>connect(trans<g id="917">,</g> SIGNAL(triggered())<g id="920">,</g> <g id="923">&amp;</g>msgBox<g id="926">,</g> SLOT(exec())); machine<g id="929">.</g>setInitialState(s1);</source><seg-source><g id="851">QStateMachine</g> machine; <g id="854">QState</g> <g id="857">*</g>s1 <g id="860">=</g> <g id="863">new</g> <g id="866">QState</g>(<g id="869">&amp;</g>machine); <g id="872">QPushButton</g> button; <g id="875">QSignalTransition</g> <g id="878">*</g>trans <g id="881">=</g> <g id="884">new</g> <g id="887">QSignalTransition</g>(<g id="890">&amp;</g>button<g id="893">,</g> SIGNAL(clicked())); s1<g id="896">-</g><g id="899">&gt;</g>addTransition(trans); <g id="902">QMessageBox</g> msgBox; msgBox<g id="905">.</g>setText(<g id="908">&quot;The button was clicked; carry on.&quot;</g>); <g id="911">QObject</g><g id="914">::</g>connect(trans<g id="917">,</g> SIGNAL(triggered())<g id="920">,</g> <g id="923">&amp;</g>msgBox<g id="926">,</g> SLOT(exec())); machine<g id="929">.</g>setInitialState(s1);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="143"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="173"/></sdl:cxts><trans-unit id="343a5c78-820c-4351-b8f1-81a5f2c277fe"><source>The message box will be displayed each time the button is clicked, but the state machine will remain in its current state (s1). If the target state were explicitly set to s1, however, s1 would be exited and re-entered each time (e.g. the <g id="932">QAbstractState::entered</g>() and <g id="935">QAbstractState::exited</g>() signals would be emitted).</source><seg-source>The message box will be displayed each time the button is clicked, but the state machine will remain in its current state (s1). If the target state were explicitly set to s1, however, s1 would be exited and re-entered each time (e.g. the <g id="932">QAbstractState::entered</g>() and <g id="935">QAbstractState::exited</g>() signals would be emitted).</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="144"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="9f60b541-0dab-4e19-8f12-597beb0b6b55"><source><g id="938"/></source><seg-source><g id="938"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="145"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="174"/></sdl:cxts><trans-unit id="91c061db-6419-435d-ae79-886c9c073e5f"><source>Events, Transitions and Guards</source><seg-source>Events, Transitions and Guards</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="146"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="175"/></sdl:cxts><trans-unit id="79ec6494-315d-45c7-82c4-fefc5a661a68"><source>A <g id="941">QStateMachine</g> runs its own event loop. For signal transitions (<g id="944">QSignalTransition</g> objects), <g id="947">QStateMachine</g> automatically posts a <g id="950">QStateMachine::SignalEvent</g> to itself when it intercepts the corresponding signal; similarly, for <g id="953">QObject</g> event transitions (<g id="956">QEventTransition</g> objects) a <g id="959">QStateMachine::WrappedEvent</g> is posted.</source><seg-source>A <g id="941">QStateMachine</g> runs its own event loop. For signal transitions (<g id="944">QSignalTransition</g> objects), <g id="947">QStateMachine</g> automatically posts a <g id="950">QStateMachine::SignalEvent</g> to itself when it intercepts the corresponding signal; similarly, for <g id="953">QObject</g> event transitions (<g id="956">QEventTransition</g> objects) a <g id="959">QStateMachine::WrappedEvent</g> is posted.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="147"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="176"/></sdl:cxts><trans-unit id="e97d80f0-6957-419f-a9f9-3851444fffde"><source>You can post your own events to the state machine using <g id="962">QStateMachine::postEvent</g>().</source><seg-source>You can post your own events to the state machine using <g id="962">QStateMachine::postEvent</g>().</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="148"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="177"/></sdl:cxts><trans-unit id="5ee64d98-9506-4294-b238-044b6d61bd1e"><source>When posting a custom event to the state machine, you typically also have one or more custom transitions that can be triggered from events of that type. To create such a transition, you subclass <g id="965">QAbstractTransition</g> and reimplement <g id="968">QAbstractTransition::eventTest</g>(), where you check if an event matches your event type (and optionally other criteria, e.g. attributes of the event object).</source><seg-source>When posting a custom event to the state machine, you typically also have one or more custom transitions that can be triggered from events of that type. To create such a transition, you subclass <g id="965">QAbstractTransition</g> and reimplement <g id="968">QAbstractTransition::eventTest</g>(), where you check if an event matches your event type (and optionally other criteria, e.g. attributes of the event object).</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="149"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="178"/></sdl:cxts><trans-unit id="lockTU_cd6fe614-e820-4d5a-9ca3-dbc065f71a9a" translate="no" sdl:locktype="Structure"><source><g id="971">StringEvent</g></source></trans-unit><trans-unit id="lockTU_08987e6a-054d-4948-850d-07a49c1c0526" translate="no" sdl:locktype="Structure"><source><g id="971">StringEvent</g></source></trans-unit><trans-unit id="cb846ce3-3092-4c82-9199-81bb40bc4e90"><source>Here we define our own custom event type, <x id="locked65" xid="lockTU_08987e6a-054d-4948-850d-07a49c1c0526"/>, for posting strings to the state machine:</source><seg-source>Here we define our own custom event type, <x id="locked66" xid="lockTU_cd6fe614-e820-4d5a-9ca3-dbc065f71a9a"/>, for posting strings to the state machine:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="150"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="179"/></sdl:cxts><trans-unit id="37ff97b0-c0a4-4aaf-a098-b3052c0ba922"><source><g id="974">struct</g> StringEvent : <g id="977">public</g> <g id="980">QEvent</g> { StringEvent(<g id="983">const</g> <g id="986">QString</g> <g id="989">&amp;</g>val) : <g id="992">QEvent</g>(<g id="995">QEvent</g><g id="998">::</g>Type(<g id="1001">QEvent</g><g id="1004">::</g>User<g id="1007">+</g><g id="1010">1</g>))<g id="1013">,</g> value(val) {} <g id="1016">QString</g> value; };</source><seg-source><g id="974">struct</g> StringEvent : <g id="977">public</g> <g id="980">QEvent</g> { StringEvent(<g id="983">const</g> <g id="986">QString</g> <g id="989">&amp;</g>val) : <g id="992">QEvent</g>(<g id="995">QEvent</g><g id="998">::</g>Type(<g id="1001">QEvent</g><g id="1004">::</g>User<g id="1007">+</g><g id="1010">1</g>))<g id="1013">,</g> value(val) {} <g id="1016">QString</g> value; };</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="151"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="180"/></sdl:cxts><trans-unit id="da5aad8a-db02-4154-bdb8-b9397feb09c5"><source>Next, we define a transition that only triggers when the event&apos;s string matches a particular string (a <g id="1019">guarded</g> transition):</source><seg-source>Next, we define a transition that only triggers when the event&apos;s string matches a particular string (a <g id="1019">guarded</g> transition):</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="152"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="181"/></sdl:cxts><trans-unit id="faa17274-7938-4320-bcb1-cd62321855f4"><source><g id="1022">class</g> StringTransition : <g id="1025">public</g> <g id="1028">QAbstractTransition</g> { Q_OBJECT <g id="1031">public</g>: StringTransition(<g id="1034">const</g> <g id="1037">QString</g> <g id="1040">&amp;</g>value) : m_value(value) {} <g id="1043">protected</g>: <g id="1046">virtual</g> bool eventTest(<g id="1049">QEvent</g> <g id="1052">*</g>e) { <g id="1055">if</g> (e<g id="1058">-</g><g id="1061">&gt;</g>type() <g id="1064">!</g><g id="1067">=</g> <g id="1070">QEvent</g><g id="1073">::</g>Type(<g id="1076">QEvent</g><g id="1079">::</g>User<g id="1082">+</g><g id="1085">1</g>)) <g id="1088">// StringEvent</g> <g id="1091">return</g> <g id="1094">false</g>; StringEvent <g id="1097">*</g>se <g id="1100">=</g> <g id="1103">static_cast</g><g id="1106">&lt;</g>StringEvent<g id="1109">*</g><g id="1112">&gt;</g>(e); <g id="1115">return</g> (m_value <g id="1118">=</g><g id="1121">=</g> se<g id="1124">-</g><g id="1127">&gt;</g>value); } <g id="1130">virtual</g> <g id="1133">void</g> onTransition(<g id="1136">QEvent</g> <g id="1139">*</g>) {} <g id="1142">private</g>: <g id="1145">QString</g> m_value; };</source><seg-source><g id="1022">class</g> StringTransition : <g id="1025">public</g> <g id="1028">QAbstractTransition</g> { Q_OBJECT <g id="1031">public</g>: StringTransition(<g id="1034">const</g> <g id="1037">QString</g> <g id="1040">&amp;</g>value) : m_value(value) {} <g id="1043">protected</g>: <g id="1046">virtual</g> bool eventTest(<g id="1049">QEvent</g> <g id="1052">*</g>e) { <g id="1055">if</g> (e<g id="1058">-</g><g id="1061">&gt;</g>type() <g id="1064">!</g><g id="1067">=</g> <g id="1070">QEvent</g><g id="1073">::</g>Type(<g id="1076">QEvent</g><g id="1079">::</g>User<g id="1082">+</g><g id="1085">1</g>)) <g id="1088">// StringEvent</g> <g id="1091">return</g> <g id="1094">false</g>; StringEvent <g id="1097">*</g>se <g id="1100">=</g> <g id="1103">static_cast</g><g id="1106">&lt;</g>StringEvent<g id="1109">*</g><g id="1112">&gt;</g>(e); <g id="1115">return</g> (m_value <g id="1118">=</g><g id="1121">=</g> se<g id="1124">-</g><g id="1127">&gt;</g>value); } <g id="1130">virtual</g> <g id="1133">void</g> onTransition(<g id="1136">QEvent</g> <g id="1139">*</g>) {} <g id="1142">private</g>: <g id="1145">QString</g> m_value; };</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="153"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="182"/></sdl:cxts><trans-unit id="lockTU_f813fdc7-5ce2-4a14-930d-c19f1d3dfc43" translate="no" sdl:locktype="Structure"><source><g id="1151">StringEvent</g></source></trans-unit><trans-unit id="lockTU_9ecf8ca9-7ad0-4bd5-ae4e-251d3a3ea289" translate="no" sdl:locktype="Structure"><source><g id="1151">StringEvent</g></source></trans-unit><trans-unit id="c8f7e14e-e066-4471-8a7c-fc625357eeb6"><source>In the <g id="1148">eventTest()</g> reimplementation, we first check if the event type is the desired one; if so, we cast the event to a <x id="locked67" xid="lockTU_9ecf8ca9-7ad0-4bd5-ae4e-251d3a3ea289"/> and perform the string comparison.</source><seg-source>In the <g id="1148">eventTest()</g> reimplementation, we first check if the event type is the desired one; if so, we cast the event to a <x id="locked68" xid="lockTU_f813fdc7-5ce2-4a14-930d-c19f1d3dfc43"/> and perform the string comparison.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="154"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="183"/></sdl:cxts><trans-unit id="290751bc-05c1-4bd6-8490-6d688c3052bc"><source>The following is a statechart that uses the custom event and transition:</source><seg-source>The following is a statechart that uses the custom event and transition:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="155"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="184"/></sdl:cxts><trans-unit id="7b91e440-56c5-44dd-af59-e613facd67f1"><source><x id="1152" xid="2e0ebd61-eb12-4c34-b573-4d736d4ee7ff"/></source><seg-source><x id="1152" xid="2e0ebd61-eb12-4c34-b573-4d736d4ee7ff"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="76"/></sdl:cxts><trans-unit id="2e0ebd61-eb12-4c34-b573-4d736d4ee7ff"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="156"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="185"/></sdl:cxts><trans-unit id="94e41eaf-4e08-4184-a038-7b0fb1addab3"><source>Here&apos;s what the implementation of the statechart looks like:</source><seg-source>Here&apos;s what the implementation of the statechart looks like:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="157"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="186"/></sdl:cxts><trans-unit id="ff6c854f-2c93-4d53-965f-45abfd755bbc"><source><g id="1155">QStateMachine</g> machine; <g id="1158">QState</g> <g id="1161">*</g>s1 <g id="1164">=</g> <g id="1167">new</g> <g id="1170">QState</g>(); <g id="1173">QState</g> <g id="1176">*</g>s2 <g id="1179">=</g> <g id="1182">new</g> <g id="1185">QState</g>(); <g id="1188">QFinalState</g> <g id="1191">*</g>done <g id="1194">=</g> <g id="1197">new</g> <g id="1200">QFinalState</g>(); StringTransition <g id="1203">*</g>t1 <g id="1206">=</g> <g id="1209">new</g> StringTransition(<g id="1212">&quot;Hello&quot;</g>); t1<g id="1215">-</g><g id="1218">&gt;</g>setTargetState(s2); s1<g id="1221">-</g><g id="1224">&gt;</g>addTransition(t1); StringTransition <g id="1227">*</g>t2 <g id="1230">=</g> <g id="1233">new</g> StringTransition(<g id="1236">&quot;world&quot;</g>); t2<g id="1239">-</g><g id="1242">&gt;</g>setTargetState(done); s2<g id="1245">-</g><g id="1248">&gt;</g>addTransition(t2); machine<g id="1251">.</g>addState(s1); machine<g id="1254">.</g>addState(s2); machine<g id="1257">.</g>addState(done); machine<g id="1260">.</g>setInitialState(s1);</source><seg-source><g id="1155">QStateMachine</g> machine; <g id="1158">QState</g> <g id="1161">*</g>s1 <g id="1164">=</g> <g id="1167">new</g> <g id="1170">QState</g>(); <g id="1173">QState</g> <g id="1176">*</g>s2 <g id="1179">=</g> <g id="1182">new</g> <g id="1185">QState</g>(); <g id="1188">QFinalState</g> <g id="1191">*</g>done <g id="1194">=</g> <g id="1197">new</g> <g id="1200">QFinalState</g>(); StringTransition <g id="1203">*</g>t1 <g id="1206">=</g> <g id="1209">new</g> StringTransition(<g id="1212">&quot;Hello&quot;</g>); t1<g id="1215">-</g><g id="1218">&gt;</g>setTargetState(s2); s1<g id="1221">-</g><g id="1224">&gt;</g>addTransition(t1); StringTransition <g id="1227">*</g>t2 <g id="1230">=</g> <g id="1233">new</g> StringTransition(<g id="1236">&quot;world&quot;</g>); t2<g id="1239">-</g><g id="1242">&gt;</g>setTargetState(done); s2<g id="1245">-</g><g id="1248">&gt;</g>addTransition(t2); machine<g id="1251">.</g>addState(s1); machine<g id="1254">.</g>addState(s2); machine<g id="1257">.</g>addState(done); machine<g id="1260">.</g>setInitialState(s1);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="158"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="187"/></sdl:cxts><trans-unit id="cb0d6857-83fa-4bcb-bdaf-127559fd4765"><source>Once the machine is started, we can post events to it.</source><seg-source>Once the machine is started, we can post events to it.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="159"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="188"/></sdl:cxts><trans-unit id="372fccbd-a25b-4d63-8115-ad55d755050c"><source>machine<g id="1263">.</g>postEvent(<g id="1266">new</g> StringEvent(<g id="1269">&quot;Hello&quot;</g>)); machine<g id="1272">.</g>postEvent(<g id="1275">new</g> StringEvent(<g id="1278">&quot;world&quot;</g>));</source><seg-source>machine<g id="1263">.</g>postEvent(<g id="1266">new</g> StringEvent(<g id="1269">&quot;Hello&quot;</g>)); machine<g id="1272">.</g>postEvent(<g id="1275">new</g> StringEvent(<g id="1278">&quot;world&quot;</g>));</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="160"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="189"/></sdl:cxts><trans-unit id="21914bd3-4a4b-452c-ba59-cd91d0096f98"><source>An event that is not handled by any relevant transition will be silently consumed by the state machine. It can be useful to group states and provide a default handling of such events; for example, as illustrated in the following statechart:</source><seg-source>An event that is not handled by any relevant transition will be silently consumed by the state machine. It can be useful to group states and provide a default handling of such events; for example, as illustrated in the following statechart:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="161"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="190"/></sdl:cxts><trans-unit id="3fd1b61a-aef7-4edf-ba39-43bd440a3d96"><source><x id="1279" xid="a4cdd260-c380-4ed5-ba08-5e395ff703a3"/></source><seg-source><x id="1279" xid="a4cdd260-c380-4ed5-ba08-5e395ff703a3"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="76"/></sdl:cxts><trans-unit id="a4cdd260-c380-4ed5-ba08-5e395ff703a3"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="162"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="191"/></sdl:cxts><trans-unit id="862f8aa0-c0dc-45e5-8f79-2ef4dc5136ab"><source>For deeply nested statecharts, you can add such &quot;fallback&quot; transitions at the level of granularity that&apos;s most appropriate.</source><seg-source>For deeply nested statecharts, you can add such &quot;fallback&quot; transitions at the level of granularity that&apos;s most appropriate.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="163"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="490d9de8-d085-4a0e-9641-53088a73367f"><source><g id="1282"/></source><seg-source><g id="1282"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="164"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="192"/></sdl:cxts><trans-unit id="5436ebde-e0d9-40ca-bc01-514aa732d672"><source>Using Restore Policy To Automatically Restore Properties</source><seg-source>Using Restore Policy To Automatically Restore Properties</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="165"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="193"/></sdl:cxts><trans-unit id="09499de1-30f3-4e4c-b8b1-73f1ebc6e0de"><source>In some state machines it can be useful to focus the attention on assigning properties in states, not on restoring them when the state is no longer active. If you know that a property should always be restored to its initial value when the machine enters a state that does not explicitly give the property a value, you can set the global restore policy to <g id="1285">QStateMachine::RestoreProperties</g>.</source><seg-source>In some state machines it can be useful to focus the attention on assigning properties in states, not on restoring them when the state is no longer active. If you know that a property should always be restored to its initial value when the machine enters a state that does not explicitly give the property a value, you can set the global restore policy to <g id="1285">QStateMachine::RestoreProperties</g>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="166"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="194"/></sdl:cxts><trans-unit id="ee1390de-8108-4a22-a6d9-8241fe6e48c5"><source><g id="1288">QStateMachine</g> machine; machine<g id="1291">.</g>setGlobalRestorePolicy(<g id="1294">QStateMachine</g><g id="1297">::</g>RestoreProperties);</source><seg-source><g id="1288">QStateMachine</g> machine; machine<g id="1291">.</g>setGlobalRestorePolicy(<g id="1294">QStateMachine</g><g id="1297">::</g>RestoreProperties);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="167"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="195"/></sdl:cxts><trans-unit id="5329a679-a3c1-4530-b51b-34cc3845cc0c"><source>When this restore policy is set, the machine will automatically restore all properties. If it enters a state where a given property is not set, it will first search the hierarchy of ancestors to see if the property is defined there. If it is, the property will be restored to the value defined by the closest ancestor. If not, it will be restored to its initial value (i.e. the value of the property before any property assignments in states were executed.)</source><seg-source>When this restore policy is set, the machine will automatically restore all properties. If it enters a state where a given property is not set, it will first search the hierarchy of ancestors to see if the property is defined there. If it is, the property will be restored to the value defined by the closest ancestor. If not, it will be restored to its initial value (i.e. the value of the property before any property assignments in states were executed.)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="168"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="196"/></sdl:cxts><trans-unit id="f4cb0275-8ab2-47ab-9b3e-20a157bee4c0"><source>Take the following code:</source><seg-source>Take the following code:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="169"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="197"/></sdl:cxts><trans-unit id="6a4e0b3a-4d8d-42a2-b300-8473ecb9e5c1"><source><g id="1300">QStateMachine</g> machine; machine<g id="1303">.</g>setGlobalRestorePolicy(<g id="1306">QStateMachine</g><g id="1309">::</g>RestoreProperties); <g id="1312">QState</g> <g id="1315">*</g>s1 <g id="1318">=</g> <g id="1321">new</g> <g id="1324">QState</g>(); s1<g id="1327">-</g><g id="1330">&gt;</g>assignProperty(object<g id="1333">,</g> <g id="1336">&quot;fooBar&quot;</g><g id="1339">,</g> <g id="1342">1.0</g>); machine<g id="1345">.</g>addState(s1); machine<g id="1348">.</g>setInitialState(s1); <g id="1351">QState</g> <g id="1354">*</g>s2 <g id="1357">=</g> <g id="1360">new</g> <g id="1363">QState</g>(); machine<g id="1366">.</g>addState(s2);</source><seg-source><g id="1300">QStateMachine</g> machine; machine<g id="1303">.</g>setGlobalRestorePolicy(<g id="1306">QStateMachine</g><g id="1309">::</g>RestoreProperties); <g id="1312">QState</g> <g id="1315">*</g>s1 <g id="1318">=</g> <g id="1321">new</g> <g id="1324">QState</g>(); s1<g id="1327">-</g><g id="1330">&gt;</g>assignProperty(object<g id="1333">,</g> <g id="1336">&quot;fooBar&quot;</g><g id="1339">,</g> <g id="1342">1.0</g>); machine<g id="1345">.</g>addState(s1); machine<g id="1348">.</g>setInitialState(s1); <g id="1351">QState</g> <g id="1354">*</g>s2 <g id="1357">=</g> <g id="1360">new</g> <g id="1363">QState</g>(); machine<g id="1366">.</g>addState(s2);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="170"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="198"/></sdl:cxts><trans-unit id="lockTU_9782d579-fa6f-4c24-95b3-1878dfb23d62" translate="no" sdl:locktype="Structure"><source><g id="1369">fooBar</g></source></trans-unit><trans-unit id="lockTU_6afd751c-8081-4d5e-8f04-4bb02848d7aa" translate="no" sdl:locktype="Structure"><source><g id="1372">s1</g></source></trans-unit><trans-unit id="lockTU_e3639e9e-070d-48ae-8251-7387388a60d2" translate="no" sdl:locktype="Structure"><source><g id="1375">s2</g></source></trans-unit><trans-unit id="lockTU_e612df14-ecca-44e6-a25f-30f3430c5fdb" translate="no" sdl:locktype="Structure"><source><g id="1369">fooBar</g></source></trans-unit><trans-unit id="lockTU_6a4ceb30-f032-4df4-9ccc-3f4fd1db6a49" translate="no" sdl:locktype="Structure"><source><g id="1372">s1</g></source></trans-unit><trans-unit id="lockTU_74ddb4bd-902b-4da6-aef3-cd1d35374a0c" translate="no" sdl:locktype="Structure"><source><g id="1375">s2</g></source></trans-unit><trans-unit id="a8440ac5-5f82-4ca1-becf-a1d91211fc10"><source>Lets say the property <x id="locked69" xid="lockTU_e612df14-ecca-44e6-a25f-30f3430c5fdb"/> is 0.0 when the machine starts. When the machine is in state <x id="locked70" xid="lockTU_6a4ceb30-f032-4df4-9ccc-3f4fd1db6a49"/>, the property will be 1.0, since the state explicitly assigns this value to it. When the machine is in state <x id="locked71" xid="lockTU_74ddb4bd-902b-4da6-aef3-cd1d35374a0c"/>, no value is explicitly defined for the property, so it will implicitly be restored to 0.0.</source><seg-source>Lets say the property <x id="locked72" xid="lockTU_9782d579-fa6f-4c24-95b3-1878dfb23d62"/> is 0.0 when the machine starts. When the machine is in state <x id="locked73" xid="lockTU_6afd751c-8081-4d5e-8f04-4bb02848d7aa"/>, the property will be 1.0, since the state explicitly assigns this value to it. When the machine is in state <x id="locked74" xid="lockTU_e3639e9e-070d-48ae-8251-7387388a60d2"/>, no value is explicitly defined for the property, so it will implicitly be restored to 0.0.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="171"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="199"/></sdl:cxts><trans-unit id="04e8dd13-7b6d-4d6b-a6be-b868cf1f4984"><source>If we are using nested states, the parent defines a value for the property which is inherited by all descendants that do not explicitly assign a value to the property.</source><seg-source>If we are using nested states, the parent defines a value for the property which is inherited by all descendants that do not explicitly assign a value to the property.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="172"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="200"/></sdl:cxts><trans-unit id="90ce643d-a848-4d05-87d7-e899a8e57b23"><source><g id="1378">QStateMachine</g> machine; machine<g id="1381">.</g>setGlobalRestorePolicy(<g id="1384">QStateMachine</g><g id="1387">::</g>RestoreProperties); <g id="1390">QState</g> <g id="1393">*</g>s1 <g id="1396">=</g> <g id="1399">new</g> <g id="1402">QState</g>(); s1<g id="1405">-</g><g id="1408">&gt;</g>assignProperty(object<g id="1411">,</g> <g id="1414">&quot;fooBar&quot;</g><g id="1417">,</g> <g id="1420">1.0</g>); machine<g id="1423">.</g>addState(s1); machine<g id="1426">.</g>setInitialState(s1); <g id="1429">QState</g> <g id="1432">*</g>s2 <g id="1435">=</g> <g id="1438">new</g> <g id="1441">QState</g>(s1); s2<g id="1444">-</g><g id="1447">&gt;</g>assignProperty(object<g id="1450">,</g> <g id="1453">&quot;fooBar&quot;</g><g id="1456">,</g> <g id="1459">2.0</g>); s1<g id="1462">-</g><g id="1465">&gt;</g>setInitialState(s2); <g id="1468">QState</g> <g id="1471">*</g>s3 <g id="1474">=</g> <g id="1477">new</g> <g id="1480">QState</g>(s1);</source><seg-source><g id="1378">QStateMachine</g> machine; machine<g id="1381">.</g>setGlobalRestorePolicy(<g id="1384">QStateMachine</g><g id="1387">::</g>RestoreProperties); <g id="1390">QState</g> <g id="1393">*</g>s1 <g id="1396">=</g> <g id="1399">new</g> <g id="1402">QState</g>(); s1<g id="1405">-</g><g id="1408">&gt;</g>assignProperty(object<g id="1411">,</g> <g id="1414">&quot;fooBar&quot;</g><g id="1417">,</g> <g id="1420">1.0</g>); machine<g id="1423">.</g>addState(s1); machine<g id="1426">.</g>setInitialState(s1); <g id="1429">QState</g> <g id="1432">*</g>s2 <g id="1435">=</g> <g id="1438">new</g> <g id="1441">QState</g>(s1); s2<g id="1444">-</g><g id="1447">&gt;</g>assignProperty(object<g id="1450">,</g> <g id="1453">&quot;fooBar&quot;</g><g id="1456">,</g> <g id="1459">2.0</g>); s1<g id="1462">-</g><g id="1465">&gt;</g>setInitialState(s2); <g id="1468">QState</g> <g id="1471">*</g>s3 <g id="1474">=</g> <g id="1477">new</g> <g id="1480">QState</g>(s1);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="173"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="201"/></sdl:cxts><trans-unit id="lockTU_27e4974b-0d31-4d7a-8b33-d9bfe9441ad0" translate="no" sdl:locktype="Structure"><source><g id="1483">s1</g></source></trans-unit><trans-unit id="lockTU_b41265b2-19b8-474c-b447-58d36bc36898" translate="no" sdl:locktype="Structure"><source><g id="1486">s2</g></source></trans-unit><trans-unit id="lockTU_90423142-443f-4766-8269-dbb34273f023" translate="no" sdl:locktype="Structure"><source><g id="1489">s3</g></source></trans-unit><trans-unit id="lockTU_60549fe8-b2a3-49c3-bc88-e85aa28344e9" translate="no" sdl:locktype="Structure"><source><g id="1492">s2</g></source></trans-unit><trans-unit id="lockTU_34c46ee2-4fd7-444a-b70d-c0793967a9ca" translate="no" sdl:locktype="Structure"><source><g id="1495">fooBar</g></source></trans-unit><trans-unit id="lockTU_f82dee7f-fc04-4cc4-af5d-4c0c52fa37be" translate="no" sdl:locktype="Structure"><source><g id="1498">s3</g></source></trans-unit><trans-unit id="lockTU_b6af8076-d4f3-4e7b-bd48-cb29a1f0e753" translate="no" sdl:locktype="Structure"><source><g id="1501">s1</g></source></trans-unit><trans-unit id="lockTU_152ba483-0af6-445a-b0c3-bf949de7530d" translate="no" sdl:locktype="Structure"><source><g id="1504">fooBar</g></source></trans-unit><trans-unit id="lockTU_6a424053-43ed-4256-be1f-11e66fcd94e7" translate="no" sdl:locktype="Structure"><source><g id="1483">s1</g></source></trans-unit><trans-unit id="lockTU_d461f809-db05-4b22-bf24-cfb75a3484d3" translate="no" sdl:locktype="Structure"><source><g id="1486">s2</g></source></trans-unit><trans-unit id="lockTU_cab366b6-7d4c-4f54-906c-b6a60057fa65" translate="no" sdl:locktype="Structure"><source><g id="1489">s3</g></source></trans-unit><trans-unit id="lockTU_043740a6-5801-42b7-9cf3-ad94255f2449" translate="no" sdl:locktype="Structure"><source><g id="1492">s2</g></source></trans-unit><trans-unit id="lockTU_a1f752b0-b944-449b-9669-331d3806e60a" translate="no" sdl:locktype="Structure"><source><g id="1495">fooBar</g></source></trans-unit><trans-unit id="lockTU_ac2ef695-fd28-45ff-bbd8-9b6267be701b" translate="no" sdl:locktype="Structure"><source><g id="1498">s3</g></source></trans-unit><trans-unit id="lockTU_9de4a2a2-bd16-4c4e-8886-7f73b7bf1e1f" translate="no" sdl:locktype="Structure"><source><g id="1501">s1</g></source></trans-unit><trans-unit id="lockTU_aafdf0ca-4495-40cb-ad3f-c64abb684d08" translate="no" sdl:locktype="Structure"><source><g id="1504">fooBar</g></source></trans-unit><trans-unit id="9e3a3506-ebf8-44da-844c-d7080aa29c87"><source>Here <x id="locked75" xid="lockTU_6a424053-43ed-4256-be1f-11e66fcd94e7"/> has two children: <x id="locked76" xid="lockTU_d461f809-db05-4b22-bf24-cfb75a3484d3"/> and <x id="locked77" xid="lockTU_cab366b6-7d4c-4f54-906c-b6a60057fa65"/>. When <x id="locked78" xid="lockTU_043740a6-5801-42b7-9cf3-ad94255f2449"/> is entered, the property <x id="locked79" xid="lockTU_a1f752b0-b944-449b-9669-331d3806e60a"/> will have the value 2.0, since this is explicitly defined for the state. When the machine is in state <x id="locked80" xid="lockTU_ac2ef695-fd28-45ff-bbd8-9b6267be701b"/>, no value is defined for the state, but <x id="locked81" xid="lockTU_9de4a2a2-bd16-4c4e-8886-7f73b7bf1e1f"/> defines the property to be 1.0, so this is the value that will be assigned to <x id="locked82" xid="lockTU_aafdf0ca-4495-40cb-ad3f-c64abb684d08"/>.</source><seg-source>Here <x id="locked83" xid="lockTU_27e4974b-0d31-4d7a-8b33-d9bfe9441ad0"/> has two children: <x id="locked84" xid="lockTU_b41265b2-19b8-474c-b447-58d36bc36898"/> and <x id="locked85" xid="lockTU_90423142-443f-4766-8269-dbb34273f023"/>. When <x id="locked86" xid="lockTU_60549fe8-b2a3-49c3-bc88-e85aa28344e9"/> is entered, the property <x id="locked87" xid="lockTU_34c46ee2-4fd7-444a-b70d-c0793967a9ca"/> will have the value 2.0, since this is explicitly defined for the state. When the machine is in state <x id="locked88" xid="lockTU_f82dee7f-fc04-4cc4-af5d-4c0c52fa37be"/>, no value is defined for the state, but <x id="locked89" xid="lockTU_b6af8076-d4f3-4e7b-bd48-cb29a1f0e753"/> defines the property to be 1.0, so this is the value that will be assigned to <x id="locked90" xid="lockTU_152ba483-0af6-445a-b0c3-bf949de7530d"/>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="174"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="829e5145-69bb-4a1e-89ac-7e2723ddd1fe"><source><g id="1507"/></source><seg-source><g id="1507"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="175"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="202"/></sdl:cxts><trans-unit id="62e87bd0-bf28-4454-9c11-c4b865e7e9e1"><source>Animating Property Assignments</source><seg-source>Animating Property Assignments</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="176"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="203"/></sdl:cxts><trans-unit id="d9c6e85a-74a1-4c91-9dcd-f6ec286bb42a"><source>The State Machine API connects with the Animation API in Qt to allow automatically animating properties as they are assigned in states.</source><seg-source>The State Machine API connects with the Animation API in Qt to allow automatically animating properties as they are assigned in states.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="177"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="204"/></sdl:cxts><trans-unit id="b0cfde1b-17bd-4d71-bf29-453c6572bf3d"><source>Say we have the following code:</source><seg-source>Say we have the following code:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="178"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="205"/></sdl:cxts><trans-unit id="8c6e22ce-80d2-4bde-9676-926bdb9aa5e9"><source><g id="1510">QState</g> <g id="1513">*</g>s1 <g id="1516">=</g> <g id="1519">new</g> <g id="1522">QState</g>(); <g id="1525">QState</g> <g id="1528">*</g>s2 <g id="1531">=</g> <g id="1534">new</g> <g id="1537">QState</g>(); s1<g id="1540">-</g><g id="1543">&gt;</g>assignProperty(button<g id="1546">,</g> <g id="1549">&quot;geometry&quot;</g><g id="1552">,</g> <g id="1555">QRectF</g>(<g id="1558">0</g><g id="1561">,</g> <g id="1564">0</g><g id="1567">,</g> <g id="1570">50</g><g id="1573">,</g> <g id="1576">50</g>)); s2<g id="1579">-</g><g id="1582">&gt;</g>assignProperty(button<g id="1585">,</g> <g id="1588">&quot;geometry&quot;</g><g id="1591">,</g> <g id="1594">QRectF</g>(<g id="1597">0</g><g id="1600">,</g> <g id="1603">0</g><g id="1606">,</g> <g id="1609">100</g><g id="1612">,</g> <g id="1615">100</g>)); s1<g id="1618">-</g><g id="1621">&gt;</g>addTransition(button<g id="1624">,</g> SIGNAL(clicked())<g id="1627">,</g> s2);</source><seg-source><g id="1510">QState</g> <g id="1513">*</g>s1 <g id="1516">=</g> <g id="1519">new</g> <g id="1522">QState</g>(); <g id="1525">QState</g> <g id="1528">*</g>s2 <g id="1531">=</g> <g id="1534">new</g> <g id="1537">QState</g>(); s1<g id="1540">-</g><g id="1543">&gt;</g>assignProperty(button<g id="1546">,</g> <g id="1549">&quot;geometry&quot;</g><g id="1552">,</g> <g id="1555">QRectF</g>(<g id="1558">0</g><g id="1561">,</g> <g id="1564">0</g><g id="1567">,</g> <g id="1570">50</g><g id="1573">,</g> <g id="1576">50</g>)); s2<g id="1579">-</g><g id="1582">&gt;</g>assignProperty(button<g id="1585">,</g> <g id="1588">&quot;geometry&quot;</g><g id="1591">,</g> <g id="1594">QRectF</g>(<g id="1597">0</g><g id="1600">,</g> <g id="1603">0</g><g id="1606">,</g> <g id="1609">100</g><g id="1612">,</g> <g id="1615">100</g>)); s1<g id="1618">-</g><g id="1621">&gt;</g>addTransition(button<g id="1624">,</g> SIGNAL(clicked())<g id="1627">,</g> s2);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="179"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="206"/></sdl:cxts><trans-unit id="lockTU_56f18f9b-cbee-497c-bfc6-6092f977f43f" translate="no" sdl:locktype="Structure"><source><g id="1630">s1</g></source></trans-unit><trans-unit id="lockTU_c54c4557-e95d-472a-bd8e-80ccc4e46f57" translate="no" sdl:locktype="Structure"><source><g id="1633">button</g></source></trans-unit><trans-unit id="lockTU_c90cc576-ebbb-4ba3-ad29-d46bb2efdf71" translate="no" sdl:locktype="Structure"><source><g id="1636">s2</g></source></trans-unit><trans-unit id="lockTU_f7192e7a-1233-4570-817d-57eda9a03ea5" translate="no" sdl:locktype="Structure"><source><g id="1639">s1</g></source></trans-unit><trans-unit id="lockTU_60edf503-9a48-4dfe-8671-328b9b06efe1" translate="no" sdl:locktype="Structure"><source><g id="1642">s2</g></source></trans-unit><trans-unit id="lockTU_67017788-4249-4cfe-814b-48e52beac9e4" translate="no" sdl:locktype="Structure"><source><g id="1630">s1</g></source></trans-unit><trans-unit id="lockTU_c912dd38-48d0-4e9c-b563-97d10338c6db" translate="no" sdl:locktype="Structure"><source><g id="1633">button</g></source></trans-unit><trans-unit id="lockTU_cc0b0311-1bdf-4961-8be9-c5bc90fa90c1" translate="no" sdl:locktype="Structure"><source><g id="1636">s2</g></source></trans-unit><trans-unit id="lockTU_28b0e9e8-fc89-4626-95fd-9af4f850f159" translate="no" sdl:locktype="Structure"><source><g id="1639">s1</g></source></trans-unit><trans-unit id="lockTU_0d8b5bec-3400-4eb3-802d-b8d086aa70da" translate="no" sdl:locktype="Structure"><source><g id="1642">s2</g></source></trans-unit><trans-unit id="204a7248-dd6d-410a-9b2d-505fca4d0e37"><source>Here we define two states of a user interface. In <x id="locked91" xid="lockTU_67017788-4249-4cfe-814b-48e52beac9e4"/> the <x id="locked92" xid="lockTU_c912dd38-48d0-4e9c-b563-97d10338c6db"/> is small, and in <x id="locked93" xid="lockTU_cc0b0311-1bdf-4961-8be9-c5bc90fa90c1"/> it is bigger. If we click the button to transition from <x id="locked94" xid="lockTU_28b0e9e8-fc89-4626-95fd-9af4f850f159"/> to <x id="locked95" xid="lockTU_0d8b5bec-3400-4eb3-802d-b8d086aa70da"/>, the geometry of the button will be set immediately when a given state has been entered. If we want the transition to be smooth, however, all we need to do is make a <g id="1645">QPropertyAnimation</g> and add this to the transition object.</source><seg-source>Here we define two states of a user interface. In <x id="locked96" xid="lockTU_56f18f9b-cbee-497c-bfc6-6092f977f43f"/> the <x id="locked97" xid="lockTU_c54c4557-e95d-472a-bd8e-80ccc4e46f57"/> is small, and in <x id="locked98" xid="lockTU_c90cc576-ebbb-4ba3-ad29-d46bb2efdf71"/> it is bigger. If we click the button to transition from <x id="locked99" xid="lockTU_f7192e7a-1233-4570-817d-57eda9a03ea5"/> to <x id="locked100" xid="lockTU_60edf503-9a48-4dfe-8671-328b9b06efe1"/>, the geometry of the button will be set immediately when a given state has been entered. If we want the transition to be smooth, however, all we need to do is make a <g id="1645">QPropertyAnimation</g> and add this to the transition object.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="180"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="207"/></sdl:cxts><trans-unit id="cdbe7c37-4f20-4c35-9c9d-6a25a59502a5"><source><g id="1648">QState</g> <g id="1651">*</g>s1 <g id="1654">=</g> <g id="1657">new</g> <g id="1660">QState</g>(); <g id="1663">QState</g> <g id="1666">*</g>s2 <g id="1669">=</g> <g id="1672">new</g> <g id="1675">QState</g>(); s1<g id="1678">-</g><g id="1681">&gt;</g>assignProperty(button<g id="1684">,</g> <g id="1687">&quot;geometry&quot;</g><g id="1690">,</g> <g id="1693">QRectF</g>(<g id="1696">0</g><g id="1699">,</g> <g id="1702">0</g><g id="1705">,</g> <g id="1708">50</g><g id="1711">,</g> <g id="1714">50</g>)); s2<g id="1717">-</g><g id="1720">&gt;</g>assignProperty(button<g id="1723">,</g> <g id="1726">&quot;geometry&quot;</g><g id="1729">,</g> <g id="1732">QRectF</g>(<g id="1735">0</g><g id="1738">,</g> <g id="1741">0</g><g id="1744">,</g> <g id="1747">100</g><g id="1750">,</g> <g id="1753">100</g>)); <g id="1756">QSignalTransition</g> <g id="1759">*</g>transition <g id="1762">=</g> s1<g id="1765">-</g><g id="1768">&gt;</g>addTransition(button<g id="1771">,</g> SIGNAL(clicked())<g id="1774">,</g> s2); transition<g id="1777">-</g><g id="1780">&gt;</g>addAnimation(<g id="1783">new</g> <g id="1786">QPropertyAnimation</g>(button<g id="1789">,</g> <g id="1792">&quot;geometry&quot;</g>));</source><seg-source><g id="1648">QState</g> <g id="1651">*</g>s1 <g id="1654">=</g> <g id="1657">new</g> <g id="1660">QState</g>(); <g id="1663">QState</g> <g id="1666">*</g>s2 <g id="1669">=</g> <g id="1672">new</g> <g id="1675">QState</g>(); s1<g id="1678">-</g><g id="1681">&gt;</g>assignProperty(button<g id="1684">,</g> <g id="1687">&quot;geometry&quot;</g><g id="1690">,</g> <g id="1693">QRectF</g>(<g id="1696">0</g><g id="1699">,</g> <g id="1702">0</g><g id="1705">,</g> <g id="1708">50</g><g id="1711">,</g> <g id="1714">50</g>)); s2<g id="1717">-</g><g id="1720">&gt;</g>assignProperty(button<g id="1723">,</g> <g id="1726">&quot;geometry&quot;</g><g id="1729">,</g> <g id="1732">QRectF</g>(<g id="1735">0</g><g id="1738">,</g> <g id="1741">0</g><g id="1744">,</g> <g id="1747">100</g><g id="1750">,</g> <g id="1753">100</g>)); <g id="1756">QSignalTransition</g> <g id="1759">*</g>transition <g id="1762">=</g> s1<g id="1765">-</g><g id="1768">&gt;</g>addTransition(button<g id="1771">,</g> SIGNAL(clicked())<g id="1774">,</g> s2); transition<g id="1777">-</g><g id="1780">&gt;</g>addAnimation(<g id="1783">new</g> <g id="1786">QPropertyAnimation</g>(button<g id="1789">,</g> <g id="1792">&quot;geometry&quot;</g>));</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="181"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="208"/></sdl:cxts><trans-unit id="0c8504e2-065d-4977-a09c-54a9507301aa"><source>Adding an animation for the property in question means that the property assignment will no longer take immediate effect when the state has been entered. Instead, the animation will start playing when the state has been entered and smoothly animate the property assignment. Since we do not set the start value or end value of the animation, these will be set implicitly. The start value of the animation will be the property&apos;s current value when the animation starts, and the end value will be set based on the property assignments defined for the state.</source><seg-source>Adding an animation for the property in question means that the property assignment will no longer take immediate effect when the state has been entered. Instead, the animation will start playing when the state has been entered and smoothly animate the property assignment. Since we do not set the start value or end value of the animation, these will be set implicitly. The start value of the animation will be the property&apos;s current value when the animation starts, and the end value will be set based on the property assignments defined for the state.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="182"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="209"/></sdl:cxts><trans-unit id="d195a6a5-f07d-4b15-aeca-7c9a41289928"><source>If the global restore policy of the state machine is set to <g id="1795">QStateMachine::RestoreProperties</g>, it is possible to also add animations for the property restorations.</source><seg-source>If the global restore policy of the state machine is set to <g id="1795">QStateMachine::RestoreProperties</g>, it is possible to also add animations for the property restorations.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="183"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="481cd508-3053-4b00-9677-df9c3acf1f17"><source><g id="1798"/></source><seg-source><g id="1798"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="184"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="210"/></sdl:cxts><trans-unit id="43c2b4e1-88c6-4b58-ae42-925fd6688c81"><source>Detecting That All Properties Have Been Set In A State</source><seg-source>Detecting That All Properties Have Been Set In A State</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="185"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="211"/></sdl:cxts><trans-unit id="65c289d8-9010-4bc9-baaa-a944fc2b1773"><source>When animations are used to assign properties, a state no longer defines the exact values that a property will have when the machine is in the given state. While the animation is running, the property can potentially have any value, depending on the animation.</source><seg-source>When animations are used to assign properties, a state no longer defines the exact values that a property will have when the machine is in the given state. While the animation is running, the property can potentially have any value, depending on the animation.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="186"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="212"/></sdl:cxts><trans-unit id="5775d07b-be4c-4f6c-a06f-a58525f46748"><source>In some cases, it can be useful to be able to detect when the property has actually been assigned the value defined by a state.</source><seg-source>In some cases, it can be useful to be able to detect when the property has actually been assigned the value defined by a state.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="187"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="213"/></sdl:cxts><trans-unit id="eca9c3a0-4dc4-4cd1-9488-31da8fe89158"><source>Say we have the following code:</source><seg-source>Say we have the following code:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="188"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="214"/></sdl:cxts><trans-unit id="a52ddb94-4e2d-431f-8b1a-ca973f3122c3"><source><g id="1801">QMessageBox</g> <g id="1804">*</g>messageBox <g id="1807">=</g> <g id="1810">new</g> <g id="1813">QMessageBox</g>(mainWindow); messageBox<g id="1816">-</g><g id="1819">&gt;</g>addButton(<g id="1822">QMessageBox</g><g id="1825">::</g>Ok); messageBox<g id="1828">-</g><g id="1831">&gt;</g>setText(<g id="1834">&quot;Button geometry has been set!&quot;</g>); messageBox<g id="1837">-</g><g id="1840">&gt;</g>setIcon(<g id="1843">QMessageBox</g><g id="1846">::</g>Information); <g id="1849">QState</g> <g id="1852">*</g>s1 <g id="1855">=</g> <g id="1858">new</g> <g id="1861">QState</g>(); <g id="1864">QState</g> <g id="1867">*</g>s2 <g id="1870">=</g> <g id="1873">new</g> <g id="1876">QState</g>(); s2<g id="1879">-</g><g id="1882">&gt;</g>assignProperty(button<g id="1885">,</g> <g id="1888">&quot;geometry&quot;</g><g id="1891">,</g> <g id="1894">QRectF</g>(<g id="1897">0</g><g id="1900">,</g> <g id="1903">0</g><g id="1906">,</g> <g id="1909">50</g><g id="1912">,</g> <g id="1915">50</g>)); connect(s2<g id="1918">,</g> SIGNAL(entered())<g id="1921">,</g> messageBox<g id="1924">,</g> SLOT(exec())); s1<g id="1927">-</g><g id="1930">&gt;</g>addTransition(button<g id="1933">,</g> SIGNAL(clicked())<g id="1936">,</g> s2);</source><seg-source><g id="1801">QMessageBox</g> <g id="1804">*</g>messageBox <g id="1807">=</g> <g id="1810">new</g> <g id="1813">QMessageBox</g>(mainWindow); messageBox<g id="1816">-</g><g id="1819">&gt;</g>addButton(<g id="1822">QMessageBox</g><g id="1825">::</g>Ok); messageBox<g id="1828">-</g><g id="1831">&gt;</g>setText(<g id="1834">&quot;Button geometry has been set!&quot;</g>); messageBox<g id="1837">-</g><g id="1840">&gt;</g>setIcon(<g id="1843">QMessageBox</g><g id="1846">::</g>Information); <g id="1849">QState</g> <g id="1852">*</g>s1 <g id="1855">=</g> <g id="1858">new</g> <g id="1861">QState</g>(); <g id="1864">QState</g> <g id="1867">*</g>s2 <g id="1870">=</g> <g id="1873">new</g> <g id="1876">QState</g>(); s2<g id="1879">-</g><g id="1882">&gt;</g>assignProperty(button<g id="1885">,</g> <g id="1888">&quot;geometry&quot;</g><g id="1891">,</g> <g id="1894">QRectF</g>(<g id="1897">0</g><g id="1900">,</g> <g id="1903">0</g><g id="1906">,</g> <g id="1909">50</g><g id="1912">,</g> <g id="1915">50</g>)); connect(s2<g id="1918">,</g> SIGNAL(entered())<g id="1921">,</g> messageBox<g id="1924">,</g> SLOT(exec())); s1<g id="1927">-</g><g id="1930">&gt;</g>addTransition(button<g id="1933">,</g> SIGNAL(clicked())<g id="1936">,</g> s2);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="189"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="215"/></sdl:cxts><trans-unit id="lockTU_677233a9-bf98-4958-bf23-ec3011f7a515" translate="no" sdl:locktype="Structure"><source><g id="1939">button</g></source></trans-unit><trans-unit id="lockTU_f1a4c421-e099-4b06-acc0-f0caa390948a" translate="no" sdl:locktype="Structure"><source><g id="1942">s2</g></source></trans-unit><trans-unit id="lockTU_cfdd5566-8dac-416c-9c5b-cfa34083e22f" translate="no" sdl:locktype="Structure"><source><g id="1939">button</g></source></trans-unit><trans-unit id="lockTU_215fb1ef-61d3-4182-9f62-4494c57e9a46" translate="no" sdl:locktype="Structure"><source><g id="1942">s2</g></source></trans-unit><trans-unit id="bb3003e8-3ecb-429f-9874-413537f231b4"><source>When <x id="locked101" xid="lockTU_cfdd5566-8dac-416c-9c5b-cfa34083e22f"/> is clicked, the machine will transition into state <x id="locked102" xid="lockTU_215fb1ef-61d3-4182-9f62-4494c57e9a46"/>, which will set the geometry of the button, and then pop up a message box to alert the user that the geometry has been changed.</source><seg-source>When <x id="locked103" xid="lockTU_677233a9-bf98-4958-bf23-ec3011f7a515"/> is clicked, the machine will transition into state <x id="locked104" xid="lockTU_f1a4c421-e099-4b06-acc0-f0caa390948a"/>, which will set the geometry of the button, and then pop up a message box to alert the user that the geometry has been changed.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="190"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="216"/></sdl:cxts><trans-unit id="lockTU_be2fe923-0abe-49f1-9d6d-9832fe5ea706" translate="no" sdl:locktype="Structure"><source><g id="1945">geometry</g></source></trans-unit><trans-unit id="lockTU_d4eb2398-9c13-4eca-b916-6aba344954df" translate="no" sdl:locktype="Structure"><source><g id="1948">button</g></source></trans-unit><trans-unit id="lockTU_83adad23-c3e1-434e-9e8f-a5c9a60d8d01" translate="no" sdl:locktype="Structure"><source><g id="1951">s1</g></source></trans-unit><trans-unit id="lockTU_efa13a3b-e18d-4e5d-99c5-0df48c26e7b8" translate="no" sdl:locktype="Structure"><source><g id="1954">s2</g></source></trans-unit><trans-unit id="lockTU_c7a108eb-58cc-443c-90e6-220809e289bc" translate="no" sdl:locktype="Structure"><source><g id="1957">s2</g></source></trans-unit><trans-unit id="lockTU_ca536b12-a58a-4bff-9154-3faae7bac7d1" translate="no" sdl:locktype="Structure"><source><g id="1960">geometry</g></source></trans-unit><trans-unit id="lockTU_00903ab3-1e47-46ff-80d1-dc25656ac682" translate="no" sdl:locktype="Structure"><source><g id="1945">geometry</g></source></trans-unit><trans-unit id="lockTU_7a4eaecd-2199-4807-bec1-6c61bc476c54" translate="no" sdl:locktype="Structure"><source><g id="1948">button</g></source></trans-unit><trans-unit id="lockTU_a81b839f-d94a-4ce8-a674-dcd0d7cd2383" translate="no" sdl:locktype="Structure"><source><g id="1951">s1</g></source></trans-unit><trans-unit id="lockTU_4fcba65b-6ff4-4a0b-ad2e-3bb8eaf14546" translate="no" sdl:locktype="Structure"><source><g id="1954">s2</g></source></trans-unit><trans-unit id="lockTU_42b11b47-2d54-49aa-82f9-8a22ef989cf4" translate="no" sdl:locktype="Structure"><source><g id="1957">s2</g></source></trans-unit><trans-unit id="lockTU_f030c18d-adf4-4bc9-8349-a1b0e1a308d1" translate="no" sdl:locktype="Structure"><source><g id="1960">geometry</g></source></trans-unit><trans-unit id="2ecde70a-446c-473c-9741-0c243f3b55f2"><source>In the normal case, where animations are not used, this will operate as expected. However, if an animation for the <x id="locked105" xid="lockTU_00903ab3-1e47-46ff-80d1-dc25656ac682"/> of <x id="locked106" xid="lockTU_7a4eaecd-2199-4807-bec1-6c61bc476c54"/> is set on the transition between <x id="locked107" xid="lockTU_a81b839f-d94a-4ce8-a674-dcd0d7cd2383"/> and <x id="locked108" xid="lockTU_4fcba65b-6ff4-4a0b-ad2e-3bb8eaf14546"/>, the animation will be started when <x id="locked109" xid="lockTU_42b11b47-2d54-49aa-82f9-8a22ef989cf4"/> is entered, but the <x id="locked110" xid="lockTU_f030c18d-adf4-4bc9-8349-a1b0e1a308d1"/> property will not actually reach its defined value before the animation is finished running. In this case, the message box will pop up before the geometry of the button has actually been set.</source><seg-source>In the normal case, where animations are not used, this will operate as expected. However, if an animation for the <x id="locked111" xid="lockTU_be2fe923-0abe-49f1-9d6d-9832fe5ea706"/> of <x id="locked112" xid="lockTU_d4eb2398-9c13-4eca-b916-6aba344954df"/> is set on the transition between <x id="locked113" xid="lockTU_83adad23-c3e1-434e-9e8f-a5c9a60d8d01"/> and <x id="locked114" xid="lockTU_efa13a3b-e18d-4e5d-99c5-0df48c26e7b8"/>, the animation will be started when <x id="locked115" xid="lockTU_c7a108eb-58cc-443c-90e6-220809e289bc"/> is entered, but the <x id="locked116" xid="lockTU_ca536b12-a58a-4bff-9154-3faae7bac7d1"/> property will not actually reach its defined value before the animation is finished running. In this case, the message box will pop up before the geometry of the button has actually been set.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="191"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="217"/></sdl:cxts><trans-unit id="90b04cbe-85e0-4484-b56a-df7deecbe8b6"><source>To ensure that the message box does not pop up until the geometry actually reaches its final value, we can use the state&apos;s <g id="1963">propertiesAssigned()</g> signal. The <g id="1966">propertiesAssigned()</g> signal will be emitted when the property is assigned its final value, whether this is done immediately or after the animation has finished playing.</source><seg-source>To ensure that the message box does not pop up until the geometry actually reaches its final value, we can use the state&apos;s <g id="1963">propertiesAssigned()</g> signal. The <g id="1966">propertiesAssigned()</g> signal will be emitted when the property is assigned its final value, whether this is done immediately or after the animation has finished playing.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="192"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="218"/></sdl:cxts><trans-unit id="db4218eb-0f69-4453-8785-24d8d21c07d4"><source><g id="1969">QMessageBox</g> <g id="1972">*</g>messageBox <g id="1975">=</g> <g id="1978">new</g> <g id="1981">QMessageBox</g>(mainWindow); messageBox<g id="1984">-</g><g id="1987">&gt;</g>addButton(<g id="1990">QMessageBox</g><g id="1993">::</g>Ok); messageBox<g id="1996">-</g><g id="1999">&gt;</g>setText(<g id="2002">&quot;Button geometry has been set!&quot;</g>); messageBox<g id="2005">-</g><g id="2008">&gt;</g>setIcon(<g id="2011">QMessageBox</g><g id="2014">::</g>Information); <g id="2017">QState</g> <g id="2020">*</g>s1 <g id="2023">=</g> <g id="2026">new</g> <g id="2029">QState</g>(); <g id="2032">QState</g> <g id="2035">*</g>s2 <g id="2038">=</g> <g id="2041">new</g> <g id="2044">QState</g>(); s2<g id="2047">-</g><g id="2050">&gt;</g>assignProperty(button<g id="2053">,</g> <g id="2056">&quot;geometry&quot;</g><g id="2059">,</g> <g id="2062">QRectF</g>(<g id="2065">0</g><g id="2068">,</g> <g id="2071">0</g><g id="2074">,</g> <g id="2077">50</g><g id="2080">,</g> <g id="2083">50</g>)); <g id="2086">QState</g> <g id="2089">*</g>s3 <g id="2092">=</g> <g id="2095">new</g> <g id="2098">QState</g>(); connect(s3<g id="2101">,</g> SIGNAL(entered())<g id="2104">,</g> messageBox<g id="2107">,</g> SLOT(exec())); s1<g id="2110">-</g><g id="2113">&gt;</g>addTransition(button<g id="2116">,</g> SIGNAL(clicked())<g id="2119">,</g> s2); s2<g id="2122">-</g><g id="2125">&gt;</g>addTransition(s2<g id="2128">,</g> SIGNAL(propertiesAssigned())<g id="2131">,</g> s3);</source><seg-source><g id="1969">QMessageBox</g> <g id="1972">*</g>messageBox <g id="1975">=</g> <g id="1978">new</g> <g id="1981">QMessageBox</g>(mainWindow); messageBox<g id="1984">-</g><g id="1987">&gt;</g>addButton(<g id="1990">QMessageBox</g><g id="1993">::</g>Ok); messageBox<g id="1996">-</g><g id="1999">&gt;</g>setText(<g id="2002">&quot;Button geometry has been set!&quot;</g>); messageBox<g id="2005">-</g><g id="2008">&gt;</g>setIcon(<g id="2011">QMessageBox</g><g id="2014">::</g>Information); <g id="2017">QState</g> <g id="2020">*</g>s1 <g id="2023">=</g> <g id="2026">new</g> <g id="2029">QState</g>(); <g id="2032">QState</g> <g id="2035">*</g>s2 <g id="2038">=</g> <g id="2041">new</g> <g id="2044">QState</g>(); s2<g id="2047">-</g><g id="2050">&gt;</g>assignProperty(button<g id="2053">,</g> <g id="2056">&quot;geometry&quot;</g><g id="2059">,</g> <g id="2062">QRectF</g>(<g id="2065">0</g><g id="2068">,</g> <g id="2071">0</g><g id="2074">,</g> <g id="2077">50</g><g id="2080">,</g> <g id="2083">50</g>)); <g id="2086">QState</g> <g id="2089">*</g>s3 <g id="2092">=</g> <g id="2095">new</g> <g id="2098">QState</g>(); connect(s3<g id="2101">,</g> SIGNAL(entered())<g id="2104">,</g> messageBox<g id="2107">,</g> SLOT(exec())); s1<g id="2110">-</g><g id="2113">&gt;</g>addTransition(button<g id="2116">,</g> SIGNAL(clicked())<g id="2119">,</g> s2); s2<g id="2122">-</g><g id="2125">&gt;</g>addTransition(s2<g id="2128">,</g> SIGNAL(propertiesAssigned())<g id="2131">,</g> s3);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="193"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="219"/></sdl:cxts><trans-unit id="lockTU_ee651582-e65f-4e37-9bf7-c57287a61a72" translate="no" sdl:locktype="Structure"><source><g id="2134">button</g></source></trans-unit><trans-unit id="lockTU_abe053a4-fe18-4b0d-9b4a-aa068bb09832" translate="no" sdl:locktype="Structure"><source><g id="2137">s2</g></source></trans-unit><trans-unit id="lockTU_547379b0-ad23-41a8-b926-c04f41b4067a" translate="no" sdl:locktype="Structure"><source><g id="2140">s2</g></source></trans-unit><trans-unit id="lockTU_03239c2c-e235-4820-9222-03cce582d056" translate="no" sdl:locktype="Structure"><source><g id="2143">geometry</g></source></trans-unit><trans-unit id="lockTU_354fa66b-ae5e-47a9-aaa7-7efd8a8fdcfc" translate="no" sdl:locktype="Structure"><source><g id="2146">QRect(0, 0, 50, 50)</g></source></trans-unit><trans-unit id="lockTU_f433bd57-2ba1-4c01-bec5-3d6dcc528f4d" translate="no" sdl:locktype="Structure"><source><g id="2149">s3</g></source></trans-unit><trans-unit id="lockTU_36aa12dd-dda7-4101-b38d-2b1c2266bec5" translate="no" sdl:locktype="Structure"><source><g id="2152">s3</g></source></trans-unit><trans-unit id="lockTU_1973e2c9-f3e0-442f-8550-97ab5ffac05c" translate="no" sdl:locktype="Structure"><source><g id="2155">s2</g></source></trans-unit><trans-unit id="lockTU_d3b96844-daf8-499b-b637-a815bd343de8" translate="no" sdl:locktype="Structure"><source><g id="2158">geometry</g></source></trans-unit><trans-unit id="lockTU_b1678a1e-bc73-4391-840c-9229e3da88e2" translate="no" sdl:locktype="Structure"><source><g id="2161">s2</g></source></trans-unit><trans-unit id="lockTU_36427c30-e21e-40e6-9dc2-122e0a2b1591" translate="no" sdl:locktype="Structure"><source><g id="2164">s3</g></source></trans-unit><trans-unit id="lockTU_e48aa597-3292-4876-bb4f-4f5bf3e6ae42" translate="no" sdl:locktype="Structure"><source><g id="2134">button</g></source></trans-unit><trans-unit id="lockTU_30aab4b3-2991-4420-b2d1-c1b0155750c2" translate="no" sdl:locktype="Structure"><source><g id="2137">s2</g></source></trans-unit><trans-unit id="lockTU_0da16ab0-a269-4bfc-a190-0278a47f71b0" translate="no" sdl:locktype="Structure"><source><g id="2140">s2</g></source></trans-unit><trans-unit id="lockTU_a844104a-92b7-4c64-ad39-b568c92007a8" translate="no" sdl:locktype="Structure"><source><g id="2143">geometry</g></source></trans-unit><trans-unit id="lockTU_ad28ca71-a091-4b3f-a0e6-310332319a84" translate="no" sdl:locktype="Structure"><source><g id="2146">QRect(0, 0, 50, 50)</g></source></trans-unit><trans-unit id="lockTU_99fd1b45-59c5-40e0-a5c4-8719b3fac98f" translate="no" sdl:locktype="Structure"><source><g id="2149">s3</g></source></trans-unit><trans-unit id="lockTU_eda0bbd2-b1c8-4e3f-9885-5d6c6f22f852" translate="no" sdl:locktype="Structure"><source><g id="2152">s3</g></source></trans-unit><trans-unit id="lockTU_cc0e65b9-aca9-48d4-9080-894222d3e0ef" translate="no" sdl:locktype="Structure"><source><g id="2155">s2</g></source></trans-unit><trans-unit id="lockTU_8b304820-7c83-40e1-99d3-6644e8523cf3" translate="no" sdl:locktype="Structure"><source><g id="2158">geometry</g></source></trans-unit><trans-unit id="lockTU_156e10c9-f36b-4ec1-b62c-91278746c06c" translate="no" sdl:locktype="Structure"><source><g id="2161">s2</g></source></trans-unit><trans-unit id="lockTU_7179a440-f817-4ec9-878c-d1a218f448fa" translate="no" sdl:locktype="Structure"><source><g id="2164">s3</g></source></trans-unit><trans-unit id="b58bda40-5924-4970-87a4-38733162e271"><source>In this example, when <x id="locked117" xid="lockTU_e48aa597-3292-4876-bb4f-4f5bf3e6ae42"/> is clicked, the machine will enter <x id="locked118" xid="lockTU_30aab4b3-2991-4420-b2d1-c1b0155750c2"/>. It will remain in state <x id="locked119" xid="lockTU_0da16ab0-a269-4bfc-a190-0278a47f71b0"/> until the <x id="locked120" xid="lockTU_a844104a-92b7-4c64-ad39-b568c92007a8"/> property has been set to <x id="locked121" xid="lockTU_ad28ca71-a091-4b3f-a0e6-310332319a84"/>. Then it will transition into <x id="locked122" xid="lockTU_99fd1b45-59c5-40e0-a5c4-8719b3fac98f"/>. When <x id="locked123" xid="lockTU_eda0bbd2-b1c8-4e3f-9885-5d6c6f22f852"/> is entered, the message box will pop up. If the transition into <x id="locked124" xid="lockTU_cc0e65b9-aca9-48d4-9080-894222d3e0ef"/> has an animation for the <x id="locked125" xid="lockTU_8b304820-7c83-40e1-99d3-6644e8523cf3"/> property, then the machine will stay in <x id="locked126" xid="lockTU_156e10c9-f36b-4ec1-b62c-91278746c06c"/> until the animation has finished playing. If there is no such animation, it will simply set the property and immediately enter state <x id="locked127" xid="lockTU_7179a440-f817-4ec9-878c-d1a218f448fa"/>.</source><seg-source>In this example, when <x id="locked128" xid="lockTU_ee651582-e65f-4e37-9bf7-c57287a61a72"/> is clicked, the machine will enter <x id="locked129" xid="lockTU_abe053a4-fe18-4b0d-9b4a-aa068bb09832"/>. It will remain in state <x id="locked130" xid="lockTU_547379b0-ad23-41a8-b926-c04f41b4067a"/> until the <x id="locked131" xid="lockTU_03239c2c-e235-4820-9222-03cce582d056"/> property has been set to <x id="locked132" xid="lockTU_354fa66b-ae5e-47a9-aaa7-7efd8a8fdcfc"/>. Then it will transition into <x id="locked133" xid="lockTU_f433bd57-2ba1-4c01-bec5-3d6dcc528f4d"/>. When <x id="locked134" xid="lockTU_36aa12dd-dda7-4101-b38d-2b1c2266bec5"/> is entered, the message box will pop up. If the transition into <x id="locked135" xid="lockTU_1973e2c9-f3e0-442f-8550-97ab5ffac05c"/> has an animation for the <x id="locked136" xid="lockTU_d3b96844-daf8-499b-b637-a815bd343de8"/> property, then the machine will stay in <x id="locked137" xid="lockTU_b1678a1e-bc73-4391-840c-9229e3da88e2"/> until the animation has finished playing. If there is no such animation, it will simply set the property and immediately enter state <x id="locked138" xid="lockTU_36427c30-e21e-40e6-9dc2-122e0a2b1591"/>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="194"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="220"/></sdl:cxts><trans-unit id="lockTU_1156065e-20f1-4301-97d3-154144ccbec7" translate="no" sdl:locktype="Structure"><source><g id="2167">s3</g></source></trans-unit><trans-unit id="lockTU_23a56245-a713-42ee-bf81-db5d125b0cbc" translate="no" sdl:locktype="Structure"><source><g id="2170">geometry</g></source></trans-unit><trans-unit id="lockTU_34ad0e8f-ccd9-4f27-b170-65542e3cf087" translate="no" sdl:locktype="Structure"><source><g id="2167">s3</g></source></trans-unit><trans-unit id="lockTU_7d1b4ba2-5e14-4d09-a94b-e101cb59550f" translate="no" sdl:locktype="Structure"><source><g id="2170">geometry</g></source></trans-unit><trans-unit id="2b6f43e8-07fa-4d0b-bd75-22e980f36129"><source>Either way, when the machine is in state <x id="locked139" xid="lockTU_34ad0e8f-ccd9-4f27-b170-65542e3cf087"/>, you are guaranteed that the property <x id="locked140" xid="lockTU_7d1b4ba2-5e14-4d09-a94b-e101cb59550f"/> has been assigned the defined value.</source><seg-source>Either way, when the machine is in state <x id="locked141" xid="lockTU_1156065e-20f1-4301-97d3-154144ccbec7"/>, you are guaranteed that the property <x id="locked142" xid="lockTU_23a56245-a713-42ee-bf81-db5d125b0cbc"/> has been assigned the defined value.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="195"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="221"/></sdl:cxts><trans-unit id="69b9ac65-68e6-4afb-a36a-5a75cb1f64fe"><source>If the global restore policy is set to <g id="2173">QStateMachine::RestoreProperties</g>, the state will not emit the <g id="2176">propertiesAssigned()</g> signal until these have been executed as well.</source><seg-source>If the global restore policy is set to <g id="2173">QStateMachine::RestoreProperties</g>, the state will not emit the <g id="2176">propertiesAssigned()</g> signal until these have been executed as well.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="196"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="1fb09dca-5880-47f8-b7c9-03ffdc160f0e"><source><g id="2179"/></source><seg-source><g id="2179"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="197"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="222"/></sdl:cxts><trans-unit id="c3d16f77-c544-4311-93eb-06247ae1b6dd"><source>What Happens If A State Is Exited Before The Animation Has Finished</source><seg-source>What Happens If A State Is Exited Before The Animation Has Finished</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="198"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="223"/></sdl:cxts><trans-unit id="ad6e505e-a70e-47ed-ab82-e9147ade3754"><source>If a state has property assignments, and the transition into the state has animations for the properties, the state can potentially be exited before the properties have been assigned to the values defines by the state. This is true in particular when there are transitions out from the state that do not depend on the <g id="2182">propertiesAssigned()</g> signal, as described in the previous section.</source><seg-source>If a state has property assignments, and the transition into the state has animations for the properties, the state can potentially be exited before the properties have been assigned to the values defines by the state. This is true in particular when there are transitions out from the state that do not depend on the <g id="2182">propertiesAssigned()</g> signal, as described in the previous section.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="199"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="224"/></sdl:cxts><trans-unit id="68808532-4016-477c-950e-cc4f3425b0b6"><source>The State Machine API guarantees that a property assigned by the state machine either:</source><seg-source>The State Machine API guarantees that a property assigned by the state machine either:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="200"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="226"/></sdl:cxts><trans-unit id="2c25e96d-5df9-44f7-b44d-d76813bc87c9"><source>Has a value explicitly assigned to the property.</source><seg-source>Has a value explicitly assigned to the property.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="201"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="227"/></sdl:cxts><trans-unit id="c76f6b31-cbab-464a-9316-975e33239e2c"><source>Is currently being animated into a value explicitly assigned to the property.</source><seg-source>Is currently being animated into a value explicitly assigned to the property.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="202"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="228"/></sdl:cxts><trans-unit id="a2ea98dc-a6af-43fc-8638-09736093c9ae"><source>When a state is exited prior to the animation finishing, the behavior of the state machine depends on the target state of the transition. If the target state explicitly assigns a value to the property, no additional action will be taken. The property will be assigned the value defined by the target state.</source><seg-source>When a state is exited prior to the animation finishing, the behavior of the state machine depends on the target state of the transition. If the target state explicitly assigns a value to the property, no additional action will be taken. The property will be assigned the value defined by the target state.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="203"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="229"/></sdl:cxts><trans-unit id="01ac71b4-6116-4875-90b1-e5b535c4f9fb"><source>If the target state does not assign any value to the property, there are two options: By default, the property will be assigned the value defined by the state it is leaving (the value it would have been assigned if the animation had been permitted to finish playing). If a global restore policy is set, however, this will take precedence, and the property will be restored as usual.</source><seg-source>If the target state does not assign any value to the property, there are two options: By default, the property will be assigned the value defined by the state it is leaving (the value it would have been assigned if the animation had been permitted to finish playing). If a global restore policy is set, however, this will take precedence, and the property will be restored as usual.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="204"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="4bd7007f-3af4-43c0-a683-73caed0e8124"><source><g id="2185"/></source><seg-source><g id="2185"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="205"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="230"/></sdl:cxts><trans-unit id="30b980cf-9119-452e-a2e5-166932a3e0ea"><source>Default Animations</source><seg-source>Default Animations</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="206"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="231"/></sdl:cxts><trans-unit id="1630fd35-475b-4839-bb07-09407440e4ca"><source>As described earlier, you can add animations to transitions to make sure property assignments in the target state are animated. If you want a specific animation to be used for a given property regardless of which transition is taken, you can add it as a default animation to the state machine. This is in particular useful when the properties assigned (or restored) by specific states is not known when the machine is constructed.</source><seg-source>As described earlier, you can add animations to transitions to make sure property assignments in the target state are animated. If you want a specific animation to be used for a given property regardless of which transition is taken, you can add it as a default animation to the state machine. This is in particular useful when the properties assigned (or restored) by specific states is not known when the machine is constructed.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="207"/><sdl:cxt id="79"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="232"/></sdl:cxts><trans-unit id="3dd7ccee-ca00-436e-b5c4-47ccf1cc544d"><source><g id="2188">QState</g> <g id="2191">*</g>s1 <g id="2194">=</g> <g id="2197">new</g> <g id="2200">QState</g>(); <g id="2203">QState</g> <g id="2206">*</g>s2 <g id="2209">=</g> <g id="2212">new</g> <g id="2215">QState</g>(); s2<g id="2218">-</g><g id="2221">&gt;</g>assignProperty(object<g id="2224">,</g> <g id="2227">&quot;fooBar&quot;</g><g id="2230">,</g> <g id="2233">2.0</g>); s1<g id="2236">-</g><g id="2239">&gt;</g>addTransition(s2); <g id="2242">QStateMachine</g> machine; machine<g id="2245">.</g>setInitialState(s1); machine<g id="2248">.</g>addDefaultAnimation(<g id="2251">new</g> <g id="2254">QPropertyAnimation</g>(object<g id="2257">,</g> <g id="2260">&quot;fooBar&quot;</g>));</source><seg-source><g id="2188">QState</g> <g id="2191">*</g>s1 <g id="2194">=</g> <g id="2197">new</g> <g id="2200">QState</g>(); <g id="2203">QState</g> <g id="2206">*</g>s2 <g id="2209">=</g> <g id="2212">new</g> <g id="2215">QState</g>(); s2<g id="2218">-</g><g id="2221">&gt;</g>assignProperty(object<g id="2224">,</g> <g id="2227">&quot;fooBar&quot;</g><g id="2230">,</g> <g id="2233">2.0</g>); s1<g id="2236">-</g><g id="2239">&gt;</g>addTransition(s2); <g id="2242">QStateMachine</g> machine; machine<g id="2245">.</g>setInitialState(s1); machine<g id="2248">.</g>addDefaultAnimation(<g id="2251">new</g> <g id="2254">QPropertyAnimation</g>(object<g id="2257">,</g> <g id="2260">&quot;fooBar&quot;</g>));</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="208"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="233"/></sdl:cxts><trans-unit id="lockTU_665994aa-9fa8-455e-8acc-209a4c4d9d11" translate="no" sdl:locktype="Structure"><source><g id="2263">s2</g></source></trans-unit><trans-unit id="lockTU_7d5dd100-2844-4c3f-9a84-f52c22e32338" translate="no" sdl:locktype="Structure"><source><g id="2266">fooBar</g></source></trans-unit><trans-unit id="lockTU_cc4a974e-9f3a-4c96-a386-17392ad6ed90" translate="no" sdl:locktype="Structure"><source><g id="2269">s2</g></source></trans-unit><trans-unit id="lockTU_b5159eba-b20c-4ce0-a5a2-2257ea4ebacf" translate="no" sdl:locktype="Structure"><source><g id="2263">s2</g></source></trans-unit><trans-unit id="lockTU_9d211ef5-3d5b-49d3-bed4-a30d3847bdd7" translate="no" sdl:locktype="Structure"><source><g id="2266">fooBar</g></source></trans-unit><trans-unit id="lockTU_a0e4fec7-bb58-41c5-9ae3-56042ece00ad" translate="no" sdl:locktype="Structure"><source><g id="2269">s2</g></source></trans-unit><trans-unit id="45fb3eaa-03b5-443a-a521-6ddb2ba77d7b"><source>When the machine is in state <x id="locked143" xid="lockTU_b5159eba-b20c-4ce0-a5a2-2257ea4ebacf"/>, the machine will play the default animation for the property <x id="locked144" xid="lockTU_9d211ef5-3d5b-49d3-bed4-a30d3847bdd7"/> since this property is assigned by <x id="locked145" xid="lockTU_a0e4fec7-bb58-41c5-9ae3-56042ece00ad"/>.</source><seg-source>When the machine is in state <x id="locked146" xid="lockTU_665994aa-9fa8-455e-8acc-209a4c4d9d11"/>, the machine will play the default animation for the property <x id="locked147" xid="lockTU_7d5dd100-2844-4c3f-9a84-f52c22e32338"/> since this property is assigned by <x id="locked148" xid="lockTU_cc4a974e-9f3a-4c96-a386-17392ad6ed90"/>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="209"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="234"/></sdl:cxts><trans-unit id="ad9866f3-2808-4dda-9b92-143cbc43bd26"><source>Note that animations explicitly set on transitions will take precedence over any default animation for the given property.</source><seg-source>Note that animations explicitly set on transitions will take precedence over any default animation for the given property.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="210"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="8e46983e-5734-4d6f-bcee-7e717f80b063"><source><g id="2272"/></source><seg-source><g id="2272"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="211"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="235"/></sdl:cxts><trans-unit id="4ed05225-1f25-42c6-a1be-0878946063fa"><source>Nesting State Machines</source><seg-source>Nesting State Machines</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="212"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="236"/></sdl:cxts><trans-unit id="32b56433-2155-42df-84bd-9622223ccfbb"><source><g id="2275">QStateMachine</g> is a subclass of <g id="2278">QState</g>. This allows for a state machine to be a child state of another machine. <g id="2281">QStateMachine</g> reimplements <g id="2284">QState::onEntry</g>() and calls <g id="2287">QStateMachine::start</g>(), so that when the child state machine is entered, it will automatically start running.</source><seg-source><g id="2275">QStateMachine</g> is a subclass of <g id="2278">QState</g>. This allows for a state machine to be a child state of another machine. <g id="2281">QStateMachine</g> reimplements <g id="2284">QState::onEntry</g>() and calls <g id="2287">QStateMachine::start</g>(), so that when the child state machine is entered, it will automatically start running.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="213"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="237"/></sdl:cxts><trans-unit id="b5d36989-0dcc-4f46-b276-2ac6dd9bd317"><source>The parent state machine treats the child machine as an <g id="2290">atomic</g> state in the state machine algorithm. The child state machine is self-contained; it maintains its own event queue and configuration. In particular, note that the <g id="2293">configuration()</g> of the child machine is not part of the parent machine&apos;s configuration (only the child machine itself is).</source><seg-source>The parent state machine treats the child machine as an <g id="2290">atomic</g> state in the state machine algorithm. The child state machine is self-contained; it maintains its own event queue and configuration. In particular, note that the <g id="2293">configuration()</g> of the child machine is not part of the parent machine&apos;s configuration (only the child machine itself is).</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="214"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="238"/></sdl:cxts><trans-unit id="472f898c-a88b-4e4f-a0a0-91f4ee87a525"><source>States of the child state machine cannot be specified as targets of transitions in the parent state machine; only the child state machine itself can. Conversely, states of the parent state machine cannot be specified as targets of transitions in the child state machine. The child state machine&apos;s <g id="2296">finished</g>() signal can be used to trigger a transition in the parent machine.</source><seg-source>States of the child state machine cannot be specified as targets of transitions in the parent state machine; only the child state machine itself can. Conversely, states of the parent state machine cannot be specified as targets of transitions in the child state machine. The child state machine&apos;s <g id="2296">finished</g>() signal can be used to trigger a transition in the parent machine.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="215"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="239"/></sdl:cxts><trans-unit id="75d47f4e-48b2-49b0-8d6e-f46f34bd4412"><source><g id="2299">See also </g><g id="2302">The Declarative State Machine Framework</g>.</source><seg-source><g id="2299">See also </g><g id="2302">The Declarative State Machine Framework</g>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="216"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="21"/></sdl:cxts><trans-unit id="e1c07d9d-b15e-4232-acd8-ac2ffdeb840e"><source><x id="2303"/></source><seg-source><x id="2303"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="217"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="241"/></sdl:cxts><trans-unit id="009abd66-6cf4-4512-836f-22f9284bdfcc"><source><x id="2304"/></source><seg-source><x id="2304"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="218"/><sdl:cxt id="41"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="241"/></sdl:cxts><trans-unit id="dd40ee09-0013-4b4d-a7f7-11151e2c605d"><source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="2305"/> The documentation provided herein is licensed under the terms of the <g id="2308">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="2309"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</source><seg-source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="2305"/> The documentation provided herein is licensed under the terms of the <g id="2308">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="2309"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</seg-source><target/></trans-unit></group></body></file></xliff>