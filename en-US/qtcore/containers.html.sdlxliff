<?xml version="1.0" encoding="utf-8"?><xliff xmlns:sdl="http://sdl.com/FileTypes/SdlXliff/1.0" xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2" sdl:version="1.0"><file original="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtcore\containers.html" datatype="x-sdlfilterframework2" source-language="en-US"><header><reference><internal-file form="base64">UEsDBBQAAAAIABtAgkkVXzw+HzYAAFoMAQARAAAAMHpvbDJscTQuYW1uLmh0bWztfety20a64P88
RQ89k0gJSdmKM5OVbJ1xnDjjM04cx85JbW1tTYFEk+wYBGg0IJqZnZfaR9gn2+/SVxAgQUmWkzlO
VSwSbPT1u9/6wX+8XWbiUpZaFfnDwb3x3YGQ+bRIVT5/OPjp1ZPRl4P/uPjowR++fv741f/84Rux
qJYZfMc/IkuwkcwH+EAm6cVHQjxYyiqBVtVqJN/U6vLh4HGRVzKvRq82KzkQU/72cFDJt9UJdnMu
pouk1LJ6WFczGE6c4HijETVNVA5zG79Ji6kYjWiASlWZvHhsfxSPs0RrqcX/ES8q8bgopfhi/JcH
J9wMX8hU/lqUMns40NUmk3ohZTUQFUzHzGKq9UAsSjkzLU6K2QxekiOtlqtMjun3E+pLT0u1qsKX
f0kuE346wBZCrFWeFutxkWdFkoqHYlbn0wp29+j4n7CKegmrH89l9U0m8aP+avMqmX+fLOXRACc6
OB6rSi6P7h6PYUseVVWpJnUFP+L8BkMRz5Cmdnz+r3Oc2wlPA3bvhE/jwaRIN/AnVZdiirv0cIA/
yHIgVPpw8KaC+ZgHtLig3RL21qyn+XhUFnWeytT8HDfIk0s1T3C5k6R0LfDUkgkcx4OqhPlUqbh4
kJgdH49PaCInul6tirKS6WiVJdWsKJd6lOTpCMBgpuZ1Sb3qMYLMnTfV6IvRXwYXcOJ02MkFHHh6
Eff8ppoCNIzgOORbeo3aI4TEL2yBEv90AnOFf8y88Y9d5KRWWWpwZuDXhHsa/QSgkFYLwKq7d/80
EEmm5oBipZovKjvz8T3xo5zJElBOiq8NdNBCaQ5++8LJ2G0/gX03R8Qfw4MweDaInyLMDFobCjza
x60vaZVKPs3waVVMCe8/xw3PAX7NI9OH5j2Gnz96UCPFyJSbhLyU2b2BP6g7Kq/KIq0JTQYXT4Nv
3Eum9nRQLeTIkYvRlI9xcPFqIUXL6fbuEjARwK5o9PjUPN3f4WnYIRKKEWGv6xc6/E98+hKfun77
dqirbLu/l6+e9e9ua8GAdTKZLkav5WZdlCmv1zwUf+eHPbsroL8yOJRMvZZ+H5/jr/5sRs/g1wMP
KMnmRamqxVJNYRgk1G9VtRlcPPLPYQD7vGen87JYVwvYVtg6OVc41W/pkXjpHgVdnRBob2OfQZmR
xUKiDc2HF/yifX1xz6EWsq5BG11a3IOGepXkbqB6YloD+YfnhnX+8Y9/DLgn0r5RKpk9AFIRJw2n
S78NLoTD5BSYuMo09ppAU/s4xlP+bXFKi9uFwotTaLciWAKyl6lJmZQbsSqLS9gRLRIBnE4UMzGX
MN0kE6u6XBVaCuCDyArkaJJomXp5QBgwGgvoUkv7VUxhXyZS1Ni4KoSuUBhAbqqxdxhmJadqpvBX
4N9j8QRwWL5NEESGQs3EpqhFLuHnBMQFrX4lmp+UZbLB9z1fAegA8ciylJf0DTdDD3HsoOGlnMIc
bMP/om/Y8OOsOt/f3cfz6nz84GRlNw9X2twCmJ4UsInAWnjRsP4MOYwsh0InM/wDTFTIRCt4Cxrg
DKsF7BRgoABqEYpZ4ilvAnZa57NkqTKVlMDGAP5N86GATVuVyLSwt7SAH2C+mn7/+E1dVOdwxutk
w5+H1B8eDI8bHpfKdQXSB+6tm4s52GDVHWt224cimpqqaqRBivT7aB9nG4E/SCJbQxxoE7/v5I8K
viepHpUSkLNM8unGdGUfVNwFbqfrpgCEWqpfYe+BSiKAyXQosmItlnJZAJDD5HW9JKzjN5cqV0uA
cZUjL4bfUwkwCJirqQnAXZ1VsAxoIDQ0zCTCqJzWxPvxiHKRpKniHq+yHP5hhMCBC6KBVFWzeCXW
QJel75dwKdGCXgGRdhOAi5hAmywTZiSHd8l0KjUBxNIdJKIazIIkI1gcnjcjJiFpipNIfNcx1BSw
Twgj64LwlpDZcbwzv/QGxdvFcOmp74T2AU+ns69OXtvSE5El0TYObWmMijiqoYRiAYg7Ip7klAYQ
GqvNkE8l0RZPWvvVhPdwQkske3I2A/BHwQ5HiCkjaB/IfQmtX1SfaGoC3cKnQHh2/FUbwCHyDEzV
/0CrtUcMaJ9kuoDTmSFwJN2baQSKwYX5QNtvRA6kTSiMvsbloWK6wQ3b4HbxcgEW4KkBvJ1QZGbm
pNN2GTHiYofJkYavwcIdL6tIXsqAAiCYa1CB4QgU4LvfgwBi32RKV5bwP4PPTGHC3/PXMo1b4ZO2
tl3MZhhxrmT62nMa+OJpmm8Fk66lbfUCvzBYIxIvCw3nvELiyhRjuGc5QvGuTKRmvdlA/lg8yqpF
Uc8XeNDQiHRt1H+Y4gDEEusdYadDbOM2maBilmh8JFcyTxmCYVb42XExgK0M0MFwdN5K01vMpvft
8rkVDtbABPBDacAOVlJMp/WK6TwSaXUpLenPCrdD/aSC8d6D6nVORAxgPpcyV6RXWrZJmGVpzbOn
T55Td0/wg5ZLWJqa6i1sDiEbyZXWxVQltM52kF4mKzul75JVEwCXyN3CJvi9pd0i0Quj6uNHaPk3
+NPam2tqu/Mt4+0CKdPtqKw8pWZJhV7ljyGPcxtJkgSbKASNC9AqLpOsRoHE7AoAGhFVEDUB/eF3
IGrhGDiz7SHskSBEA3nJiuJ1vULmWhOvhPnDa44jhGJTIiYqR1lay6QEDa1A+qfJiIIytTvMR5pl
X6RDIEprEhyCnZkCEXaA9Bi/tEAbzljN66LWcXP32L9oIc6uzDMjXMrIrBAWUEx+AfDXTLgzkKRw
5tQ9kfRkLs0aQsMDCkKDhknG8Ca0OD2oyPr1oCrtj28qZpj40kJcEP1+AAISf31ZL5ewh/zA2FmM
/Qy6uDRmm6pYDWx/RZoOmramNtKHYv4rlOK9renVAikdiU4zkKzxGIiiggK7JPGqbtF0gKJVzOI0
bZMmbcnAHoHBHPAxZ+p69OqYMd3wfJbGoFMYkk1hIEICnOVIHJuA0EXAQ9psoNKQ56GQIOGWLNTB
qDSEUdiMIKgCij0GaHxKtNNOL02xZSWkIqEEKLhVCGihPFrLDO8wuTcTPTvjrzjho+MG5Pp3DL9w
L5nv/BapNiT5mrkBpknCJcXa0lKlaSZ3TIlfcL3zV+58LL4rSqN5JTkolLTaxkH34aUoJAKceMUD
mBApECx7a9i2qsqMZgFfQZPWCjHFLMIrE+MtlTYck/VQP3IO81WAqrOyWIr9cH+QeuvsrZ0oB0Jx
3oJzu/n2DvzTsHlZQlL4PmlMvp1KNPkTdCNAourqJG/4gwdJ56oAP+bwhXBA6kAXInGB0DhmqhNZ
IclfyRLt3Qlya+ppDxiAOpAb6DSqYgCeRBAW9ZwRiJmgIsorcjWVpZt8wPXFkbMWAsDAOgifC8Ry
nDrT5/4bD6IXmpPpJEmYywokGdpJ7LCp0FR7xcZvKI66b/2Mn0AzEarNIDPcSMQssy/AC2GJMJEC
GoyPe8BYG1nfZcFpAy1LpXNvN+qg0wBNSfpLMkWuCDiqWP2GTWPxEam0Pd+kYr2iBGqBi2o5b56n
JVxvathPUAiL9RD3KUH5UzFHyFB0gD0G4AcIyevlBEUQ1qiBKi+SS3P0E+RMl8w3UAO3cwymeFW8
bRdud2BrEsmzup5Q77FRruukIrFXG0EsQ+VB5UMxUyVy07oyYtkRysXHIWYgzqZpU7Oz0hjBK6gx
KBpnaAZBuyYIyjl232N2Z60y/51VjTIv/nt03K3D3VnBTl/AP7ZRQ971DfFILirbcHxFZGjXN655
bq0I3nZmfFSth/bk3Rxa29TOWvWvOzKnL4ML82H72ILGqTSNzYf24wteQHF0cIH/9j/AdszbUoG6
Ti+0zpMuMyI6loolMjz4B/T/jAz3pPGQNs5yvb4qeG1rjji5v0uQMffMMFVsLAMh8yjUUIkGH1uT
0kqjPkbgRxQYekZA8PSZnr4ai++RF6PpgNxe8A7BcpeOR++Pd2rAli2g/JQmVYJghqMXZSpLsi7Q
J5EWUuef4FxJLOijDjOaGdUxyUiwx7VfGUR2aeg7z6MnvrfsToztCYkpJEyVM+CPZFmnWXkQXIHo
oMby4ztvT+U5Hy0brpFTvfYSfPPQGor7VSG1+zh27hCKYElG+h4SJp2A/PLoh6coGO22n0zqYH/Q
16NAn07IJBEZDfS4H8y0gCNJLBNVkWuOoPF6ENRplbkJGNqxtENhCd9vAIKN+TB+2ZV3xDqtNZew
62nTg0hmTJTlgb3D0TjNy5r6xT5at19pGvZQvWC1uLUC/xl6hw7hBZE4pXs4M62fi1GFX+w9Nhu9
yKCxUtUMjfXKGCDRjrqsiZOjfEtuWTwZUIXWUrJkO80KY2RAAjspQY6RAKtH2PXxOevOa8UORfH4
s8/QfLJSGfk0YKil0nTiwNQZ09B1hO+iqwOBgmJwRnqhZiBGrIw2RL3TCLT0UpKpD6a3gdN/K2RZ
FmW7Y9J6YWcqZ2MBKIAKALAGDsnxVSCyZACOzpFKqI9uCasUeUPAkRzPma7BWaMST/saKFiMNvTL
MUNggDDDuDeeGQD9OilTmCHgkvGTBF1XDr6frNOg94b/BLAQ8B9RY4REY4QQwe6TnU2Mi8XsmWG2
3l/DEFaqotaR2ZXxDHUbUOkeqAvfNZMs7PrBiUITbgH6DtCmGdAUfs7wZY2PCZ5MAjhPRvqqrFH2
HhKdMYZ7/wy9CLngsdDc5aADAVrhDNGDySY7Nw3tfOYY45KRUEGeAh+D0PBuqnya1RhiKSaJVlPT
i65B2kBeQLuv0N9Mn1gupI9pUcMOmOdDVtXR+oDv8/RfRBNzXR5EWKADJ+Z/DZ/bpFOQEVybV/DZ
Myogg1aOoe0KXmJzr33tOX0jWlOw6t6jpWMIR7HLe63SOdCIkzf8wb75M31rLDB+IVVJVrgd+Zq+
NXcEV1uGyzWeNVlNx8dGCrGxExWGrdDho6UeNRJ0WiaH2Mz6rYjpO+N7SP4oGCoh3AJ6e2Cnn+gt
vGC02MYJQ/aURqxMndstBn12G71W6KRrGvwDjHCNl2yzJLgGkJ55BhvD8Q3tofg0irL5G/BK8oe7
QadASoqlxymjTEjkR7j1JUY5l5I3ZuapR0ypzswApXNYTFegkX9EIcVBOJeLu5uyj4JCusQ3MJNi
IyW0/mfnGyugDGpqXjkzMaL2zaNj8c9/NZ91jIwH3xw5HtMCwODiY9ikc9OYuPLx+UeNYfq82j4T
27atke/nofn5HS6nY8NLdUnEMdrxqC2zSEdleRLLDUZ7n+9o/7XvFlrjt+ezr1RZLfClf8GUAJpK
SQALOLcGOCuQ2nqGt4XBhMRtODwk8SlUpQ2vdB4f8mEbsZrN1NhsKdFwOJpsRvyJhqTgJPYxGIyd
AAMY8svros5Q3L5EUQ/kPF1bpyBGAujCReA1FpNHK9GdEw6XazxRCiMv1K9G0zETZe9Ny1s6jkiw
PCyciHzLQWXRa7S5bTsbG588BTGyTWvMysGEgqdhoeU7mKslEx3QRXIFt1bpeW+opSjTvkBbykwm
WuKjbZB9iWb7QNQjkLAhbSAxBxRVE/3HfQxkGuehow1s6GDY9u9WzyHLeH/7Uiw2ssBlTxNbou2N
BWPxEuUq61KPJkws0QTyu9PFjQK2wlG1EgVxF4tLOKNpS9gzb4JUp4G1knaobbRzG5XBQaDQ5wR6
pygAmPfIhQyglMnRsg1RIcnWyUYLuVQVMT3UcRAPk4ivKTZKBQEFFDXWEsIQbhdvGQkP7rHRsOCx
LhhL3WliWBzIzhNJsYb02rpUIEzlLg4iklATgHyZLAM5NXlJT2xgh0KUT3LtxokE40gB8doXgQD5
6GysR+8ljcUPtAsU+EXwYXogt1CZoM5pNLFzsWBBY1GskX5PiTamGOLmIJ5QWTB6MyHtSxs8Qrod
YbR8x5yYxK++LY5ubMpFXXW0Grb20i4a8Hb3GG6JDY8DGgvji5vYEdG2JYCEefX5qWlyTIN3dDU2
jVR6M9PpMxZxBZelJG5v4AaH2RrbHXIpq7rMbddwVsSQfjs4M9+7M/N3gDMq34cyV8eHvVC8R+4I
BYmUztc0RqvVDeyi2IEgB/XTG0FuZrg0gPXr0YGHuyiOlw+P/TkdiJJ7B04PxFuVG7S1YqRPVCI5
fuQEcpmyZT+yOqZhZiWKhVNZIsNvxl8FMpfLcHmgLloGMYZMtECeh0aKPgHZIqmrwnhQs82WnsKB
GGQq7h64aY6zsu0ds3iUcM/O6IsJieMNDTSm7V5R8iPrtMuTYt8nSn825gTG8XHg3jVAIaUcV7XC
FAQveCW2bxAYgUr5CEKSyFqUN28AJ5F0uao2gq2WtNH7TZkgiX1VsyAFOjqItugKZrEPDbQH2FcT
OAeJYjIrIg1zq3U+YBp8ncylUxl5/zYmGsmcLsHeOe8jRh4Ycb8pSXfBRuiKKcTdltyG7WTVrdSG
vvmsJrEhiAlzpoU6V2gDsCccR7g1EzAaq9uKC+5K6WnPneEklebzsU90xV4mBbpYqM+kdOFh7AFe
GPeS9XnGoj/qC0XKcA+bgcradIGJXVHAY990MzSImFxRkfKhwc5Q1gp+youc8c+aJSzlaRxsew6T
OdjPRUf6MGVdM+nrTEPK5Rr34EUl7rOB13gJ0WSdoreoyKXJ6eJmYdIH6ZKcIUbZRj5Kvi3FsDn+
0Ea0AXpOSU2fSNKabAZThhAlvX0IBlMlucr5kAAnWc/F1X3iowe38gfJNoBBHFuBthW5RWnRAIQt
uxRoi2cUVhB7ln1CnEEAUgrbm6EeawOx30U8u6MePqj9Rzc9u57Gbzyn+Md3E/w+FFeIIIv7ttMM
x3jqpr6ngyVHO7f18x3/tKe7WwlMbnt5e9m2k8MX39Wn24IeXd989Oz+3LSdq+P+m0vicQ7dova+
zPbs7fIdheJFzZtzg9cOXWRLL2aFuzu78Vi+vjlhXdFC0UhbS0pWzbXs6YP3oK0r/qVHj4dDQN8o
sv4Zb/tXiq8214hvX2m/2jozG9anz45oK/IhAZ9PlZ7WmtPi19K6tvMppbNjGvDeNIl2FcmDJFvE
HcNnqTHWMW4mAXdfHiJb+EGFpLgxFyDkw9b2ur4DIUif2+wWm9+1c4U7YuloVvtms72t4VycJPZT
TrpXW/L6EYWJyEOz7ycyK9ak7w3bpVxS11B/N6FlqKwbPSXM2klVyfF6GGVU+Uas5xIoYopKVG7B
JKuFqTKkn2Ga20TOVZ7jU5PHFsR2TeTMxDmYIHYc6djJw5zu7jPggjc5v4XS4hL/HkzQxc2tCztv
MnmoZF4mS0G7BDpJsdZWhVSphwifeUJFHlANKLEpwohJNTSTYP3bpj5bX4TzRKC7q3yElA/onFqC
MF9OUVsCvVhTjTR3LvfGq3yO5bCqhwMsq4Y9BaEXCKQUW54VxYrmwW+yyaAk96xN/pemhlrT03e9
pDTUdzgem4sz2DPG4BRz0Ki6FdmhHhmeylVcKG0u2R4mQ9wHNJzROd6IbT4uPkTTgQaUhvGI/+yz
Qt/UcF/d7nCPb3e4r6PhzndBlGeztwhZ6ghh6vi8My5hvVCZM+MfqT22Y+A838u31dHxsTUK+9C7
eVZMksywqK/lpIZN4r/GsnkjZ7FvhjlNL469waCW8rVm8yDGeegzor37kpsapUwwaDzRpnjOdj72
PuU3NJ6OxSOTqUqsqcH+leaiFDDSLxyBbXMKZw2WZK1jRDgs16IfIlw/Jl6TkwsbafKOid8xRzzw
Z203Y7qQ09donTM8GQ0zSrvcU8/5XIcYamjbDXuNntPQeTTuL/VyxSdgcnvlknknN/MVF6zp3GWv
2lxg7EFTFyws3BwPGvo54V7Y5KT9LzdDGTHCIAC4CajVFAu+ldHbkup2OHd737RoHxZXxVewAUc3
Sbd+KOUlRq//hmnXyk0xol8cDpQSsunNcikrrO5EjicvcpmIlTgNfk1m4rLC3GBEve16CDH28bYP
3PZbDMQE45hEtYi5IS2K8i9iERfUw5rLNjKiyhmm4ZCzr8cMt+jDdgWJ+AW7p4NgdzmUPTeUixpf
Q04+bZeTX0VRhWw01lTChDyIV+Afj354enbzVuknhnp6u/NXErPLb8TY3ASvJ8jGEL7oA5+EN1x8
B2CmG5pwEabUz7aZXUNFu7oluA8u9JkqUu54pm0q4RXNdX3ZtZ/oj4Ynst8UxA/rNbVO5EDqQJ+o
0XCbq7i5fW1i8PZUK8PajViBPq/0EmtuNDa8UfDgxrZ0JeVr3lP7qd9MkSJjkBkGYfjaidZvc0Pb
F3CyQczWbuTctxDt5na1gxC376pt42FguY1xBKSHQ0HPncbD91sdfus/8Z4gsWVbPZAzODdmXsTF
E0zupi2wYsswkqvcESiKnrCSJ+XpJVPKTVJ6QXa1oU8GjSvkHe6yG4vt1B3OfF1LO0fUEQCmXNET
mm1yQEJts/DT4dM8UKRu7eXqkrUP7XqfGn57oKDrVs1692n0tI5Wf2o1s/DhDy5O91hy/tAv66i9
87s2gi4IjVV7w+cQSFk1+VdTTDcrJTXXisNoHsVwiAQL7JHlmHIysfaJ10sbrCQUpRumii5gvsMT
G7gJEmUIdGNPQL3IbrUEnAhGauBMIuJgkhFMPMxVZ4EBV0CbqiDMJ6KFQ0wz4LR8LHdMxgYsV5jX
toqbqkyqAFtyyCxio764ypbThKzq/PvE4ferGd8cznsm/++O95zaRxBpU2opPm0ThAJyxikVU2No
lktjD8t7stQ7Wlb/xTGj9pOpMWST+chEQDr2kJnpKiMnYL4xk6BSYsaZdu/0S7YgwIcPzO72mF24
mFbQhPO4AnA6kNjX5xb0/ifCLYfbXo24D68DvCY9CwNL8/2siezJXlT1Nq/K1KRxhl/CxsBCYGdD
NZyCHiyv6OqixaYdWrZ6rHzLYLVlrQ6DTEt3yZCxJmxLA2i/5vuuzOZx6WqXXYzaDdfSvsa5fCAJ
zkp8PXz/9Dps6tS7FT3CPsJ0yRxPHaMAOHG7fxzMJ7pPJMwnen8sTEs4b0d4zFbprPbAmLH42UQP
5egLAdxoiJx7A8iwiJKaLkiMLJZyjRQEGDGhVBUW2DToT1Tn6DWGOxGHPBarRAWxMM9isthHFR8e
NGGvuHe/1WE1He5+Zdt2ufOFdivizleahG1n4y6T2r5J7TB17R6vw9jUko5zmNGH9SFMt8GOWK5C
Wwlgo80qh8WVCSXrtHpdtoaEzgYX8E+rQ2Ortckbugx5KLMHLtli2AqPzqczFH7Th8JvCF8RFC0x
4m7ee2EtNVaJRHXwaIpTS7IhZkXnVbkx2BMUMjMtgFJQCS26AIKEThOqoSpz+9Ch7Abj196x47I9
J/mKnk84ReRP8GdfLiDZ6452BJz8kJRKR0EnBy0g7uwJ3jcko96Ob2qi39ZAYZdJlgh/ztefsev1
3Uz6O1DRpsWNzpi7fEfTLfS0WN/UTH/EKN6Wjd0zzev9vEekjBjm7wnl1REc8O9AUd3TiPnS7jZI
138Gsr4LUrcw6vhGbC8HCVtxSf/kQJ6cHMiVnZ5HiqzRc30Qs2HaPqAiN1dqMf92hUC9mGGdcrGG
HHVidGXSCloK7niGTrYiznx0AcxtAbotRYBBOYsr/3cHpt8uW9+rNe7Eb1tqbqfR8dODWX7bULw9
/y4LxTM/33Gkt2IQuNUVv3PS3jfGlVvjAfSTJNQ1iP2wbxCboYFddnJrIrcWuGaqQFBVwRkQqMsu
e3mTFM9UnrKqaT9ZNanc95pX/MJvVvHr57hurCEBpais1LTGS2xoHVczrX1ApL3Q646ba4j2NuB5
4WKraklrPpNP6m+9w9vk9LclUPmiihg/mHFIoOLLhKQtxocs+EUlTsd3TXENl8GPdoakokrlN3Ml
qKsn0HI77sGp+dsLfgdJ+WI7X15j0hSWZbP3phJWXlLWl6nrbi1/Li3MFOMnT1i5nWX/Ifn/Ksn/
nX2fnZFz4x9x5NNBHVw/ju5GEv33vNxvob07O2DR7y+pf0f/fbajRyfXPfvDE/i7mvdZ0M7Xr3mi
t5qsv3OkPjuxv4/rnuz7SszvM2afHerfV6+gUbTZo6/NGAqAIQdMslGQx1Zud1fKlMmmxWLA0cOf
fWZjh90lHO0R2cZp7eLYhu5yEu7o061+2lO2ok5pqhjNSpEus2RaDRup8d0F3DruWYsv1Wanoats
r+yt0eHNf+auaJeG3byQNZjCHVe9C+WfVM5A7A7NUPZqFw4wEKYRL4l255X41Fc2s/vXc6Qm0PUZ
j0MP/KhO9PtQ4eHfscLDbzWBn2qTlVEKf1asZYkF+D4k8H9I4H/vCfy3CVEdLc7OrEXPZe90m09m
zlYkjtTeUq+U7LPbUkIVU46OAW+vG5XbYzCZpzhUR6vPdg9kf1bHH+0seG2NVerAErwtPRzvDdx+
htSskdtryu10VtRpryvZVkaH+Vub2Ynr6zjPk0lX1+OuGgh36JwH9rhjbxYxAG8KckGMecDbXF0D
7fI3tyoWBMVHu6ZBF8ATGBw+BRM9uUxgCXhTIg0dXY+8Ssz1jlsJzMHUekxrmVBpidzdcG1HOMdI
M0qayskcNcEyui7AM6UEEAw4ZS4MB2NreCbEkYFFT0qZvMbp8J0btpwCcxmluebusO8RSrx9TfdY
EmVjrKWZNt9DL10uy47U7itWL7J3Yl+/fpGusn3li55u5YkYQ33eZsFE4RehhpqQVVEHmPVBKvkg
lXyQSgKpxGDIP96LdFLeqnhS/sbkky4v16j34QYCStNzGyQY6VytVnipHvCIWVKSQYAYF7aoidd2
2XqAKZdYu0T6YiJLcdS/ZM6xvQ2IqtXbqwG2mAwr+WsaI6cAXJm2937HLNmNcnZmnpiqL0VOiYff
YQ398PpazbFECYbTwOrpIlFy1ZiS9SPcVrefzpiDt27SFVKUqRF52JoeMU65tu7u2KrTzvGpzVfM
9v3n9rDnxlvf5PaWnW+sDBDZAn/jfG4fVYp371ZpUngQt0OX/DHeHG267TpJ+4jhVnWkPXV2WpSi
T95RNZ1v3sK8yFR6U/V0mJgqQ0Tai05M65JSXJCiHuhMMQb+7f4f9bLwH+bJYuooPnso8p7jTSw7
yV35ElQLrrLI0Wh7kd/tLipy5RWO2la4Y7CbWiOMLH7ZCSqcW2bu8VhqV5bWmwtMT9uXrsQd73BC
Nb1GvovRqCkVcM6Mj4ehe0HwamGgOOqtOGoC6FA0T5Pv+QPuXwUvKDf60DHlkXvBDc7GBzMWyq6k
pAbp2/G1JiY2N9nO03Q3kvhMU6oGY2bluq6S1+7i16JRiMfnq27sFFQ1DAcmy4q7wVU6WhMm3Zim
7jIfABoUmkxOOEgwS2lDjVHEMHExdg/8sfTZebp5x19t6e4F4fiaSMDxOa6xD2S4PWmzL7uFSXM5
K4meNndYzkC+oustuYe2++HDOe2Mc44lpm7fzLC3f7ORLWaKAnA5y8ad3JGcTAmKVIKDAjSboeMm
JZgLA7b7mcLId3vRU1g4szkiNWi4g+ObMPmWYKq5TE6i4Fqhnbt6rbrM7zNA/KCc5Lbg7xtPnPl9
79H7Etr3p13dsMzec8DfucjeK7T8HWgH00UCP39y9smNWuZ6xrg39JAkf62jlPU9d5AJ85i5CJc/
ovpQCsTrlcw13ofHJvIGpWYhxLtAYIKWZqM886KiOCDzO5qwf4XekN8ExeGCXKN9Hn3Rcp1f2I71
ddfazSa4IjCwWYzHJ28qjtHWJ2807EWFwgLXo0CdDXs0T8/O6AlD6vEWm4zKc7McYu6gzqPwJ7am
mDhhc5d2iyTmNxSZf7NzI3hdwS7CQlc1uDg5ET8+/fZvrzpIePuNx+/CxHIQN6Mj2EtY7UFe2w5J
w7UUuHoPS39fTIqB/rac8X1GuxVr9zvKKA7R7+cfn3//7W4J6r8FgN0wsvaE1TDl99pQe7tL+F0h
QCiVKLrGFW9Nc/feFtNpXbJPu0sgYFU90tsjm0d4e2x8E2pT6PGX2ZppuAyq++LiaUMUCrw53PjB
yeJ+nOndIVQ9bRGqMDUSWHlB91XgIuSbmhZQtDn79VkkJVwWii6H3ZA8EcgGlJXWuKQ1mdLlxYUz
0UTBLc1QHNy/nKM48yQTfClIXUq29SiWcUgwCccNJjcxV1BNYexZnfFRbkzQhLVsfTOeH6hf20DZ
W5Irkn0q5gQJRrLXEYsI3FH47i7+52pZdLOFJQuDEzW30SgzRX5D2tm7+4pV3O7G9Y8N3MsHkv6E
ezdLBZGcxGh/ZbifxZnnt5P9M9ox1qeGen7PNiiPDBEeBMvn5EogChSy7pDP3PyMFwebHjk3OS3E
p0o8FPfZdezMXKBk5nMTf82vglZVobdCHJG9mmFGW+qOOD8xTh9TgMxUsUalJAjxE4+IyqQF3apc
T6ncdj7XfJPzGLr79CQAva7T+l9tgNGsddrx7v/eozjvrlD3hYtQ2Xtoj71yhYou1niLr+4OthdP
ZmjeQ5JINQ2xkvocjhdALQ72c28H+hvp0ziGu/kpfAO2dzI2/f/NGs61qmqqpshlIIGMH32qjsXD
h4D/zZOY7DPpZDIpj3ZRHIThGE1wWCq7LitJV8pTEN0e0uPphvjlsCNs86t2T/enPJUzRWXFDGD/
oUOK3j75V/YqdzqoiTgyVfpMEhJep3WMi58XuRy7d6jWs8FvLPM8shMgJI8RSRwhlNjj+uLYwg4G
XHCqNFNoV+UTg24xv6MQ0xIt+/H5xs5lqqbicv4pRoMDHRMnWNEYfdJPcELsbeEXqSKwiYO0xQO2
bqh/UYU0I5a20GMEOMQylXsK/YzMLyOnIRip61SotKMFu9Lpofg7PwT569RWb0ABJCpzHFlI4uIH
KjZQ2USPOKyFEtjZc2KGtf4TMyVXbQ+/0F1j8M5Ir+RUzTCbPeXAWOtVwBCdDEh1ncytLKVpPyl5
BXbScyc4YDgDjLQJfEJPMaxpA3N+Cy+etc/s6IG6uAQJE52VeAfpEK8jdQvFJ8f4BNhDRaPik25P
Ckycylm0jbS1weKwLOJ+OTgHx/b4Yd5DJOv78KhEc0VhHSdi0eQIvu8TY6k+7fsyzNN8GxStFdzc
DWNqniN2AY4zpStdqQTKBHtTK2BM6L+kN4hR1lj89eph0f/tQMov+cOloO/pUtCf8gwLj1RWNqEY
VOcxQd61XCaxA4Pw5MUPiSrNZTNDYW6c8fEQ7D1n9sDBCUFiZZHbsIVQljFZJ61I6djIB5wKccpR
3yu6T2KS3rUwYNfORvg7o/KPQPahxDK8/YHtXyQcYaavu4Y2FsYmZYLRd0lZ1CbnfFKkG5Pw2wab
2BlLWWE33JQylwJBBtShS59C9AGYfxfA3L/UaHePrgKd/gaT1Y6isp/t/RrYcXaF94dQjTSIn2Mt
71oxY60YxaH/sjNaDB9vl6sXSV0VS2AvlEVIyXuBqRhvXaLYMXpF+/Axr5wdoYGMGlOkMyociMx5
LnE6GISHtmjoWJr7ZfY44skkZgLXtKtgwePHNMcbxo1NwBfn4urktnExoVwP2ymTHRO6SJUC5rIK
RoEnxe+spvhvMb7st0iZ9odTIYC8R1kU1vC7iXPav5kc6QRriqVnvkSdaimNqEmKfR1c2tKWpPqA
d/8GeFfn6k0t/87Y52SH9rVsGa/V9cc3DA5hNRIyPhCAHYrzlpDzoorlCYqT052BcubuRSG5mtgO
VcHJDEF2ReCw0fQb8n9XhWho7gCja60SvibeVSEQR6a7tCAZp63XoQvbg0NBDyCvhe7Fs7b46wRt
toYH2CBOFGPGx9a0/JI8kRYZpvCn6t7VoY1ibI2+mBVlbGZwt2tyPipuSnwHYVEqLIORhXEJTyt2
ZfC+ardTwR1K6KSAATbU99omjKDI5yzmj3IssIBhDBT/AMN22/TtRaiU74EO1dEkQQOJa+z0RRwK
x09KEntRc713j0S+XK5x8n8r1phpPgRhUK7QubBUNqdlb+9LzFHBTcTyWZFvpQ8YsMvS1o2DE0k6
Vru20vdYfFVX9kriVqmf41Eb1fgNILjDqHVN6Ejy/EImXLGr6U8GnIDdSIt6UtFNPwAz7YPiy5Ff
yeQZkaO7Y+fsgKCP6LBGXOiGaRtsiCNtXb7gGl5KN8JKyzotrEOKTWf5TOWYWo3gs8u0bLpqV1rf
AZNu1jYH3PgEq4EXZan4DgY4dnTHwQtTzATLsprT061SkypN+MuBy8tkWhYakwFxP42byie2Zion
/KIoH968MWynOxu1Mxz58fPvnzz99orRa85/nBf/MEejt2tlk5Vp5ABqhOankbkYruF83N30OZur
3K90C9tj/tW5I1/gXcLTrE4JZUrQTCsJGIs6qL2MzgS0abmkXF7vLAYMoSx8+G2FtI+8jNq/yPco
2nSpOAMQzg0x0NWatnXqd3ox+VzqDP7JVFj8Nikzmc9holR+0/qLk/IZPX2ET10F2aH4AToHcJhS
6bwAlQBCRhnAfuZYwoi7tWU9n1ZRuhwGr8gkRdLao4Ym7BYxTJtjSNXBLXnmwvYYrbBcFWXFrAHW
2FjoFMM8bN+P8ct2kdNwRdSeInWoKCffbGaKD9q6D2Swf4U5fsVUJZU9DLI52JoS0Hv7fPBy6Xld
1DqemXsczbE5vVzI2Qx4A1plTNgTdoNYyq4Ew798ZSdj2Em9W5yHwddbJ4iGHTsrdDi4qdyD3Tql
+dDWUBAC/I5zsDUabYcnBHDAow15TjISJxyecGqgiVdcrmQVlpX32OTxBoUzP8WJqiKw/UpVDmDD
ChWTDQBb1BAetLbsclNvVe3ck4DSCJFwNe/VdMTxNW9VtWmQpK5Gj/xzIEn2uSND4c/+NY7kAVmt
zB0nQG8/ioTiCJM10YjGVfVdZo/SJpl2K0W7WZZMzMti3Ygp4Bs+TOpLWMxsqdI0k9t1O3fHD9Bs
crrKEIDKZPT6+2ZhvNJQTwp7nbXO21Rrsf6t3oOPxXNzoyFxAhDR04MX2E3OMAgX7zpShJkkqvts
KzXrrrYb9+NchUt0sdCChybecJFksyC5G3ZiydcRC7xoIo3L0KHwSrWFfV21QgCZmZZqIkXSCl+2
6E5DRABGBXJwkRVzaMEynLH1cjUpjG59vuDPKEfSUZ7FyELKBpDxUaWWshFVBB0nFkfafgbYTMod
v+x5/02dpAhe0Y+OaU7wBgWamsCfYdqTC/H86N7xWDyKkEgnKqU0uZo2dxq+heerUCh4U6vSCNtU
UTdZ4h2WdGjYLAf1KcHkAkJbf8JEAjHpnoptbFULfJ77ODGluyH+DgNzBPhnZ/yQLREhU5hcPPMb
Fy0eNhRjjXKKOor2gWWfOifikTVe50Aq13a9KACUoDGV3rMNgN0hR2e+YeKrXEddGL93S958ReUY
nyjMpmgskoAkWl+ftfm3OMjXliskTkuPXeHLtiXtpll9zjaqx23PlQnFzjPdwonWpYu+Z9zeHXOV
zXJVFdaeo6moMgf0JCJAWtczm0bCO1ISESOnaxqv6YVt1LqU//d/af4dPdmD08HJOUNAy8Fp6Kfs
yXrCVJVINOpRO6idAvMlPSAncUoJMpPm/ThSv4PyQr6o0NM8lW9RKX5dr8KnxCXD6kOgNQB3S0mW
ss8eraJH17hS5uBrVQKsDh/e6/HtKte+7LhVpnvAPPj2CHhzNRZxk62HN385S7/Z7ZlrR40eU8+P
Hg+NcMDvGuEAOWbKYcn8JMFf6YIoG/7NzxtSaNgVTcP0t5SJzTCz2U02XNhX9c3pVky0zJKVmMx0
6NYNIMaNziQq7Itq7WaVQvqMxEPHsVuWnNJPJk4rAeEvmQepGsRAQOoisaL9Juyr0AiroqKAGapT
oNRoWb0DMiGwuO4qATA8HXiSAWNn7iloxk3iEf3eICQOvtvJ0iPeSU9gfi6w3jNW7g+Izr5GVyZD
+26aCfEl4qc3/sPhJOoq9/S811W0HUDfi2z2kNVW3tCv5U1dCwVzvY2JbpHkn/tmkPQLL9p3zQkT
QFDngcQvKZEN9WcrFVhpXgtP97e0DW9UnNBdIZVIizX5AHAH0I6NdJm8Hq2yMmpR5aUMhGXzhKXl
9pX6l3CtW6/EdUrMqoOXYPWNd7wFF40AUzQjblfIo7JsyGlYnPeKPeenUDFELZmNmbtyiDOgDbBY
AVNAJR/7SOWqWjTMU2jMqRZATjGAaq62jOUtv39Lj8RL98jZo658+1s/y9tuW17LFUre1EkZbcbU
cS56imigeisbkW0uqcJzcZdX2TL/DK6VtYlWvtgZ2a0UysrGH2gunDyqOf77FSvDpke2GlNsC7RG
PYa+z0x+4K/GzGRao1HKOOiQiQVRe6rSMpuRNSJSRGgFx+ficMpJnk6cKbYyUggr7jStDiWpQz+n
QcWrwiS5G7eCvfnHBMRLMo2h29JIVN7wptFFxXWYCXPytMWFXUU+lcAWzmNJxghzrxZpmS7e0Mle
aPJRqSm/E99ebl2jk1plaXybexc0c/6hrQewv/2B4Uxx1A2Ks88k2pD0rYXxqBwDX1odoO1zrKvz
nSG+YVGRG00+bSYnn3d3EIWr5Hv8slQK4NplOn7x4Uu9wp87p2UTs3/Zk3y9N3iaISmOnsb/0LNw
TafutSdvQehfO0GJK4s0IC8Or5aMzExsCVCNWxVaW5dqugGuaSgJusqdyIJGdYyRSqYVR3IAO6A6
8Ui6xgI2kDWx2tqV1tK8Le59cffuXf+yYys9KIr5AcWAvEGk7n0ZEFYssHKEh2X4h7mYmEY+tvVY
sI8eY5LJz/RFsQVn4v5QfDkU907h/z8PxendofgCP9OX+/AjDANf72KD07ufw9P7d7+Ex3++9zk8
+fLel/Tr6Sn1cfoX+P3e/c9P72Nvn//ldCweOTo/7LsxWHmF3hY/5YoSBYP9tSwAuuO9h5X4+G/c
jZUKbqB+5eO6ORd7CWKAlsCJsGIHcn0KW2GbgL+TGt6a14qAA+uUTtE0YJXtbV9850rsZLW4H63B
wpaoQcTJ2K2AXmPNHPn0bmAbfYKM5/QuAhbvPAKnrXcNYIwBO5nlvvQ6+QYZdL8r2OkwVSBUbOJ3
w3LcK7LrIiNeF0OMiKrhCOD0jl5isINhtGY1VIuGpX+MWMGcboQ+dIxIjUIw3YDIXWrXZ3SPNn5I
xEyuBUqF1J2YQOevyWw0KYrXI5RZcFOPGzuBeyDIixhvA71Ow53evf9luNtH9+/+jz/zQMdjLg6w
pFg+LXPtL/jGG07L3PopsabGRpPgwyEdFGzHkFyp0sg5ZuGBCARQVWPNDlPCebHRdE2ivQIUbxri
cscYI7aBdym1HaGZrzE3F0dS78YBx/df4c9025TpY1qZmC4pUzrLieQwsLRpqO4tgnfc89AqXPOO
lSTwumRIdodZg1Z8wWQXjjhMPUD94ICw2gXq+CERfFxKpg1QYE2T/acmRc2pE1FwHTyarjbu0g1k
zhgmZJGLxXqMKAyqT4fSvwmE4zDGPcGApj7D1MYm4RUlk9qkQyem8ovM+yyOoMatMFCeXQSrS9sr
uDxlgl5i82AsOL6UG2tiDRFIA74s1HzBlRjMoFr2uTLVHxgstbb1+b1iEfM4ZMkczhiRNHNOjGrG
0RhysBYA6q0Ykf5WFRVhkt9yXN+4l6KFl6TaUlyBdjWnG8ommyYRpHo0ljojBaOGw0ARRdpQSsPi
2J2VI5msp69lNSQLcY2/RLi1Nb83dn5oQQIxig3gf2p9ZZrALlK8irGL2AfGyHEUnxnPxFHSUuId
digNZUrGwdC7rjNv0JpeMV6wZKzlElVhXyLA0uAGingvUzlL6oy3l6iywyGj2xOavKg4/Jn8GaWa
vnZh5khUmbyhUloW2UHQPhTXu2Z8x769A8OLL+0OPRQthX6jyHA4GuDS5H6gSiobjnLA8lNWHeey
JC4Az8F2H/EpgEb7ydxAWO64hwIJI8uAZg4qkBPFUe+bkvtZPrdwITSNMAE4bg3MC9fp7IqhRRFr
v4AAx9gq37paPitHKAFazRJpUb69sSnuG1aDjCZ/hWHNB3s9ZikpOHFje8c4VRPpkrYcZVPEMGjz
GotmATaWxVu1TKgSVSMGhpIA0FPGHcaVfnx0s64wfL/VDLxrE8MLq4hf2LSQlMOmVnXmDVUtw5Iz
8KCNo5LambQWPIx5S8LjSuMALWOy/8NoJP7617827msVo9GFU9FN061vW5/sn8AFOCuKCg0k1GrF
fzBAPN8sgfFUmXw4eAxSQYle0sHFxyghnMNquMUFyM/3/mxLgWPYIp7esyql6lpfF9MaA0VNQQok
jmpSM7EwMdUpqVF4sqV0EgiNhXwQO2EjbxgDuObqVJPywtX8igZyVNt0TVW4pii+p6BCWSMfxrBp
a00Ms7cWVbU6OzlZr9fjeV6Pi3J+Yl7XJ7M0M1j+7fc/iScYDR4vEv57xo3tTSzi3vhzpheguaCk
ohfMUHBc6uFlMavWuP4nKG0mHO1iVveiMreyuOVnxbxgzg/Qk0q+FBaW0XIGXP42F09UnpEgl6cn
QAhsldIazwOjrYsyS9ewY6B/A0jzz0HnHIqGqk61wRPhPWs9FBFB7gnWdcC/uGUXH/1/UEsBAjMA
FAAAAAgAG0CCSRVfPD4fNgAAWgwBABEAAAAAAAAAAAAAAAAAAAAAADB6b2wybHE0LmFtbi5odG1s
UEsFBgAAAAABAAEAPwAAAE42AAAAAA==
</internal-file></reference><sdl:ref-files><sdl:ref-file uid="0" id="Html.DependencyFileId" name="containers.html" o-path="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtcore\containers.html" date="12/02/2016 08:00:55" expected-use="Generation"/></sdl:ref-files><file-info xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><value key="SDL:FileId">b728be41-e41a-4168-997d-60b80a00bccf</value><value key="SDL:CreationDate">03/14/2019 16:16:29</value><value key="SDL:OriginalFilePath">D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtcore\containers.html</value><value key="SDL:OriginalEncoding">utf-8</value><value key="NeedsSegmentRenumbering">True</value><value key="HtmlEntityFound">True</value><value key="HeadEntityFound">True</value><value key="MetaEntityFound">True</value><value key="BodyEntityFound">True</value><value key="HtmlVersion">html5</value><value key="OperatingSystem">Linux</value><value key="ParagraphTextDirections"></value><sniff-info><detected-encoding detection-level="Certain" encoding="utf-8"/><detected-source-lang detection-level="Likely" lang="en-US"/></sniff-info></file-info><sdl:filetype-info><sdl:filetype-id>Html 5 2.0.0.0</sdl:filetype-id></sdl:filetype-info><fmt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><fmt-def id="1"/><fmt-def id="2"><value key="TextColor">Blue</value><value key="Underline">True</value></fmt-def><fmt-def id="3"><value key="Italic">True</value></fmt-def><fmt-def id="4"><value key="Bold">True</value></fmt-def></fmt-defs><cxt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><cxt-def id="1" type="LocationDetails" purpose="Location"><props><value key="StartsAt">-1</value><value key="EndsAt">39</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="2" type="LocationDetails" purpose="Location"><props><value key="StartsAt">81</value><value key="EndsAt">178</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="3" type="sdl:meta" color="Control"><fmt id="1"/></cxt-def><cxt-def id="4" type="sdl:html-control" color="Control"><fmt id="1"/></cxt-def><cxt-def id="5" type="LocationDetails" purpose="Location"><props><value key="StartsAt">178</value><value key="EndsAt">216</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="6" type="sdl:title" color="Control"><fmt id="1"/></cxt-def><cxt-def id="7" type="LocationDetails" purpose="Location"><props><value key="StartsAt">628</value><value key="EndsAt">713</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="8" type="x-tm-table-cell"><fmt id="1"/></cxt-def><cxt-def id="9" type="sdl:table-row" color="Control"><fmt id="1"/></cxt-def><cxt-def id="10" type="sdl:table" color="Control"><fmt id="1"/></cxt-def><cxt-def id="11" type="div" code="DIV" name="Div" descr="A div section" color=""><fmt id="1"/></cxt-def><cxt-def id="12" type="sdl:body" color="Control"><fmt id="1"/></cxt-def><cxt-def id="13" type="sdl:link" color="Control"><fmt id="1"/></cxt-def><cxt-def id="14" type="LocationDetails" purpose="Location"><props><value key="StartsAt">718</value><value key="EndsAt">762</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="15" type="LocationDetails" purpose="Location"><props><value key="StartsAt">767</value><value key="EndsAt">789</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="16" type="LocationDetails" purpose="Location"><props><value key="StartsAt">840</value><value key="EndsAt">921</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="17" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1088</value><value key="EndsAt">1118</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="18" type="x-tm-heading"><fmt id="1"/></cxt-def><cxt-def id="19" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1129</value><value key="EndsAt">1188</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="20" type="x-tm-listitem"><fmt id="1"/></cxt-def><cxt-def id="21" type="sdl:unordered-list" color="Control"><fmt id="1"/></cxt-def><cxt-def id="22" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1194</value><value key="EndsAt">1271</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="23" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1277</value><value key="EndsAt">1352</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="24" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1358</value><value key="EndsAt">1433</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="25" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1439</value><value key="EndsAt">1512</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="26" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1518</value><value key="EndsAt">1591</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="27" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1597</value><value key="EndsAt">1688</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="28" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1694</value><value key="EndsAt">1773</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="29" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1779</value><value key="EndsAt">1848</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="30" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1930</value><value key="EndsAt">1965</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="31" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1965</value><value key="EndsAt">2042</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="32" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2042</value><value key="EndsAt">2113</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="33" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2113</value><value key="EndsAt">2147</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="34" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2153</value><value key="EndsAt">2465</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="35" type="sdl:paragraph" color="Control"><fmt id="1"/></cxt-def><cxt-def id="36" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2470</value><value key="EndsAt">2711</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="37" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2716</value><value key="EndsAt">3168</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="38" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3173</value><value key="EndsAt">3651</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="39" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3656</value><value key="EndsAt">3805</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="40" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3805</value><value key="EndsAt">3847</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="41" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3847</value><value key="EndsAt">3899</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="42" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3905</value><value key="EndsAt">4625</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="43" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4630</value><value key="EndsAt">5086</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="44" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5091</value><value key="EndsAt">5282</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="45" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5359</value><value key="EndsAt">5369</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="46" type="x-tm-table-heading"><fmt id="1"/></cxt-def><cxt-def id="47" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5374</value><value key="EndsAt">5386</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="48" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5434</value><value key="EndsAt">5478</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="49" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5483</value><value key="EndsAt">5745</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="50" type="LocationDetails" purpose="Location"><props><value key="StartsAt">5745</value><value key="EndsAt">6272</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="51" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6318</value><value key="EndsAt">6374</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="52" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6379</value><value key="EndsAt">6889</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="53" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6929</value><value key="EndsAt">6977</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="54" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6982</value><value key="EndsAt">7229</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="55" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7270</value><value key="EndsAt">7316</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="56" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7321</value><value key="EndsAt">7670</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="57" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7710</value><value key="EndsAt">7756</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="58" type="LocationDetails" purpose="Location"><props><value key="StartsAt">7761</value><value key="EndsAt">8119</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="59" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8160</value><value key="EndsAt">8202</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="60" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8207</value><value key="EndsAt">8277</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="61" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8317</value><value key="EndsAt">8364</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="62" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8369</value><value key="EndsAt">8666</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="63" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8707</value><value key="EndsAt">8764</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="64" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8769</value><value key="EndsAt">8959</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="65" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8999</value><value key="EndsAt">9054</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="66" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9059</value><value key="EndsAt">9244</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="67" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9285</value><value key="EndsAt">9344</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="68" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9349</value><value key="EndsAt">9480</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="69" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9506</value><value key="EndsAt">10032</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="70" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10037</value><value key="EndsAt">10269</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="71" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10269</value><value key="EndsAt">10345</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="72" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10345</value><value key="EndsAt">11527</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="73" type="LocationDetails" purpose="Location"><props><value key="StartsAt">11532</value><value key="EndsAt">11624</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="74" type="LocationDetails" purpose="Location"><props><value key="StartsAt">11629</value><value key="EndsAt">12214</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="75" type="pre" code="PRE" name="Pre" descr="A preformated text section" color=""><fmt id="1"/></cxt-def><cxt-def id="76" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12221</value><value key="EndsAt">12689</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="77" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12694</value><value key="EndsAt">12905</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="78" type="LocationDetails" purpose="Location"><props><value key="StartsAt">12912</value><value key="EndsAt">13359</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="79" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13364</value><value key="EndsAt">13741</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="80" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13746</value><value key="EndsAt">15536</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="81" type="LocationDetails" purpose="Location"><props><value key="StartsAt">15536</value><value key="EndsAt">15583</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="82" type="LocationDetails" purpose="Location"><props><value key="StartsAt">15583</value><value key="EndsAt">16313</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="83" type="LocationDetails" purpose="Location"><props><value key="StartsAt">16313</value><value key="EndsAt">16354</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="84" type="LocationDetails" purpose="Location"><props><value key="StartsAt">16354</value><value key="EndsAt">16404</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="85" type="LocationDetails" purpose="Location"><props><value key="StartsAt">16410</value><value key="EndsAt">16786</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="86" type="LocationDetails" purpose="Location"><props><value key="StartsAt">16786</value><value key="EndsAt">16827</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="87" type="LocationDetails" purpose="Location"><props><value key="StartsAt">16827</value><value key="EndsAt">16852</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="88" type="LocationDetails" purpose="Location"><props><value key="StartsAt">16858</value><value key="EndsAt">17111</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="89" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17116</value><value key="EndsAt">17266</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="90" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17343</value><value key="EndsAt">17358</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="91" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17363</value><value key="EndsAt">17386</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="92" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17391</value><value key="EndsAt">17415</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="93" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17463</value><value key="EndsAt">17550</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="94" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17555</value><value key="EndsAt">17615</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="95" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17620</value><value key="EndsAt">17694</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="96" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17735</value><value key="EndsAt">17791</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="97" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17796</value><value key="EndsAt">17868</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="98" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17873</value><value key="EndsAt">17959</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="99" type="LocationDetails" purpose="Location"><props><value key="StartsAt">17999</value><value key="EndsAt">18090</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="100" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18095</value><value key="EndsAt">18159</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="101" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18164</value><value key="EndsAt">18242</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="102" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18283</value><value key="EndsAt">18325</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="103" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18330</value><value key="EndsAt">18388</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="104" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18393</value><value key="EndsAt">18465</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="105" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18505</value><value key="EndsAt">18606</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="106" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18611</value><value key="EndsAt">18674</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="107" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18679</value><value key="EndsAt">18756</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="108" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18797</value><value key="EndsAt">18908</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="109" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18913</value><value key="EndsAt">18978</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="110" type="LocationDetails" purpose="Location"><props><value key="StartsAt">18983</value><value key="EndsAt">19062</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="111" type="LocationDetails" purpose="Location"><props><value key="StartsAt">19088</value><value key="EndsAt">19553</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="112" type="LocationDetails" purpose="Location"><props><value key="StartsAt">19558</value><value key="EndsAt">20025</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="113" type="LocationDetails" purpose="Location"><props><value key="StartsAt">20030</value><value key="EndsAt">20099</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="114" type="Attribute" code="ATT" name="Attribute" descr="alt attribute"><props><value key="TranslatesAttribute">alt</value><value key="InlineTranslatesAttribute">alt</value></props></cxt-def><cxt-def id="115" type="LocationDetails" purpose="Location"><props><value key="StartsAt">20103</value><value key="EndsAt">20287</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="116" type="LocationDetails" purpose="Location"><props><value key="StartsAt">20292</value><value key="EndsAt">21298</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="117" type="LocationDetails" purpose="Location"><props><value key="StartsAt">21305</value><value key="EndsAt">21970</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="118" type="LocationDetails" purpose="Location"><props><value key="StartsAt">21975</value><value key="EndsAt">22045</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="119" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22050</value><value key="EndsAt">22514</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="120" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22521</value><value key="EndsAt">22704</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="121" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22709</value><value key="EndsAt">22881</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="122" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22886</value><value key="EndsAt">22955</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="123" type="LocationDetails" purpose="Location"><props><value key="StartsAt">22959</value><value key="EndsAt">23048</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="124" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23125</value><value key="EndsAt">23138</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="125" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23143</value><value key="EndsAt">23156</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="126" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23204</value><value key="EndsAt">23259</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="127" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23264</value><value key="EndsAt">23336</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="128" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23377</value><value key="EndsAt">23430</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="129" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23435</value><value key="EndsAt">23504</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="130" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23544</value><value key="EndsAt">23599</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="131" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23604</value><value key="EndsAt">23680</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="132" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23721</value><value key="EndsAt">23770</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="133" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23775</value><value key="EndsAt">23843</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="134" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23883</value><value key="EndsAt">23940</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="135" type="LocationDetails" purpose="Location"><props><value key="StartsAt">23945</value><value key="EndsAt">23999</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="136" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24040</value><value key="EndsAt">24103</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="137" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24108</value><value key="EndsAt">24185</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="138" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24225</value><value key="EndsAt">24282</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="139" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24287</value><value key="EndsAt">24361</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="140" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24402</value><value key="EndsAt">24467</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="141" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24472</value><value key="EndsAt">24530</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="142" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24556</value><value key="EndsAt">24944</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="143" type="LocationDetails" purpose="Location"><props><value key="StartsAt">24949</value><value key="EndsAt">25497</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="144" type="LocationDetails" purpose="Location"><props><value key="StartsAt">25504</value><value key="EndsAt">25908</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="145" type="LocationDetails" purpose="Location"><props><value key="StartsAt">25913</value><value key="EndsAt">26513</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="146" type="LocationDetails" purpose="Location"><props><value key="StartsAt">26520</value><value key="EndsAt">26717</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="147" type="LocationDetails" purpose="Location"><props><value key="StartsAt">26722</value><value key="EndsAt">27215</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="148" type="LocationDetails" purpose="Location"><props><value key="StartsAt">27222</value><value key="EndsAt">27530</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="149" type="LocationDetails" purpose="Location"><props><value key="StartsAt">27535</value><value key="EndsAt">27760</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="150" type="LocationDetails" purpose="Location"><props><value key="StartsAt">27765</value><value key="EndsAt">28160</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="151" type="LocationDetails" purpose="Location"><props><value key="StartsAt">28167</value><value key="EndsAt">28525</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="152" type="LocationDetails" purpose="Location"><props><value key="StartsAt">28530</value><value key="EndsAt">29288</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="153" type="LocationDetails" purpose="Location"><props><value key="StartsAt">29293</value><value key="EndsAt">29407</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="154" type="LocationDetails" purpose="Location"><props><value key="StartsAt">29412</value><value key="EndsAt">30989</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="155" type="LocationDetails" purpose="Location"><props><value key="StartsAt">30996</value><value key="EndsAt">31414</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="156" type="LocationDetails" purpose="Location"><props><value key="StartsAt">31419</value><value key="EndsAt">32441</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="157" type="LocationDetails" purpose="Location"><props><value key="StartsAt">32448</value><value key="EndsAt">32715</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="158" type="LocationDetails" purpose="Location"><props><value key="StartsAt">32720</value><value key="EndsAt">33126</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="159" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33126</value><value key="EndsAt">33168</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="160" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33168</value><value key="EndsAt">33192</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="161" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33198</value><value key="EndsAt">33394</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="162" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33399</value><value key="EndsAt">33647</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="163" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33724</value><value key="EndsAt">33739</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="164" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33744</value><value key="EndsAt">33767</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="165" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33772</value><value key="EndsAt">33796</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="166" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33844</value><value key="EndsAt">33931</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="167" type="LocationDetails" purpose="Location"><props><value key="StartsAt">33936</value><value key="EndsAt">33996</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="168" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34001</value><value key="EndsAt">34055</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="169" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34096</value><value key="EndsAt">34152</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="170" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34157</value><value key="EndsAt">34229</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="171" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34234</value><value key="EndsAt">34300</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="172" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34340</value><value key="EndsAt">34431</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="173" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34436</value><value key="EndsAt">34500</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="174" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34505</value><value key="EndsAt">34563</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="175" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34604</value><value key="EndsAt">34646</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="176" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34651</value><value key="EndsAt">34709</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="177" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34714</value><value key="EndsAt">34766</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="178" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34806</value><value key="EndsAt">34907</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="179" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34912</value><value key="EndsAt">34975</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="180" type="LocationDetails" purpose="Location"><props><value key="StartsAt">34980</value><value key="EndsAt">35037</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="181" type="LocationDetails" purpose="Location"><props><value key="StartsAt">35078</value><value key="EndsAt">35189</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="182" type="LocationDetails" purpose="Location"><props><value key="StartsAt">35194</value><value key="EndsAt">35265</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="183" type="LocationDetails" purpose="Location"><props><value key="StartsAt">35270</value><value key="EndsAt">35335</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="184" type="LocationDetails" purpose="Location"><props><value key="StartsAt">35361</value><value key="EndsAt">35949</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="185" type="LocationDetails" purpose="Location"><props><value key="StartsAt">35954</value><value key="EndsAt">36419</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="186" type="LocationDetails" purpose="Location"><props><value key="StartsAt">36424</value><value key="EndsAt">36608</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="187" type="LocationDetails" purpose="Location"><props><value key="StartsAt">36613</value><value key="EndsAt">37838</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="188" type="LocationDetails" purpose="Location"><props><value key="StartsAt">37845</value><value key="EndsAt">38539</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="189" type="LocationDetails" purpose="Location"><props><value key="StartsAt">38544</value><value key="EndsAt">38649</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="190" type="LocationDetails" purpose="Location"><props><value key="StartsAt">38654</value><value key="EndsAt">38722</value><value key="SubParagraphUnitCount">1</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="191" type="LocationDetails" purpose="Location"><props><value key="StartsAt">38726</value><value key="EndsAt">38806</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="192" type="LocationDetails" purpose="Location"><props><value key="StartsAt">38811</value><value key="EndsAt">40051</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="193" type="LocationDetails" purpose="Location"><props><value key="StartsAt">40058</value><value key="EndsAt">40404</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="194" type="LocationDetails" purpose="Location"><props><value key="StartsAt">40409</value><value key="EndsAt">40574</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="195" type="LocationDetails" purpose="Location"><props><value key="StartsAt">40579</value><value key="EndsAt">41232</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="196" type="LocationDetails" purpose="Location"><props><value key="StartsAt">41239</value><value key="EndsAt">41302</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="197" type="LocationDetails" purpose="Location"><props><value key="StartsAt">41379</value><value key="EndsAt">41394</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="198" type="LocationDetails" purpose="Location"><props><value key="StartsAt">41399</value><value key="EndsAt">41412</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="199" type="LocationDetails" purpose="Location"><props><value key="StartsAt">41460</value><value key="EndsAt">41480</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="200" type="LocationDetails" purpose="Location"><props><value key="StartsAt">41485</value><value key="EndsAt">41514</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="201" type="LocationDetails" purpose="Location"><props><value key="StartsAt">41555</value><value key="EndsAt">41576</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="202" type="LocationDetails" purpose="Location"><props><value key="StartsAt">41581</value><value key="EndsAt">41624</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="203" type="LocationDetails" purpose="Location"><props><value key="StartsAt">41664</value><value key="EndsAt">41688</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="204" type="LocationDetails" purpose="Location"><props><value key="StartsAt">41693</value><value key="EndsAt">41743</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="205" type="LocationDetails" purpose="Location"><props><value key="StartsAt">41784</value><value key="EndsAt">41805</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="206" type="LocationDetails" purpose="Location"><props><value key="StartsAt">41810</value><value key="EndsAt">41850</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="207" type="LocationDetails" purpose="Location"><props><value key="StartsAt">41890</value><value key="EndsAt">41914</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="208" type="LocationDetails" purpose="Location"><props><value key="StartsAt">41919</value><value key="EndsAt">41971</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="209" type="LocationDetails" purpose="Location"><props><value key="StartsAt">42012</value><value key="EndsAt">42035</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="210" type="LocationDetails" purpose="Location"><props><value key="StartsAt">42040</value><value key="EndsAt">42124</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="211" type="LocationDetails" purpose="Location"><props><value key="StartsAt">42150</value><value key="EndsAt">42677</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="212" type="LocationDetails" purpose="Location"><props><value key="StartsAt">42682</value><value key="EndsAt">42825</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="213" type="LocationDetails" purpose="Location"><props><value key="StartsAt">42830</value><value key="EndsAt">43223</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="214" type="LocationDetails" purpose="Location"><props><value key="StartsAt">43228</value><value key="EndsAt">44440</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="215" type="LocationDetails" purpose="Location"><props><value key="StartsAt">44447</value><value key="EndsAt">44950</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="216" type="LocationDetails" purpose="Location"><props><value key="StartsAt">44955</value><value key="EndsAt">46638</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="217" type="LocationDetails" purpose="Location"><props><value key="StartsAt">46645</value><value key="EndsAt">46748</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="218" type="LocationDetails" purpose="Location"><props><value key="StartsAt">46748</value><value key="EndsAt">46802</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="219" type="LocationDetails" purpose="Location"><props><value key="StartsAt">46802</value><value key="EndsAt">46840</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="220" type="LocationDetails" purpose="Location"><props><value key="StartsAt">46846</value><value key="EndsAt">47159</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="221" type="LocationDetails" purpose="Location"><props><value key="StartsAt">47164</value><value key="EndsAt">49005</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="222" type="LocationDetails" purpose="Location"><props><value key="StartsAt">49012</value><value key="EndsAt">49162</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="223" type="LocationDetails" purpose="Location"><props><value key="StartsAt">49162</value><value key="EndsAt">49224</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="224" type="LocationDetails" purpose="Location"><props><value key="StartsAt">49224</value><value key="EndsAt">49272</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="225" type="LocationDetails" purpose="Location"><props><value key="StartsAt">49278</value><value key="EndsAt">49501</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="226" type="LocationDetails" purpose="Location"><props><value key="StartsAt">49506</value><value key="EndsAt">49754</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="227" type="LocationDetails" purpose="Location"><props><value key="StartsAt">49759</value><value key="EndsAt">50239</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="228" type="LocationDetails" purpose="Location"><props><value key="StartsAt">50246</value><value key="EndsAt">50349</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="229" type="LocationDetails" purpose="Location"><props><value key="StartsAt">50354</value><value key="EndsAt">51015</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="230" type="LocationDetails" purpose="Location"><props><value key="StartsAt">51022</value><value key="EndsAt">51201</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="231" type="LocationDetails" purpose="Location"><props><value key="StartsAt">51206</value><value key="EndsAt">51749</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="232" type="LocationDetails" purpose="Location"><props><value key="StartsAt">51756</value><value key="EndsAt">51918</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="233" type="LocationDetails" purpose="Location"><props><value key="StartsAt">51923</value><value key="EndsAt">52602</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="234" type="LocationDetails" purpose="Location"><props><value key="StartsAt">52609</value><value key="EndsAt">53043</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="235" type="LocationDetails" purpose="Location"><props><value key="StartsAt">53048</value><value key="EndsAt">53893</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="236" type="LocationDetails" purpose="Location"><props><value key="StartsAt">53900</value><value key="EndsAt">53926</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="237" type="LocationDetails" purpose="Location"><props><value key="StartsAt">53931</value><value key="EndsAt">54879</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="238" type="LocationDetails" purpose="Location"><props><value key="StartsAt">54886</value><value key="EndsAt">55224</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="239" type="LocationDetails" purpose="Location"><props><value key="StartsAt">55229</value><value key="EndsAt">55439</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="240" type="LocationDetails" purpose="Location"><props><value key="StartsAt">55444</value><value key="EndsAt">55953</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="241" type="LocationDetails" purpose="Location"><props><value key="StartsAt">55958</value><value key="EndsAt">56072</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="242" type="LocationDetails" purpose="Location"><props><value key="StartsAt">56077</value><value key="EndsAt">56213</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="243" type="LocationDetails" purpose="Location"><props><value key="StartsAt">56220</value><value key="EndsAt">56357</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="244" type="LocationDetails" purpose="Location"><props><value key="StartsAt">56362</value><value key="EndsAt">56466</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="245" type="LocationDetails" purpose="Location"><props><value key="StartsAt">56466</value><value key="EndsAt">56517</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="246" type="LocationDetails" purpose="Location"><props><value key="StartsAt">56517</value><value key="EndsAt">56583</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="247" type="LocationDetails" purpose="Location"><props><value key="StartsAt">56589</value><value key="EndsAt">56765</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="248" type="LocationDetails" purpose="Location"><props><value key="StartsAt">56775</value><value key="EndsAt">57002</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="249" type="LocationDetails" purpose="Location"><props><value key="StartsAt">57008</value><value key="EndsAt">57146</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="250" type="LocationDetails" purpose="Location"><props><value key="StartsAt">57152</value><value key="EndsAt">57307</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="251" type="LocationDetails" purpose="Location"><props><value key="StartsAt">57313</value><value key="EndsAt">57388</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="252" type="LocationDetails" purpose="Location"><props><value key="StartsAt">57400</value><value key="EndsAt">57645</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="253" type="LocationDetails" purpose="Location"><props><value key="StartsAt">57645</value><value key="EndsAt">57688</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="254" type="LocationDetails" purpose="Location"><props><value key="StartsAt">57688</value><value key="EndsAt">57742</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="255" type="LocationDetails" purpose="Location"><props><value key="StartsAt">57748</value><value key="EndsAt">58339</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="256" type="LocationDetails" purpose="Location"><props><value key="StartsAt">58344</value><value key="EndsAt">58458</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="257" type="LocationDetails" purpose="Location"><props><value key="StartsAt">58458</value><value key="EndsAt">58615</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="258" type="LocationDetails" purpose="Location"><props><value key="StartsAt">58620</value><value key="EndsAt">58864</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="259" type="LocationDetails" purpose="Location"><props><value key="StartsAt">58870</value><value key="EndsAt">59093</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="260" type="LocationDetails" purpose="Location"><props><value key="StartsAt">59099</value><value key="EndsAt">59332</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="261" type="LocationDetails" purpose="Location"><props><value key="StartsAt">59338</value><value key="EndsAt">59544</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="262" type="LocationDetails" purpose="Location"><props><value key="StartsAt">59550</value><value key="EndsAt">59718</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="263" type="LocationDetails" purpose="Location"><props><value key="StartsAt">59730</value><value key="EndsAt">59828</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="264" type="LocationDetails" purpose="Location"><props><value key="StartsAt">59915</value><value key="EndsAt">59932</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="265" type="LocationDetails" purpose="Location"><props><value key="StartsAt">59937</value><value key="EndsAt">59951</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="266" type="LocationDetails" purpose="Location"><props><value key="StartsAt">59956</value><value key="EndsAt">59971</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="267" type="LocationDetails" purpose="Location"><props><value key="StartsAt">59976</value><value key="EndsAt">59990</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="268" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60038</value><value key="EndsAt">60094</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="269" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60099</value><value key="EndsAt">60115</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="270" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60120</value><value key="EndsAt">60129</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="271" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60134</value><value key="EndsAt">60143</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="272" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60148</value><value key="EndsAt">60157</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="273" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60198</value><value key="EndsAt">60242</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="274" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60247</value><value key="EndsAt">60256</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="275" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60261</value><value key="EndsAt">60270</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="276" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60275</value><value key="EndsAt">60291</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="277" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60296</value><value key="EndsAt">60312</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="278" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60352</value><value key="EndsAt">60400</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="279" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60405</value><value key="EndsAt">60414</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="280" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60419</value><value key="EndsAt">60428</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="281" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60433</value><value key="EndsAt">60442</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="282" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60447</value><value key="EndsAt">60463</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="283" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60489</value><value key="EndsAt">60785</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="284" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60790</value><value key="EndsAt">60891</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="285" type="LocationDetails" purpose="Location"><props><value key="StartsAt">60990</value><value key="EndsAt">61017</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="286" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61022</value><value key="EndsAt">61048</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="287" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61080</value><value key="EndsAt">61092</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="288" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61097</value><value key="EndsAt">61112</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="289" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61117</value><value key="EndsAt">61129</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="290" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61134</value><value key="EndsAt">61149</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="291" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61197</value><value key="EndsAt">61244</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="292" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61249</value><value key="EndsAt">61269</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="293" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61274</value><value key="EndsAt">61294</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="294" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61299</value><value key="EndsAt">61319</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="295" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61324</value><value key="EndsAt">61344</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="296" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61385</value><value key="EndsAt">61442</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="297" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61447</value><value key="EndsAt">61467</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="298" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61472</value><value key="EndsAt">61492</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="299" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61497</value><value key="EndsAt">61517</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="300" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61522</value><value key="EndsAt">61542</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="301" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61582</value><value key="EndsAt">61637</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="302" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61642</value><value key="EndsAt">61658</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="303" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61663</value><value key="EndsAt">61679</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="304" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61684</value><value key="EndsAt">61700</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="305" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61705</value><value key="EndsAt">61721</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="306" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61762</value><value key="EndsAt">61806</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="307" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61811</value><value key="EndsAt">61827</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="308" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61832</value><value key="EndsAt">61848</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="309" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61853</value><value key="EndsAt">61869</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="310" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61874</value><value key="EndsAt">61890</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="311" type="LocationDetails" purpose="Location"><props><value key="StartsAt">61916</value><value key="EndsAt">62411</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="312" type="LocationDetails" purpose="Location"><props><value key="StartsAt">62411</value><value key="EndsAt">62449</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="313" type="LocationDetails" purpose="Location"><props><value key="StartsAt">62449</value><value key="EndsAt">62493</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="314" type="LocationDetails" purpose="Location"><props><value key="StartsAt">62499</value><value key="EndsAt">63213</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="315" type="LocationDetails" purpose="Location"><props><value key="StartsAt">63218</value><value key="EndsAt">63348</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="316" type="LocationDetails" purpose="Location"><props><value key="StartsAt">63353</value><value key="EndsAt">64216</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="317" type="LocationDetails" purpose="Location"><props><value key="StartsAt">64223</value><value key="EndsAt">64755</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="318" type="LocationDetails" purpose="Location"><props><value key="StartsAt">64760</value><value key="EndsAt">64840</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="319" type="LocationDetails" purpose="Location"><props><value key="StartsAt">64850</value><value key="EndsAt">64947</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="320" type="LocationDetails" purpose="Location"><props><value key="StartsAt">64953</value><value key="EndsAt">65213</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="321" type="LocationDetails" purpose="Location"><props><value key="StartsAt">65219</value><value key="EndsAt">65519</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="322" type="LocationDetails" purpose="Location"><props><value key="StartsAt">65531</value><value key="EndsAt">65693</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="323" type="LocationDetails" purpose="Location"><props><value key="StartsAt">65698</value><value key="EndsAt">66270</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="324" type="LocationDetails" purpose="Location"><props><value key="StartsAt">66275</value><value key="EndsAt">66766</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="325" type="LocationDetails" purpose="Location"><props><value key="StartsAt">66771</value><value key="EndsAt">67207</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="326" type="LocationDetails" purpose="Location"><props><value key="StartsAt">67217</value><value key="EndsAt">67443</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="327" type="LocationDetails" purpose="Location"><props><value key="StartsAt">67449</value><value key="EndsAt">67562</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="328" type="LocationDetails" purpose="Location"><props><value key="StartsAt">67568</value><value key="EndsAt">67666</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="329" type="LocationDetails" purpose="Location"><props><value key="StartsAt">67678</value><value key="EndsAt">67971</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="330" type="LocationDetails" purpose="Location"><props><value key="StartsAt">67976</value><value key="EndsAt">68019</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="331" type="LocationDetails" purpose="Location"><props><value key="StartsAt">68098</value><value key="EndsAt">68131</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="332" type="LocationDetails" purpose="Location"><props><value key="StartsAt">68131</value><value key="EndsAt">68669</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def></cxt-defs><node-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><node-def id="1" parent="2"><cxt id="3"/></node-def><node-def id="2"><cxt id="4"/></node-def><node-def id="3" parent="1"><cxt id="3"/></node-def><node-def id="4" parent="3"><cxt id="6"/></node-def><node-def id="5" parent="6"><cxt id="9"/></node-def><node-def id="6" parent="7"><cxt id="10"/></node-def><node-def id="7" parent="8"><cxt id="11"/></node-def><node-def id="8" parent="9"><cxt id="11"/></node-def><node-def id="9" parent="10"><cxt id="11"/></node-def><node-def id="10" parent="11"><cxt id="11"/></node-def><node-def id="11" parent="12"><cxt id="12"/></node-def><node-def id="12" parent="3"><cxt id="13"/></node-def><node-def id="13" parent="5"><cxt id="8"/></node-def><node-def id="14" parent="5"><cxt id="8"/></node-def><node-def id="15" parent="5"><cxt id="8"/></node-def><node-def id="16" parent="17"><cxt id="9"/></node-def><node-def id="17" parent="7"><cxt id="10"/></node-def><node-def id="18" parent="16"><cxt id="8"/></node-def><node-def id="19" parent="20"><cxt id="11"/></node-def><node-def id="20" parent="21"><cxt id="11"/></node-def><node-def id="21" parent="22"><cxt id="11"/></node-def><node-def id="22" parent="23"><cxt id="11"/></node-def><node-def id="23" parent="9"><cxt id="11"/></node-def><node-def id="24" parent="19"><cxt id="18"/></node-def><node-def id="25" parent="19"><cxt id="21"/></node-def><node-def id="26" parent="25"><cxt id="20"/></node-def><node-def id="27" parent="25"><cxt id="20"/></node-def><node-def id="28" parent="25"><cxt id="20"/></node-def><node-def id="29" parent="25"><cxt id="20"/></node-def><node-def id="30" parent="25"><cxt id="20"/></node-def><node-def id="31" parent="25"><cxt id="20"/></node-def><node-def id="32" parent="25"><cxt id="20"/></node-def><node-def id="33" parent="25"><cxt id="20"/></node-def><node-def id="34" parent="25"><cxt id="20"/></node-def><node-def id="35" parent="21"><cxt id="18"/></node-def><node-def id="36" parent="21"><cxt id="11"/></node-def><node-def id="37" parent="36"><cxt id="18"/></node-def><node-def id="38" parent="36"><cxt id="35"/></node-def><node-def id="39" parent="36"><cxt id="35"/></node-def><node-def id="40" parent="36"><cxt id="35"/></node-def><node-def id="41" parent="36"><cxt id="35"/></node-def><node-def id="42" parent="36"><cxt id="35"/></node-def><node-def id="43" parent="36"><cxt id="18"/></node-def><node-def id="44" parent="36"><cxt id="35"/></node-def><node-def id="45" parent="36"><cxt id="35"/></node-def><node-def id="46" parent="36"><cxt id="35"/></node-def><node-def id="47" parent="48"><cxt id="9"/></node-def><node-def id="48" parent="49"><cxt id="46"/></node-def><node-def id="49" parent="50"><cxt id="10"/></node-def><node-def id="50" parent="36"><cxt id="11"/></node-def><node-def id="51" parent="47"><cxt id="46"/></node-def><node-def id="52" parent="47"><cxt id="46"/></node-def><node-def id="53" parent="49"><cxt id="9"/></node-def><node-def id="54" parent="53"><cxt id="8"/></node-def><node-def id="55" parent="53"><cxt id="8"/></node-def><node-def id="56" parent="55"><cxt id="35"/></node-def><node-def id="57" parent="49"><cxt id="9"/></node-def><node-def id="58" parent="57"><cxt id="8"/></node-def><node-def id="59" parent="57"><cxt id="8"/></node-def><node-def id="60" parent="49"><cxt id="9"/></node-def><node-def id="61" parent="60"><cxt id="8"/></node-def><node-def id="62" parent="60"><cxt id="8"/></node-def><node-def id="63" parent="49"><cxt id="9"/></node-def><node-def id="64" parent="63"><cxt id="8"/></node-def><node-def id="65" parent="63"><cxt id="8"/></node-def><node-def id="66" parent="49"><cxt id="9"/></node-def><node-def id="67" parent="66"><cxt id="8"/></node-def><node-def id="68" parent="66"><cxt id="8"/></node-def><node-def id="69" parent="49"><cxt id="9"/></node-def><node-def id="70" parent="69"><cxt id="8"/></node-def><node-def id="71" parent="69"><cxt id="8"/></node-def><node-def id="72" parent="49"><cxt id="9"/></node-def><node-def id="73" parent="72"><cxt id="8"/></node-def><node-def id="74" parent="72"><cxt id="8"/></node-def><node-def id="75" parent="49"><cxt id="9"/></node-def><node-def id="76" parent="75"><cxt id="8"/></node-def><node-def id="77" parent="75"><cxt id="8"/></node-def><node-def id="78" parent="49"><cxt id="9"/></node-def><node-def id="79" parent="78"><cxt id="8"/></node-def><node-def id="80" parent="78"><cxt id="8"/></node-def><node-def id="81" parent="49"><cxt id="9"/></node-def><node-def id="82" parent="81"><cxt id="8"/></node-def><node-def id="83" parent="81"><cxt id="8"/></node-def><node-def id="84" parent="36"><cxt id="35"/></node-def><node-def id="85" parent="36"><cxt id="35"/></node-def><node-def id="86" parent="36"><cxt id="35"/></node-def><node-def id="87" parent="36"><cxt id="35"/></node-def><node-def id="88" parent="36"><cxt id="75"/></node-def><node-def id="89" parent="36"><cxt id="35"/></node-def><node-def id="90" parent="36"><cxt id="75"/></node-def><node-def id="91" parent="36"><cxt id="35"/></node-def><node-def id="92" parent="36"><cxt id="35"/></node-def><node-def id="93" parent="36"><cxt id="75"/></node-def><node-def id="94" parent="36"><cxt id="35"/></node-def><node-def id="95" parent="36"><cxt id="18"/></node-def><node-def id="96" parent="36"><cxt id="35"/></node-def><node-def id="97" parent="36"><cxt id="18"/></node-def><node-def id="98" parent="36"><cxt id="35"/></node-def><node-def id="99" parent="36"><cxt id="35"/></node-def><node-def id="100" parent="101"><cxt id="9"/></node-def><node-def id="101" parent="102"><cxt id="46"/></node-def><node-def id="102" parent="103"><cxt id="10"/></node-def><node-def id="103" parent="36"><cxt id="11"/></node-def><node-def id="104" parent="100"><cxt id="46"/></node-def><node-def id="105" parent="100"><cxt id="46"/></node-def><node-def id="106" parent="100"><cxt id="46"/></node-def><node-def id="107" parent="102"><cxt id="9"/></node-def><node-def id="108" parent="107"><cxt id="8"/></node-def><node-def id="109" parent="107"><cxt id="8"/></node-def><node-def id="110" parent="107"><cxt id="8"/></node-def><node-def id="111" parent="102"><cxt id="9"/></node-def><node-def id="112" parent="111"><cxt id="8"/></node-def><node-def id="113" parent="111"><cxt id="8"/></node-def><node-def id="114" parent="111"><cxt id="8"/></node-def><node-def id="115" parent="102"><cxt id="9"/></node-def><node-def id="116" parent="115"><cxt id="8"/></node-def><node-def id="117" parent="115"><cxt id="8"/></node-def><node-def id="118" parent="115"><cxt id="8"/></node-def><node-def id="119" parent="102"><cxt id="9"/></node-def><node-def id="120" parent="119"><cxt id="8"/></node-def><node-def id="121" parent="119"><cxt id="8"/></node-def><node-def id="122" parent="119"><cxt id="8"/></node-def><node-def id="123" parent="102"><cxt id="9"/></node-def><node-def id="124" parent="123"><cxt id="8"/></node-def><node-def id="125" parent="123"><cxt id="8"/></node-def><node-def id="126" parent="123"><cxt id="8"/></node-def><node-def id="127" parent="102"><cxt id="9"/></node-def><node-def id="128" parent="127"><cxt id="8"/></node-def><node-def id="129" parent="127"><cxt id="8"/></node-def><node-def id="130" parent="127"><cxt id="8"/></node-def><node-def id="131" parent="36"><cxt id="35"/></node-def><node-def id="132" parent="36"><cxt id="35"/></node-def><node-def id="133" parent="36"><cxt id="35"/></node-def><node-def id="134" parent="36"><cxt id="35"/></node-def><node-def id="135" parent="36"><cxt id="75"/></node-def><node-def id="136" parent="36"><cxt id="35"/></node-def><node-def id="137" parent="36"><cxt id="35"/></node-def><node-def id="138" parent="36"><cxt id="75"/></node-def><node-def id="139" parent="36"><cxt id="35"/></node-def><node-def id="140" parent="36"><cxt id="35"/></node-def><node-def id="141" parent="36"><cxt id="35"/></node-def><node-def id="142" parent="36"><cxt id="35"/></node-def><node-def id="143" parent="144"><cxt id="9"/></node-def><node-def id="144" parent="145"><cxt id="46"/></node-def><node-def id="145" parent="146"><cxt id="10"/></node-def><node-def id="146" parent="36"><cxt id="11"/></node-def><node-def id="147" parent="143"><cxt id="46"/></node-def><node-def id="148" parent="143"><cxt id="46"/></node-def><node-def id="149" parent="145"><cxt id="9"/></node-def><node-def id="150" parent="149"><cxt id="8"/></node-def><node-def id="151" parent="149"><cxt id="8"/></node-def><node-def id="152" parent="145"><cxt id="9"/></node-def><node-def id="153" parent="152"><cxt id="8"/></node-def><node-def id="154" parent="152"><cxt id="8"/></node-def><node-def id="155" parent="145"><cxt id="9"/></node-def><node-def id="156" parent="155"><cxt id="8"/></node-def><node-def id="157" parent="155"><cxt id="8"/></node-def><node-def id="158" parent="145"><cxt id="9"/></node-def><node-def id="159" parent="158"><cxt id="8"/></node-def><node-def id="160" parent="158"><cxt id="8"/></node-def><node-def id="161" parent="145"><cxt id="9"/></node-def><node-def id="162" parent="161"><cxt id="8"/></node-def><node-def id="163" parent="161"><cxt id="8"/></node-def><node-def id="164" parent="145"><cxt id="9"/></node-def><node-def id="165" parent="164"><cxt id="8"/></node-def><node-def id="166" parent="164"><cxt id="8"/></node-def><node-def id="167" parent="145"><cxt id="9"/></node-def><node-def id="168" parent="167"><cxt id="8"/></node-def><node-def id="169" parent="167"><cxt id="8"/></node-def><node-def id="170" parent="145"><cxt id="9"/></node-def><node-def id="171" parent="170"><cxt id="8"/></node-def><node-def id="172" parent="170"><cxt id="8"/></node-def><node-def id="173" parent="36"><cxt id="35"/></node-def><node-def id="174" parent="36"><cxt id="75"/></node-def><node-def id="175" parent="36"><cxt id="35"/></node-def><node-def id="176" parent="36"><cxt id="75"/></node-def><node-def id="177" parent="36"><cxt id="35"/></node-def><node-def id="178" parent="36"><cxt id="75"/></node-def><node-def id="179" parent="36"><cxt id="35"/></node-def><node-def id="180" parent="36"><cxt id="35"/></node-def><node-def id="181" parent="36"><cxt id="75"/></node-def><node-def id="182" parent="36"><cxt id="35"/></node-def><node-def id="183" parent="36"><cxt id="35"/></node-def><node-def id="184" parent="36"><cxt id="35"/></node-def><node-def id="185" parent="36"><cxt id="75"/></node-def><node-def id="186" parent="36"><cxt id="35"/></node-def><node-def id="187" parent="36"><cxt id="75"/></node-def><node-def id="188" parent="36"><cxt id="35"/></node-def><node-def id="189" parent="36"><cxt id="75"/></node-def><node-def id="190" parent="36"><cxt id="18"/></node-def><node-def id="191" parent="36"><cxt id="35"/></node-def><node-def id="192" parent="36"><cxt id="35"/></node-def><node-def id="193" parent="194"><cxt id="9"/></node-def><node-def id="194" parent="195"><cxt id="46"/></node-def><node-def id="195" parent="196"><cxt id="10"/></node-def><node-def id="196" parent="36"><cxt id="11"/></node-def><node-def id="197" parent="193"><cxt id="46"/></node-def><node-def id="198" parent="193"><cxt id="46"/></node-def><node-def id="199" parent="193"><cxt id="46"/></node-def><node-def id="200" parent="195"><cxt id="9"/></node-def><node-def id="201" parent="200"><cxt id="8"/></node-def><node-def id="202" parent="200"><cxt id="8"/></node-def><node-def id="203" parent="200"><cxt id="8"/></node-def><node-def id="204" parent="195"><cxt id="9"/></node-def><node-def id="205" parent="204"><cxt id="8"/></node-def><node-def id="206" parent="204"><cxt id="8"/></node-def><node-def id="207" parent="204"><cxt id="8"/></node-def><node-def id="208" parent="195"><cxt id="9"/></node-def><node-def id="209" parent="208"><cxt id="8"/></node-def><node-def id="210" parent="208"><cxt id="8"/></node-def><node-def id="211" parent="208"><cxt id="8"/></node-def><node-def id="212" parent="195"><cxt id="9"/></node-def><node-def id="213" parent="212"><cxt id="8"/></node-def><node-def id="214" parent="212"><cxt id="8"/></node-def><node-def id="215" parent="212"><cxt id="8"/></node-def><node-def id="216" parent="195"><cxt id="9"/></node-def><node-def id="217" parent="216"><cxt id="8"/></node-def><node-def id="218" parent="216"><cxt id="8"/></node-def><node-def id="219" parent="216"><cxt id="8"/></node-def><node-def id="220" parent="195"><cxt id="9"/></node-def><node-def id="221" parent="220"><cxt id="8"/></node-def><node-def id="222" parent="220"><cxt id="8"/></node-def><node-def id="223" parent="220"><cxt id="8"/></node-def><node-def id="224" parent="36"><cxt id="35"/></node-def><node-def id="225" parent="36"><cxt id="35"/></node-def><node-def id="226" parent="36"><cxt id="35"/></node-def><node-def id="227" parent="36"><cxt id="75"/></node-def><node-def id="228" parent="36"><cxt id="35"/></node-def><node-def id="229" parent="36"><cxt id="35"/></node-def><node-def id="230" parent="36"><cxt id="35"/></node-def><node-def id="231" parent="36"><cxt id="35"/></node-def><node-def id="232" parent="36"><cxt id="75"/></node-def><node-def id="233" parent="36"><cxt id="35"/></node-def><node-def id="234" parent="36"><cxt id="35"/></node-def><node-def id="235" parent="36"><cxt id="75"/></node-def><node-def id="236" parent="36"><cxt id="35"/></node-def><node-def id="237" parent="238"><cxt id="9"/></node-def><node-def id="238" parent="239"><cxt id="46"/></node-def><node-def id="239" parent="240"><cxt id="10"/></node-def><node-def id="240" parent="36"><cxt id="11"/></node-def><node-def id="241" parent="237"><cxt id="46"/></node-def><node-def id="242" parent="237"><cxt id="46"/></node-def><node-def id="243" parent="239"><cxt id="9"/></node-def><node-def id="244" parent="243"><cxt id="8"/></node-def><node-def id="245" parent="243"><cxt id="8"/></node-def><node-def id="246" parent="239"><cxt id="9"/></node-def><node-def id="247" parent="246"><cxt id="8"/></node-def><node-def id="248" parent="246"><cxt id="8"/></node-def><node-def id="249" parent="239"><cxt id="9"/></node-def><node-def id="250" parent="249"><cxt id="8"/></node-def><node-def id="251" parent="249"><cxt id="8"/></node-def><node-def id="252" parent="239"><cxt id="9"/></node-def><node-def id="253" parent="252"><cxt id="8"/></node-def><node-def id="254" parent="252"><cxt id="8"/></node-def><node-def id="255" parent="239"><cxt id="9"/></node-def><node-def id="256" parent="255"><cxt id="8"/></node-def><node-def id="257" parent="255"><cxt id="8"/></node-def><node-def id="258" parent="239"><cxt id="9"/></node-def><node-def id="259" parent="258"><cxt id="8"/></node-def><node-def id="260" parent="258"><cxt id="8"/></node-def><node-def id="261" parent="36"><cxt id="35"/></node-def><node-def id="262" parent="36"><cxt id="35"/></node-def><node-def id="263" parent="36"><cxt id="35"/></node-def><node-def id="264" parent="36"><cxt id="75"/></node-def><node-def id="265" parent="36"><cxt id="35"/></node-def><node-def id="266" parent="36"><cxt id="75"/></node-def><node-def id="267" parent="36"><cxt id="35"/></node-def><node-def id="268" parent="36"><cxt id="18"/></node-def><node-def id="269" parent="36"><cxt id="35"/></node-def><node-def id="270" parent="36"><cxt id="75"/></node-def><node-def id="271" parent="36"><cxt id="35"/></node-def><node-def id="272" parent="36"><cxt id="18"/></node-def><node-def id="273" parent="36"><cxt id="35"/></node-def><node-def id="274" parent="36"><cxt id="35"/></node-def><node-def id="275" parent="36"><cxt id="75"/></node-def><node-def id="276" parent="36"><cxt id="35"/></node-def><node-def id="277" parent="36"><cxt id="75"/></node-def><node-def id="278" parent="36"><cxt id="35"/></node-def><node-def id="279" parent="36"><cxt id="75"/></node-def><node-def id="280" parent="36"><cxt id="35"/></node-def><node-def id="281" parent="36"><cxt id="75"/></node-def><node-def id="282" parent="36"><cxt id="35"/></node-def><node-def id="283" parent="36"><cxt id="75"/></node-def><node-def id="284" parent="36"><cxt id="35"/></node-def><node-def id="285" parent="36"><cxt id="75"/></node-def><node-def id="286" parent="36"><cxt id="35"/></node-def><node-def id="287" parent="36"><cxt id="35"/></node-def><node-def id="288" parent="36"><cxt id="35"/></node-def><node-def id="289" parent="36"><cxt id="35"/></node-def><node-def id="290" parent="36"><cxt id="75"/></node-def><node-def id="291" parent="36"><cxt id="35"/></node-def><node-def id="292" parent="36"><cxt id="75"/></node-def><node-def id="293" parent="36"><cxt id="18"/></node-def><node-def id="294" parent="36"><cxt id="35"/></node-def><node-def id="295" parent="36"><cxt id="21"/></node-def><node-def id="296" parent="295"><cxt id="20"/></node-def><node-def id="297" parent="295"><cxt id="20"/></node-def><node-def id="298" parent="295"><cxt id="20"/></node-def><node-def id="299" parent="295"><cxt id="20"/></node-def><node-def id="300" parent="36"><cxt id="35"/></node-def><node-def id="301" parent="36"><cxt id="18"/></node-def><node-def id="302" parent="36"><cxt id="35"/></node-def><node-def id="303" parent="36"><cxt id="35"/></node-def><node-def id="304" parent="36"><cxt id="21"/></node-def><node-def id="305" parent="304"><cxt id="20"/></node-def><node-def id="306" parent="304"><cxt id="20"/></node-def><node-def id="307" parent="304"><cxt id="20"/></node-def><node-def id="308" parent="304"><cxt id="20"/></node-def><node-def id="309" parent="304"><cxt id="20"/></node-def><node-def id="310" parent="36"><cxt id="35"/></node-def><node-def id="311" parent="312"><cxt id="9"/></node-def><node-def id="312" parent="313"><cxt id="46"/></node-def><node-def id="313" parent="314"><cxt id="10"/></node-def><node-def id="314" parent="36"><cxt id="11"/></node-def><node-def id="315" parent="311"><cxt id="46"/></node-def><node-def id="316" parent="311"><cxt id="46"/></node-def><node-def id="317" parent="311"><cxt id="46"/></node-def><node-def id="318" parent="311"><cxt id="46"/></node-def><node-def id="319" parent="313"><cxt id="9"/></node-def><node-def id="320" parent="319"><cxt id="8"/></node-def><node-def id="321" parent="319"><cxt id="8"/></node-def><node-def id="322" parent="319"><cxt id="8"/></node-def><node-def id="323" parent="319"><cxt id="8"/></node-def><node-def id="324" parent="319"><cxt id="8"/></node-def><node-def id="325" parent="313"><cxt id="9"/></node-def><node-def id="326" parent="325"><cxt id="8"/></node-def><node-def id="327" parent="325"><cxt id="8"/></node-def><node-def id="328" parent="325"><cxt id="8"/></node-def><node-def id="329" parent="325"><cxt id="8"/></node-def><node-def id="330" parent="325"><cxt id="8"/></node-def><node-def id="331" parent="313"><cxt id="9"/></node-def><node-def id="332" parent="331"><cxt id="8"/></node-def><node-def id="333" parent="331"><cxt id="8"/></node-def><node-def id="334" parent="331"><cxt id="8"/></node-def><node-def id="335" parent="331"><cxt id="8"/></node-def><node-def id="336" parent="331"><cxt id="8"/></node-def><node-def id="337" parent="36"><cxt id="35"/></node-def><node-def id="338" parent="36"><cxt id="35"/></node-def><node-def id="339" parent="340"><cxt id="9"/></node-def><node-def id="340" parent="341"><cxt id="46"/></node-def><node-def id="341" parent="342"><cxt id="10"/></node-def><node-def id="342" parent="36"><cxt id="11"/></node-def><node-def id="343" parent="339"><cxt id="46"/></node-def><node-def id="344" parent="339"><cxt id="46"/></node-def><node-def id="345" parent="340"><cxt id="9"/></node-def><node-def id="346" parent="345"><cxt id="46"/></node-def><node-def id="347" parent="345"><cxt id="46"/></node-def><node-def id="348" parent="345"><cxt id="46"/></node-def><node-def id="349" parent="345"><cxt id="46"/></node-def><node-def id="350" parent="341"><cxt id="9"/></node-def><node-def id="351" parent="350"><cxt id="8"/></node-def><node-def id="352" parent="350"><cxt id="8"/></node-def><node-def id="353" parent="350"><cxt id="8"/></node-def><node-def id="354" parent="350"><cxt id="8"/></node-def><node-def id="355" parent="350"><cxt id="8"/></node-def><node-def id="356" parent="341"><cxt id="9"/></node-def><node-def id="357" parent="356"><cxt id="8"/></node-def><node-def id="358" parent="356"><cxt id="8"/></node-def><node-def id="359" parent="356"><cxt id="8"/></node-def><node-def id="360" parent="356"><cxt id="8"/></node-def><node-def id="361" parent="356"><cxt id="8"/></node-def><node-def id="362" parent="341"><cxt id="9"/></node-def><node-def id="363" parent="362"><cxt id="8"/></node-def><node-def id="364" parent="362"><cxt id="8"/></node-def><node-def id="365" parent="362"><cxt id="8"/></node-def><node-def id="366" parent="362"><cxt id="8"/></node-def><node-def id="367" parent="362"><cxt id="8"/></node-def><node-def id="368" parent="341"><cxt id="9"/></node-def><node-def id="369" parent="368"><cxt id="8"/></node-def><node-def id="370" parent="368"><cxt id="8"/></node-def><node-def id="371" parent="368"><cxt id="8"/></node-def><node-def id="372" parent="368"><cxt id="8"/></node-def><node-def id="373" parent="368"><cxt id="8"/></node-def><node-def id="374" parent="36"><cxt id="35"/></node-def><node-def id="375" parent="36"><cxt id="18"/></node-def><node-def id="376" parent="36"><cxt id="35"/></node-def><node-def id="377" parent="36"><cxt id="35"/></node-def><node-def id="378" parent="36"><cxt id="75"/></node-def><node-def id="379" parent="36"><cxt id="35"/></node-def><node-def id="380" parent="36"><cxt id="35"/></node-def><node-def id="381" parent="36"><cxt id="21"/></node-def><node-def id="382" parent="381"><cxt id="20"/></node-def><node-def id="383" parent="381"><cxt id="20"/></node-def><node-def id="384" parent="381"><cxt id="20"/></node-def><node-def id="385" parent="36"><cxt id="35"/></node-def><node-def id="386" parent="36"><cxt id="35"/></node-def><node-def id="387" parent="36"><cxt id="35"/></node-def><node-def id="388" parent="36"><cxt id="35"/></node-def><node-def id="389" parent="36"><cxt id="21"/></node-def><node-def id="390" parent="389"><cxt id="20"/></node-def><node-def id="391" parent="389"><cxt id="20"/></node-def><node-def id="392" parent="389"><cxt id="20"/></node-def><node-def id="393" parent="36"><cxt id="35"/></node-def><node-def id="394" parent="11"><cxt id="11"/></node-def><node-def id="395" parent="394"><cxt id="35"/></node-def></node-defs><tag-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><tag id="4"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdoc/supported-platforms-and-configurations.html#qt-5-7&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="7"><bpt name="a" word-end="false">&lt;a href=&quot;qtcore-index.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="10"><bpt name="a" word-end="false">&lt;a name=&quot;toc&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="13"><bpt name="a" word-end="false">&lt;a href=&quot;#introduction&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="16"><bpt name="a" word-end="false">&lt;a href=&quot;#the-container-classes&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="19"><bpt name="a" word-end="false">&lt;a href=&quot;#the-iterator-classes&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="22"><bpt name="a" word-end="false">&lt;a href=&quot;#java-style-iterators&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="25"><bpt name="a" word-end="false">&lt;a href=&quot;#stl-style-iterators&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="28"><bpt name="a" word-end="false">&lt;a href=&quot;#the-foreach-keyword&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="31"><bpt name="a" word-end="false">&lt;a href=&quot;#other-container-like-classes&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="34"><bpt name="a" word-end="false">&lt;a href=&quot;#algorithmic-complexity&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="37"><bpt name="a" word-end="false">&lt;a href=&quot;#growth-strategies&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="40"><bpt name="span" word-end="false">&lt;span class=&quot;subtitle&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="44"><bpt name="a" word-end="false">&lt;a name=&quot;details&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="47"><bpt name="a" word-end="false">&lt;a name=&quot;introduction&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="50"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="53"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="56"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="59"><bpt name="a" word-end="false">&lt;a href=&quot;implicit-sharing.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="62"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdoc/threads-reentrancy.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="65"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdoc/threads-reentrancy.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="68"><bpt name="a" word-end="false">&lt;a href=&quot;containers.html#java-style-iterators&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="71"><bpt name="a" word-end="false">&lt;a href=&quot;containers.html#stl-style-iterators&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="74"><bpt name="a" word-end="false">&lt;a href=&quot;qtalgorithms.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="77"><bpt name="a" word-end="false">&lt;a href=&quot;containers.html#foreach&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="80"><bpt name="a" word-end="false">&lt;a name=&quot;the-container-classes&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="83"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="86"><bpt name="a" word-end="false">&lt;a href=&quot;qlinkedlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="89"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="92"><bpt name="a" word-end="false">&lt;a href=&quot;qstack.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="95"><bpt name="a" word-end="false">&lt;a href=&quot;qqueue.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="98"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="101"><bpt name="a" word-end="false">&lt;a href=&quot;qlinkedlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="104"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="107"><bpt name="a" word-end="false">&lt;a href=&quot;qstack.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="110"><bpt name="a" word-end="false">&lt;a href=&quot;qqueue.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="113"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="116"><bpt name="a" word-end="false">&lt;a href=&quot;qmultimap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="119"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="122"><bpt name="a" word-end="false">&lt;a href=&quot;qmultihash.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="125"><bpt name="a" word-end="false">&lt;a href=&quot;qset.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="128"><bpt name="a" word-end="false">&lt;a href=&quot;qcache.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="131"><bpt name="a" word-end="false">&lt;a href=&quot;qcontiguouscache.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="134"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="137"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="140"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html#append&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="143"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html#prepend&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="146"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html#insert&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="149"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="152"><bpt name="a" word-end="false">&lt;a href=&quot;qstringlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="155"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="158"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="161"><bpt name="a" word-end="false">&lt;a href=&quot;qlinkedlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="164"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="167"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="170"><bpt name="a" word-end="false">&lt;a href=&quot;qlinkedlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="173"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="176"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="179"><bpt name="a" word-end="false">&lt;a href=&quot;qstack.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="182"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="185"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="188"><bpt name="a" word-end="false">&lt;a href=&quot;qstack.html#push&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="191"><bpt name="a" word-end="false">&lt;a href=&quot;qstack.html#pop&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="194"><bpt name="a" word-end="false">&lt;a href=&quot;qstack.html#top&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="197"><bpt name="a" word-end="false">&lt;a href=&quot;qqueue.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="200"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="203"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="206"><bpt name="a" word-end="false">&lt;a href=&quot;qqueue.html#enqueue&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="209"><bpt name="a" word-end="false">&lt;a href=&quot;qqueue.html#dequeue&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="212"><bpt name="a" word-end="false">&lt;a href=&quot;qqueue.html#head&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="215"><bpt name="a" word-end="false">&lt;a href=&quot;qset.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="218"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="221"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="224"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="227"><bpt name="a" word-end="false">&lt;a href=&quot;qmultimap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="230"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="233"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="236"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="239"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="242"><bpt name="a" word-end="false">&lt;a href=&quot;qmultihash.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="245"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="248"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="251"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="254"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="257"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="260"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="263"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="266"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="269"><bpt name="a" word-end="false">&lt;a name=&quot;assignable-data-type&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="272"><bpt name="a" word-end="false">&lt;a name=&quot;assignable-data-types&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="275"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="278"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="281"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="284"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="287"><bpt name="a" word-end="false">&lt;a href=&quot;qdate.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="290"><bpt name="a" word-end="false">&lt;a href=&quot;qtime.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="293"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="296"><bpt name="a" word-end="false">&lt;a href=&quot;qobject.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="299"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qwidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="302"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qdialog.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="305"><bpt name="a" word-end="false">&lt;a href=&quot;qtimer.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="308"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="311"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qwidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="314"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qwidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="317"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="320"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qwidget.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="323"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="326"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="329"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="332"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="335"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="338"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="341"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="344"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="347"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="350"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="353"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="356"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="359"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="362"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="365"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="368"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="371"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="374"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="377"><bpt name="a" word-end="false">&lt;a href=&quot;qdatastream.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="380"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="383"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="386"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="389"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="392"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="395"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="398"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="401"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="404"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="407"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="410"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="413"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="416"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="419"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="422"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="425"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="428"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="431"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="434"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="437"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="440"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="443"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="446"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="449"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="452"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="455"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="458"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="461"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="464"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="467"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="470"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="473"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="476"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="479"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="482"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="485"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="488"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="491"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="494"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="497"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="500"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="503"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="506"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="509"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="512"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="515"><bpt name="a" word-end="false">&lt;a name=&quot;default-constructed-value&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="518"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="521"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="524"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html#value&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="527"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="530"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="533"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="536"><bpt name="a" word-end="false">&lt;a name=&quot;the-iterator-classes&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="539"><bpt name="a" word-end="false">&lt;a href=&quot;implicit-sharing.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="542"><bpt name="a" word-end="false">&lt;a name=&quot;java-style-iterators&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="545"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="548"><bpt name="a" word-end="false">&lt;a href=&quot;qqueue.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="551"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="554"><bpt name="a" word-end="false">&lt;a href=&quot;qmutablelistiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="557"><bpt name="a" word-end="false">&lt;a href=&quot;qlinkedlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="560"><bpt name="a" word-end="false">&lt;a href=&quot;qlinkedlistiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="563"><bpt name="a" word-end="false">&lt;a href=&quot;qmutablelinkedlistiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="566"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="569"><bpt name="a" word-end="false">&lt;a href=&quot;qstack.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="572"><bpt name="a" word-end="false">&lt;a href=&quot;qvectoriterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="575"><bpt name="a" word-end="false">&lt;a href=&quot;qmutablevectoriterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="578"><bpt name="a" word-end="false">&lt;a href=&quot;qset.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="581"><bpt name="a" word-end="false">&lt;a href=&quot;qsetiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="584"><bpt name="a" word-end="false">&lt;a href=&quot;qmutablesetiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="587"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="590"><bpt name="a" word-end="false">&lt;a href=&quot;qmultimap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="593"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="596"><bpt name="a" word-end="false">&lt;a href=&quot;qmutablemapiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="599"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="602"><bpt name="a" word-end="false">&lt;a href=&quot;qmultihash.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="605"><bpt name="a" word-end="false">&lt;a href=&quot;qhashiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="608"><bpt name="a" word-end="false">&lt;a href=&quot;qmutablehashiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="611"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="614"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="617"><bpt name="a" word-end="false">&lt;a href=&quot;qlinkedlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="620"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="623"><bpt name="a" word-end="false">&lt;a href=&quot;qset.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="626"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="629"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="632"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="635"><bpt name="a" word-end="false">&lt;a href=&quot;containers.html#stl-style-iterators&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="638"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="641"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="645"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="648"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="651"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="654"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="657"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="660"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="663"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="666"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="669"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="672"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="675"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="678"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="681"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="684"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="687"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="690"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="693"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="696"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="699"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="702"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="705"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="708"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="711"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="714"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="717"><bpt name="a" word-end="false">&lt;a href=&quot;qtglobal.html#qDebug&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="720"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="723"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="726"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="729"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="732"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="735"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html#hasNext&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="738"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html#next&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="741"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="744"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="747"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="750"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="753"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="756"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="759"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="762"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="765"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="768"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="771"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="774"><bpt name="a" word-end="false">&lt;a href=&quot;qtglobal.html#qDebug&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="777"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="780"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="783"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="786"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html#toBack&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="789"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html#next&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="792"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html#previous&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="796"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="799"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html#toFront&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="802"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html#toBack&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="805"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html#hasNext&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="808"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="811"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html#next&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="814"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html#peekNext&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="817"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html#hasPrevious&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="820"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="823"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html#previous&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="826"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html#peekPrevious&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="829"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="832"><bpt name="a" word-end="false">&lt;a href=&quot;qmutablelistiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="835"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="838"><bpt name="a" word-end="false">&lt;a href=&quot;qmutablelistiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="841"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="844"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="847"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="850"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="853"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="856"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="859"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="862"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="865"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="868"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="871"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="874"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="877"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="880"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="883"><bpt name="a" word-end="false">&lt;a href=&quot;qmutablelistiterator.html#remove&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="886"><bpt name="a" word-end="false">&lt;a href=&quot;qmutablelistiterator.html#remove&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="889"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="892"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="895"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="898"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="901"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="904"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="907"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="910"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="913"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="916"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="919"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="922"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="925"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="928"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="931"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="934"><bpt name="a" word-end="false">&lt;a href=&quot;qmutablelistiterator.html#setValue&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="937"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="940"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="943"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="946"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="949"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="952"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="955"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="958"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="961"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="964"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="967"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="970"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="973"><bpt name="a" word-end="false">&lt;a href=&quot;qmutablelistiterator.html#remove&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="976"><bpt name="a" word-end="false">&lt;a href=&quot;qmutablelistiterator.html#setValue&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="979"><bpt name="a" word-end="false">&lt;a href=&quot;qmutablelistiterator.html#next&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="982"><bpt name="a" word-end="false">&lt;a href=&quot;qmutablelistiterator.html#setValue&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="985"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="988"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="991"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="994"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="997"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1000"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1003"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1006"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1009"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1012"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1015"><bpt name="a" word-end="false">&lt;a href=&quot;qlinkedlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1018"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1021"><bpt name="a" word-end="false">&lt;a href=&quot;qset.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1024"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1027"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1030"><bpt name="a" word-end="false">&lt;a href=&quot;qlistiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1033"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1036"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html#toFront&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1039"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html#toBack&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1042"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html#hasNext&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1045"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html#next&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1048"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html#peekNext&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1051"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html#hasPrevious&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1054"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html#previous&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1057"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html#peekPrevious&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1060"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html#key&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1063"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html#value&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1066"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1069"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1072"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1075"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1078"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1081"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1084"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1087"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1090"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1093"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1096"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1099"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1102"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1105"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1108"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1111"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1114"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1117"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1120"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1123"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1126"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1129"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1132"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1135"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1138"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1141"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1144"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1147"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1150"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1153"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1156"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1159"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1162"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1165"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1168"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1171"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1174"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1177"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1180"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1183"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1186"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html#key&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1189"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html#value&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1192"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1195"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1198"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1201"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1204"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1207"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1210"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1213"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1216"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1219"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1222"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1225"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1228"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1231"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1234"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1237"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1240"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1243"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1246"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1249"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1252"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1255"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1258"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1261"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1264"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1267"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1270"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1273"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1276"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1279"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1282"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html#findNext&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1285"><bpt name="a" word-end="false">&lt;a href=&quot;qmapiterator.html#findPrevious&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1288"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1291"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1294"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1297"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1300"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1303"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1306"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1309"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1312"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1315"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1318"><bpt name="a" word-end="false">&lt;a name=&quot;stl-style-iterators&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1321"><bpt name="a" word-end="false">&lt;a href=&quot;qtalgorithms.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1324"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1327"><bpt name="a" word-end="false">&lt;a href=&quot;qqueue.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1330"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1333"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1336"><bpt name="a" word-end="false">&lt;a href=&quot;qlinkedlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1339"><bpt name="a" word-end="false">&lt;a href=&quot;qlinkedlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1342"><bpt name="a" word-end="false">&lt;a href=&quot;qlinkedlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1345"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1348"><bpt name="a" word-end="false">&lt;a href=&quot;qstack.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1351"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1354"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1357"><bpt name="a" word-end="false">&lt;a href=&quot;qset.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1360"><bpt name="a" word-end="false">&lt;a href=&quot;qset.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1363"><bpt name="a" word-end="false">&lt;a href=&quot;qset.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1366"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1369"><bpt name="a" word-end="false">&lt;a href=&quot;qmultimap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1372"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1375"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1378"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1381"><bpt name="a" word-end="false">&lt;a href=&quot;qmultihash.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1384"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1387"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1390"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1393"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1396"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1399"><bpt name="a" word-end="false">&lt;a href=&quot;qstack.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1402"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html#iterator-typedef&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1405"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1408"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html#iterator-typedef&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1411"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1414"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1417"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1420"><bpt name="a" word-end="false">&lt;a href=&quot;qlinkedlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1423"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1426"><bpt name="a" word-end="false">&lt;a href=&quot;qset.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1429"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1432"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1435"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1438"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1441"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1444"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1447"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1450"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1453"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1456"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1459"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1462"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1465"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1468"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1471"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1474"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1477"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1480"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1483"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1486"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1489"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1492"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1495"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1498"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1501"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1504"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1507"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1510"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1513"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1516"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1519"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1522"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1525"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1528"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1531"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1534"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1537"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1540"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1543"><bpt name="a" word-end="false">&lt;a href=&quot;containers.html#java-style-iterators&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1546"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html#begin&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1549"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html#end&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1552"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html#end&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1555"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html#begin&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1558"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html#end&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1562"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1565"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1568"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1571"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1574"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1577"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1580"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1583"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1586"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1589"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1592"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1595"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1598"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1601"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1604"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1607"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1610"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1613"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1616"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1619"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1622"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1625"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1628"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1631"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1634"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1637"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1640"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1643"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1646"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1649"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1652"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1655"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1658"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1661"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1664"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1667"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html#toLower&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1670"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1673"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html#constBegin&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1676"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html#constEnd&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1679"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1682"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1685"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1688"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1691"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1694"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1697"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1700"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1703"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1706"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1709"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1712"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1715"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1718"><bpt name="a" word-end="false">&lt;a href=&quot;qtglobal.html#qDebug&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1721"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1724"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1727"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1730"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1733"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1736"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1739"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1742"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1745"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1748"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1751"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1754"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1757"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1760"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1763"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1766"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1769"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1772"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1775"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1778"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1781"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1784"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1787"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1790"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1793"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="1796"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1799"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1802"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1805"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1808"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1811"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1814"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1817"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1820"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1823"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1826"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1829"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1832"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1835"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1838"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1841"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1844"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1847"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1850"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1853"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1856"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1859"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1862"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1865"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1868"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1871"><bpt name="a" word-end="false">&lt;a href=&quot;qtglobal.html#qDebug&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1874"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1877"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1880"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1883"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1886"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1889"><bpt name="span" word-end="false">&lt;span class=&quot;char&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1892"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1895"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1898"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1901"><bpt name="a" word-end="false">&lt;a href=&quot;implicit-sharing.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1904"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1907"><bpt name="a" word-end="false">&lt;a href=&quot;qstringlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1910"><bpt name="a" word-end="false">&lt;a href=&quot;../qtwidgets/qsplitter.html#sizes&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="1913"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1916"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1919"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1922"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1925"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1928"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1931"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1934"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1937"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1940"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1943"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1946"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1949"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1952"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1955"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1958"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1961"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1964"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1967"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1970"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1973"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1976"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1979"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1982"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1985"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1988"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1991"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1994"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="1997"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2000"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2003"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2006"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2009"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2012"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2015"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2018"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2021"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2024"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2027"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2030"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2033"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2036"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2039"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2042"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2045"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2048"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2051"><bpt name="a" word-end="false">&lt;a name=&quot;implicit-sharing-iterator-problem&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2054"><bpt name="a" word-end="false">&lt;a href=&quot;implicit-sharing.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2057"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2060"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2063"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2066"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2069"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2072"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2075"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2078"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2081"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2084"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2087"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2090"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2093"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2096"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2099"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2102"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2105"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2108"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2111"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2114"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2117"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2120"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2123"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2126"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2129"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2132"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2135"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2138"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2141"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2144"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2147"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2150"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2153"><bpt name="a" word-end="false">&lt;a name=&quot;foreach&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2156"><bpt name="a" word-end="false">&lt;a name=&quot;the-foreach-keyword&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2159"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2162"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2165"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2168"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2171"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2174"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2177"><bpt name="a" word-end="false">&lt;a href=&quot;qlinkedlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2180"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2183"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2186"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2189"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2192"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2195"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2198"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2201"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2204"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2207"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2210"><bpt name="a" word-end="false">&lt;a href=&quot;qtglobal.html#qDebug&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2213"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2216"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2219"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2222"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2225"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2228"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2231"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2234"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2237"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2240"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2243"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2246"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2249"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2252"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2255"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2258"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2261"><bpt name="a" word-end="false">&lt;a href=&quot;qtglobal.html#qDebug&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2264"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2267"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2270"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2273"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2276"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2279"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2282"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2285"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2288"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2291"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2294"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2297"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2300"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2303"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2306"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2309"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2312"><bpt name="a" word-end="false">&lt;a href=&quot;qtglobal.html#qDebug&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2315"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2318"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2321"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2324"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2327"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2330"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2333"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2336"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2339"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2342"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2345"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2348"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2351"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2354"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2357"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2360"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2363"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2366"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2369"><bpt name="a" word-end="false">&lt;a href=&quot;qtglobal.html#qDebug&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2372"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2375"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2378"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2381"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2384"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2387"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2390"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2393"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2396"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2399"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2402"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2405"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2408"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2411"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2414"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2417"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2420"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2423"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2426"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2429"><bpt name="a" word-end="false">&lt;a href=&quot;qtglobal.html#qDebug&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2432"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2435"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2438"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2441"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2444"><bpt name="span" word-end="false">&lt;span class=&quot;char&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2447"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2450"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2453"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2456"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2459"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2462"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2465"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2468"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2471"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2474"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2477"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2480"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2483"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2486"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2489"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2492"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2495"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2498"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2501"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2504"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2507"><bpt name="a" word-end="false">&lt;a href=&quot;qtglobal.html#qDebug&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2510"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2513"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2516"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2519"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2522"><bpt name="span" word-end="false">&lt;span class=&quot;char&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2525"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2528"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2531"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2534"><bpt name="a" word-end="false">&lt;a href=&quot;implicit-sharing.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2537"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2540"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2543"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2546"><bpt name="a" word-end="false">&lt;a href=&quot;implicit-sharing.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2549"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2552"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2555"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2558"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2561"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2564"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2567"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2570"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2573"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2576"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2579"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2582"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2585"><bpt name="a" word-end="false">&lt;a name=&quot;other-container-like-classes&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2588"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2591"><bpt name="a" word-end="false">&lt;a href=&quot;qvarlengtharray.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2594"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2597"><bpt name="a" word-end="false">&lt;a href=&quot;qcache.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2600"><bpt name="a" word-end="false">&lt;a href=&quot;qcontiguouscache.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2603"><bpt name="a" word-end="false">&lt;a href=&quot;qpair.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2606"><bpt name="a" word-end="false">&lt;a href=&quot;qbitarray.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2609"><bpt name="a" word-end="false">&lt;a href=&quot;qbytearray.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2612"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2615"><bpt name="a" word-end="false">&lt;a href=&quot;qstringlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2618"><bpt name="a" word-end="false">&lt;a name=&quot;algorithmic-complexity&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2621"><bpt name="a" word-end="false">&lt;a href=&quot;qlinkedlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2624"><bpt name="a" word-end="false">&lt;a href=&quot;qlinkedlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2627"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2630"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2633"><bpt name="a" word-end="false">&lt;a name=&quot;constant-time&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2636"><bpt name="a" word-end="false">&lt;a name=&quot;logarithmic-time&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2639"><bpt name="a" word-end="false">&lt;a name=&quot;linear-time&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2642"><bpt name="a" word-end="false">&lt;a name=&quot;linear-logarithmic-time&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2645"><bpt name="a" word-end="false">&lt;a name=&quot;quadratic-time&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2648"><bpt name="b" word-end="false">&lt;b&gt;</bpt><bpt-props><value key="FormattingItemBold">True</value><value key="StartTag">b</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="b" word-end="false">&lt;/b&gt;</ept><fmt id="4"/></tag><tag id="2651"><bpt name="a" word-end="false">&lt;a href=&quot;qlinkedlist.html#insert&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2654"><bpt name="b" word-end="false">&lt;b&gt;</bpt><bpt-props><value key="FormattingItemBold">True</value><value key="StartTag">b</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="b" word-end="false">&lt;/b&gt;</ept><fmt id="4"/></tag><tag id="2657"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2660"><bpt name="b" word-end="false">&lt;b&gt;</bpt><bpt-props><value key="FormattingItemBold">True</value><value key="StartTag">b</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="b" word-end="false">&lt;/b&gt;</ept><fmt id="4"/></tag><tag id="2663"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2666"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html#insert&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2669"><bpt name="b" word-end="false">&lt;b&gt;</bpt><bpt-props><value key="FormattingItemBold">True</value><value key="StartTag">b</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="b" word-end="false">&lt;/b&gt;</ept><fmt id="4"/></tag><tag id="2672"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2675"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2678"><bpt name="b" word-end="false">&lt;b&gt;</bpt><bpt-props><value key="FormattingItemBold">True</value><value key="StartTag">b</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="b" word-end="false">&lt;/b&gt;</ept><fmt id="4"/></tag><tag id="2681"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2684"><bpt name="a" word-end="false">&lt;a href=&quot;qlinkedlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2687"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2690"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2693"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2696"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2699"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2702"><bpt name="a" word-end="false">&lt;a href=&quot;qmap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2705"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2708"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2711"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2714"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2717"><bpt name="a" word-end="false">&lt;a href=&quot;qmultimap.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2720"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2723"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2726"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2729"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2732"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2735"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2738"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2741"><bpt name="a" word-end="false">&lt;a href=&quot;qset.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2744"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2747"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2750"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2753"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2756"><bpt name="a" word-end="false">&lt;a href=&quot;qset.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2759"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2762"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html#reserve&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2765"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#reserve&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2768"><bpt name="a" word-end="false">&lt;a href=&quot;qset.html#reserve&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2771"><bpt name="a" word-end="false">&lt;a name=&quot;growth-strategies&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2774"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2777"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2780"><bpt name="a" word-end="false">&lt;a href=&quot;qbytearray.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2783"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2786"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2789"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2792"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2795"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2798"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2801"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2804"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2807"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2810"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2813"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2816"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2819"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2822"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2825"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2828"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2831"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2834"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2837"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2840"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2843"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2846"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2849"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2852"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2855"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2858"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="2861"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2864"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2867"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2870"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2873"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2876"><bpt name="a" word-end="false">&lt;a href=&quot;qbytearray.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2879"><bpt name="a" word-end="false">&lt;a href=&quot;qlist.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2882"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2885"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2888"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="2891"><bpt name="a" word-end="false">&lt;a href=&quot;implicit-sharing.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2894"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2897"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2900"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2903"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2906"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2909"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#capacity&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2912"><bpt name="a" word-end="false">&lt;a href=&quot;qset.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2915"><bpt name="a" word-end="false">&lt;a href=&quot;qcache.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2918"><bpt name="a" word-end="false">&lt;a href=&quot;qvector.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2921"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2924"><bpt name="a" word-end="false">&lt;a href=&quot;qset.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2927"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2930"><bpt name="a" word-end="false">&lt;a href=&quot;qbytearray.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2933"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html#capacity&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2936"><bpt name="a" word-end="false">&lt;a href=&quot;qhash.html#qhash&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2939"><bpt name="a" word-end="false">&lt;a href=&quot;qset.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2942"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html#reserve&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2945"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2948"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="2951"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html#squeeze&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2954"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html#reserve&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2957"><bpt name="a" word-end="false">&lt;a href=&quot;qstring.html#squeeze&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="2963"><bpt name="a" word-end="false">&lt;a href=&quot;http://www.gnu.org/licenses/fdl.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="0"><ph name="xml" word-end="false">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</ph><props><value key="ProcessingInstructionTag">xml</value></props></tag><tag id="1"><ph name="Comment" word-end="false">&lt;!-- containers.qdoc --&gt;</ph></tag><tag id="41"><ph name="Comment" word-end="false">&lt;!-- $$$containers.html-description --&gt;</ph></tag><tag id="642"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/javaiterators1.png&quot; alt=&quot;<sub xid="8b3bc56a-c980-4d83-8ad1-db9df4d9f069"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="793"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/javaiterators2.png&quot; alt=&quot;<sub xid="f00d258a-b64d-4c48-a4bc-e91930637a60"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="1559"><ph name="img" word-end="false" seg-hint="IncludeWithText">&lt;img src=&quot;images/stliterators1.png&quot; alt=&quot;<sub xid="fec2201b-42c8-40db-9b64-cae8137b4b14"></sub>&quot; /&gt;</ph><props><value key="EmptyTag">img</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="2958"><ph name="Comment" word-end="false">&lt;!-- @@@containers.html --&gt;</ph></tag><tag id="2959"><ph name="copy" word-end="false" seg-hint="IncludeWithText">&amp;copy;</ph><props><value key="PlaceholderForMappedEntity">true</value></props></tag><tag id="2960"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="2964"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag></tag-defs></header><body><group><sdl:cxts><sdl:cxt id="1"/></sdl:cxts><trans-unit id="2f756f3c-64cf-44c4-8b61-03c9c9805977"><source><x id="0"/>
</source><seg-source><x id="0"/>
</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="2"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="3"/></sdl:cxts><trans-unit id="acccce51-f4ea-4105-9cd0-e03c58599753"><source><x id="1"/></source><seg-source><x id="1"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="5"/><sdl:cxt id="6"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="4"/></sdl:cxts><trans-unit id="dcf12315-5d84-4757-bae3-4370fed00799"><source>Container Classes | Qt Core 5.7</source><seg-source>Container Classes | Qt Core 5.7</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="13"/></sdl:cxts><trans-unit id="1e64652e-efaa-4a04-93c1-098e778561c6"><source><g id="4">Qt 5.7</g></source><seg-source><g id="4">Qt 5.7</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="14"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="14"/></sdl:cxts><trans-unit id="7fffb5d5-a61d-427b-ba7b-33d34f9b20dd"><source><g id="7">Qt Core</g></source><seg-source><g id="7">Qt Core</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="15"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="15"/></sdl:cxts><trans-unit id="393f0ed6-0209-4f1a-ba56-ceb36678b0d9"><source>Container Classes</source><seg-source>Container Classes</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="16"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="18"/></sdl:cxts><trans-unit id="8d0bc74c-daa3-443a-adfb-50d7f24f26ca"><source>Qt 5.7.1 Reference Documentation</source><seg-source>Qt 5.7.1 Reference Documentation</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="17"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="24"/></sdl:cxts><trans-unit id="697bce6c-62e9-4071-a20e-8c1d48d60cf3"><source><g id="10">Contents</g></source><seg-source><g id="10">Contents</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="19"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="26"/></sdl:cxts><trans-unit id="35b392ed-e1c6-47a3-9e45-011ec9583bbd"><source><g id="13">Introduction</g></source><seg-source><g id="13">Introduction</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="22"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="27"/></sdl:cxts><trans-unit id="0e406586-23b5-49bd-8acc-041713d28f03"><source><g id="16">The Container Classes</g></source><seg-source><g id="16">The Container Classes</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="23"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="28"/></sdl:cxts><trans-unit id="9bd4fb20-038e-4675-9792-f1a821a07ffb"><source><g id="19">The Iterator Classes</g></source><seg-source><g id="19">The Iterator Classes</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="24"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="29"/></sdl:cxts><trans-unit id="d0572691-c0cb-4408-9091-bd7c369204ab"><source><g id="22">Java-Style Iterators</g></source><seg-source><g id="22">Java-Style Iterators</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="25"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="30"/></sdl:cxts><trans-unit id="839a0973-e76c-4e64-a7b8-182d5bbfc152"><source><g id="25">STL-Style Iterators</g></source><seg-source><g id="25">STL-Style Iterators</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="26"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="aae46900-a4b1-47c1-b744-e3d12ba6d878"><source><g id="28">The foreach Keyword</g></source><seg-source><g id="28">The foreach Keyword</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="27"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="32"/></sdl:cxts><trans-unit id="948d1a5d-1fb4-473f-9df4-cef888ef3f26"><source><g id="31">Other Container-Like Classes</g></source><seg-source><g id="31">Other Container-Like Classes</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="28"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="33"/></sdl:cxts><trans-unit id="ee38752c-a472-41f4-85c6-8f1b47b41c32"><source><g id="34">Algorithmic Complexity</g></source><seg-source><g id="34">Algorithmic Complexity</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="29"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="34"/></sdl:cxts><trans-unit id="be596777-3169-4b43-9ba9-783321474f1f"><source><g id="37">Growth Strategies</g></source><seg-source><g id="37">Growth Strategies</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="30"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="35"/></sdl:cxts><trans-unit id="ca5b92ec-ebef-4f84-93f2-509974b1ce17"><source>Container Classes</source><seg-source>Container Classes</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="31"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="21"/></sdl:cxts><trans-unit id="6331b3a4-1d06-44a2-bf92-79046e035e26"><source><g id="40"/> <x id="41"/></source><seg-source><g id="40"/> <x id="41"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="32"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="177b187d-9ab8-4692-aea0-2caf3128247a"><source><g id="44"/> <g id="47"/></source><seg-source><g id="44"/> <g id="47"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="33"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="37"/></sdl:cxts><trans-unit id="e6403334-50cd-488c-b9fd-59a0d9dd409c"><source>Introduction</source><seg-source>Introduction</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="34"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="38"/></sdl:cxts><trans-unit id="9c9144ab-df56-4b17-8d40-b1435f54c693"><source>The Qt library provides a set of general purpose template-based container classes. These classes can be used to store items of a specified type. For example, if you need a resizable array of <g id="50">QString</g>s, use <g id="53">QVector</g>&lt;<g id="56">QString</g>&gt;.</source><seg-source>The Qt library provides a set of general purpose template-based container classes. These classes can be used to store items of a specified type. For example, if you need a resizable array of <g id="50">QString</g>s, use <g id="53">QVector</g>&lt;<g id="56">QString</g>&gt;.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="36"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="39"/></sdl:cxts><trans-unit id="79b929bf-42ed-4125-8983-c2da5ff714e4"><source>These container classes are designed to be lighter, safer, and easier to use than the STL containers. If you are unfamiliar with the STL, or prefer to do things the &quot;Qt way&quot;, you can use these classes instead of the STL classes.</source><seg-source>These container classes are designed to be lighter, safer, and easier to use than the STL containers. If you are unfamiliar with the STL, or prefer to do things the &quot;Qt way&quot;, you can use these classes instead of the STL classes.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="37"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="40"/></sdl:cxts><trans-unit id="f0047592-d923-4495-91d6-bf0eabc4a4cd"><source>The container classes are <g id="59">implicitly shared</g>, they are <g id="62">reentrant</g>, and they are optimized for speed, low memory consumption, and minimal inline code expansion, resulting in smaller executables. In addition, they are <g id="65">thread-safe</g> in situations where they are used as read-only containers by all threads used to access them.</source><seg-source>The container classes are <g id="59">implicitly shared</g>, they are <g id="62">reentrant</g>, and they are optimized for speed, low memory consumption, and minimal inline code expansion, resulting in smaller executables. In addition, they are <g id="65">thread-safe</g> in situations where they are used as read-only containers by all threads used to access them.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="38"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="41"/></sdl:cxts><trans-unit id="a3209d6c-a11a-4460-95d4-d1218810e491"><source>For traversing the items stored in a container, you can use one of two types of iterators: <g id="68">Java-style iterators</g> and <g id="71">STL-style iterators</g>. The Java-style iterators are easier to use and provide high-level functionality, whereas the STL-style iterators are slightly more efficient and can be used together with Qt&apos;s and STL&apos;s <g id="74">generic algorithms</g>.</source><seg-source>For traversing the items stored in a container, you can use one of two types of iterators: <g id="68">Java-style iterators</g> and <g id="71">STL-style iterators</g>. The Java-style iterators are easier to use and provide high-level functionality, whereas the STL-style iterators are slightly more efficient and can be used together with Qt&apos;s and STL&apos;s <g id="74">generic algorithms</g>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="39"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="42"/></sdl:cxts><trans-unit id="2d98d189-0911-440d-839a-dc1f0db87366"><source>Qt also offers a <g id="77">foreach</g> keyword that make it very easy to iterate over all the items stored in a container.</source><seg-source>Qt also offers a <g id="77">foreach</g> keyword that make it very easy to iterate over all the items stored in a container.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="40"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="afe77f72-e46a-4455-bd51-52008415705f"><source><g id="80"/></source><seg-source><g id="80"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="41"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="0ddac916-de8d-4ec0-b2f7-888a98b610a7"><source>The Container Classes</source><seg-source>The Container Classes</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="42"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="44"/></sdl:cxts><trans-unit id="aa5f30c8-c0a4-4989-b253-b8aac8dc5717"><source>Qt provides the following sequential containers: <g id="83">QList</g>, <g id="86">QLinkedList</g>, <g id="89">QVector</g>, <g id="92">QStack</g>, and <g id="95">QQueue</g>. For most applications, <g id="98">QList</g> is the best type to use. Although it is implemented as an array-list, it provides very fast prepends and appends. If you really need a linked-list, use <g id="101">QLinkedList</g>; if you want your items to occupy consecutive memory locations, use <g id="104">QVector</g>. <g id="107">QStack</g> and <g id="110">QQueue</g> are convenience classes that provide LIFO and FIFO semantics.</source><seg-source>Qt provides the following sequential containers: <g id="83">QList</g>, <g id="86">QLinkedList</g>, <g id="89">QVector</g>, <g id="92">QStack</g>, and <g id="95">QQueue</g>. For most applications, <g id="98">QList</g> is the best type to use. Although it is implemented as an array-list, it provides very fast prepends and appends. If you really need a linked-list, use <g id="101">QLinkedList</g>; if you want your items to occupy consecutive memory locations, use <g id="104">QVector</g>. <g id="107">QStack</g> and <g id="110">QQueue</g> are convenience classes that provide LIFO and FIFO semantics.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="43"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="45"/></sdl:cxts><trans-unit id="aedd4bcf-6cf3-45b2-9293-e3a4124c85eb"><source>Qt also provides these associative containers: <g id="113">QMap</g>, <g id="116">QMultiMap</g>, <g id="119">QHash</g>, <g id="122">QMultiHash</g>, and <g id="125">QSet</g>. The &quot;Multi&quot; containers conveniently support multiple values associated with a single key. The &quot;Hash&quot; containers provide faster lookup by using a hash function instead of a binary search on a sorted set.</source><seg-source>Qt also provides these associative containers: <g id="113">QMap</g>, <g id="116">QMultiMap</g>, <g id="119">QHash</g>, <g id="122">QMultiHash</g>, and <g id="125">QSet</g>. The &quot;Multi&quot; containers conveniently support multiple values associated with a single key. The &quot;Hash&quot; containers provide faster lookup by using a hash function instead of a binary search on a sorted set.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="44"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="46"/></sdl:cxts><trans-unit id="1acf1e69-cb92-4fbd-8ec3-69186d629f95"><source>As special cases, the <g id="128">QCache</g> and <g id="131">QContiguousCache</g> classes provide efficient hash-lookup of objects in a limited cache storage.</source><seg-source>As special cases, the <g id="128">QCache</g> and <g id="131">QContiguousCache</g> classes provide efficient hash-lookup of objects in a limited cache storage.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="45"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="51"/></sdl:cxts><trans-unit id="224a5849-25dc-4f19-bf93-637d4868d4d9"><source>Class</source><seg-source>Class</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="47"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="52"/></sdl:cxts><trans-unit id="f609426c-7e7f-4b73-a2ff-05f7d16380af"><source>Summary</source><seg-source>Summary</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="48"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="54"/></sdl:cxts><trans-unit id="487e2fa9-fcca-4232-aa43-eec013af20b9"><source><g id="134">QList</g>&lt;T&gt;</source><seg-source><g id="134">QList</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="49"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="55"/></sdl:cxts><trans-unit id="8fb9170d-f246-4800-ace9-e8f1349b6645"><source>This is by far the most commonly used container class. It stores a list of values of a given type (T) that can be accessed by index. Internally, the <g id="137">QList</g> is implemented using an array, ensuring that index-based access is very fast.</source><seg-source>This is by far the most commonly used container class. It stores a list of values of a given type (T) that can be accessed by index. Internally, the <g id="137">QList</g> is implemented using an array, ensuring that index-based access is very fast.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="50"/><sdl:cxt id="35"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="56"/></sdl:cxts><trans-unit id="fc15a911-a22f-4908-b08d-6c2017b632ed"><source>Items can be added at either end of the list using <g id="140">QList::append</g>() and <g id="143">QList::prepend</g>(), or they can be inserted in the middle using <g id="146">QList::insert</g>(). More than any other container class, <g id="149">QList</g> is highly optimized to expand to as little code as possible in the executable. <g id="152">QStringList</g> inherits from <g id="155">QList</g>&lt;<g id="158">QString</g>&gt;.</source><seg-source>Items can be added at either end of the list using <g id="140">QList::append</g>() and <g id="143">QList::prepend</g>(), or they can be inserted in the middle using <g id="146">QList::insert</g>(). More than any other container class, <g id="149">QList</g> is highly optimized to expand to as little code as possible in the executable. <g id="152">QStringList</g> inherits from <g id="155">QList</g>&lt;<g id="158">QString</g>&gt;.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="51"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="58"/></sdl:cxts><trans-unit id="070044bc-cc04-48c9-89f2-e573210343e3"><source><g id="161">QLinkedList</g>&lt;T&gt;</source><seg-source><g id="161">QLinkedList</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="52"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="59"/></sdl:cxts><trans-unit id="546f0a7a-d226-4e0c-a9b9-f64a2950af67"><source>This is similar to <g id="164">QList</g>, except that it uses iterators rather than integer indexes to access items. It also provides better performance than <g id="167">QList</g> when inserting in the middle of a huge list, and it has nicer iterator semantics. (Iterators pointing to an item in a <g id="170">QLinkedList</g> remain valid as long as the item exists, whereas iterators to a <g id="173">QList</g> can become invalid after any insertion or removal.)</source><seg-source>This is similar to <g id="164">QList</g>, except that it uses iterators rather than integer indexes to access items. It also provides better performance than <g id="167">QList</g> when inserting in the middle of a huge list, and it has nicer iterator semantics. (Iterators pointing to an item in a <g id="170">QLinkedList</g> remain valid as long as the item exists, whereas iterators to a <g id="173">QList</g> can become invalid after any insertion or removal.)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="53"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="61"/></sdl:cxts><trans-unit id="1cdd402f-b9ff-48b0-8d95-3f5f0e0cba36"><source><g id="176">QVector</g>&lt;T&gt;</source><seg-source><g id="176">QVector</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="54"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="62"/></sdl:cxts><trans-unit id="8ad79324-1753-4597-b2b3-d780808b6448"><source>This stores an array of values of a given type at adjacent positions in memory. Inserting at the front or in the middle of a vector can be quite slow, because it can lead to large numbers of items having to be moved by one position in memory.</source><seg-source>This stores an array of values of a given type at adjacent positions in memory. Inserting at the front or in the middle of a vector can be quite slow, because it can lead to large numbers of items having to be moved by one position in memory.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="55"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="64"/></sdl:cxts><trans-unit id="05683153-cdbb-4020-89b3-eca5bcbac0ef"><source><g id="179">QStack</g>&lt;T&gt;</source><seg-source><g id="179">QStack</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="56"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="65"/></sdl:cxts><trans-unit id="45462d9c-de78-44f5-9223-33200d5129e0"><source>This is a convenience subclass of <g id="182">QVector</g> that provides &quot;last in, first out&quot; (LIFO) semantics. It adds the following functions to those already present in <g id="185">QVector</g>: <g id="188">push()</g>, <g id="191">pop()</g>, and <g id="194">top()</g>.</source><seg-source>This is a convenience subclass of <g id="182">QVector</g> that provides &quot;last in, first out&quot; (LIFO) semantics. It adds the following functions to those already present in <g id="185">QVector</g>: <g id="188">push()</g>, <g id="191">pop()</g>, and <g id="194">top()</g>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="57"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="67"/></sdl:cxts><trans-unit id="5cf5627c-9a18-4ef4-8a74-5458ad6cc02d"><source><g id="197">QQueue</g>&lt;T&gt;</source><seg-source><g id="197">QQueue</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="58"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="68"/></sdl:cxts><trans-unit id="d047a078-0940-494e-b6ff-18da4dc1024e"><source>This is a convenience subclass of <g id="200">QList</g> that provides &quot;first in, first out&quot; (FIFO) semantics. It adds the following functions to those already present in <g id="203">QList</g>: <g id="206">enqueue()</g>, <g id="209">dequeue()</g>, and <g id="212">head()</g>.</source><seg-source>This is a convenience subclass of <g id="200">QList</g> that provides &quot;first in, first out&quot; (FIFO) semantics. It adds the following functions to those already present in <g id="203">QList</g>: <g id="206">enqueue()</g>, <g id="209">dequeue()</g>, and <g id="212">head()</g>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="59"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="70"/></sdl:cxts><trans-unit id="0562a8d7-7d1f-4b3c-96dd-856ba7326d8c"><source><g id="215">QSet</g>&lt;T&gt;</source><seg-source><g id="215">QSet</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="60"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="71"/></sdl:cxts><trans-unit id="791635e9-5b9b-4afa-a2de-c53248ea8d6f"><source>This provides a single-valued mathematical set with fast lookups.</source><seg-source>This provides a single-valued mathematical set with fast lookups.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="61"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="73"/></sdl:cxts><trans-unit id="ee572177-c087-4d3a-b845-117efba0a018"><source><g id="218">QMap</g>&lt;Key, T&gt;</source><seg-source><g id="218">QMap</g>&lt;Key, T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="62"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="74"/></sdl:cxts><trans-unit id="182d422b-f67f-451b-a8be-b8f818e41f89"><source>This provides a dictionary (associative array) that maps keys of type Key to values of type T. Normally each key is associated with a single value. <g id="221">QMap</g> stores its data in Key order; if order doesn&apos;t matter <g id="224">QHash</g> is a faster alternative.</source><seg-source>This provides a dictionary (associative array) that maps keys of type Key to values of type T. Normally each key is associated with a single value. <g id="221">QMap</g> stores its data in Key order; if order doesn&apos;t matter <g id="224">QHash</g> is a faster alternative.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="63"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="76"/></sdl:cxts><trans-unit id="0d76e5bb-b034-48ce-9b66-5d384e41d6b1"><source><g id="227">QMultiMap</g>&lt;Key, T&gt;</source><seg-source><g id="227">QMultiMap</g>&lt;Key, T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="64"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="77"/></sdl:cxts><trans-unit id="9d484816-4798-4abc-b142-c66c9899f246"><source>This is a convenience subclass of <g id="230">QMap</g> that provides a nice interface for multi-valued maps, i.e. maps where one key can be associated with multiple values.</source><seg-source>This is a convenience subclass of <g id="230">QMap</g> that provides a nice interface for multi-valued maps, i.e. maps where one key can be associated with multiple values.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="65"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="79"/></sdl:cxts><trans-unit id="2d5f7b77-e92c-4aa3-a706-fcf29e4f2e1f"><source><g id="233">QHash</g>&lt;Key, T&gt;</source><seg-source><g id="233">QHash</g>&lt;Key, T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="66"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="80"/></sdl:cxts><trans-unit id="433d6817-38ef-43a7-8df4-79c472808249"><source>This has almost the same API as <g id="236">QMap</g>, but provides significantly faster lookups. <g id="239">QHash</g> stores its data in an arbitrary order.</source><seg-source>This has almost the same API as <g id="236">QMap</g>, but provides significantly faster lookups. <g id="239">QHash</g> stores its data in an arbitrary order.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="67"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="82"/></sdl:cxts><trans-unit id="d76e11fe-8c30-42b6-a243-3a64d3c9d065"><source><g id="242">QMultiHash</g>&lt;Key, T&gt;</source><seg-source><g id="242">QMultiHash</g>&lt;Key, T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="68"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="83"/></sdl:cxts><trans-unit id="dc1dec8a-0d56-4233-893d-1842ce9132ab"><source>This is a convenience subclass of <g id="245">QHash</g> that provides a nice interface for multi-valued hashes.</source><seg-source>This is a convenience subclass of <g id="245">QHash</g> that provides a nice interface for multi-valued hashes.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="69"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="84"/></sdl:cxts><trans-unit id="f7f73bd5-a6cf-4c0d-a97f-bb82c7faf58a"><source>Containers can be nested. For example, it is perfectly possible to use a <g id="248">QMap</g>&lt;<g id="251">QString</g>, <g id="254">QList</g>&lt;int&gt; &gt;, where the key type is <g id="257">QString</g> and the value type <g id="260">QList</g>&lt;int&gt;. The only pitfall is that you must insert a space between the closing angle brackets (&gt;); otherwise the C++ compiler will misinterpret the two &gt;&apos;s as a right-shift operator (&gt;&gt;) and report a syntax error.</source><seg-source>Containers can be nested. For example, it is perfectly possible to use a <g id="248">QMap</g>&lt;<g id="251">QString</g>, <g id="254">QList</g>&lt;int&gt; &gt;, where the key type is <g id="257">QString</g> and the value type <g id="260">QList</g>&lt;int&gt;. The only pitfall is that you must insert a space between the closing angle brackets (&gt;); otherwise the C++ compiler will misinterpret the two &gt;&apos;s as a right-shift operator (&gt;&gt;) and report a syntax error.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="70"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="85"/></sdl:cxts><trans-unit id="lockTU_a0dec578-9219-4579-8cab-4470b96ad60b" translate="no" sdl:locktype="Structure"><source><g id="263">&lt;QLinkedList&gt;</g></source></trans-unit><trans-unit id="lockTU_7d8e05a0-8974-4ae8-bfd0-6836272f1361" translate="no" sdl:locktype="Structure"><source><g id="266">&lt;QtContainerFwd&gt;</g></source></trans-unit><trans-unit id="lockTU_e8465efc-0fdc-4891-bc7b-08e1816ec1d9" translate="no" sdl:locktype="Structure"><source><g id="263">&lt;QLinkedList&gt;</g></source></trans-unit><trans-unit id="lockTU_80cd20a5-2984-4705-bdda-3bd8c403fb72" translate="no" sdl:locktype="Structure"><source><g id="266">&lt;QtContainerFwd&gt;</g></source></trans-unit><trans-unit id="533046cb-f158-4b9f-9c60-f79da90a2d39"><source>The containers are defined in individual header files with the same name as the container (e.g., <x id="locked1" xid="lockTU_e8465efc-0fdc-4891-bc7b-08e1816ec1d9"/>). For convenience, the containers are forward declared in <x id="locked2" xid="lockTU_80cd20a5-2984-4705-bdda-3bd8c403fb72"/>.</source><seg-source>The containers are defined in individual header files with the same name as the container (e.g., <x id="locked3" xid="lockTU_a0dec578-9219-4579-8cab-4470b96ad60b"/>). For convenience, the containers are forward declared in <x id="locked4" xid="lockTU_7d8e05a0-8974-4ae8-bfd0-6836272f1361"/>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="71"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="a1710213-9f5c-465f-99eb-79ba15cae503"><source><g id="269"/><g id="272"/></source><seg-source><g id="269"/><g id="272"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="72"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="86"/></sdl:cxts><trans-unit id="lockTU_dc584e3a-635e-461f-8a91-fd5651f44ccd" translate="no" sdl:locktype="Structure"><source><g id="278">int</g></source></trans-unit><trans-unit id="lockTU_114744dc-10f9-4fcf-8b0e-88d9e4c4fc99" translate="no" sdl:locktype="Structure"><source><g id="281">double</g></source></trans-unit><trans-unit id="lockTU_77436826-95d9-4cec-8de1-f6269f2b734f" translate="no" sdl:locktype="Structure"><source><g id="278">int</g></source></trans-unit><trans-unit id="lockTU_8ab54455-676b-49d4-ba33-4d3c243cbf5f" translate="no" sdl:locktype="Structure"><source><g id="281">double</g></source></trans-unit><trans-unit id="921486a8-8372-44c0-a741-6e5fd39e5a7e"><source>The values stored in the various containers can be of any <g id="275">assignable data type</g>. To qualify, a type must provide a default constructor, a copy constructor, and an assignment operator. This covers most data types you are likely to want to store in a container, including basic types such as <x id="locked5" xid="lockTU_77436826-95d9-4cec-8de1-f6269f2b734f"/> and <x id="locked6" xid="lockTU_8ab54455-676b-49d4-ba33-4d3c243cbf5f"/>, pointer types, and Qt data types such as <g id="284">QString</g>, <g id="287">QDate</g>, and <g id="290">QTime</g>, but it doesn&apos;t cover <g id="293">QObject</g> or any <g id="296">QObject</g> subclass (<g id="299">QWidget</g>, <g id="302">QDialog</g>, <g id="305">QTimer</g>, etc.). If you attempt to instantiate a <g id="308">QList</g>&lt;<g id="311">QWidget</g>&gt;, the compiler will complain that <g id="314">QWidget</g>&apos;s copy constructor and assignment operators are disabled. If you want to store these kinds of objects in a container, store them as pointers, for example as <g id="317">QList</g>&lt;<g id="320">QWidget</g> *&gt;.</source><seg-source>The values stored in the various containers can be of any <g id="275">assignable data type</g>. To qualify, a type must provide a default constructor, a copy constructor, and an assignment operator. This covers most data types you are likely to want to store in a container, including basic types such as <x id="locked7" xid="lockTU_dc584e3a-635e-461f-8a91-fd5651f44ccd"/> and <x id="locked8" xid="lockTU_114744dc-10f9-4fcf-8b0e-88d9e4c4fc99"/>, pointer types, and Qt data types such as <g id="284">QString</g>, <g id="287">QDate</g>, and <g id="290">QTime</g>, but it doesn&apos;t cover <g id="293">QObject</g> or any <g id="296">QObject</g> subclass (<g id="299">QWidget</g>, <g id="302">QDialog</g>, <g id="305">QTimer</g>, etc.). If you attempt to instantiate a <g id="308">QList</g>&lt;<g id="311">QWidget</g>&gt;, the compiler will complain that <g id="314">QWidget</g>&apos;s copy constructor and assignment operators are disabled. If you want to store these kinds of objects in a container, store them as pointers, for example as <g id="317">QList</g>&lt;<g id="320">QWidget</g> *&gt;.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="73"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="87"/></sdl:cxts><trans-unit id="32a3ae0f-c118-48da-b0ca-6543fc12dab1"><source>Here&apos;s an example custom data type that meets the requirement of an assignable data type:</source><seg-source>Here&apos;s an example custom data type that meets the requirement of an assignable data type:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="74"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="88"/></sdl:cxts><trans-unit id="fc97819f-5f05-4942-9be0-cd29b3deb486"><source><g id="323">class</g> Employee { <g id="326">public</g>: Employee() {} Employee(<g id="329">const</g> Employee <g id="332">&amp;</g>other); Employee <g id="335">&amp;</g><g id="338">operator</g><g id="341">=</g>(<g id="344">const</g> Employee <g id="347">&amp;</g>other); <g id="350">private</g>: <g id="353">QString</g> myName; <g id="356">QDate</g> myDateOfBirth; };</source><seg-source><g id="323">class</g> Employee { <g id="326">public</g>: Employee() {} Employee(<g id="329">const</g> Employee <g id="332">&amp;</g>other); Employee <g id="335">&amp;</g><g id="338">operator</g><g id="341">=</g>(<g id="344">const</g> Employee <g id="347">&amp;</g>other); <g id="350">private</g>: <g id="353">QString</g> myName; <g id="356">QDate</g> myDateOfBirth; };</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="76"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="89"/></sdl:cxts><trans-unit id="d696f406-b6ca-418a-b57a-71bc55f1fe68"><source>If we don&apos;t provide a copy constructor or an assignment operator, C++ provides a default implementation that performs a member-by-member copy. In the example above, that would have been sufficient. Also, if you don&apos;t provide any constructors, C++ provides a default constructor that initializes its member using default constructors. Although it doesn&apos;t provide any explicit constructors or assignment operator, the following data type can be stored in a container:</source><seg-source>If we don&apos;t provide a copy constructor or an assignment operator, C++ provides a default implementation that performs a member-by-member copy. In the example above, that would have been sufficient. Also, if you don&apos;t provide any constructors, C++ provides a default constructor that initializes its member using default constructors. Although it doesn&apos;t provide any explicit constructors or assignment operator, the following data type can be stored in a container:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="77"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="90"/></sdl:cxts><trans-unit id="07e1222b-db35-4972-8ca2-7375ab8d07fe"><source><g id="359">struct</g> Movie { <g id="362">int</g> id; <g id="365">QString</g> title; <g id="368">QDate</g> releaseDate; };</source><seg-source><g id="359">struct</g> Movie { <g id="362">int</g> id; <g id="365">QString</g> title; <g id="368">QDate</g> releaseDate; };</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="78"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="91"/></sdl:cxts><trans-unit id="lockTU_314223e2-453b-4442-8c6e-8fcbc6d2da87" translate="no" sdl:locktype="Structure"><source><g id="374">operator&lt;()</g></source></trans-unit><trans-unit id="lockTU_a0e2c62a-e3bc-4c84-988f-dee9ab1e3e8a" translate="no" sdl:locktype="Structure"><source><g id="374">operator&lt;()</g></source></trans-unit><trans-unit id="837714e0-b5d7-4168-9c53-5eb755c21d6f"><source>Some containers have additional requirements for the data types they can store. For example, the Key type of a <g id="371">QMap</g>&lt;Key, T&gt; must provide <x id="locked9" xid="lockTU_a0e2c62a-e3bc-4c84-988f-dee9ab1e3e8a"/>. Such special requirements are documented in a class&apos;s detailed description. In some cases, specific functions have special requirements; these are described on a per-function basis. The compiler will always emit an error if a requirement isn&apos;t met.</source><seg-source>Some containers have additional requirements for the data types they can store. For example, the Key type of a <g id="371">QMap</g>&lt;Key, T&gt; must provide <x id="locked10" xid="lockTU_314223e2-453b-4442-8c6e-8fcbc6d2da87"/>. Such special requirements are documented in a class&apos;s detailed description. In some cases, specific functions have special requirements; these are described on a per-function basis. The compiler will always emit an error if a requirement isn&apos;t met.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="79"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="92"/></sdl:cxts><trans-unit id="d7e11b83-7c09-4943-bc18-31ac1d613acf"><source>Qt&apos;s containers provide operator&lt;&lt;() and operator&gt;&gt;() so that they can easily be read and written using a <g id="377">QDataStream</g>. This means that the data types stored in the container must also support operator&lt;&lt;() and operator&gt;&gt;(). Providing such support is straightforward; here&apos;s how we could do it for the Movie struct above:</source><seg-source>Qt&apos;s containers provide operator&lt;&lt;() and operator&gt;&gt;() so that they can easily be read and written using a <g id="377">QDataStream</g>. This means that the data types stored in the container must also support operator&lt;&lt;() and operator&gt;&gt;(). Providing such support is straightforward; here&apos;s how we could do it for the Movie struct above:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="80"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="93"/></sdl:cxts><trans-unit id="b3bdeda4-59d0-4b4e-ad47-9643b6ab9b3e"><source><g id="380">QDataStream</g> <g id="383">&amp;</g><g id="386">operator</g><g id="389">&lt;</g><g id="392">&lt;</g>(<g id="395">QDataStream</g> <g id="398">&amp;</g>out<g id="401">,</g> <g id="404">const</g> Movie <g id="407">&amp;</g>movie) { out <g id="410">&lt;</g><g id="413">&lt;</g> (<g id="416">quint32</g>)movie<g id="419">.</g>id <g id="422">&lt;</g><g id="425">&lt;</g> movie<g id="428">.</g>title <g id="431">&lt;</g><g id="434">&lt;</g> movie<g id="437">.</g>releaseDate; <g id="440">return</g> out; } <g id="443">QDataStream</g> <g id="446">&amp;</g><g id="449">operator</g><g id="452">&gt;</g><g id="455">&gt;</g>(<g id="458">QDataStream</g> <g id="461">&amp;</g>in<g id="464">,</g> Movie <g id="467">&amp;</g>movie) { <g id="470">quint32</g> id; <g id="473">QDate</g> date; in <g id="476">&gt;</g><g id="479">&gt;</g> id <g id="482">&gt;</g><g id="485">&gt;</g> movie<g id="488">.</g>title <g id="491">&gt;</g><g id="494">&gt;</g> date; movie<g id="497">.</g>id <g id="500">=</g> (<g id="503">int</g>)id; movie<g id="506">.</g>releaseDate <g id="509">=</g> date; <g id="512">return</g> in; }</source><seg-source><g id="380">QDataStream</g> <g id="383">&amp;</g><g id="386">operator</g><g id="389">&lt;</g><g id="392">&lt;</g>(<g id="395">QDataStream</g> <g id="398">&amp;</g>out<g id="401">,</g> <g id="404">const</g> Movie <g id="407">&amp;</g>movie) { out <g id="410">&lt;</g><g id="413">&lt;</g> (<g id="416">quint32</g>)movie<g id="419">.</g>id <g id="422">&lt;</g><g id="425">&lt;</g> movie<g id="428">.</g>title <g id="431">&lt;</g><g id="434">&lt;</g> movie<g id="437">.</g>releaseDate; <g id="440">return</g> out; } <g id="443">QDataStream</g> <g id="446">&amp;</g><g id="449">operator</g><g id="452">&gt;</g><g id="455">&gt;</g>(<g id="458">QDataStream</g> <g id="461">&amp;</g>in<g id="464">,</g> Movie <g id="467">&amp;</g>movie) { <g id="470">quint32</g> id; <g id="473">QDate</g> date; in <g id="476">&gt;</g><g id="479">&gt;</g> id <g id="482">&gt;</g><g id="485">&gt;</g> movie<g id="488">.</g>title <g id="491">&gt;</g><g id="494">&gt;</g> date; movie<g id="497">.</g>id <g id="500">=</g> (<g id="503">int</g>)id; movie<g id="506">.</g>releaseDate <g id="509">=</g> date; <g id="512">return</g> in; }</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="81"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="686538e8-f4ae-4e9f-839e-833cea2e68eb"><source><g id="515"/></source><seg-source><g id="515"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="82"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="94"/></sdl:cxts><trans-unit id="lockTU_7188248b-91dc-4077-9bb8-12f2fe97ff70" translate="no" sdl:locktype="Structure"><source><g id="530">int</g></source></trans-unit><trans-unit id="lockTU_00d44dad-5740-4c5f-8767-42e7c289ef34" translate="no" sdl:locktype="Structure"><source><g id="533">double</g></source></trans-unit><trans-unit id="lockTU_27cfb445-7eaa-47c3-aeb5-4d0af834d1fa" translate="no" sdl:locktype="Structure"><source><g id="530">int</g></source></trans-unit><trans-unit id="lockTU_7aecd293-b32c-4c84-b525-3a13fe9afaf4" translate="no" sdl:locktype="Structure"><source><g id="533">double</g></source></trans-unit><trans-unit id="3b27b2e8-e5df-4932-9f3b-b3eb41f969bd"><source>The documentation of certain container class functions refer to <g id="518">default-constructed values</g>; for example, <g id="521">QVector</g> automatically initializes its items with default-constructed values, and <g id="524">QMap::value</g>() returns a default-constructed value if the specified key isn&apos;t in the map. For most value types, this simply means that a value is created using the default constructor (e.g. an empty string for <g id="527">QString</g>). But for primitive types like <x id="locked11" xid="lockTU_27cfb445-7eaa-47c3-aeb5-4d0af834d1fa"/> and <x id="locked12" xid="lockTU_7aecd293-b32c-4c84-b525-3a13fe9afaf4"/>, as well as for pointer types, the C++ language doesn&apos;t specify any initialization; in those cases, Qt&apos;s containers automatically initialize the value to 0.</source><seg-source>The documentation of certain container class functions refer to <g id="518">default-constructed values</g>; for example, <g id="521">QVector</g> automatically initializes its items with default-constructed values, and <g id="524">QMap::value</g>() returns a default-constructed value if the specified key isn&apos;t in the map. For most value types, this simply means that a value is created using the default constructor (e.g. an empty string for <g id="527">QString</g>). But for primitive types like <x id="locked13" xid="lockTU_7188248b-91dc-4077-9bb8-12f2fe97ff70"/> and <x id="locked14" xid="lockTU_00d44dad-5740-4c5f-8767-42e7c289ef34"/>, as well as for pointer types, the C++ language doesn&apos;t specify any initialization; in those cases, Qt&apos;s containers automatically initialize the value to 0.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="83"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="f8817142-c3be-4256-b8c1-7977bd2af7a7"><source><g id="536"/></source><seg-source><g id="536"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="84"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="95"/></sdl:cxts><trans-unit id="b610d30f-5d6e-4500-93fc-ee8b9b21bf66"><source>The Iterator Classes</source><seg-source>The Iterator Classes</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="85"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="96"/></sdl:cxts><trans-unit id="d59a5179-a069-474d-8ed6-5c20b8093217"><source>Iterators provide a uniform means to access items in a container. Qt&apos;s container classes provide two types of iterators: Java-style iterators and STL-style iterators. Iterators of both types are invalidated when the data in the container is modified or detached from <g id="539">implicitly shared copies</g> due to a call to a non-const member function.</source><seg-source>Iterators provide a uniform means to access items in a container. Qt&apos;s container classes provide two types of iterators: Java-style iterators and STL-style iterators. Iterators of both types are invalidated when the data in the container is modified or detached from <g id="539">implicitly shared copies</g> due to a call to a non-const member function.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="86"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="cb8f43aa-498e-4873-aa91-fffe7317324c"><source><g id="542"/></source><seg-source><g id="542"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="87"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="97"/></sdl:cxts><trans-unit id="9e18ba2f-a660-4390-827b-7f1474f71356"><source>Java-Style Iterators</source><seg-source>Java-Style Iterators</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="88"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="98"/></sdl:cxts><trans-unit id="8e9d2763-6cc8-4160-bff6-eec83d641aaf"><source>The Java-style iterators are new in Qt 4 and are the standard ones used in Qt applications. They are more convenient to use than the STL-style iterators, at the price of being slightly less efficient. Their API is modelled on Java&apos;s iterator classes.</source><seg-source>The Java-style iterators are new in Qt 4 and are the standard ones used in Qt applications. They are more convenient to use than the STL-style iterators, at the price of being slightly less efficient. Their API is modelled on Java&apos;s iterator classes.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="89"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="99"/></sdl:cxts><trans-unit id="1ad8a0a3-5567-4c16-83dd-d600270d3401"><source>For each container class, there are two Java-style iterator data types: one that provides read-only access and one that provides read-write access.</source><seg-source>For each container class, there are two Java-style iterator data types: one that provides read-only access and one that provides read-write access.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="90"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="104"/></sdl:cxts><trans-unit id="f29b0e5a-0be9-4a74-8335-d9e24c54f590"><source>Containers</source><seg-source>Containers</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="91"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="105"/></sdl:cxts><trans-unit id="9047e8d6-a98a-4b50-9827-54f28a17fd3a"><source>Read-only iterator</source><seg-source>Read-only iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="92"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="106"/></sdl:cxts><trans-unit id="40c05021-d73e-4f3e-a522-0c0ef125e4a6"><source>Read-write iterator</source><seg-source>Read-write iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="93"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="108"/></sdl:cxts><trans-unit id="6fea2bc3-9f5a-4443-804b-8b1f0bde5f7c"><source><g id="545">QList</g>&lt;T&gt;, <g id="548">QQueue</g>&lt;T&gt;</source><seg-source><g id="545">QList</g>&lt;T&gt;, <g id="548">QQueue</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="94"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="109"/></sdl:cxts><trans-unit id="e3abdc57-8999-4728-a052-d9212d02d8af"><source><g id="551">QListIterator</g>&lt;T&gt;</source><seg-source><g id="551">QListIterator</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="95"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="110"/></sdl:cxts><trans-unit id="082a2933-5f59-4a7e-ba5a-db8fe40bc419"><source><g id="554">QMutableListIterator</g>&lt;T&gt;</source><seg-source><g id="554">QMutableListIterator</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="96"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="112"/></sdl:cxts><trans-unit id="885cf58a-8124-468a-a488-3c1bd9ea192d"><source><g id="557">QLinkedList</g>&lt;T&gt;</source><seg-source><g id="557">QLinkedList</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="97"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="113"/></sdl:cxts><trans-unit id="9809ca2a-adf8-416f-9e8e-4f3c0a37c9e1"><source><g id="560">QLinkedListIterator</g>&lt;T&gt;</source><seg-source><g id="560">QLinkedListIterator</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="98"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="114"/></sdl:cxts><trans-unit id="82bfaeea-bb92-4870-b63b-e3f5016ccc45"><source><g id="563">QMutableLinkedListIterator</g>&lt;T&gt;</source><seg-source><g id="563">QMutableLinkedListIterator</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="99"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="116"/></sdl:cxts><trans-unit id="d1863263-6180-4db8-9191-a10b01cafa4a"><source><g id="566">QVector</g>&lt;T&gt;, <g id="569">QStack</g>&lt;T&gt;</source><seg-source><g id="566">QVector</g>&lt;T&gt;, <g id="569">QStack</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="100"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="117"/></sdl:cxts><trans-unit id="d1c49ad9-c413-4b23-bde8-44c4452e4140"><source><g id="572">QVectorIterator</g>&lt;T&gt;</source><seg-source><g id="572">QVectorIterator</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="101"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="118"/></sdl:cxts><trans-unit id="d93cd322-6cb6-45ef-bd17-60decf3fe7e6"><source><g id="575">QMutableVectorIterator</g>&lt;T&gt;</source><seg-source><g id="575">QMutableVectorIterator</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="102"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="120"/></sdl:cxts><trans-unit id="65ed2563-b056-47b8-9d3f-9f0e201790f0"><source><g id="578">QSet</g>&lt;T&gt;</source><seg-source><g id="578">QSet</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="103"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="121"/></sdl:cxts><trans-unit id="58ecb422-4ee4-4cae-a123-df02eb204b63"><source><g id="581">QSetIterator</g>&lt;T&gt;</source><seg-source><g id="581">QSetIterator</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="104"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="122"/></sdl:cxts><trans-unit id="6ec96022-b320-4e49-ab07-d3967fcd8a58"><source><g id="584">QMutableSetIterator</g>&lt;T&gt;</source><seg-source><g id="584">QMutableSetIterator</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="105"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="124"/></sdl:cxts><trans-unit id="440da227-0744-403f-acd8-7da73bc6d6f6"><source><g id="587">QMap</g>&lt;Key, T&gt;, <g id="590">QMultiMap</g>&lt;Key, T&gt;</source><seg-source><g id="587">QMap</g>&lt;Key, T&gt;, <g id="590">QMultiMap</g>&lt;Key, T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="106"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="125"/></sdl:cxts><trans-unit id="78b1a49f-548e-4094-89f7-f99452d084b5"><source><g id="593">QMapIterator</g>&lt;Key, T&gt;</source><seg-source><g id="593">QMapIterator</g>&lt;Key, T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="107"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="126"/></sdl:cxts><trans-unit id="64031f1a-754a-4959-a72a-4ccb411db26d"><source><g id="596">QMutableMapIterator</g>&lt;Key, T&gt;</source><seg-source><g id="596">QMutableMapIterator</g>&lt;Key, T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="108"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="128"/></sdl:cxts><trans-unit id="0ec68dce-2979-43b7-99fe-89c7ab9dd485"><source><g id="599">QHash</g>&lt;Key, T&gt;, <g id="602">QMultiHash</g>&lt;Key, T&gt;</source><seg-source><g id="599">QHash</g>&lt;Key, T&gt;, <g id="602">QMultiHash</g>&lt;Key, T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="109"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="129"/></sdl:cxts><trans-unit id="830e47b0-f997-4809-b5fc-75e8469f2f2d"><source><g id="605">QHashIterator</g>&lt;Key, T&gt;</source><seg-source><g id="605">QHashIterator</g>&lt;Key, T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="110"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="130"/></sdl:cxts><trans-unit id="e0524099-3ebe-475e-9f96-658405b78ec0"><source><g id="608">QMutableHashIterator</g>&lt;Key, T&gt;</source><seg-source><g id="608">QMutableHashIterator</g>&lt;Key, T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="111"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="131"/></sdl:cxts><trans-unit id="fb7ab07a-17d2-4f2c-8a0f-73ea798e15e9"><source>In this discussion, we will concentrate on <g id="611">QList</g> and <g id="614">QMap</g>. The iterator types for <g id="617">QLinkedList</g>, <g id="620">QVector</g>, and <g id="623">QSet</g> have exactly the same interface as <g id="626">QList</g>&apos;s iterators; similarly, the iterator types for <g id="629">QHash</g> have the same interface as <g id="632">QMap</g>&apos;s iterators.</source><seg-source>In this discussion, we will concentrate on <g id="611">QList</g> and <g id="614">QMap</g>. The iterator types for <g id="617">QLinkedList</g>, <g id="620">QVector</g>, and <g id="623">QSet</g> have exactly the same interface as <g id="626">QList</g>&apos;s iterators; similarly, the iterator types for <g id="629">QHash</g> have the same interface as <g id="632">QMap</g>&apos;s iterators.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="112"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="132"/></sdl:cxts><trans-unit id="0f0e6b3d-6e33-49c8-9b46-3d28ba486f6b"><source>Unlike STL-style iterators (covered <g id="635">below</g>), Java-style iterators point <g id="638">between</g> items rather than directly <g id="641">at</g> items. For this reason, they are either pointing to the very beginning of the container (before the first item), at the very end of the container (after the last item), or between two items. The diagram below shows the valid iterator positions as red arrows for a list containing four items:</source><seg-source>Unlike STL-style iterators (covered <g id="635">below</g>), Java-style iterators point <g id="638">between</g> items rather than directly <g id="641">at</g> items. For this reason, they are either pointing to the very beginning of the container (before the first item), at the very end of the container (after the last item), or between two items. The diagram below shows the valid iterator positions as red arrows for a list containing four items:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="113"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="133"/></sdl:cxts><trans-unit id="5f9d0e31-d3d8-4fcb-b88e-e6b32f4447ae"><source><x id="642" xid="8b3bc56a-c980-4d83-8ad1-db9df4d9f069"/></source><seg-source><x id="642" xid="8b3bc56a-c980-4d83-8ad1-db9df4d9f069"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="114"/></sdl:cxts><trans-unit id="8b3bc56a-c980-4d83-8ad1-db9df4d9f069"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="115"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="134"/></sdl:cxts><trans-unit id="1e5460da-978a-42a0-9885-11b83425bae6"><source>Here&apos;s a typical loop for iterating through all the elements of a <g id="645">QList</g>&lt;<g id="648">QString</g>&gt; in order and printing them to the console:</source><seg-source>Here&apos;s a typical loop for iterating through all the elements of a <g id="645">QList</g>&lt;<g id="648">QString</g>&gt; in order and printing them to the console:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="116"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="135"/></sdl:cxts><trans-unit id="8155d1ee-c941-4d4a-aab7-d2f7ccc2afff"><source><g id="651">QList</g><g id="654">&lt;</g><g id="657">QString</g><g id="660">&gt;</g> list; list <g id="663">&lt;</g><g id="666">&lt;</g> <g id="669">&quot;A&quot;</g> <g id="672">&lt;</g><g id="675">&lt;</g> <g id="678">&quot;B&quot;</g> <g id="681">&lt;</g><g id="684">&lt;</g> <g id="687">&quot;C&quot;</g> <g id="690">&lt;</g><g id="693">&lt;</g> <g id="696">&quot;D&quot;</g>; <g id="699">QListIterator</g><g id="702">&lt;</g><g id="705">QString</g><g id="708">&gt;</g> i(list); <g id="711">while</g> (i<g id="714">.</g>hasNext()) <g id="717">qDebug</g>() <g id="720">&lt;</g><g id="723">&lt;</g> i<g id="726">.</g>next();</source><seg-source><g id="651">QList</g><g id="654">&lt;</g><g id="657">QString</g><g id="660">&gt;</g> list; list <g id="663">&lt;</g><g id="666">&lt;</g> <g id="669">&quot;A&quot;</g> <g id="672">&lt;</g><g id="675">&lt;</g> <g id="678">&quot;B&quot;</g> <g id="681">&lt;</g><g id="684">&lt;</g> <g id="687">&quot;C&quot;</g> <g id="690">&lt;</g><g id="693">&lt;</g> <g id="696">&quot;D&quot;</g>; <g id="699">QListIterator</g><g id="702">&lt;</g><g id="705">QString</g><g id="708">&gt;</g> i(list); <g id="711">while</g> (i<g id="714">.</g>hasNext()) <g id="717">qDebug</g>() <g id="720">&lt;</g><g id="723">&lt;</g> i<g id="726">.</g>next();</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="117"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="136"/></sdl:cxts><trans-unit id="1226b7c0-72cf-47e7-9950-49fea0e80829"><source>It works as follows: The <g id="729">QList</g> to iterate over is passed to the <g id="732">QListIterator</g> constructor. At that point, the iterator is located just in front of the first item in the list (before item &quot;A&quot;). Then we call <g id="735">hasNext()</g> to check whether there is an item after the iterator. If there is, we call <g id="738">next()</g> to jump over that item. The next() function returns the item that it jumps over. For a <g id="741">QList</g>&lt;<g id="744">QString</g>&gt;, that item is of type <g id="747">QString</g>.</source><seg-source>It works as follows: The <g id="729">QList</g> to iterate over is passed to the <g id="732">QListIterator</g> constructor. At that point, the iterator is located just in front of the first item in the list (before item &quot;A&quot;). Then we call <g id="735">hasNext()</g> to check whether there is an item after the iterator. If there is, we call <g id="738">next()</g> to jump over that item. The next() function returns the item that it jumps over. For a <g id="741">QList</g>&lt;<g id="744">QString</g>&gt;, that item is of type <g id="747">QString</g>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="118"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="137"/></sdl:cxts><trans-unit id="671e1a00-671b-4266-8227-e170fc417807"><source>Here&apos;s how to iterate backward in a <g id="750">QList</g>:</source><seg-source>Here&apos;s how to iterate backward in a <g id="750">QList</g>:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="119"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="138"/></sdl:cxts><trans-unit id="a358e23d-293a-47a6-aa5e-c407f884948c"><source><g id="753">QListIterator</g><g id="756">&lt;</g><g id="759">QString</g><g id="762">&gt;</g> i(list); i<g id="765">.</g>toBack(); <g id="768">while</g> (i<g id="771">.</g>hasPrevious()) <g id="774">qDebug</g>() <g id="777">&lt;</g><g id="780">&lt;</g> i<g id="783">.</g>previous();</source><seg-source><g id="753">QListIterator</g><g id="756">&lt;</g><g id="759">QString</g><g id="762">&gt;</g> i(list); i<g id="765">.</g>toBack(); <g id="768">while</g> (i<g id="771">.</g>hasPrevious()) <g id="774">qDebug</g>() <g id="777">&lt;</g><g id="780">&lt;</g> i<g id="783">.</g>previous();</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="120"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="139"/></sdl:cxts><trans-unit id="f337f2e2-4d70-43a8-9bad-ee6c90e253c4"><source>The code is symmetric with iterating forward, except that we start by calling <g id="786">toBack()</g> to move the iterator after the last item in the list.</source><seg-source>The code is symmetric with iterating forward, except that we start by calling <g id="786">toBack()</g> to move the iterator after the last item in the list.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="121"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="140"/></sdl:cxts><trans-unit id="05c1a237-7afd-49ef-9050-e0eba2fb4508"><source>The diagram below illustrates the effect of calling <g id="789">next()</g> and <g id="792">previous()</g> on an iterator:</source><seg-source>The diagram below illustrates the effect of calling <g id="789">next()</g> and <g id="792">previous()</g> on an iterator:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="122"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="141"/></sdl:cxts><trans-unit id="83007c60-135b-464c-ab92-d8777f550f60"><source><x id="793" xid="f00d258a-b64d-4c48-a4bc-e91930637a60"/></source><seg-source><x id="793" xid="f00d258a-b64d-4c48-a4bc-e91930637a60"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="114"/></sdl:cxts><trans-unit id="f00d258a-b64d-4c48-a4bc-e91930637a60"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="123"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="142"/></sdl:cxts><trans-unit id="034eebad-a11e-4a09-8a79-c226860fb750"><source>The following table summarizes the <g id="796">QListIterator</g> API:</source><seg-source>The following table summarizes the <g id="796">QListIterator</g> API:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="124"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="147"/></sdl:cxts><trans-unit id="0953f726-a542-4da3-a77d-10823bc0ef34"><source>Function</source><seg-source>Function</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="125"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="148"/></sdl:cxts><trans-unit id="230f5eb8-75f8-4826-bf04-c7600c8468c5"><source>Behavior</source><seg-source>Behavior</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="126"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="150"/></sdl:cxts><trans-unit id="36237999-9639-470c-9942-005ed00ec442"><source><g id="799">toFront()</g></source><seg-source><g id="799">toFront()</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="127"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="151"/></sdl:cxts><trans-unit id="72ecfe29-72c7-4732-adae-79c400f28e81"><source>Moves the iterator to the front of the list (before the first item)</source><seg-source>Moves the iterator to the front of the list (before the first item)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="128"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="153"/></sdl:cxts><trans-unit id="7f82f639-a36f-4559-b2fe-1e86d7e7746d"><source><g id="802">toBack()</g></source><seg-source><g id="802">toBack()</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="129"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="154"/></sdl:cxts><trans-unit id="fec8046e-4110-4bef-a015-d246e86574c4"><source>Moves the iterator to the back of the list (after the last item)</source><seg-source>Moves the iterator to the back of the list (after the last item)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="130"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="156"/></sdl:cxts><trans-unit id="78870bad-5d13-42a7-bcc1-6bb1783c8476"><source><g id="805">hasNext()</g></source><seg-source><g id="805">hasNext()</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="131"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="157"/></sdl:cxts><trans-unit id="lockTU_f4472f0b-3305-48d3-8a9e-8722c2418c76" translate="no" sdl:locktype="Structure"><source><g id="808">true</g></source></trans-unit><trans-unit id="lockTU_7b8c49ff-8620-4fa4-a378-d5d92dfe2d11" translate="no" sdl:locktype="Structure"><source><g id="808">true</g></source></trans-unit><trans-unit id="18d40c0c-de27-49e9-a93e-2badae6d8e8d"><source>Returns <x id="locked15" xid="lockTU_7b8c49ff-8620-4fa4-a378-d5d92dfe2d11"/> if the iterator isn&apos;t at the back of the list</source><seg-source>Returns <x id="locked16" xid="lockTU_f4472f0b-3305-48d3-8a9e-8722c2418c76"/> if the iterator isn&apos;t at the back of the list</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="132"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="159"/></sdl:cxts><trans-unit id="574a7355-cbb1-43a5-a875-723c1ba080cd"><source><g id="811">next()</g></source><seg-source><g id="811">next()</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="133"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="160"/></sdl:cxts><trans-unit id="7ace166c-d462-482c-9549-175b06a31121"><source>Returns the next item and advances the iterator by one position</source><seg-source>Returns the next item and advances the iterator by one position</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="134"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="162"/></sdl:cxts><trans-unit id="400eee59-d122-48d1-81b9-67a292c92ff9"><source><g id="814">peekNext()</g></source><seg-source><g id="814">peekNext()</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="135"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="163"/></sdl:cxts><trans-unit id="f5a81a1f-9e7d-4447-93b8-6f99472ac443"><source>Returns the next item without moving the iterator</source><seg-source>Returns the next item without moving the iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="136"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="165"/></sdl:cxts><trans-unit id="bd89b137-75de-497b-9af8-db45461a0d48"><source><g id="817">hasPrevious()</g></source><seg-source><g id="817">hasPrevious()</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="137"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="166"/></sdl:cxts><trans-unit id="lockTU_e428bab3-8bfe-4311-bdf6-43304df2e4ea" translate="no" sdl:locktype="Structure"><source><g id="820">true</g></source></trans-unit><trans-unit id="lockTU_72f05697-3b29-4232-af30-9ab01625b449" translate="no" sdl:locktype="Structure"><source><g id="820">true</g></source></trans-unit><trans-unit id="7b1bd4c2-6523-4807-9fb3-6d0223f54907"><source>Returns <x id="locked17" xid="lockTU_72f05697-3b29-4232-af30-9ab01625b449"/> if the iterator isn&apos;t at the front of the list</source><seg-source>Returns <x id="locked18" xid="lockTU_e428bab3-8bfe-4311-bdf6-43304df2e4ea"/> if the iterator isn&apos;t at the front of the list</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="138"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="168"/></sdl:cxts><trans-unit id="6fff8de1-b7ba-4577-b20c-2cab8060626e"><source><g id="823">previous()</g></source><seg-source><g id="823">previous()</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="139"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="169"/></sdl:cxts><trans-unit id="a0d2cb11-1ed0-4940-9ff8-7736358e5e43"><source>Returns the previous item and moves the iterator back by one position</source><seg-source>Returns the previous item and moves the iterator back by one position</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="140"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="171"/></sdl:cxts><trans-unit id="92d4c158-ff04-420b-845c-7ae33151dab8"><source><g id="826">peekPrevious()</g></source><seg-source><g id="826">peekPrevious()</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="141"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="172"/></sdl:cxts><trans-unit id="2d87afa2-3073-46d7-bfc5-f16332defea5"><source>Returns the previous item without moving the iterator</source><seg-source>Returns the previous item without moving the iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="142"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="173"/></sdl:cxts><trans-unit id="92482f41-97c5-44af-91ac-8d80cd7620ae"><source><g id="829">QListIterator</g> provides no functions to insert or remove items from the list as we iterate. To accomplish this, you must use <g id="832">QMutableListIterator</g>. Here&apos;s an example where we remove all odd numbers from a <g id="835">QList</g>&lt;int&gt; using <g id="838">QMutableListIterator</g>:</source><seg-source><g id="829">QListIterator</g> provides no functions to insert or remove items from the list as we iterate. To accomplish this, you must use <g id="832">QMutableListIterator</g>. Here&apos;s an example where we remove all odd numbers from a <g id="835">QList</g>&lt;int&gt; using <g id="838">QMutableListIterator</g>:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="143"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="174"/></sdl:cxts><trans-unit id="f15a0200-63fc-4590-bff3-d52d705bfe2a"><source><g id="841">QMutableListIterator</g><g id="844">&lt;</g><g id="847">int</g><g id="850">&gt;</g> i(list); <g id="853">while</g> (i<g id="856">.</g>hasNext()) { <g id="859">if</g> (i<g id="862">.</g>next() <g id="865">%</g> <g id="868">2</g> <g id="871">!</g><g id="874">=</g> <g id="877">0</g>) i<g id="880">.</g>remove(); }</source><seg-source><g id="841">QMutableListIterator</g><g id="844">&lt;</g><g id="847">int</g><g id="850">&gt;</g> i(list); <g id="853">while</g> (i<g id="856">.</g>hasNext()) { <g id="859">if</g> (i<g id="862">.</g>next() <g id="865">%</g> <g id="868">2</g> <g id="871">!</g><g id="874">=</g> <g id="877">0</g>) i<g id="880">.</g>remove(); }</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="144"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="175"/></sdl:cxts><trans-unit id="6cffbd6a-8309-40ae-90f7-13c2e767f0a7"><source>The next() call in the loop is made every time. It jumps over the next item in the list. The <g id="883">remove()</g> function removes the last item that we jumped over from the list. The call to <g id="886">remove()</g> does not invalidate the iterator, so it is safe to continue using it. This works just as well when iterating backward:</source><seg-source>The next() call in the loop is made every time. It jumps over the next item in the list. The <g id="883">remove()</g> function removes the last item that we jumped over from the list. The call to <g id="886">remove()</g> does not invalidate the iterator, so it is safe to continue using it. This works just as well when iterating backward:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="145"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="176"/></sdl:cxts><trans-unit id="ac6fc497-1837-4ab3-9d39-4ae695743fd8"><source><g id="889">QMutableListIterator</g><g id="892">&lt;</g><g id="895">int</g><g id="898">&gt;</g> i(list); i<g id="901">.</g>toBack(); <g id="904">while</g> (i<g id="907">.</g>hasPrevious()) { <g id="910">if</g> (i<g id="913">.</g>previous() <g id="916">%</g> <g id="919">2</g> <g id="922">!</g><g id="925">=</g> <g id="928">0</g>) i<g id="931">.</g>remove(); }</source><seg-source><g id="889">QMutableListIterator</g><g id="892">&lt;</g><g id="895">int</g><g id="898">&gt;</g> i(list); i<g id="901">.</g>toBack(); <g id="904">while</g> (i<g id="907">.</g>hasPrevious()) { <g id="910">if</g> (i<g id="913">.</g>previous() <g id="916">%</g> <g id="919">2</g> <g id="922">!</g><g id="925">=</g> <g id="928">0</g>) i<g id="931">.</g>remove(); }</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="146"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="177"/></sdl:cxts><trans-unit id="8169ed99-1e8f-4b5b-ab12-779f43d73a87"><source>If we just want to modify the value of an existing item, we can use <g id="934">setValue()</g>. In the code below, we replace any value larger than 128 with 128:</source><seg-source>If we just want to modify the value of an existing item, we can use <g id="934">setValue()</g>. In the code below, we replace any value larger than 128 with 128:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="147"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="178"/></sdl:cxts><trans-unit id="a02109ff-db64-40aa-9db2-ae2828e00925"><source><g id="937">QMutableListIterator</g><g id="940">&lt;</g><g id="943">int</g><g id="946">&gt;</g> i(list); <g id="949">while</g> (i<g id="952">.</g>hasNext()) { <g id="955">if</g> (i<g id="958">.</g>next() <g id="961">&gt;</g> <g id="964">128</g>) i<g id="967">.</g>setValue(<g id="970">128</g>); }</source><seg-source><g id="937">QMutableListIterator</g><g id="940">&lt;</g><g id="943">int</g><g id="946">&gt;</g> i(list); <g id="949">while</g> (i<g id="952">.</g>hasNext()) { <g id="955">if</g> (i<g id="958">.</g>next() <g id="961">&gt;</g> <g id="964">128</g>) i<g id="967">.</g>setValue(<g id="970">128</g>); }</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="148"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="179"/></sdl:cxts><trans-unit id="29c14cb3-b533-43bf-9747-f2da5301881a"><source>Just like <g id="973">remove()</g>, <g id="976">setValue()</g> operates on the last item that we jumped over. If we iterate forward, this is the item just before the iterator; if we iterate backward, this is the item just after the iterator.</source><seg-source>Just like <g id="973">remove()</g>, <g id="976">setValue()</g> operates on the last item that we jumped over. If we iterate forward, this is the item just before the iterator; if we iterate backward, this is the item just after the iterator.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="149"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="180"/></sdl:cxts><trans-unit id="b2afe08a-42a1-4515-913e-90a4d3d308e7"><source>The <g id="979">next()</g> function returns a non-const reference to the item in the list. For simple operations, we don&apos;t even need <g id="982">setValue()</g>:</source><seg-source>The <g id="979">next()</g> function returns a non-const reference to the item in the list. For simple operations, we don&apos;t even need <g id="982">setValue()</g>:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="150"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="181"/></sdl:cxts><trans-unit id="a38a7560-007f-439b-bb4c-fe1674f09ffe"><source><g id="985">QMutableListIterator</g><g id="988">&lt;</g><g id="991">int</g><g id="994">&gt;</g> i(list); <g id="997">while</g> (i<g id="1000">.</g>hasNext()) i<g id="1003">.</g>next() <g id="1006">*</g><g id="1009">=</g> <g id="1012">2</g>;</source><seg-source><g id="985">QMutableListIterator</g><g id="988">&lt;</g><g id="991">int</g><g id="994">&gt;</g> i(list); <g id="997">while</g> (i<g id="1000">.</g>hasNext()) i<g id="1003">.</g>next() <g id="1006">*</g><g id="1009">=</g> <g id="1012">2</g>;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="151"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="182"/></sdl:cxts><trans-unit id="502b6196-b9e4-472a-8f93-934c45b1b557"><source>As mentioned above, <g id="1015">QLinkedList</g>&apos;s, <g id="1018">QVector</g>&apos;s, and <g id="1021">QSet</g>&apos;s iterator classes have exactly the same API as <g id="1024">QList</g>&apos;s. We will now turn to <g id="1027">QMapIterator</g>, which is somewhat different because it iterates on (key, value) pairs.</source><seg-source>As mentioned above, <g id="1015">QLinkedList</g>&apos;s, <g id="1018">QVector</g>&apos;s, and <g id="1021">QSet</g>&apos;s iterator classes have exactly the same API as <g id="1024">QList</g>&apos;s. We will now turn to <g id="1027">QMapIterator</g>, which is somewhat different because it iterates on (key, value) pairs.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="152"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="183"/></sdl:cxts><trans-unit id="328ac3c5-f69e-41b9-811d-a68af13b6d0e"><source>Like <g id="1030">QListIterator</g>, <g id="1033">QMapIterator</g> provides <g id="1036">toFront()</g>, <g id="1039">toBack()</g>, <g id="1042">hasNext()</g>, <g id="1045">next()</g>, <g id="1048">peekNext()</g>, <g id="1051">hasPrevious()</g>, <g id="1054">previous()</g>, and <g id="1057">peekPrevious()</g>. The key and value components are extracted by calling <g id="1060">key()</g> and <g id="1063">value()</g> on the object returned by next(), peekNext(), previous(), or peekPrevious().</source><seg-source>Like <g id="1030">QListIterator</g>, <g id="1033">QMapIterator</g> provides <g id="1036">toFront()</g>, <g id="1039">toBack()</g>, <g id="1042">hasNext()</g>, <g id="1045">next()</g>, <g id="1048">peekNext()</g>, <g id="1051">hasPrevious()</g>, <g id="1054">previous()</g>, and <g id="1057">peekPrevious()</g>. The key and value components are extracted by calling <g id="1060">key()</g> and <g id="1063">value()</g> on the object returned by next(), peekNext(), previous(), or peekPrevious().</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="153"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="184"/></sdl:cxts><trans-unit id="7b49e888-201d-4172-8c3b-098530059a42"><source>The following example removes all (capital, country) pairs where the capital&apos;s name ends with &quot;City&quot;:</source><seg-source>The following example removes all (capital, country) pairs where the capital&apos;s name ends with &quot;City&quot;:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="154"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="185"/></sdl:cxts><trans-unit id="560b86bf-7296-4b43-aa00-61b5b13c4df6"><source><g id="1066">QMap</g><g id="1069">&lt;</g><g id="1072">QString</g><g id="1075">,</g> <g id="1078">QString</g><g id="1081">&gt;</g> map; map<g id="1084">.</g>insert(<g id="1087">&quot;Paris&quot;</g><g id="1090">,</g> <g id="1093">&quot;France&quot;</g>); map<g id="1096">.</g>insert(<g id="1099">&quot;Guatemala City&quot;</g><g id="1102">,</g> <g id="1105">&quot;Guatemala&quot;</g>); map<g id="1108">.</g>insert(<g id="1111">&quot;Mexico City&quot;</g><g id="1114">,</g> <g id="1117">&quot;Mexico&quot;</g>); map<g id="1120">.</g>insert(<g id="1123">&quot;Moscow&quot;</g><g id="1126">,</g> <g id="1129">&quot;Russia&quot;</g>); <g id="1132">.</g><g id="1135">.</g><g id="1138">.</g> <g id="1141">QMutableMapIterator</g><g id="1144">&lt;</g><g id="1147">QString</g><g id="1150">,</g> <g id="1153">QString</g><g id="1156">&gt;</g> i(map); <g id="1159">while</g> (i<g id="1162">.</g>hasNext()) { <g id="1165">if</g> (i<g id="1168">.</g>next()<g id="1171">.</g>key()<g id="1174">.</g>endsWith(<g id="1177">&quot;City&quot;</g>)) i<g id="1180">.</g>remove(); }</source><seg-source><g id="1066">QMap</g><g id="1069">&lt;</g><g id="1072">QString</g><g id="1075">,</g> <g id="1078">QString</g><g id="1081">&gt;</g> map; map<g id="1084">.</g>insert(<g id="1087">&quot;Paris&quot;</g><g id="1090">,</g> <g id="1093">&quot;France&quot;</g>); map<g id="1096">.</g>insert(<g id="1099">&quot;Guatemala City&quot;</g><g id="1102">,</g> <g id="1105">&quot;Guatemala&quot;</g>); map<g id="1108">.</g>insert(<g id="1111">&quot;Mexico City&quot;</g><g id="1114">,</g> <g id="1117">&quot;Mexico&quot;</g>); map<g id="1120">.</g>insert(<g id="1123">&quot;Moscow&quot;</g><g id="1126">,</g> <g id="1129">&quot;Russia&quot;</g>); <g id="1132">.</g><g id="1135">.</g><g id="1138">.</g> <g id="1141">QMutableMapIterator</g><g id="1144">&lt;</g><g id="1147">QString</g><g id="1150">,</g> <g id="1153">QString</g><g id="1156">&gt;</g> i(map); <g id="1159">while</g> (i<g id="1162">.</g>hasNext()) { <g id="1165">if</g> (i<g id="1168">.</g>next()<g id="1171">.</g>key()<g id="1174">.</g>endsWith(<g id="1177">&quot;City&quot;</g>)) i<g id="1180">.</g>remove(); }</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="155"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="186"/></sdl:cxts><trans-unit id="feec1763-8b0b-482b-9ec5-d6ff2fd24040"><source><g id="1183">QMapIterator</g> also provides a <g id="1186">key()</g> and a <g id="1189">value()</g> function that operate directly on the iterator and that return the key and value of the last item that the iterator jumped above. For example, the following code copies the contents of a <g id="1192">QMap</g> into a <g id="1195">QHash</g>:</source><seg-source><g id="1183">QMapIterator</g> also provides a <g id="1186">key()</g> and a <g id="1189">value()</g> function that operate directly on the iterator and that return the key and value of the last item that the iterator jumped above. For example, the following code copies the contents of a <g id="1192">QMap</g> into a <g id="1195">QHash</g>:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="156"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="187"/></sdl:cxts><trans-unit id="81db6bb4-1614-44ee-8906-56fbf894dd3d"><source><g id="1198">QMap</g><g id="1201">&lt;</g><g id="1204">int</g><g id="1207">,</g> <g id="1210">QWidget</g> <g id="1213">*</g><g id="1216">&gt;</g> map; <g id="1219">QHash</g><g id="1222">&lt;</g><g id="1225">int</g><g id="1228">,</g> <g id="1231">QWidget</g> <g id="1234">*</g><g id="1237">&gt;</g> hash; <g id="1240">QMapIterator</g><g id="1243">&lt;</g><g id="1246">int</g><g id="1249">,</g> <g id="1252">QWidget</g> <g id="1255">*</g><g id="1258">&gt;</g> i(map); <g id="1261">while</g> (i<g id="1264">.</g>hasNext()) { i<g id="1267">.</g>next(); hash<g id="1270">.</g>insert(i<g id="1273">.</g>key()<g id="1276">,</g> i<g id="1279">.</g>value()); }</source><seg-source><g id="1198">QMap</g><g id="1201">&lt;</g><g id="1204">int</g><g id="1207">,</g> <g id="1210">QWidget</g> <g id="1213">*</g><g id="1216">&gt;</g> map; <g id="1219">QHash</g><g id="1222">&lt;</g><g id="1225">int</g><g id="1228">,</g> <g id="1231">QWidget</g> <g id="1234">*</g><g id="1237">&gt;</g> hash; <g id="1240">QMapIterator</g><g id="1243">&lt;</g><g id="1246">int</g><g id="1249">,</g> <g id="1252">QWidget</g> <g id="1255">*</g><g id="1258">&gt;</g> i(map); <g id="1261">while</g> (i<g id="1264">.</g>hasNext()) { i<g id="1267">.</g>next(); hash<g id="1270">.</g>insert(i<g id="1273">.</g>key()<g id="1276">,</g> i<g id="1279">.</g>value()); }</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="157"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="188"/></sdl:cxts><trans-unit id="05cfa668-488d-47f1-bd23-b132bad46a3c"><source>If we want to iterate through all the items with the same value, we can use <g id="1282">findNext()</g> or <g id="1285">findPrevious()</g>. Here&apos;s an example where we remove all the items with a particular value:</source><seg-source>If we want to iterate through all the items with the same value, we can use <g id="1282">findNext()</g> or <g id="1285">findPrevious()</g>. Here&apos;s an example where we remove all the items with a particular value:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="158"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="189"/></sdl:cxts><trans-unit id="27cdafe3-67bd-4c49-a9ea-99bb39b85080"><source><g id="1288">QMutableMapIterator</g><g id="1291">&lt;</g><g id="1294">int</g><g id="1297">,</g> <g id="1300">QWidget</g> <g id="1303">*</g><g id="1306">&gt;</g> i(map); <g id="1309">while</g> (i<g id="1312">.</g>findNext(widget)) i<g id="1315">.</g>remove();</source><seg-source><g id="1288">QMutableMapIterator</g><g id="1291">&lt;</g><g id="1294">int</g><g id="1297">,</g> <g id="1300">QWidget</g> <g id="1303">*</g><g id="1306">&gt;</g> i(map); <g id="1309">while</g> (i<g id="1312">.</g>findNext(widget)) i<g id="1315">.</g>remove();</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="159"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="55596a34-7c7c-40dc-a963-2a8242b7a78b"><source><g id="1318"/></source><seg-source><g id="1318"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="160"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="190"/></sdl:cxts><trans-unit id="18657c74-c45e-4d68-9a5c-2cb6446f9d6a"><source>STL-Style Iterators</source><seg-source>STL-Style Iterators</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="161"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="191"/></sdl:cxts><trans-unit id="08a5232d-2f32-4f55-a11e-9ce8ffd6677d"><source>STL-style iterators have been available since the release of Qt 2.0. They are compatible with Qt&apos;s and STL&apos;s <g id="1321">generic algorithms</g> and are optimized for speed.</source><seg-source>STL-style iterators have been available since the release of Qt 2.0. They are compatible with Qt&apos;s and STL&apos;s <g id="1321">generic algorithms</g> and are optimized for speed.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="162"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="192"/></sdl:cxts><trans-unit id="0e8f9b0c-e85e-493d-bc07-8b9c6131ca2d"><source>For each container class, there are two STL-style iterator types: one that provides read-only access and one that provides read-write access. Read-only iterators should be used wherever possible because they are faster than read-write iterators.</source><seg-source>For each container class, there are two STL-style iterator types: one that provides read-only access and one that provides read-write access. Read-only iterators should be used wherever possible because they are faster than read-write iterators.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="163"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="197"/></sdl:cxts><trans-unit id="1e217e35-9f17-45cb-b124-8709fadf4970"><source>Containers</source><seg-source>Containers</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="164"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="198"/></sdl:cxts><trans-unit id="6663b370-49e7-42c8-92f1-0e7334b9e798"><source>Read-only iterator</source><seg-source>Read-only iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="165"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="199"/></sdl:cxts><trans-unit id="be93a43b-ad08-45e0-9eb0-64ad558af894"><source>Read-write iterator</source><seg-source>Read-write iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="166"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="201"/></sdl:cxts><trans-unit id="0f5a696e-9f31-4fd1-8f80-69f6d6fb1514"><source><g id="1324">QList</g>&lt;T&gt;, <g id="1327">QQueue</g>&lt;T&gt;</source><seg-source><g id="1324">QList</g>&lt;T&gt;, <g id="1327">QQueue</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="167"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="202"/></sdl:cxts><trans-unit id="d78a99c0-1010-40de-9dca-0d83fa665b74"><source><g id="1330">QList</g>&lt;T&gt;::const_iterator</source><seg-source><g id="1330">QList</g>&lt;T&gt;::const_iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="168"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="203"/></sdl:cxts><trans-unit id="4e7fb815-5bc0-4632-bde0-36cb38d03fab"><source><g id="1333">QList</g>&lt;T&gt;::iterator</source><seg-source><g id="1333">QList</g>&lt;T&gt;::iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="169"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="205"/></sdl:cxts><trans-unit id="7391774a-e889-4644-90cb-94556a910c93"><source><g id="1336">QLinkedList</g>&lt;T&gt;</source><seg-source><g id="1336">QLinkedList</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="170"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="206"/></sdl:cxts><trans-unit id="f9a2ddbd-3490-4343-b0d0-f02cddb40d24"><source><g id="1339">QLinkedList</g>&lt;T&gt;::const_iterator</source><seg-source><g id="1339">QLinkedList</g>&lt;T&gt;::const_iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="171"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="207"/></sdl:cxts><trans-unit id="79f4f833-36c4-4104-9882-de080c090e27"><source><g id="1342">QLinkedList</g>&lt;T&gt;::iterator</source><seg-source><g id="1342">QLinkedList</g>&lt;T&gt;::iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="172"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="209"/></sdl:cxts><trans-unit id="b9b3dc38-b821-4b98-ab20-16fb42dd78df"><source><g id="1345">QVector</g>&lt;T&gt;, <g id="1348">QStack</g>&lt;T&gt;</source><seg-source><g id="1345">QVector</g>&lt;T&gt;, <g id="1348">QStack</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="173"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="210"/></sdl:cxts><trans-unit id="9cf7c9f2-5692-462d-b676-a78b5d5d8427"><source><g id="1351">QVector</g>&lt;T&gt;::const_iterator</source><seg-source><g id="1351">QVector</g>&lt;T&gt;::const_iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="174"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="211"/></sdl:cxts><trans-unit id="c18a61af-1f2f-4f47-9cb5-25b3d0fc88d3"><source><g id="1354">QVector</g>&lt;T&gt;::iterator</source><seg-source><g id="1354">QVector</g>&lt;T&gt;::iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="175"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="213"/></sdl:cxts><trans-unit id="1d7c5465-3027-41b1-ac0f-5807465379c1"><source><g id="1357">QSet</g>&lt;T&gt;</source><seg-source><g id="1357">QSet</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="176"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="214"/></sdl:cxts><trans-unit id="d46701d7-8437-4a98-b643-996d3ed7ab5f"><source><g id="1360">QSet</g>&lt;T&gt;::const_iterator</source><seg-source><g id="1360">QSet</g>&lt;T&gt;::const_iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="177"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="215"/></sdl:cxts><trans-unit id="316000f8-71bf-43b6-9830-5a7c989b3526"><source><g id="1363">QSet</g>&lt;T&gt;::iterator</source><seg-source><g id="1363">QSet</g>&lt;T&gt;::iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="178"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="217"/></sdl:cxts><trans-unit id="fb6aa15d-d6e0-4673-bc6b-8ec9ab013e96"><source><g id="1366">QMap</g>&lt;Key, T&gt;, <g id="1369">QMultiMap</g>&lt;Key, T&gt;</source><seg-source><g id="1366">QMap</g>&lt;Key, T&gt;, <g id="1369">QMultiMap</g>&lt;Key, T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="179"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="218"/></sdl:cxts><trans-unit id="fe5bc857-5b24-4306-a96f-c38e65c0478d"><source><g id="1372">QMap</g>&lt;Key, T&gt;::const_iterator</source><seg-source><g id="1372">QMap</g>&lt;Key, T&gt;::const_iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="180"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="219"/></sdl:cxts><trans-unit id="b7a21c95-4f90-444f-9e11-ac3e1b046827"><source><g id="1375">QMap</g>&lt;Key, T&gt;::iterator</source><seg-source><g id="1375">QMap</g>&lt;Key, T&gt;::iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="181"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="221"/></sdl:cxts><trans-unit id="f66e4f2e-143a-435b-9fa7-8c2dcb57a104"><source><g id="1378">QHash</g>&lt;Key, T&gt;, <g id="1381">QMultiHash</g>&lt;Key, T&gt;</source><seg-source><g id="1378">QHash</g>&lt;Key, T&gt;, <g id="1381">QMultiHash</g>&lt;Key, T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="182"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="222"/></sdl:cxts><trans-unit id="328aef4f-80a2-4730-9bf8-af2abd940a79"><source><g id="1384">QHash</g>&lt;Key, T&gt;::const_iterator</source><seg-source><g id="1384">QHash</g>&lt;Key, T&gt;::const_iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="183"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="223"/></sdl:cxts><trans-unit id="5e87ca9a-2543-49bc-a905-99e13bd30102"><source><g id="1387">QHash</g>&lt;Key, T&gt;::iterator</source><seg-source><g id="1387">QHash</g>&lt;Key, T&gt;::iterator</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="184"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="224"/></sdl:cxts><trans-unit id="lockTU_d17cf1f1-80a4-4802-8a98-cde1a144ddb3" translate="no" sdl:locktype="Structure"><source><g id="1390">++</g></source></trans-unit><trans-unit id="lockTU_394a63b7-56d7-4ca1-934f-aeb35c728f42" translate="no" sdl:locktype="Structure"><source><g id="1393">*</g></source></trans-unit><trans-unit id="lockTU_10f8a6ae-2b42-43f9-b303-32aabbc81c77" translate="no" sdl:locktype="Structure"><source><g id="1405">T *</g></source></trans-unit><trans-unit id="lockTU_c048c948-fb86-4a48-a852-561af69095e4" translate="no" sdl:locktype="Structure"><source><g id="1411">const T *</g></source></trans-unit><trans-unit id="lockTU_f4ae62ee-3d5f-4794-a6bf-d282a62701ce" translate="no" sdl:locktype="Structure"><source><g id="1390">++</g></source></trans-unit><trans-unit id="lockTU_6f2029d7-2f07-43b5-a695-acec64b701c9" translate="no" sdl:locktype="Structure"><source><g id="1393">*</g></source></trans-unit><trans-unit id="lockTU_a977057b-30cf-4339-bc12-4bccc2cf0d01" translate="no" sdl:locktype="Structure"><source><g id="1405">T *</g></source></trans-unit><trans-unit id="lockTU_927ab74e-8b0b-4165-85d4-fa3987e86dbc" translate="no" sdl:locktype="Structure"><source><g id="1411">const T *</g></source></trans-unit><trans-unit id="ca1bc955-ecfc-4fd7-960a-021e851d1da8"><source>The API of the STL iterators is modelled on pointers in an array. For example, the <x id="locked19" xid="lockTU_f4ae62ee-3d5f-4794-a6bf-d282a62701ce"/> operator advances the iterator to the next item, and the <x id="locked20" xid="lockTU_6f2029d7-2f07-43b5-a695-acec64b701c9"/> operator returns the item that the iterator points to. In fact, for <g id="1396">QVector</g> and <g id="1399">QStack</g>, which store their items at adjacent memory positions, the <g id="1402">iterator</g> type is just a typedef for <x id="locked21" xid="lockTU_a977057b-30cf-4339-bc12-4bccc2cf0d01"/>, and the <g id="1408">const_iterator</g> type is just a typedef for <x id="locked22" xid="lockTU_927ab74e-8b0b-4165-85d4-fa3987e86dbc"/>.</source><seg-source>The API of the STL iterators is modelled on pointers in an array. For example, the <x id="locked23" xid="lockTU_d17cf1f1-80a4-4802-8a98-cde1a144ddb3"/> operator advances the iterator to the next item, and the <x id="locked24" xid="lockTU_394a63b7-56d7-4ca1-934f-aeb35c728f42"/> operator returns the item that the iterator points to. In fact, for <g id="1396">QVector</g> and <g id="1399">QStack</g>, which store their items at adjacent memory positions, the <g id="1402">iterator</g> type is just a typedef for <x id="locked25" xid="lockTU_10f8a6ae-2b42-43f9-b303-32aabbc81c77"/>, and the <g id="1408">const_iterator</g> type is just a typedef for <x id="locked26" xid="lockTU_c048c948-fb86-4a48-a852-561af69095e4"/>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="185"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="225"/></sdl:cxts><trans-unit id="de9f74db-095e-4be3-8097-d9ea50d9e1ab"><source>In this discussion, we will concentrate on <g id="1414">QList</g> and <g id="1417">QMap</g>. The iterator types for <g id="1420">QLinkedList</g>, <g id="1423">QVector</g>, and <g id="1426">QSet</g> have exactly the same interface as <g id="1429">QList</g>&apos;s iterators; similarly, the iterator types for <g id="1432">QHash</g> have the same interface as <g id="1435">QMap</g>&apos;s iterators.</source><seg-source>In this discussion, we will concentrate on <g id="1414">QList</g> and <g id="1417">QMap</g>. The iterator types for <g id="1420">QLinkedList</g>, <g id="1423">QVector</g>, and <g id="1426">QSet</g> have exactly the same interface as <g id="1429">QList</g>&apos;s iterators; similarly, the iterator types for <g id="1432">QHash</g> have the same interface as <g id="1435">QMap</g>&apos;s iterators.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="186"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="226"/></sdl:cxts><trans-unit id="7dc822d5-88af-483a-94a9-a914b5f44c96"><source>Here&apos;s a typical loop for iterating through all the elements of a <g id="1438">QList</g>&lt;<g id="1441">QString</g>&gt; in order and converting them to lowercase:</source><seg-source>Here&apos;s a typical loop for iterating through all the elements of a <g id="1438">QList</g>&lt;<g id="1441">QString</g>&gt; in order and converting them to lowercase:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="187"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="227"/></sdl:cxts><trans-unit id="cd031ad3-3938-4a8e-8cc6-35053a317987"><source><g id="1444">QList</g><g id="1447">&lt;</g><g id="1450">QString</g><g id="1453">&gt;</g> list; list <g id="1456">&lt;</g><g id="1459">&lt;</g> <g id="1462">&quot;A&quot;</g> <g id="1465">&lt;</g><g id="1468">&lt;</g> <g id="1471">&quot;B&quot;</g> <g id="1474">&lt;</g><g id="1477">&lt;</g> <g id="1480">&quot;C&quot;</g> <g id="1483">&lt;</g><g id="1486">&lt;</g> <g id="1489">&quot;D&quot;</g>; <g id="1492">QList</g><g id="1495">&lt;</g><g id="1498">QString</g><g id="1501">&gt;</g><g id="1504">::</g>iterator i; <g id="1507">for</g> (i <g id="1510">=</g> list<g id="1513">.</g>begin(); i <g id="1516">!</g><g id="1519">=</g> list<g id="1522">.</g>end(); <g id="1525">+</g><g id="1528">+</g>i) <g id="1531">*</g>i <g id="1534">=</g> (<g id="1537">*</g>i)<g id="1540">.</g>toLower();</source><seg-source><g id="1444">QList</g><g id="1447">&lt;</g><g id="1450">QString</g><g id="1453">&gt;</g> list; list <g id="1456">&lt;</g><g id="1459">&lt;</g> <g id="1462">&quot;A&quot;</g> <g id="1465">&lt;</g><g id="1468">&lt;</g> <g id="1471">&quot;B&quot;</g> <g id="1474">&lt;</g><g id="1477">&lt;</g> <g id="1480">&quot;C&quot;</g> <g id="1483">&lt;</g><g id="1486">&lt;</g> <g id="1489">&quot;D&quot;</g>; <g id="1492">QList</g><g id="1495">&lt;</g><g id="1498">QString</g><g id="1501">&gt;</g><g id="1504">::</g>iterator i; <g id="1507">for</g> (i <g id="1510">=</g> list<g id="1513">.</g>begin(); i <g id="1516">!</g><g id="1519">=</g> list<g id="1522">.</g>end(); <g id="1525">+</g><g id="1528">+</g>i) <g id="1531">*</g>i <g id="1534">=</g> (<g id="1537">*</g>i)<g id="1540">.</g>toLower();</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="188"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="228"/></sdl:cxts><trans-unit id="74b85c8e-541b-40a6-8e91-5eab8cab9aa0"><source>Unlike <g id="1543">Java-style iterators</g>, STL-style iterators point directly at items. The <g id="1546">begin()</g> function of a container returns an iterator that points to the first item in the container. The <g id="1549">end()</g> function of a container returns an iterator to the imaginary item one position past the last item in the container. <g id="1552">end()</g> marks an invalid position; it must never be dereferenced. It is typically used in a loop&apos;s break condition. If the list is empty, <g id="1555">begin()</g> equals <g id="1558">end()</g>, so we never execute the loop.</source><seg-source>Unlike <g id="1543">Java-style iterators</g>, STL-style iterators point directly at items. The <g id="1546">begin()</g> function of a container returns an iterator that points to the first item in the container. The <g id="1549">end()</g> function of a container returns an iterator to the imaginary item one position past the last item in the container. <g id="1552">end()</g> marks an invalid position; it must never be dereferenced. It is typically used in a loop&apos;s break condition. If the list is empty, <g id="1555">begin()</g> equals <g id="1558">end()</g>, so we never execute the loop.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="189"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="229"/></sdl:cxts><trans-unit id="d1e811dd-2377-48fb-be0e-2741f0b69f1a"><source>The diagram below shows the valid iterator positions as red arrows for a vector containing four items:</source><seg-source>The diagram below shows the valid iterator positions as red arrows for a vector containing four items:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="190"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="230"/></sdl:cxts><trans-unit id="62e98950-4048-4cc2-a787-94fcc33323f1"><source><x id="1559" xid="fec2201b-42c8-40db-9b64-cae8137b4b14"/></source><seg-source><x id="1559" xid="fec2201b-42c8-40db-9b64-cae8137b4b14"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="114"/></sdl:cxts><trans-unit id="fec2201b-42c8-40db-9b64-cae8137b4b14"><source/><seg-source/><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="191"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="231"/></sdl:cxts><trans-unit id="4634e67c-eac2-4544-b7d3-010f42f69826"><source>Iterating backward with an STL-style iterator is done with reverse iterators:</source><seg-source>Iterating backward with an STL-style iterator is done with reverse iterators:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="192"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="232"/></sdl:cxts><trans-unit id="c9c7f195-99fc-4ed8-94f6-2602e3da1b4c"><source><g id="1562">QList</g><g id="1565">&lt;</g><g id="1568">QString</g><g id="1571">&gt;</g> list; list <g id="1574">&lt;</g><g id="1577">&lt;</g> <g id="1580">&quot;A&quot;</g> <g id="1583">&lt;</g><g id="1586">&lt;</g> <g id="1589">&quot;B&quot;</g> <g id="1592">&lt;</g><g id="1595">&lt;</g> <g id="1598">&quot;C&quot;</g> <g id="1601">&lt;</g><g id="1604">&lt;</g> <g id="1607">&quot;D&quot;</g>; <g id="1610">QList</g><g id="1613">&lt;</g><g id="1616">QString</g><g id="1619">&gt;</g><g id="1622">::</g>reverse_iterator i; <g id="1625">for</g> (i <g id="1628">=</g> list<g id="1631">.</g>rbegin(); i <g id="1634">!</g><g id="1637">=</g> list<g id="1640">.</g>rend(); <g id="1643">+</g><g id="1646">+</g>i) <g id="1649">*</g>i <g id="1652">=</g> i<g id="1655">-</g><g id="1658">&gt;</g>toLower(); }</source><seg-source><g id="1562">QList</g><g id="1565">&lt;</g><g id="1568">QString</g><g id="1571">&gt;</g> list; list <g id="1574">&lt;</g><g id="1577">&lt;</g> <g id="1580">&quot;A&quot;</g> <g id="1583">&lt;</g><g id="1586">&lt;</g> <g id="1589">&quot;B&quot;</g> <g id="1592">&lt;</g><g id="1595">&lt;</g> <g id="1598">&quot;C&quot;</g> <g id="1601">&lt;</g><g id="1604">&lt;</g> <g id="1607">&quot;D&quot;</g>; <g id="1610">QList</g><g id="1613">&lt;</g><g id="1616">QString</g><g id="1619">&gt;</g><g id="1622">::</g>reverse_iterator i; <g id="1625">for</g> (i <g id="1628">=</g> list<g id="1631">.</g>rbegin(); i <g id="1634">!</g><g id="1637">=</g> list<g id="1640">.</g>rend(); <g id="1643">+</g><g id="1646">+</g>i) <g id="1649">*</g>i <g id="1652">=</g> i<g id="1655">-</g><g id="1658">&gt;</g>toLower(); }</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="193"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="233"/></sdl:cxts><trans-unit id="lockTU_dc8d3065-a6fd-450d-bed8-e7f602b39b3a" translate="no" sdl:locktype="Structure"><source><g id="1661">*</g></source></trans-unit><trans-unit id="lockTU_4a6b8709-6ad0-451b-b904-c132389c79b5" translate="no" sdl:locktype="Structure"><source><g id="1670">i-&gt;toLower()</g></source></trans-unit><trans-unit id="lockTU_4b7bdd03-776d-4ba1-b045-b644d32df823" translate="no" sdl:locktype="Structure"><source><g id="1661">*</g></source></trans-unit><trans-unit id="lockTU_ce04d278-374b-4bc7-a864-38e639cc7acc" translate="no" sdl:locktype="Structure"><source><g id="1670">i-&gt;toLower()</g></source></trans-unit><trans-unit id="907a313e-551e-41a7-b0cf-611074d2c023"><source>In the code snippets so far, we used the unary <x id="locked27" xid="lockTU_4b7bdd03-776d-4ba1-b045-b644d32df823"/> operator to retrieve the item (of type <g id="1664">QString</g>) stored at a certain iterator position, and we then called <g id="1667">QString::toLower</g>() on it. Most C++ compilers also allow us to write <x id="locked28" xid="lockTU_ce04d278-374b-4bc7-a864-38e639cc7acc"/>, but some don&apos;t.</source><seg-source>In the code snippets so far, we used the unary <x id="locked29" xid="lockTU_dc8d3065-a6fd-450d-bed8-e7f602b39b3a"/> operator to retrieve the item (of type <g id="1664">QString</g>) stored at a certain iterator position, and we then called <g id="1667">QString::toLower</g>() on it. Most C++ compilers also allow us to write <x id="locked30" xid="lockTU_4a6b8709-6ad0-451b-b904-c132389c79b5"/>, but some don&apos;t.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="194"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="234"/></sdl:cxts><trans-unit id="542857b4-916f-42b6-be8f-3e5c9631c454"><source>For read-only access, you can use const_iterator, <g id="1673">constBegin()</g>, and <g id="1676">constEnd()</g>. For example:</source><seg-source>For read-only access, you can use const_iterator, <g id="1673">constBegin()</g>, and <g id="1676">constEnd()</g>. For example:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="195"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="235"/></sdl:cxts><trans-unit id="0cc74b4a-a9ec-4340-856f-4be5e67e5327"><source><g id="1679">QList</g><g id="1682">&lt;</g><g id="1685">QString</g><g id="1688">&gt;</g><g id="1691">::</g>const_iterator i; <g id="1694">for</g> (i <g id="1697">=</g> list<g id="1700">.</g>constBegin(); i <g id="1703">!</g><g id="1706">=</g> list<g id="1709">.</g>constEnd(); <g id="1712">+</g><g id="1715">+</g>i) <g id="1718">qDebug</g>() <g id="1721">&lt;</g><g id="1724">&lt;</g> <g id="1727">*</g>i;</source><seg-source><g id="1679">QList</g><g id="1682">&lt;</g><g id="1685">QString</g><g id="1688">&gt;</g><g id="1691">::</g>const_iterator i; <g id="1694">for</g> (i <g id="1697">=</g> list<g id="1700">.</g>constBegin(); i <g id="1703">!</g><g id="1706">=</g> list<g id="1709">.</g>constEnd(); <g id="1712">+</g><g id="1715">+</g>i) <g id="1718">qDebug</g>() <g id="1721">&lt;</g><g id="1724">&lt;</g> <g id="1727">*</g>i;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="196"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="236"/></sdl:cxts><trans-unit id="b2d41bb7-cfaa-46b5-90bc-4ec50f6a2f4f"><source>The following table summarizes the STL-style iterators&apos; API:</source><seg-source>The following table summarizes the STL-style iterators&apos; API:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="197"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="241"/></sdl:cxts><trans-unit id="66792323-335d-4c4b-be2a-de2cfa1e07ba"><source>Expression</source><seg-source>Expression</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="198"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="242"/></sdl:cxts><trans-unit id="5b865254-05d2-4ed9-9b9d-9dbf77960aab"><source>Behavior</source><seg-source>Behavior</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="199"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="244"/></sdl:cxts><trans-unit id="lockTU_be4796ef-fe32-46b2-9b46-391498231f98" translate="no" sdl:locktype="Structure"><source><g id="1730">*i</g></source></trans-unit><trans-unit id="lockTU_ab2c1775-55a8-48ba-8486-b240f2955277" translate="no" sdl:locktype="Structure"><source><g id="1730">*i</g></source></trans-unit><trans-unit id="338bb147-2229-4351-8791-66abbd085fb1"><source><x id="locked31" xid="lockTU_ab2c1775-55a8-48ba-8486-b240f2955277"/></source><seg-source><x id="locked32" xid="lockTU_be4796ef-fe32-46b2-9b46-391498231f98"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="200"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="245"/></sdl:cxts><trans-unit id="070c5a96-4f3d-4787-83d3-b31891807766"><source>Returns the current item</source><seg-source>Returns the current item</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="201"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="247"/></sdl:cxts><trans-unit id="lockTU_16f35dda-227e-4ee0-a556-d60f953b06e0" translate="no" sdl:locktype="Structure"><source><g id="1733">++i</g></source></trans-unit><trans-unit id="lockTU_384c3f0e-b381-4424-b9bb-8cf6a5e19c55" translate="no" sdl:locktype="Structure"><source><g id="1733">++i</g></source></trans-unit><trans-unit id="939ad28f-e4be-444d-8671-871b270726a4"><source><x id="locked33" xid="lockTU_384c3f0e-b381-4424-b9bb-8cf6a5e19c55"/></source><seg-source><x id="locked34" xid="lockTU_16f35dda-227e-4ee0-a556-d60f953b06e0"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="202"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="248"/></sdl:cxts><trans-unit id="82b3dbda-9dea-428c-b62f-cef878670d1c"><source>Advances the iterator to the next item</source><seg-source>Advances the iterator to the next item</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="203"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="250"/></sdl:cxts><trans-unit id="lockTU_31e5b7f3-664b-4d81-b37b-5c59a3985dfd" translate="no" sdl:locktype="Structure"><source><g id="1736">i += n</g></source></trans-unit><trans-unit id="lockTU_62f73618-0d3a-445d-9ef3-7d0bf1b7febe" translate="no" sdl:locktype="Structure"><source><g id="1736">i += n</g></source></trans-unit><trans-unit id="7b443c21-1675-417b-8e8e-938cdd8421de"><source><x id="locked35" xid="lockTU_62f73618-0d3a-445d-9ef3-7d0bf1b7febe"/></source><seg-source><x id="locked36" xid="lockTU_31e5b7f3-664b-4d81-b37b-5c59a3985dfd"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="204"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="251"/></sdl:cxts><trans-unit id="lockTU_aee97abc-06f4-4ea2-9f28-03b5de92d17c" translate="no" sdl:locktype="Structure"><source><g id="1739">n</g></source></trans-unit><trans-unit id="lockTU_484fbca9-1741-44a8-a389-064aee88db27" translate="no" sdl:locktype="Structure"><source><g id="1739">n</g></source></trans-unit><trans-unit id="aece2b92-c515-49c9-ab3d-87c46126be70"><source>Advances the iterator by <x id="locked37" xid="lockTU_484fbca9-1741-44a8-a389-064aee88db27"/> items</source><seg-source>Advances the iterator by <x id="locked38" xid="lockTU_aee97abc-06f4-4ea2-9f28-03b5de92d17c"/> items</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="205"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="253"/></sdl:cxts><trans-unit id="lockTU_18160a67-e807-48b4-8c24-f21fc8273dc0" translate="no" sdl:locktype="Structure"><source><g id="1742">--i</g></source></trans-unit><trans-unit id="lockTU_3b570bab-028c-4f50-8b7a-59d3510787b2" translate="no" sdl:locktype="Structure"><source><g id="1742">--i</g></source></trans-unit><trans-unit id="e2236461-8ee7-4271-bce4-dced93d2a51d"><source><x id="locked39" xid="lockTU_3b570bab-028c-4f50-8b7a-59d3510787b2"/></source><seg-source><x id="locked40" xid="lockTU_18160a67-e807-48b4-8c24-f21fc8273dc0"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="206"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="254"/></sdl:cxts><trans-unit id="607b8f63-27e1-4995-9dd3-7b3a9eecfef9"><source>Moves the iterator back by one item</source><seg-source>Moves the iterator back by one item</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="207"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="256"/></sdl:cxts><trans-unit id="lockTU_1857d7e4-a87b-41d7-b203-0470a48d0450" translate="no" sdl:locktype="Structure"><source><g id="1745">i -= n</g></source></trans-unit><trans-unit id="lockTU_2bd22696-14db-4369-8d76-5175bd453296" translate="no" sdl:locktype="Structure"><source><g id="1745">i -= n</g></source></trans-unit><trans-unit id="b0cc59d7-cd6f-4d40-81b9-de4613ae4b87"><source><x id="locked41" xid="lockTU_2bd22696-14db-4369-8d76-5175bd453296"/></source><seg-source><x id="locked42" xid="lockTU_1857d7e4-a87b-41d7-b203-0470a48d0450"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="208"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="257"/></sdl:cxts><trans-unit id="lockTU_24e41133-4431-411e-bfd8-55ccb1270764" translate="no" sdl:locktype="Structure"><source><g id="1748">n</g></source></trans-unit><trans-unit id="lockTU_29716a8a-6d9a-46e7-83fc-6b2bce9766ee" translate="no" sdl:locktype="Structure"><source><g id="1748">n</g></source></trans-unit><trans-unit id="4e990e2e-b36a-4812-85bb-179d9965d49e"><source>Moves the iterator back by <x id="locked43" xid="lockTU_29716a8a-6d9a-46e7-83fc-6b2bce9766ee"/> items</source><seg-source>Moves the iterator back by <x id="locked44" xid="lockTU_24e41133-4431-411e-bfd8-55ccb1270764"/> items</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="209"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="259"/></sdl:cxts><trans-unit id="lockTU_4789b58a-4679-421b-a2cd-2dd9a476cc0a" translate="no" sdl:locktype="Structure"><source><g id="1751">i - j</g></source></trans-unit><trans-unit id="lockTU_8ae24765-1e78-4520-ab72-25495303a3e5" translate="no" sdl:locktype="Structure"><source><g id="1751">i - j</g></source></trans-unit><trans-unit id="2e9804f2-2d4c-4ac5-ab42-63f7d2e683a7"><source><x id="locked45" xid="lockTU_8ae24765-1e78-4520-ab72-25495303a3e5"/></source><seg-source><x id="locked46" xid="lockTU_4789b58a-4679-421b-a2cd-2dd9a476cc0a"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="210"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="260"/></sdl:cxts><trans-unit id="lockTU_5809aade-f107-4851-bae8-ee8927f58057" translate="no" sdl:locktype="Structure"><source><g id="1754">i</g></source></trans-unit><trans-unit id="lockTU_e15d2e3b-83da-471f-b051-ce49233aaa4d" translate="no" sdl:locktype="Structure"><source><g id="1757">j</g></source></trans-unit><trans-unit id="lockTU_7fd855b8-1b7b-48cd-9cd4-1793c66c2918" translate="no" sdl:locktype="Structure"><source><g id="1754">i</g></source></trans-unit><trans-unit id="lockTU_63a9d9ba-dec2-4753-966c-d387d6bfa1fc" translate="no" sdl:locktype="Structure"><source><g id="1757">j</g></source></trans-unit><trans-unit id="f65e7e86-5bf4-4c3d-a1e2-1d8ae0debe80"><source>Returns the number of items between iterators <x id="locked47" xid="lockTU_7fd855b8-1b7b-48cd-9cd4-1793c66c2918"/> and <x id="locked48" xid="lockTU_63a9d9ba-dec2-4753-966c-d387d6bfa1fc"/></source><seg-source>Returns the number of items between iterators <x id="locked49" xid="lockTU_5809aade-f107-4851-bae8-ee8927f58057"/> and <x id="locked50" xid="lockTU_e15d2e3b-83da-471f-b051-ce49233aaa4d"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="211"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="261"/></sdl:cxts><trans-unit id="lockTU_5d5a4a25-54e6-4024-88dd-58fbaadcc12c" translate="no" sdl:locktype="Structure"><source><g id="1760">++</g></source></trans-unit><trans-unit id="lockTU_5e073b64-a929-4e61-aee7-0b1bd1e53cf2" translate="no" sdl:locktype="Structure"><source><g id="1763">--</g></source></trans-unit><trans-unit id="lockTU_0e78bf4d-af86-4be9-bb60-7a20bccf6d5d" translate="no" sdl:locktype="Structure"><source><g id="1766">++i</g></source></trans-unit><trans-unit id="lockTU_d73ba46a-6883-4c53-8054-416064e8f2f5" translate="no" sdl:locktype="Structure"><source><g id="1769">--i</g></source></trans-unit><trans-unit id="lockTU_064d5612-abf1-4265-8c6b-e06d8907bb18" translate="no" sdl:locktype="Structure"><source><g id="1772">i++</g></source></trans-unit><trans-unit id="lockTU_c7d670d1-0b27-423f-89c7-04490540e5bb" translate="no" sdl:locktype="Structure"><source><g id="1775">i--</g></source></trans-unit><trans-unit id="lockTU_b553d432-59fd-47c5-b15a-131977ece079" translate="no" sdl:locktype="Structure"><source><g id="1778">++i</g></source></trans-unit><trans-unit id="lockTU_b489b0a1-c3e8-4a09-8ed1-32a7d668e0de" translate="no" sdl:locktype="Structure"><source><g id="1781">--i</g></source></trans-unit><trans-unit id="lockTU_e40ebfbe-e56e-4d3b-bbcb-c6c7b2c23e40" translate="no" sdl:locktype="Structure"><source><g id="1760">++</g></source></trans-unit><trans-unit id="lockTU_dcc170fa-fab0-4676-98b7-e16cde2322f3" translate="no" sdl:locktype="Structure"><source><g id="1763">--</g></source></trans-unit><trans-unit id="lockTU_752b83ab-64f0-4003-a731-dfa11deec9ea" translate="no" sdl:locktype="Structure"><source><g id="1766">++i</g></source></trans-unit><trans-unit id="lockTU_48e7de55-6f3c-45f0-a26d-0a45f89fc859" translate="no" sdl:locktype="Structure"><source><g id="1769">--i</g></source></trans-unit><trans-unit id="lockTU_573b695a-60df-4ee0-804c-ecce1f52f539" translate="no" sdl:locktype="Structure"><source><g id="1772">i++</g></source></trans-unit><trans-unit id="lockTU_e40089fc-0db0-46b9-81cb-0e0998cf7b0f" translate="no" sdl:locktype="Structure"><source><g id="1775">i--</g></source></trans-unit><trans-unit id="lockTU_72a0b485-37b4-430f-b84a-8cf32d977dc5" translate="no" sdl:locktype="Structure"><source><g id="1778">++i</g></source></trans-unit><trans-unit id="lockTU_65094358-7d1c-4c65-8aa2-8be49f0a73fa" translate="no" sdl:locktype="Structure"><source><g id="1781">--i</g></source></trans-unit><trans-unit id="d8c47f34-a5e1-4f67-802d-2df6d2a7c8d8"><source>The <x id="locked51" xid="lockTU_e40ebfbe-e56e-4d3b-bbcb-c6c7b2c23e40"/> and <x id="locked52" xid="lockTU_dcc170fa-fab0-4676-98b7-e16cde2322f3"/> operators are available both as prefix (<x id="locked53" xid="lockTU_752b83ab-64f0-4003-a731-dfa11deec9ea"/>, <x id="locked54" xid="lockTU_48e7de55-6f3c-45f0-a26d-0a45f89fc859"/>) and postfix (<x id="locked55" xid="lockTU_573b695a-60df-4ee0-804c-ecce1f52f539"/>, <x id="locked56" xid="lockTU_e40089fc-0db0-46b9-81cb-0e0998cf7b0f"/>) operators. The prefix versions modify the iterators and return a reference to the modified iterator; the postfix versions take a copy of the iterator before they modify it, and return that copy. In expressions where the return value is ignored, we recommend that you use the prefix operators (<x id="locked57" xid="lockTU_72a0b485-37b4-430f-b84a-8cf32d977dc5"/>, <x id="locked58" xid="lockTU_65094358-7d1c-4c65-8aa2-8be49f0a73fa"/>), as these are slightly faster.</source><seg-source>The <x id="locked59" xid="lockTU_5d5a4a25-54e6-4024-88dd-58fbaadcc12c"/> and <x id="locked60" xid="lockTU_5e073b64-a929-4e61-aee7-0b1bd1e53cf2"/> operators are available both as prefix (<x id="locked61" xid="lockTU_0e78bf4d-af86-4be9-bb60-7a20bccf6d5d"/>, <x id="locked62" xid="lockTU_d73ba46a-6883-4c53-8054-416064e8f2f5"/>) and postfix (<x id="locked63" xid="lockTU_064d5612-abf1-4265-8c6b-e06d8907bb18"/>, <x id="locked64" xid="lockTU_c7d670d1-0b27-423f-89c7-04490540e5bb"/>) operators. The prefix versions modify the iterators and return a reference to the modified iterator; the postfix versions take a copy of the iterator before they modify it, and return that copy. In expressions where the return value is ignored, we recommend that you use the prefix operators (<x id="locked65" xid="lockTU_b553d432-59fd-47c5-b15a-131977ece079"/>, <x id="locked66" xid="lockTU_b489b0a1-c3e8-4a09-8ed1-32a7d668e0de"/>), as these are slightly faster.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="212"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="262"/></sdl:cxts><trans-unit id="lockTU_bb7b0cc7-93f6-4dc2-9ba6-12dd86f0087f" translate="no" sdl:locktype="Structure"><source><g id="1784">*</g></source></trans-unit><trans-unit id="lockTU_21ed9122-8d47-4560-a3c2-f8e290f36726" translate="no" sdl:locktype="Structure"><source><g id="1784">*</g></source></trans-unit><trans-unit id="16207054-31f8-492a-ac53-7ddfcad4376c"><source>For non-const iterator types, the return value of the unary <x id="locked67" xid="lockTU_21ed9122-8d47-4560-a3c2-f8e290f36726"/> operator can be used on the left side of the assignment operator.</source><seg-source>For non-const iterator types, the return value of the unary <x id="locked68" xid="lockTU_bb7b0cc7-93f6-4dc2-9ba6-12dd86f0087f"/> operator can be used on the left side of the assignment operator.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="213"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="263"/></sdl:cxts><trans-unit id="lockTU_c3c6e782-e665-4708-a953-c38c0efb8855" translate="no" sdl:locktype="Structure"><source><g id="1793">*</g></source></trans-unit><trans-unit id="lockTU_3ebf0766-c724-40ee-a24a-97cb3446ffe2" translate="no" sdl:locktype="Structure"><source><g id="1793">*</g></source></trans-unit><trans-unit id="3659b77d-2426-4cd6-9e76-0c9380f00534"><source>For <g id="1787">QMap</g> and <g id="1790">QHash</g>, the <x id="locked69" xid="lockTU_3ebf0766-c724-40ee-a24a-97cb3446ffe2"/> operator returns the value component of an item. If you want to retrieve the key, call key() on the iterator. For symmetry, the iterator types also provide a value() function to retrieve the value. For example, here&apos;s how we would print all items in a <g id="1796">QMap</g> to the console:</source><seg-source>For <g id="1787">QMap</g> and <g id="1790">QHash</g>, the <x id="locked70" xid="lockTU_c3c6e782-e665-4708-a953-c38c0efb8855"/> operator returns the value component of an item. If you want to retrieve the key, call key() on the iterator. For symmetry, the iterator types also provide a value() function to retrieve the value. For example, here&apos;s how we would print all items in a <g id="1796">QMap</g> to the console:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="214"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="264"/></sdl:cxts><trans-unit id="95ec0290-eccd-42d1-8125-95196d8d5637"><source><g id="1799">QMap</g><g id="1802">&lt;</g><g id="1805">int</g><g id="1808">,</g> <g id="1811">int</g><g id="1814">&gt;</g> map; <g id="1817">.</g><g id="1820">.</g><g id="1823">.</g> <g id="1826">QMap</g><g id="1829">&lt;</g><g id="1832">int</g><g id="1835">,</g> <g id="1838">int</g><g id="1841">&gt;</g><g id="1844">::</g>const_iterator i; <g id="1847">for</g> (i <g id="1850">=</g> map<g id="1853">.</g>constBegin(); i <g id="1856">!</g><g id="1859">=</g> map<g id="1862">.</g>constEnd(); <g id="1865">+</g><g id="1868">+</g>i) <g id="1871">qDebug</g>() <g id="1874">&lt;</g><g id="1877">&lt;</g> i<g id="1880">.</g>key() <g id="1883">&lt;</g><g id="1886">&lt;</g> <g id="1889">&apos;:&apos;</g> <g id="1892">&lt;</g><g id="1895">&lt;</g> i<g id="1898">.</g>value();</source><seg-source><g id="1799">QMap</g><g id="1802">&lt;</g><g id="1805">int</g><g id="1808">,</g> <g id="1811">int</g><g id="1814">&gt;</g> map; <g id="1817">.</g><g id="1820">.</g><g id="1823">.</g> <g id="1826">QMap</g><g id="1829">&lt;</g><g id="1832">int</g><g id="1835">,</g> <g id="1838">int</g><g id="1841">&gt;</g><g id="1844">::</g>const_iterator i; <g id="1847">for</g> (i <g id="1850">=</g> map<g id="1853">.</g>constBegin(); i <g id="1856">!</g><g id="1859">=</g> map<g id="1862">.</g>constEnd(); <g id="1865">+</g><g id="1868">+</g>i) <g id="1871">qDebug</g>() <g id="1874">&lt;</g><g id="1877">&lt;</g> i<g id="1880">.</g>key() <g id="1883">&lt;</g><g id="1886">&lt;</g> <g id="1889">&apos;:&apos;</g> <g id="1892">&lt;</g><g id="1895">&lt;</g> i<g id="1898">.</g>value();</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="215"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="265"/></sdl:cxts><trans-unit id="f3fe90d1-72ba-4f93-88ec-19789f338178"><source>Thanks to <g id="1901">implicit sharing</g>, it is very inexpensive for a function to return a container per value. The Qt API contains dozens of functions that return a <g id="1904">QList</g> or <g id="1907">QStringList</g> per value (e.g., <g id="1910">QSplitter::sizes</g>()). If you want to iterate over these using an STL iterator, you should always take a copy of the container and iterate over the copy. For example:</source><seg-source>Thanks to <g id="1901">implicit sharing</g>, it is very inexpensive for a function to return a container per value. The Qt API contains dozens of functions that return a <g id="1904">QList</g> or <g id="1907">QStringList</g> per value (e.g., <g id="1910">QSplitter::sizes</g>()). If you want to iterate over these using an STL iterator, you should always take a copy of the container and iterate over the copy. For example:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="216"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="266"/></sdl:cxts><trans-unit id="b0ad75e2-a192-48a3-a6e7-5ced8efb3cec"><source><g id="1913">// RIGHT</g> <g id="1916">const</g> <g id="1919">QList</g><g id="1922">&lt;</g><g id="1925">int</g><g id="1928">&gt;</g> sizes <g id="1931">=</g> splitter<g id="1934">-</g><g id="1937">&gt;</g>sizes(); <g id="1940">QList</g><g id="1943">&lt;</g><g id="1946">int</g><g id="1949">&gt;</g><g id="1952">::</g>const_iterator i; <g id="1955">for</g> (i <g id="1958">=</g> sizes<g id="1961">.</g>begin(); i <g id="1964">!</g><g id="1967">=</g> sizes<g id="1970">.</g>end(); <g id="1973">+</g><g id="1976">+</g>i) <g id="1979">.</g><g id="1982">.</g><g id="1985">.</g> <g id="1988">// WRONG</g> <g id="1991">QList</g><g id="1994">&lt;</g><g id="1997">int</g><g id="2000">&gt;</g><g id="2003">::</g>const_iterator i; <g id="2006">for</g> (i <g id="2009">=</g> splitter<g id="2012">-</g><g id="2015">&gt;</g>sizes()<g id="2018">.</g>begin(); i <g id="2021">!</g><g id="2024">=</g> splitter<g id="2027">-</g><g id="2030">&gt;</g>sizes()<g id="2033">.</g>end(); <g id="2036">+</g><g id="2039">+</g>i) <g id="2042">.</g><g id="2045">.</g><g id="2048">.</g></source><seg-source><g id="1913">// RIGHT</g> <g id="1916">const</g> <g id="1919">QList</g><g id="1922">&lt;</g><g id="1925">int</g><g id="1928">&gt;</g> sizes <g id="1931">=</g> splitter<g id="1934">-</g><g id="1937">&gt;</g>sizes(); <g id="1940">QList</g><g id="1943">&lt;</g><g id="1946">int</g><g id="1949">&gt;</g><g id="1952">::</g>const_iterator i; <g id="1955">for</g> (i <g id="1958">=</g> sizes<g id="1961">.</g>begin(); i <g id="1964">!</g><g id="1967">=</g> sizes<g id="1970">.</g>end(); <g id="1973">+</g><g id="1976">+</g>i) <g id="1979">.</g><g id="1982">.</g><g id="1985">.</g> <g id="1988">// WRONG</g> <g id="1991">QList</g><g id="1994">&lt;</g><g id="1997">int</g><g id="2000">&gt;</g><g id="2003">::</g>const_iterator i; <g id="2006">for</g> (i <g id="2009">=</g> splitter<g id="2012">-</g><g id="2015">&gt;</g>sizes()<g id="2018">.</g>begin(); i <g id="2021">!</g><g id="2024">=</g> splitter<g id="2027">-</g><g id="2030">&gt;</g>sizes()<g id="2033">.</g>end(); <g id="2036">+</g><g id="2039">+</g>i) <g id="2042">.</g><g id="2045">.</g><g id="2048">.</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="217"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="267"/></sdl:cxts><trans-unit id="a428b47e-c1f4-40cd-a122-1e0018ced0f5"><source>This problem doesn&apos;t occur with functions that return a const or non-const reference to a container.</source><seg-source>This problem doesn&apos;t occur with functions that return a const or non-const reference to a container.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="218"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="747c7f5c-f947-4c34-b89e-9e26ddb3c0fd"><source><g id="2051"/></source><seg-source><g id="2051"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="219"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="268"/></sdl:cxts><trans-unit id="69143de5-a67b-475f-8c35-cc23e803c98b"><source>Implicit sharing iterator problem</source><seg-source>Implicit sharing iterator problem</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="220"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="269"/></sdl:cxts><trans-unit id="696c8303-bc23-41d3-8ab9-191af71cae8d"><source><g id="2054">Implicit sharing</g> has another consequence on STL-style iterators: you should avoid copying a container while iterators are active on that container. The iterators point to an internal structure, and if you copy a container you should be very careful with your iterators. E.g:</source><seg-source><g id="2054">Implicit sharing</g> has another consequence on STL-style iterators: you should avoid copying a container while iterators are active on that container. The iterators point to an internal structure, and if you copy a container you should be very careful with your iterators. E.g:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="221"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="270"/></sdl:cxts><trans-unit id="5391f183-d25a-4787-9d89-4d63b968589e"><source><g id="2057">QVector</g><g id="2060">&lt;</g><g id="2063">int</g><g id="2066">&gt;</g> a<g id="2069">,</g> b; a<g id="2072">.</g>resize(<g id="2075">100000</g>); <g id="2078">// make a big vector filled with 0.</g> <g id="2081">QVector</g><g id="2084">&lt;</g><g id="2087">int</g><g id="2090">&gt;</g><g id="2093">::</g>iterator i <g id="2096">=</g> a<g id="2099">.</g>begin(); <g id="2102">// WRONG way of using the iterator i:</g> b <g id="2105">=</g> a; <g id="2108">/* Now we should be careful with iterator i since it will point to shared data If we do *i = 4 then we would change the shared instance (both vectors) The behavior differs from STL containers. Avoid doing such things in Qt. */</g> a<g id="2111">[</g><g id="2114">0</g><g id="2117">]</g> <g id="2120">=</g> <g id="2123">5</g>; <g id="2126">/* Container a is now detached from the shared data, and even though i was an iterator from the container a, it now works as an iterator in b. Here the situation is that (*i) == 0. */</g> b<g id="2129">.</g>clear(); <g id="2132">// Now the iterator i is completely invalid.</g> <g id="2135">int</g> j <g id="2138">=</g> <g id="2141">*</g>i; <g id="2144">// Undefined behavior!</g> <g id="2147">/* The data from b (which i pointed to) is gone. This would be well-defined with STL containers (and (*i) == 5), but with QVector this is likely to crash. */</g></source><seg-source><g id="2057">QVector</g><g id="2060">&lt;</g><g id="2063">int</g><g id="2066">&gt;</g> a<g id="2069">,</g> b; a<g id="2072">.</g>resize(<g id="2075">100000</g>); <g id="2078">// make a big vector filled with 0.</g> <g id="2081">QVector</g><g id="2084">&lt;</g><g id="2087">int</g><g id="2090">&gt;</g><g id="2093">::</g>iterator i <g id="2096">=</g> a<g id="2099">.</g>begin(); <g id="2102">// WRONG way of using the iterator i:</g> b <g id="2105">=</g> a; <g id="2108">/* Now we should be careful with iterator i since it will point to shared data If we do *i = 4 then we would change the shared instance (both vectors) The behavior differs from STL containers. Avoid doing such things in Qt. */</g> a<g id="2111">[</g><g id="2114">0</g><g id="2117">]</g> <g id="2120">=</g> <g id="2123">5</g>; <g id="2126">/* Container a is now detached from the shared data, and even though i was an iterator from the container a, it now works as an iterator in b. Here the situation is that (*i) == 0. */</g> b<g id="2129">.</g>clear(); <g id="2132">// Now the iterator i is completely invalid.</g> <g id="2135">int</g> j <g id="2138">=</g> <g id="2141">*</g>i; <g id="2144">// Undefined behavior!</g> <g id="2147">/* The data from b (which i pointed to) is gone. This would be well-defined with STL containers (and (*i) == 5), but with QVector this is likely to crash. */</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="222"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="271"/></sdl:cxts><trans-unit id="ce0add51-2683-447f-8e3d-27b37a691e15"><source>The above example only shows a problem with <g id="2150">QVector</g>, but the problem exists for all the implicitly shared Qt containers.</source><seg-source>The above example only shows a problem with <g id="2150">QVector</g>, but the problem exists for all the implicitly shared Qt containers.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="223"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="ccd9ff09-94f4-4d8a-9f26-f0400ad77a8d"><source><g id="2153"/><g id="2156"/></source><seg-source><g id="2153"/><g id="2156"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="224"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="272"/></sdl:cxts><trans-unit id="8b167dae-b040-4cef-90dd-015f4509df66"><source>The foreach Keyword</source><seg-source>The foreach Keyword</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="225"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="273"/></sdl:cxts><trans-unit id="lockTU_4263a0fc-9563-4b5c-b11e-641bf5b3d45c" translate="no" sdl:locktype="Structure"><source><g id="2159">foreach</g></source></trans-unit><trans-unit id="lockTU_032911a6-b61a-420d-922d-a70b54a116f5" translate="no" sdl:locktype="Structure"><source><g id="2159">foreach</g></source></trans-unit><trans-unit id="b27c2d82-4fed-4de5-ac31-67e4a088f627"><source>If you just want to iterate over all the items in a container in order, you can use Qt&apos;s <x id="locked71" xid="lockTU_032911a6-b61a-420d-922d-a70b54a116f5"/> keyword. The keyword is a Qt-specific addition to the C++ language, and is implemented using the preprocessor.</source><seg-source>If you just want to iterate over all the items in a container in order, you can use Qt&apos;s <x id="locked72" xid="lockTU_4263a0fc-9563-4b5c-b11e-641bf5b3d45c"/> keyword. The keyword is a Qt-specific addition to the C++ language, and is implemented using the preprocessor.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="226"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="274"/></sdl:cxts><trans-unit id="lockTU_17b89a96-9c24-43a7-9383-80b950ce4816" translate="no" sdl:locktype="Structure"><source><g id="2162">foreach</g></source></trans-unit><trans-unit id="lockTU_5eea6a53-6ad3-4c54-8529-e4107b2d708d" translate="no" sdl:locktype="Structure"><source><g id="2174">foreach</g></source></trans-unit><trans-unit id="lockTU_ed2e428a-5bb3-4b50-b687-634f848b288b" translate="no" sdl:locktype="Structure"><source><g id="2162">foreach</g></source></trans-unit><trans-unit id="lockTU_76f89ea5-62df-4db3-a77d-e3911a6d3ffd" translate="no" sdl:locktype="Structure"><source><g id="2174">foreach</g></source></trans-unit><trans-unit id="62bb6bef-ae17-4899-b0a2-4d47f1ef81ec"><source>Its syntax is: <x id="locked73" xid="lockTU_ed2e428a-5bb3-4b50-b687-634f848b288b"/> (<g id="2165">variable</g>, <g id="2168">container</g>) <g id="2171">statement</g>. For example, here&apos;s how to use <x id="locked74" xid="lockTU_76f89ea5-62df-4db3-a77d-e3911a6d3ffd"/> to iterate over a <g id="2177">QLinkedList</g>&lt;<g id="2180">QString</g>&gt;:</source><seg-source>Its syntax is: <x id="locked75" xid="lockTU_17b89a96-9c24-43a7-9383-80b950ce4816"/> (<g id="2165">variable</g>, <g id="2168">container</g>) <g id="2171">statement</g>. For example, here&apos;s how to use <x id="locked76" xid="lockTU_5eea6a53-6ad3-4c54-8529-e4107b2d708d"/> to iterate over a <g id="2177">QLinkedList</g>&lt;<g id="2180">QString</g>&gt;:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="227"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="275"/></sdl:cxts><trans-unit id="8a567411-b876-4bd9-98ff-a713f5c1196d"><source><g id="2183">QLinkedList</g><g id="2186">&lt;</g><g id="2189">QString</g><g id="2192">&gt;</g> list; <g id="2195">.</g><g id="2198">.</g><g id="2201">.</g> <g id="2204">QString</g> str; foreach (str<g id="2207">,</g> list) <g id="2210">qDebug</g>() <g id="2213">&lt;</g><g id="2216">&lt;</g> str;</source><seg-source><g id="2183">QLinkedList</g><g id="2186">&lt;</g><g id="2189">QString</g><g id="2192">&gt;</g> list; <g id="2195">.</g><g id="2198">.</g><g id="2201">.</g> <g id="2204">QString</g> str; foreach (str<g id="2207">,</g> list) <g id="2210">qDebug</g>() <g id="2213">&lt;</g><g id="2216">&lt;</g> str;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="228"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="276"/></sdl:cxts><trans-unit id="lockTU_8da0036b-bc3f-4726-a905-fed6d8f91822" translate="no" sdl:locktype="Structure"><source><g id="2219">foreach</g></source></trans-unit><trans-unit id="lockTU_d2528df2-9b9c-4b3c-9216-ac6e1ce0d22f" translate="no" sdl:locktype="Structure"><source><g id="2219">foreach</g></source></trans-unit><trans-unit id="d3d7e0d6-6455-4b47-a699-a1bf9e1690bd"><source>The <x id="locked77" xid="lockTU_d2528df2-9b9c-4b3c-9216-ac6e1ce0d22f"/> code is significantly shorter than the equivalent code that uses iterators:</source><seg-source>The <x id="locked78" xid="lockTU_8da0036b-bc3f-4726-a905-fed6d8f91822"/> code is significantly shorter than the equivalent code that uses iterators:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="229"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="277"/></sdl:cxts><trans-unit id="beb60e0a-81fb-4493-90ba-f997c775b82d"><source><g id="2222">QLinkedList</g><g id="2225">&lt;</g><g id="2228">QString</g><g id="2231">&gt;</g> list; <g id="2234">.</g><g id="2237">.</g><g id="2240">.</g> <g id="2243">QLinkedListIterator</g><g id="2246">&lt;</g><g id="2249">QString</g><g id="2252">&gt;</g> i(list); <g id="2255">while</g> (i<g id="2258">.</g>hasNext()) <g id="2261">qDebug</g>() <g id="2264">&lt;</g><g id="2267">&lt;</g> i<g id="2270">.</g>next();</source><seg-source><g id="2222">QLinkedList</g><g id="2225">&lt;</g><g id="2228">QString</g><g id="2231">&gt;</g> list; <g id="2234">.</g><g id="2237">.</g><g id="2240">.</g> <g id="2243">QLinkedListIterator</g><g id="2246">&lt;</g><g id="2249">QString</g><g id="2252">&gt;</g> i(list); <g id="2255">while</g> (i<g id="2258">.</g>hasNext()) <g id="2261">qDebug</g>() <g id="2264">&lt;</g><g id="2267">&lt;</g> i<g id="2270">.</g>next();</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="230"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="278"/></sdl:cxts><trans-unit id="lockTU_59d3c265-ff1e-41f8-b9fd-4809f1fab8e2" translate="no" sdl:locktype="Structure"><source><g id="2273">QPair&lt;int, int&gt;</g></source></trans-unit><trans-unit id="lockTU_a66c0646-8b9c-4b8c-8651-aedeae235110" translate="no" sdl:locktype="Structure"><source><g id="2276">foreach</g></source></trans-unit><trans-unit id="lockTU_41d93393-4401-4299-88ee-b45dd1e5d60f" translate="no" sdl:locktype="Structure"><source><g id="2273">QPair&lt;int, int&gt;</g></source></trans-unit><trans-unit id="lockTU_10ec9601-7592-4db3-801e-ba62b3d45072" translate="no" sdl:locktype="Structure"><source><g id="2276">foreach</g></source></trans-unit><trans-unit id="adbddd86-d1f7-4b6f-b194-e011d1c5320a"><source>Unless the data type contains a comma (e.g., <x id="locked79" xid="lockTU_41d93393-4401-4299-88ee-b45dd1e5d60f"/>), the variable used for iteration can be defined within the <x id="locked80" xid="lockTU_10ec9601-7592-4db3-801e-ba62b3d45072"/> statement:</source><seg-source>Unless the data type contains a comma (e.g., <x id="locked81" xid="lockTU_59d3c265-ff1e-41f8-b9fd-4809f1fab8e2"/>), the variable used for iteration can be defined within the <x id="locked82" xid="lockTU_a66c0646-8b9c-4b8c-8651-aedeae235110"/> statement:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="231"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="279"/></sdl:cxts><trans-unit id="7429a2d5-8e53-4740-a961-1a6e4c1b041f"><source><g id="2279">QLinkedList</g><g id="2282">&lt;</g><g id="2285">QString</g><g id="2288">&gt;</g> list; <g id="2291">.</g><g id="2294">.</g><g id="2297">.</g> foreach (<g id="2300">const</g> <g id="2303">QString</g> <g id="2306">&amp;</g>str<g id="2309">,</g> list) <g id="2312">qDebug</g>() <g id="2315">&lt;</g><g id="2318">&lt;</g> str;</source><seg-source><g id="2279">QLinkedList</g><g id="2282">&lt;</g><g id="2285">QString</g><g id="2288">&gt;</g> list; <g id="2291">.</g><g id="2294">.</g><g id="2297">.</g> foreach (<g id="2300">const</g> <g id="2303">QString</g> <g id="2306">&amp;</g>str<g id="2309">,</g> list) <g id="2312">qDebug</g>() <g id="2315">&lt;</g><g id="2318">&lt;</g> str;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="232"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="280"/></sdl:cxts><trans-unit id="lockTU_7b0e9727-a7b1-4711-8f8a-3291102069cc" translate="no" sdl:locktype="Structure"><source><g id="2321">foreach</g></source></trans-unit><trans-unit id="lockTU_80ee9314-006a-499e-add6-57ee28e8267c" translate="no" sdl:locktype="Structure"><source><g id="2324">break</g></source></trans-unit><trans-unit id="lockTU_94b4dccf-9903-464d-8c80-26151ab93581" translate="no" sdl:locktype="Structure"><source><g id="2321">foreach</g></source></trans-unit><trans-unit id="lockTU_672a59ec-0ce0-436b-99bd-7ddc55fb60bd" translate="no" sdl:locktype="Structure"><source><g id="2324">break</g></source></trans-unit><trans-unit id="7bd3845d-e56f-41bc-bb21-f90f146947f4"><source>And like any other C++ loop construct, you can use braces around the body of a <x id="locked83" xid="lockTU_94b4dccf-9903-464d-8c80-26151ab93581"/> loop, and you can use <x id="locked84" xid="lockTU_672a59ec-0ce0-436b-99bd-7ddc55fb60bd"/> to leave the loop:</source><seg-source>And like any other C++ loop construct, you can use braces around the body of a <x id="locked85" xid="lockTU_7b0e9727-a7b1-4711-8f8a-3291102069cc"/> loop, and you can use <x id="locked86" xid="lockTU_80ee9314-006a-499e-add6-57ee28e8267c"/> to leave the loop:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="233"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="281"/></sdl:cxts><trans-unit id="d764bd28-bdb4-4ff1-b460-16d96c577d1e"><source><g id="2327">QLinkedList</g><g id="2330">&lt;</g><g id="2333">QString</g><g id="2336">&gt;</g> list; <g id="2339">.</g><g id="2342">.</g><g id="2345">.</g> foreach (<g id="2348">const</g> <g id="2351">QString</g> <g id="2354">&amp;</g>str<g id="2357">,</g> list) { <g id="2360">if</g> (str<g id="2363">.</g>isEmpty()) <g id="2366">break</g>; <g id="2369">qDebug</g>() <g id="2372">&lt;</g><g id="2375">&lt;</g> str; }</source><seg-source><g id="2327">QLinkedList</g><g id="2330">&lt;</g><g id="2333">QString</g><g id="2336">&gt;</g> list; <g id="2339">.</g><g id="2342">.</g><g id="2345">.</g> foreach (<g id="2348">const</g> <g id="2351">QString</g> <g id="2354">&amp;</g>str<g id="2357">,</g> list) { <g id="2360">if</g> (str<g id="2363">.</g>isEmpty()) <g id="2366">break</g>; <g id="2369">qDebug</g>() <g id="2372">&lt;</g><g id="2375">&lt;</g> str; }</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="234"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="282"/></sdl:cxts><trans-unit id="lockTU_aec9b43e-08de-4b06-87f3-f536fea51e7e" translate="no" sdl:locktype="Structure"><source><g id="2384">foreach</g></source></trans-unit><trans-unit id="lockTU_f105b12f-772e-4f27-a3db-0f6cbc79a285" translate="no" sdl:locktype="Structure"><source><g id="2384">foreach</g></source></trans-unit><trans-unit id="9413f682-b065-4ecc-adf4-b635d33cf2ed"><source>With <g id="2378">QMap</g> and <g id="2381">QHash</g>, <x id="locked87" xid="lockTU_f105b12f-772e-4f27-a3db-0f6cbc79a285"/> accesses the value component of the (key, value) pairs automatically, so you should not call values() on the container (it would generate an unnecessary copy, see below). If you want to iterate over both the keys and the values, you can use iterators (which are faster), or you can obtain the keys, and use them to get the values too:</source><seg-source>With <g id="2378">QMap</g> and <g id="2381">QHash</g>, <x id="locked88" xid="lockTU_aec9b43e-08de-4b06-87f3-f536fea51e7e"/> accesses the value component of the (key, value) pairs automatically, so you should not call values() on the container (it would generate an unnecessary copy, see below). If you want to iterate over both the keys and the values, you can use iterators (which are faster), or you can obtain the keys, and use them to get the values too:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="235"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="283"/></sdl:cxts><trans-unit id="468157d7-3912-4365-b5af-5a95723fe4c7"><source><g id="2387">QMap</g><g id="2390">&lt;</g><g id="2393">QString</g><g id="2396">,</g> <g id="2399">int</g><g id="2402">&gt;</g> map; <g id="2405">.</g><g id="2408">.</g><g id="2411">.</g> foreach (<g id="2414">const</g> <g id="2417">QString</g> <g id="2420">&amp;</g>str<g id="2423">,</g> map<g id="2426">.</g>keys()) <g id="2429">qDebug</g>() <g id="2432">&lt;</g><g id="2435">&lt;</g> str <g id="2438">&lt;</g><g id="2441">&lt;</g> <g id="2444">&apos;:&apos;</g> <g id="2447">&lt;</g><g id="2450">&lt;</g> map<g id="2453">.</g>value(str);</source><seg-source><g id="2387">QMap</g><g id="2390">&lt;</g><g id="2393">QString</g><g id="2396">,</g> <g id="2399">int</g><g id="2402">&gt;</g> map; <g id="2405">.</g><g id="2408">.</g><g id="2411">.</g> foreach (<g id="2414">const</g> <g id="2417">QString</g> <g id="2420">&amp;</g>str<g id="2423">,</g> map<g id="2426">.</g>keys()) <g id="2429">qDebug</g>() <g id="2432">&lt;</g><g id="2435">&lt;</g> str <g id="2438">&lt;</g><g id="2441">&lt;</g> <g id="2444">&apos;:&apos;</g> <g id="2447">&lt;</g><g id="2450">&lt;</g> map<g id="2453">.</g>value(str);</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="236"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="284"/></sdl:cxts><trans-unit id="d13b61bc-a45f-42ca-802c-8ce5383bc4a7"><source>For a multi-valued map:</source><seg-source>For a multi-valued map:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="237"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="285"/></sdl:cxts><trans-unit id="9b5492c3-413f-446d-bc51-d4adc1fc0bc9"><source><g id="2456">QMultiMap</g><g id="2459">&lt;</g><g id="2462">QString</g><g id="2465">,</g> <g id="2468">int</g><g id="2471">&gt;</g> map; <g id="2474">.</g><g id="2477">.</g><g id="2480">.</g> foreach (<g id="2483">const</g> <g id="2486">QString</g> <g id="2489">&amp;</g>str<g id="2492">,</g> map<g id="2495">.</g>uniqueKeys()) { foreach (<g id="2498">int</g> i<g id="2501">,</g> map<g id="2504">.</g>values(str)) <g id="2507">qDebug</g>() <g id="2510">&lt;</g><g id="2513">&lt;</g> str <g id="2516">&lt;</g><g id="2519">&lt;</g> <g id="2522">&apos;:&apos;</g> <g id="2525">&lt;</g><g id="2528">&lt;</g> i; }</source><seg-source><g id="2456">QMultiMap</g><g id="2459">&lt;</g><g id="2462">QString</g><g id="2465">,</g> <g id="2468">int</g><g id="2471">&gt;</g> map; <g id="2474">.</g><g id="2477">.</g><g id="2480">.</g> foreach (<g id="2483">const</g> <g id="2486">QString</g> <g id="2489">&amp;</g>str<g id="2492">,</g> map<g id="2495">.</g>uniqueKeys()) { foreach (<g id="2498">int</g> i<g id="2501">,</g> map<g id="2504">.</g>values(str)) <g id="2507">qDebug</g>() <g id="2510">&lt;</g><g id="2513">&lt;</g> str <g id="2516">&lt;</g><g id="2519">&lt;</g> <g id="2522">&apos;:&apos;</g> <g id="2525">&lt;</g><g id="2528">&lt;</g> i; }</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="238"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="286"/></sdl:cxts><trans-unit id="lockTU_1cdb876b-7cbd-4d82-be2e-c4093086fc89" translate="no" sdl:locktype="Structure"><source><g id="2531">foreach</g></source></trans-unit><trans-unit id="lockTU_17b0548a-5ee8-4453-a0eb-3031ce6e20e3" translate="no" sdl:locktype="Structure"><source><g id="2531">foreach</g></source></trans-unit><trans-unit id="7edbff3f-0730-4659-88dd-551a51cbe586"><source>Qt automatically takes a copy of the container when it enters a <x id="locked89" xid="lockTU_17b0548a-5ee8-4453-a0eb-3031ce6e20e3"/> loop. If you modify the container as you are iterating, that won&apos;t affect the loop. (If you do not modify the container, the copy still takes place, but thanks to <g id="2534">implicit sharing</g> copying a container is very fast.)</source><seg-source>Qt automatically takes a copy of the container when it enters a <x id="locked90" xid="lockTU_1cdb876b-7cbd-4d82-be2e-c4093086fc89"/> loop. If you modify the container as you are iterating, that won&apos;t affect the loop. (If you do not modify the container, the copy still takes place, but thanks to <g id="2534">implicit sharing</g> copying a container is very fast.)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="239"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="287"/></sdl:cxts><trans-unit id="38ba351b-7f4c-4072-a6b2-37eb9f32929d"><source>Since foreach creates a copy of the container, using a non-const reference for the variable does not allow you to modify the original container. It only affects the copy, which is probably not what you want.</source><seg-source>Since foreach creates a copy of the container, using a non-const reference for the variable does not allow you to modify the original container. It only affects the copy, which is probably not what you want.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="240"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="288"/></sdl:cxts><trans-unit id="lockTU_3e2a9483-a82d-4663-a750-e96dfdfd48ae" translate="no" sdl:locktype="Structure"><source><g id="2537">foreach</g></source></trans-unit><trans-unit id="lockTU_d4416508-e87f-448d-a512-33e8e533bac4" translate="no" sdl:locktype="Structure"><source><g id="2540">for</g></source></trans-unit><trans-unit id="lockTU_fedc9e78-fdc1-4546-a912-bcf98044bef3" translate="no" sdl:locktype="Structure"><source><g id="2543">for</g></source></trans-unit><trans-unit id="lockTU_a1706bd4-6a5e-41fb-a511-62a07cc4a78f" translate="no" sdl:locktype="Structure"><source><g id="2549">foreach</g></source></trans-unit><trans-unit id="lockTU_0dc24978-dcde-450a-ab6d-55ae4dff0b57" translate="no" sdl:locktype="Structure"><source><g id="2552">foreach</g></source></trans-unit><trans-unit id="lockTU_27e7ca23-59b7-4933-b5fb-426396e5867b" translate="no" sdl:locktype="Structure"><source><g id="2555">foreach</g></source></trans-unit><trans-unit id="lockTU_c388db8f-aad9-41ea-a316-672f9e3b9431" translate="no" sdl:locktype="Structure"><source><g id="2558">for</g></source></trans-unit><trans-unit id="lockTU_6cc6a429-cc1b-4664-8774-746feaf4d816" translate="no" sdl:locktype="Structure"><source><g id="2537">foreach</g></source></trans-unit><trans-unit id="lockTU_74ce8f17-53ff-407b-aee2-64c58bae2161" translate="no" sdl:locktype="Structure"><source><g id="2540">for</g></source></trans-unit><trans-unit id="lockTU_d18d5c92-ccd8-44ce-950a-6f8d48c82437" translate="no" sdl:locktype="Structure"><source><g id="2543">for</g></source></trans-unit><trans-unit id="lockTU_cc184033-9e60-4cd7-8bf4-29adb667e00d" translate="no" sdl:locktype="Structure"><source><g id="2549">foreach</g></source></trans-unit><trans-unit id="lockTU_a44dedc2-c41c-46d0-a017-977dc387060d" translate="no" sdl:locktype="Structure"><source><g id="2552">foreach</g></source></trans-unit><trans-unit id="lockTU_e6fc08c0-b5bb-4ebe-bd0c-62668ce7d104" translate="no" sdl:locktype="Structure"><source><g id="2555">foreach</g></source></trans-unit><trans-unit id="lockTU_94358fca-3899-4fa1-8161-434d5740627d" translate="no" sdl:locktype="Structure"><source><g id="2558">for</g></source></trans-unit><trans-unit id="c5adc31f-f7e6-487a-a56a-73f9c1ec99d9"><source>An alternative to Qt&apos;s <x id="locked91" xid="lockTU_6cc6a429-cc1b-4664-8774-746feaf4d816"/> loop is the range-based <x id="locked92" xid="lockTU_74ce8f17-53ff-407b-aee2-64c58bae2161"/> that is part of C++ 11 and newer. However, keep in mind that the range-based <x id="locked93" xid="lockTU_d18d5c92-ccd8-44ce-950a-6f8d48c82437"/> might force a Qt container to <g id="2546">detach</g>, whereas <x id="locked94" xid="lockTU_cc184033-9e60-4cd7-8bf4-29adb667e00d"/> would not. But using <x id="locked95" xid="lockTU_a44dedc2-c41c-46d0-a017-977dc387060d"/> always copies the container, which is usually not cheap for STL containers. If in doubt, prefer <x id="locked96" xid="lockTU_e6fc08c0-b5bb-4ebe-bd0c-62668ce7d104"/> for Qt containers, and range based <x id="locked97" xid="lockTU_94358fca-3899-4fa1-8161-434d5740627d"/> for STL ones.</source><seg-source>An alternative to Qt&apos;s <x id="locked98" xid="lockTU_3e2a9483-a82d-4663-a750-e96dfdfd48ae"/> loop is the range-based <x id="locked99" xid="lockTU_d4416508-e87f-448d-a512-33e8e533bac4"/> that is part of C++ 11 and newer. However, keep in mind that the range-based <x id="locked100" xid="lockTU_fedc9e78-fdc1-4546-a912-bcf98044bef3"/> might force a Qt container to <g id="2546">detach</g>, whereas <x id="locked101" xid="lockTU_a1706bd4-6a5e-41fb-a511-62a07cc4a78f"/> would not. But using <x id="locked102" xid="lockTU_0dc24978-dcde-450a-ab6d-55ae4dff0b57"/> always copies the container, which is usually not cheap for STL containers. If in doubt, prefer <x id="locked103" xid="lockTU_27e7ca23-59b7-4933-b5fb-426396e5867b"/> for Qt containers, and range based <x id="locked104" xid="lockTU_c388db8f-aad9-41ea-a316-672f9e3b9431"/> for STL ones.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="241"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="289"/></sdl:cxts><trans-unit id="lockTU_171ede20-e4f7-45aa-8930-4c52b26aaa35" translate="no" sdl:locktype="Structure"><source><g id="2561">foreach</g></source></trans-unit><trans-unit id="lockTU_8ae93c31-4ef7-4cfc-9cbd-29fbf9bb5b88" translate="no" sdl:locktype="Structure"><source><g id="2564">forever</g></source></trans-unit><trans-unit id="lockTU_59015ba8-5421-444b-8238-93be76c4045e" translate="no" sdl:locktype="Structure"><source><g id="2561">foreach</g></source></trans-unit><trans-unit id="lockTU_fc8b467b-90fe-4a93-8e0a-d6ae25b331ae" translate="no" sdl:locktype="Structure"><source><g id="2564">forever</g></source></trans-unit><trans-unit id="895f664f-fcbc-4833-bed6-e20192ff85fb"><source>In addition to <x id="locked105" xid="lockTU_59015ba8-5421-444b-8238-93be76c4045e"/>, Qt also provides a <x id="locked106" xid="lockTU_fc8b467b-90fe-4a93-8e0a-d6ae25b331ae"/> pseudo-keyword for infinite loops:</source><seg-source>In addition to <x id="locked107" xid="lockTU_171ede20-e4f7-45aa-8930-4c52b26aaa35"/>, Qt also provides a <x id="locked108" xid="lockTU_8ae93c31-4ef7-4cfc-9cbd-29fbf9bb5b88"/> pseudo-keyword for infinite loops:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="242"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="290"/></sdl:cxts><trans-unit id="c0d5a833-3aee-4ee1-84d0-23522032ddc3"><source>forever { <g id="2567">.</g><g id="2570">.</g><g id="2573">.</g> }</source><seg-source>forever { <g id="2567">.</g><g id="2570">.</g><g id="2573">.</g> }</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="243"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="291"/></sdl:cxts><trans-unit id="lockTU_bb668d58-01c6-4e64-be79-62b4c5011520" translate="no" sdl:locktype="Structure"><source><g id="2576">.pro</g></source></trans-unit><trans-unit id="lockTU_f3f6959f-65be-4031-a49c-a238f56ce253" translate="no" sdl:locktype="Structure"><source><g id="2576">.pro</g></source></trans-unit><trans-unit id="28b5f76a-1c2e-4b73-9970-abefba897d01"><source>If you&apos;re worried about namespace pollution, you can disable these macros by adding the following line to your <x id="locked109" xid="lockTU_f3f6959f-65be-4031-a49c-a238f56ce253"/> file:</source><seg-source>If you&apos;re worried about namespace pollution, you can disable these macros by adding the following line to your <x id="locked110" xid="lockTU_bb668d58-01c6-4e64-be79-62b4c5011520"/> file:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="244"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="292"/></sdl:cxts><trans-unit id="6ded5ea1-3adc-400a-b21e-9c41f0a2937f"><source>CONFIG <g id="2579">+</g><g id="2582">=</g> no_keywords</source><seg-source>CONFIG <g id="2579">+</g><g id="2582">=</g> no_keywords</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="245"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="36d6d142-bee1-4a39-aaee-b456287abcd8"><source><g id="2585"/></source><seg-source><g id="2585"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="246"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="293"/></sdl:cxts><trans-unit id="c9b8d5ec-5ead-4493-a783-6baaf1eb09fa"><source>Other Container-Like Classes</source><seg-source>Other Container-Like Classes</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="247"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="294"/></sdl:cxts><trans-unit id="lockTU_c381944e-83b7-42c2-ac2d-b526670387ff" translate="no" sdl:locktype="Structure"><source><g id="2588">foreach</g></source></trans-unit><trans-unit id="lockTU_17dd2aaf-25b9-4e60-9d9b-f5e6ff827c38" translate="no" sdl:locktype="Structure"><source><g id="2588">foreach</g></source></trans-unit><trans-unit id="70a14c56-a294-4db8-9ab1-7319adec952e"><source>Qt includes three template classes that resemble containers in some respects. These classes don&apos;t provide iterators and cannot be used with the <x id="locked111" xid="lockTU_17dd2aaf-25b9-4e60-9d9b-f5e6ff827c38"/> keyword.</source><seg-source>Qt includes three template classes that resemble containers in some respects. These classes don&apos;t provide iterators and cannot be used with the <x id="locked112" xid="lockTU_c381944e-83b7-42c2-ac2d-b526670387ff"/> keyword.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="248"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="296"/></sdl:cxts><trans-unit id="5642e650-c4fa-47c0-ade6-e42eefb6be10"><source><g id="2591">QVarLengthArray</g>&lt;T, Prealloc&gt; provides a low-level variable-length array. It can be used instead of <g id="2594">QVector</g> in places where speed is particularly important.</source><seg-source><g id="2591">QVarLengthArray</g>&lt;T, Prealloc&gt; provides a low-level variable-length array. It can be used instead of <g id="2594">QVector</g> in places where speed is particularly important.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="249"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="297"/></sdl:cxts><trans-unit id="50fd7157-01d5-4427-89f2-7502f8333ed9"><source><g id="2597">QCache</g>&lt;Key, T&gt; provides a cache to store objects of a certain type T associated with keys of type Key.</source><seg-source><g id="2597">QCache</g>&lt;Key, T&gt; provides a cache to store objects of a certain type T associated with keys of type Key.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="250"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="298"/></sdl:cxts><trans-unit id="df3beeae-f4b5-4374-acff-ac63e8da0c7a"><source><g id="2600">QContiguousCache</g>&lt;T&gt; provides an efficient way of caching data that is typically accessed in a contiguous way.</source><seg-source><g id="2600">QContiguousCache</g>&lt;T&gt; provides an efficient way of caching data that is typically accessed in a contiguous way.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="251"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="299"/></sdl:cxts><trans-unit id="54ceb240-1ee6-487e-903e-f23d6799c642"><source><g id="2603">QPair</g>&lt;T1, T2&gt; stores a pair of elements.</source><seg-source><g id="2603">QPair</g>&lt;T1, T2&gt; stores a pair of elements.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="252"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="300"/></sdl:cxts><trans-unit id="ded4f526-4add-475e-92bd-2fa220bba62d"><source>Additional non-template types that compete with Qt&apos;s template containers are <g id="2606">QBitArray</g>, <g id="2609">QByteArray</g>, <g id="2612">QString</g>, and <g id="2615">QStringList</g>.</source><seg-source>Additional non-template types that compete with Qt&apos;s template containers are <g id="2606">QBitArray</g>, <g id="2609">QByteArray</g>, <g id="2612">QString</g>, and <g id="2615">QStringList</g>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="253"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="9fd911c0-c212-4cf3-bd94-9650901e817a"><source><g id="2618"/></source><seg-source><g id="2618"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="254"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="301"/></sdl:cxts><trans-unit id="dbea28ad-2d5e-4346-b57c-cbf3b7d55543"><source>Algorithmic Complexity</source><seg-source>Algorithmic Complexity</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="255"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="302"/></sdl:cxts><trans-unit id="bc4aebd1-3f7d-4041-8315-7b347913027d"><source>Algorithmic complexity is concerned about how fast (or slow) each function is as the number of items in the container grow. For example, inserting an item in the middle of a <g id="2621">QLinkedList</g> is an extremely fast operation, irrespective of the number of items stored in the <g id="2624">QLinkedList</g>. On the other hand, inserting an item in the middle of a <g id="2627">QVector</g> is potentially very expensive if the <g id="2630">QVector</g> contains many items, since half of the items must be moved one position in memory.</source><seg-source>Algorithmic complexity is concerned about how fast (or slow) each function is as the number of items in the container grow. For example, inserting an item in the middle of a <g id="2621">QLinkedList</g> is an extremely fast operation, irrespective of the number of items stored in the <g id="2624">QLinkedList</g>. On the other hand, inserting an item in the middle of a <g id="2627">QVector</g> is potentially very expensive if the <g id="2630">QVector</g> contains many items, since half of the items must be moved one position in memory.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="256"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="303"/></sdl:cxts><trans-unit id="f66eb7c4-ebcf-49c2-8ee7-2206b1af0ebf"><source>To describe algorithmic complexity, we use the following terminology, based on the &quot;big Oh&quot; notation:</source><seg-source>To describe algorithmic complexity, we use the following terminology, based on the &quot;big Oh&quot; notation:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="257"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="20cf607b-768b-4f23-aa1b-b31474a2a759"><source><g id="2633"/><g id="2636"/><g id="2639"/><g id="2642"/><g id="2645"/></source><seg-source><g id="2633"/><g id="2636"/><g id="2639"/><g id="2642"/><g id="2645"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="258"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="305"/></sdl:cxts><trans-unit id="71dd1173-5647-4c19-a639-3809566a21f6"><source><g id="2648">Constant time:</g> O(1). A function is said to run in constant time if it requires the same amount of time no matter how many items are present in the container. One example is <g id="2651">QLinkedList::insert</g>().</source><seg-source><g id="2648">Constant time:</g> O(1). A function is said to run in constant time if it requires the same amount of time no matter how many items are present in the container. One example is <g id="2651">QLinkedList::insert</g>().</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="259"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="306"/></sdl:cxts><trans-unit id="0022fa61-6a20-4ea1-825e-6db139561c61"><source><g id="2654">Logarithmic time:</g> O(log <g id="2657">n</g>). A function that runs in logarithmic time is a function whose running time is proportional to the logarithm of the number of items in the container. One example is qBinaryFind().</source><seg-source><g id="2654">Logarithmic time:</g> O(log <g id="2657">n</g>). A function that runs in logarithmic time is a function whose running time is proportional to the logarithm of the number of items in the container. One example is qBinaryFind().</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="260"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="307"/></sdl:cxts><trans-unit id="9e8a6930-2578-4340-b7ec-2ec78838436a"><source><g id="2660">Linear time:</g> O(<g id="2663">n</g>). A function that runs in linear time will execute in a time directly proportional to the number of items stored in the container. One example is <g id="2666">QVector::insert</g>().</source><seg-source><g id="2660">Linear time:</g> O(<g id="2663">n</g>). A function that runs in linear time will execute in a time directly proportional to the number of items stored in the container. One example is <g id="2666">QVector::insert</g>().</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="261"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="308"/></sdl:cxts><trans-unit id="4f79e29b-fca6-407c-ad6c-3b7a7b95c4d2"><source><g id="2669">Linear-logarithmic time:</g> O(<g id="2672">n</g> log <g id="2675">n</g>). A function that runs in linear-logarithmic time is asymptotically slower than a linear-time function, but faster than a quadratic-time function.</source><seg-source><g id="2669">Linear-logarithmic time:</g> O(<g id="2672">n</g> log <g id="2675">n</g>). A function that runs in linear-logarithmic time is asymptotically slower than a linear-time function, but faster than a quadratic-time function.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="262"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="309"/></sdl:cxts><trans-unit id="fd813a67-7c54-4072-8cd7-ebc4e72d95b7"><source><g id="2678">Quadratic time:</g> O(<g id="2681">n</g>²). A quadratic-time function executes in a time that is proportional to the square of the number of items stored in the container.</source><seg-source><g id="2678">Quadratic time:</g> O(<g id="2681">n</g>²). A quadratic-time function executes in a time that is proportional to the square of the number of items stored in the container.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="263"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="310"/></sdl:cxts><trans-unit id="d7c62819-e5a4-416d-8308-dd1649c00657"><source>The following table summarizes the algorithmic complexity of Qt&apos;s sequential container classes:</source><seg-source>The following table summarizes the algorithmic complexity of Qt&apos;s sequential container classes:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="264"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="315"/></sdl:cxts><trans-unit id="7f937a46-dd36-4d9d-8486-d8ea6229317f"><source>Index lookup</source><seg-source>Index lookup</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="265"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="316"/></sdl:cxts><trans-unit id="686c05a8-ac56-401e-8ab0-42ae66c34807"><source>Insertion</source><seg-source>Insertion</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="266"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="317"/></sdl:cxts><trans-unit id="ea9453ac-f5c4-440b-b78b-a5c779051669"><source>Prepending</source><seg-source>Prepending</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="267"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="318"/></sdl:cxts><trans-unit id="f39222af-cd6f-4cfe-b75b-b01a3921fe26"><source>Appending</source><seg-source>Appending</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="268"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="320"/></sdl:cxts><trans-unit id="44549964-54de-4c95-866c-e32f9de6af6f"><source><g id="2684">QLinkedList</g>&lt;T&gt;</source><seg-source><g id="2684">QLinkedList</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="269"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="321"/></sdl:cxts><trans-unit id="a6223b29-a256-4a70-990f-e927d73e9a1b"><source>O(<g id="2687">n</g>)</source><seg-source>O(<g id="2687">n</g>)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="270"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="322"/></sdl:cxts><trans-unit id="a656e709-2a6b-4c27-bf1a-1872140fb81e"><source>O(1)</source><seg-source>O(1)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="271"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="323"/></sdl:cxts><trans-unit id="56f38cd8-679e-491b-90ba-2576ebaf2646"><source>O(1)</source><seg-source>O(1)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="272"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="324"/></sdl:cxts><trans-unit id="f0f4fbca-e8a8-414b-b78b-6c7531089e9a"><source>O(1)</source><seg-source>O(1)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="273"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="326"/></sdl:cxts><trans-unit id="625e5e11-a973-4a65-b40f-46fb4bdc62f4"><source><g id="2690">QList</g>&lt;T&gt;</source><seg-source><g id="2690">QList</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="274"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="327"/></sdl:cxts><trans-unit id="83666a9f-0518-4ed6-80e4-a97ee1a03180"><source>O(1)</source><seg-source>O(1)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="275"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="328"/></sdl:cxts><trans-unit id="1675b726-6b05-4311-b962-af9a6d65df19"><source>O(n)</source><seg-source>O(n)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="276"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="329"/></sdl:cxts><trans-unit id="89b3c8d1-a0cf-441a-8618-4f2fdc21c0a2"><source>Amort. O(1)</source><seg-source>Amort. O(1)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="277"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="330"/></sdl:cxts><trans-unit id="42310032-ea5e-49ae-892a-791bb67f8ddb"><source>Amort. O(1)</source><seg-source>Amort. O(1)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="278"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="332"/></sdl:cxts><trans-unit id="5064accd-4937-45f4-a65a-47010b1140c0"><source><g id="2693">QVector</g>&lt;T&gt;</source><seg-source><g id="2693">QVector</g>&lt;T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="279"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="333"/></sdl:cxts><trans-unit id="8ff36778-a8a2-4602-be09-10982bd735f3"><source>O(1)</source><seg-source>O(1)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="280"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="334"/></sdl:cxts><trans-unit id="24c9411b-3510-450c-875a-cc1dbf42a33a"><source>O(n)</source><seg-source>O(n)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="281"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="335"/></sdl:cxts><trans-unit id="c932092b-24d3-4735-97c2-b811fed5c264"><source>O(n)</source><seg-source>O(n)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="282"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="336"/></sdl:cxts><trans-unit id="c7b9e4ad-dccf-4af3-9a81-59162707d303"><source>Amort. O(1)</source><seg-source>Amort. O(1)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="283"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="337"/></sdl:cxts><trans-unit id="df18890d-01a5-44bf-90e8-d1488e444fbb"><source>In the table, &quot;Amort.&quot; stands for &quot;amortized behavior&quot;. For example, &quot;Amort. O(1)&quot; means that if you call the function only once, you might get O(<g id="2696">n</g>) behavior, but if you call it multiple times (e.g., <g id="2699">n</g> times), the average behavior will be O(1).</source><seg-source>In the table, &quot;Amort.&quot; stands for &quot;amortized behavior&quot;. For example, &quot;Amort. O(1)&quot; means that if you call the function only once, you might get O(<g id="2696">n</g>) behavior, but if you call it multiple times (e.g., <g id="2699">n</g> times), the average behavior will be O(1).</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="284"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="338"/></sdl:cxts><trans-unit id="2c27229a-e768-46b7-8cab-e53920df72ee"><source>The following table summarizes the algorithmic complexity of Qt&apos;s associative containers and sets:</source><seg-source>The following table summarizes the algorithmic complexity of Qt&apos;s associative containers and sets:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="285"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="343"/></sdl:cxts><trans-unit id="84b5379e-24b7-48d5-8c02-b72f57f34728"><source>Key lookup</source><seg-source>Key lookup</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="286"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="344"/></sdl:cxts><trans-unit id="15a19163-c55a-4808-9180-4dfd9f50b798"><source>Insertion</source><seg-source>Insertion</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="287"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="346"/></sdl:cxts><trans-unit id="7798b498-000e-4c45-b6d8-caaaa37867f5"><source>Average</source><seg-source>Average</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="288"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="347"/></sdl:cxts><trans-unit id="5b5fb6bf-97d9-414c-81cf-af1f01c04177"><source>Worst case</source><seg-source>Worst case</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="289"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="348"/></sdl:cxts><trans-unit id="ccabdf09-85dd-4751-95c8-f957f78cc63f"><source>Average</source><seg-source>Average</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="290"/><sdl:cxt id="46"/><sdl:cxt id="9"/><sdl:cxt id="46"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="349"/></sdl:cxts><trans-unit id="985b5cae-a7cd-4754-92b5-8cf9ee69d2a2"><source>Worst case</source><seg-source>Worst case</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="291"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="351"/></sdl:cxts><trans-unit id="cad525d9-3786-4699-87f0-bb70a07f5616"><source><g id="2702">QMap</g>&lt;Key, T&gt;</source><seg-source><g id="2702">QMap</g>&lt;Key, T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="292"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="352"/></sdl:cxts><trans-unit id="3909c3e9-9d28-42a3-aa35-cba670a674ba"><source>O(log <g id="2705">n</g>)</source><seg-source>O(log <g id="2705">n</g>)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="293"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="353"/></sdl:cxts><trans-unit id="3e38bc51-4c52-42b2-9d7e-0fb21a4bbc9b"><source>O(log <g id="2708">n</g>)</source><seg-source>O(log <g id="2708">n</g>)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="294"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="354"/></sdl:cxts><trans-unit id="9dfa0a99-d6a7-4827-aec7-2fcc75fe49ac"><source>O(log <g id="2711">n</g>)</source><seg-source>O(log <g id="2711">n</g>)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="295"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="355"/></sdl:cxts><trans-unit id="37303b32-da83-4970-8d25-e681d16f019e"><source>O(log <g id="2714">n</g>)</source><seg-source>O(log <g id="2714">n</g>)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="296"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="357"/></sdl:cxts><trans-unit id="9f0474a9-1ff3-4ee7-88d3-7e7580d80490"><source><g id="2717">QMultiMap</g>&lt;Key, T&gt;</source><seg-source><g id="2717">QMultiMap</g>&lt;Key, T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="297"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="358"/></sdl:cxts><trans-unit id="92f7c660-32bf-4920-a212-953d61e031bd"><source>O(log <g id="2720">n</g>)</source><seg-source>O(log <g id="2720">n</g>)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="298"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="359"/></sdl:cxts><trans-unit id="c54f6577-78c6-4b34-bba2-0891bc9d65e5"><source>O(log <g id="2723">n</g>)</source><seg-source>O(log <g id="2723">n</g>)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="299"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="360"/></sdl:cxts><trans-unit id="cd4b272f-aca9-4737-b097-18eead3a902f"><source>O(log <g id="2726">n</g>)</source><seg-source>O(log <g id="2726">n</g>)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="300"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="361"/></sdl:cxts><trans-unit id="2941e429-5fb8-4083-8200-ccdfd8b522fe"><source>O(log <g id="2729">n</g>)</source><seg-source>O(log <g id="2729">n</g>)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="301"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="363"/></sdl:cxts><trans-unit id="9bfa6c8f-6446-4fda-987c-e544f277e2da"><source><g id="2732">QHash</g>&lt;Key, T&gt;</source><seg-source><g id="2732">QHash</g>&lt;Key, T&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="302"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="364"/></sdl:cxts><trans-unit id="18cd3def-0308-4ec8-ae46-abfee1f58218"><source>Amort. O(1)</source><seg-source>Amort. O(1)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="303"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="365"/></sdl:cxts><trans-unit id="7ab21142-650d-435d-9cdd-77490514dd9c"><source>O(<g id="2735">n</g>)</source><seg-source>O(<g id="2735">n</g>)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="304"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="366"/></sdl:cxts><trans-unit id="8500fb7d-a49b-4ea7-802f-816203d5beab"><source>Amort. O(1)</source><seg-source>Amort. O(1)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="305"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="367"/></sdl:cxts><trans-unit id="4ee0b9b4-5cdc-4bd3-8f1d-b5c253d9fdbc"><source>O(<g id="2738">n</g>)</source><seg-source>O(<g id="2738">n</g>)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="306"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="369"/></sdl:cxts><trans-unit id="51d4fbe1-0a66-481c-bd4a-1a6b59f363ae"><source><g id="2741">QSet</g>&lt;Key&gt;</source><seg-source><g id="2741">QSet</g>&lt;Key&gt;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="307"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="370"/></sdl:cxts><trans-unit id="2361668c-619a-427e-b0cd-d2911e8f0bc9"><source>Amort. O(1)</source><seg-source>Amort. O(1)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="308"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="371"/></sdl:cxts><trans-unit id="3a32d9d5-4254-4093-a845-4f684dee5be0"><source>O(<g id="2744">n</g>)</source><seg-source>O(<g id="2744">n</g>)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="309"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="372"/></sdl:cxts><trans-unit id="a716503c-44aa-4e8e-9c99-dbac9663194e"><source>Amort. O(1)</source><seg-source>Amort. O(1)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="310"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="373"/></sdl:cxts><trans-unit id="a08f8e1e-cc5e-4ada-bfcc-f1f0babcb8fd"><source>O(<g id="2747">n</g>)</source><seg-source>O(<g id="2747">n</g>)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="311"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="374"/></sdl:cxts><trans-unit id="bdd19bc5-04f7-4359-aedd-867518fd1345"><source>With <g id="2750">QVector</g>, <g id="2753">QHash</g>, and <g id="2756">QSet</g>, the performance of appending items is amortized O(log <g id="2759">n</g>). It can be brought down to O(1) by calling <g id="2762">QVector::reserve</g>(), <g id="2765">QHash::reserve</g>(), or <g id="2768">QSet::reserve</g>() with the expected number of items before you insert the items. The next section discusses this topic in more depth.</source><seg-source>With <g id="2750">QVector</g>, <g id="2753">QHash</g>, and <g id="2756">QSet</g>, the performance of appending items is amortized O(log <g id="2759">n</g>). It can be brought down to O(1) by calling <g id="2762">QVector::reserve</g>(), <g id="2765">QHash::reserve</g>(), or <g id="2768">QSet::reserve</g>() with the expected number of items before you insert the items. The next section discusses this topic in more depth.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="312"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="4d3a57b4-878d-404b-988c-88571c6383e2"><source><g id="2771"/></source><seg-source><g id="2771"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="313"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="375"/></sdl:cxts><trans-unit id="949e5dda-afa7-455e-b0b2-b14c7fc6406a"><source>Growth Strategies</source><seg-source>Growth Strategies</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="314"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="376"/></sdl:cxts><trans-unit id="f1ae095d-a082-4aff-bd92-9b9ea78d7b7a"><source><g id="2774">QVector</g>&lt;T&gt;, <g id="2777">QString</g>, and <g id="2780">QByteArray</g> store their items contiguously in memory; <g id="2783">QList</g>&lt;T&gt; maintains an array of pointers to the items it stores to provide fast index-based access (unless T is a pointer type or a basic type of the size of a pointer, in which case the value itself is stored in the array); <g id="2786">QHash</g>&lt;Key, T&gt; keeps a hash table whose size is proportional to the number of items in the hash. To avoid reallocating the data every single time an item is added at the end of the container, these classes typically allocate more memory than necessary.</source><seg-source><g id="2774">QVector</g>&lt;T&gt;, <g id="2777">QString</g>, and <g id="2780">QByteArray</g> store their items contiguously in memory; <g id="2783">QList</g>&lt;T&gt; maintains an array of pointers to the items it stores to provide fast index-based access (unless T is a pointer type or a basic type of the size of a pointer, in which case the value itself is stored in the array); <g id="2786">QHash</g>&lt;Key, T&gt; keeps a hash table whose size is proportional to the number of items in the hash. To avoid reallocating the data every single time an item is added at the end of the container, these classes typically allocate more memory than necessary.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="315"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="377"/></sdl:cxts><trans-unit id="98958cf0-3204-4636-aefb-b13183163659"><source>Consider the following code, which builds a <g id="2789">QString</g> from another <g id="2792">QString</g>:</source><seg-source>Consider the following code, which builds a <g id="2789">QString</g> from another <g id="2792">QString</g>:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="316"/><sdl:cxt id="75"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="378"/></sdl:cxts><trans-unit id="351bf00d-b9c1-4e88-a42c-3ee454af1bce"><source><g id="2795">QString</g> onlyLetters(<g id="2798">const</g> <g id="2801">QString</g> <g id="2804">&amp;</g>in) { <g id="2807">QString</g> out; <g id="2810">for</g> (<g id="2813">int</g> j <g id="2816">=</g> <g id="2819">0</g>; j <g id="2822">&lt;</g> in<g id="2825">.</g>size(); <g id="2828">+</g><g id="2831">+</g>j) { <g id="2834">if</g> (in<g id="2837">[</g>j<g id="2840">]</g><g id="2843">.</g>isLetter()) out <g id="2846">+</g><g id="2849">=</g> in<g id="2852">[</g>j<g id="2855">]</g>; } <g id="2858">return</g> out; }</source><seg-source><g id="2795">QString</g> onlyLetters(<g id="2798">const</g> <g id="2801">QString</g> <g id="2804">&amp;</g>in) { <g id="2807">QString</g> out; <g id="2810">for</g> (<g id="2813">int</g> j <g id="2816">=</g> <g id="2819">0</g>; j <g id="2822">&lt;</g> in<g id="2825">.</g>size(); <g id="2828">+</g><g id="2831">+</g>j) { <g id="2834">if</g> (in<g id="2837">[</g>j<g id="2840">]</g><g id="2843">.</g>isLetter()) out <g id="2846">+</g><g id="2849">=</g> in<g id="2852">[</g>j<g id="2855">]</g>; } <g id="2858">return</g> out; }</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="317"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="379"/></sdl:cxts><trans-unit id="lockTU_ba31da3a-6a3e-4921-8f9d-4c80896b601e" translate="no" sdl:locktype="Structure"><source><g id="2861">out</g></source></trans-unit><trans-unit id="lockTU_124898e3-6e9f-4339-a7b8-8d42c7235db1" translate="no" sdl:locktype="Structure"><source><g id="2861">out</g></source></trans-unit><trans-unit id="0f04665e-4528-4c8c-998c-50d09b4578db"><source>We build the string <x id="locked113" xid="lockTU_124898e3-6e9f-4339-a7b8-8d42c7235db1"/> dynamically by appending one character to it at a time. Let&apos;s assume that we append 15000 characters to the <g id="2864">QString</g> string. Then the following 18 reallocations (out of a possible 15000) occur when <g id="2867">QString</g> runs out of space: 4, 8, 12, 16, 20, 52, 116, 244, 500, 1012, 2036, 4084, 6132, 8180, 10228, 12276, 14324, 16372. At the end, the <g id="2870">QString</g> has 16372 Unicode characters allocated, 15000 of which are occupied.</source><seg-source>We build the string <x id="locked114" xid="lockTU_ba31da3a-6a3e-4921-8f9d-4c80896b601e"/> dynamically by appending one character to it at a time. Let&apos;s assume that we append 15000 characters to the <g id="2864">QString</g> string. Then the following 18 reallocations (out of a possible 15000) occur when <g id="2867">QString</g> runs out of space: 4, 8, 12, 16, 20, 52, 116, 244, 500, 1012, 2036, 4084, 6132, 8180, 10228, 12276, 14324, 16372. At the end, the <g id="2870">QString</g> has 16372 Unicode characters allocated, 15000 of which are occupied.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="318"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="380"/></sdl:cxts><trans-unit id="1ef3af79-8dac-491f-875a-eaf70e61066c"><source>The values above may seem a bit strange, but here are the guiding principles:</source><seg-source>The values above may seem a bit strange, but here are the guiding principles:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="319"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="382"/></sdl:cxts><trans-unit id="3d1533dc-3bf6-4979-8978-398da382f69e"><source><g id="2873">QString</g> allocates 4 characters at a time until it reaches size 20.</source><seg-source><g id="2873">QString</g> allocates 4 characters at a time until it reaches size 20.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="320"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="383"/></sdl:cxts><trans-unit id="797ebcd1-e6fe-4de2-b6c8-822be191b4e9"><source>From 20 to 4084, it advances by doubling the size each time. More precisely, it advances to the next power of two, minus 12. (Some memory allocators perform worst when requested exact powers of two, because they use a few bytes per block for book-keeping.)</source><seg-source>From 20 to 4084, it advances by doubling the size each time. More precisely, it advances to the next power of two, minus 12. (Some memory allocators perform worst when requested exact powers of two, because they use a few bytes per block for book-keeping.)</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="321"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="384"/></sdl:cxts><trans-unit id="85ebe40f-dcd3-4dd1-b398-71785a17a69c"><source>From 4084 on, it advances by blocks of 2048 characters (4096 bytes). This makes sense because modern operating systems don&apos;t copy the entire data when reallocating a buffer; the physical memory pages are simply reordered, and only the data on the first and last pages actually needs to be copied.</source><seg-source>From 4084 on, it advances by blocks of 2048 characters (4096 bytes). This makes sense because modern operating systems don&apos;t copy the entire data when reallocating a buffer; the physical memory pages are simply reordered, and only the data on the first and last pages actually needs to be copied.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="322"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="385"/></sdl:cxts><trans-unit id="0dfce68c-9ebd-485f-926f-a89b133231db"><source><g id="2876">QByteArray</g> and <g id="2879">QList</g>&lt;T&gt; use more or less the same algorithm as <g id="2882">QString</g>.</source><seg-source><g id="2876">QByteArray</g> and <g id="2879">QList</g>&lt;T&gt; use more or less the same algorithm as <g id="2882">QString</g>.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="323"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="386"/></sdl:cxts><trans-unit id="lockTU_8fed9d0a-c47d-4a46-acf8-10481770fca4" translate="no" sdl:locktype="Structure"><source><g id="2888">memcpy()</g></source></trans-unit><trans-unit id="lockTU_40828656-17e1-4e6c-a33e-6d33d831c9f9" translate="no" sdl:locktype="Structure"><source><g id="2888">memcpy()</g></source></trans-unit><trans-unit id="669c5d7c-c204-4758-acc2-12fc0af078d4"><source><g id="2885">QVector</g>&lt;T&gt; also uses that algorithm for data types that can be moved around in memory using <x id="locked115" xid="lockTU_40828656-17e1-4e6c-a33e-6d33d831c9f9"/> (including the basic C++ types, the pointer types, and Qt&apos;s <g id="2891">shared classes</g>) but uses a different algorithm for data types that can only be moved by calling the copy constructor and a destructor. Since the cost of reallocating is higher in that case, <g id="2894">QVector</g>&lt;T&gt; reduces the number of reallocations by always doubling the memory when running out of space.</source><seg-source><g id="2885">QVector</g>&lt;T&gt; also uses that algorithm for data types that can be moved around in memory using <x id="locked116" xid="lockTU_8fed9d0a-c47d-4a46-acf8-10481770fca4"/> (including the basic C++ types, the pointer types, and Qt&apos;s <g id="2891">shared classes</g>) but uses a different algorithm for data types that can only be moved by calling the copy constructor and a destructor. Since the cost of reallocating is higher in that case, <g id="2894">QVector</g>&lt;T&gt; reduces the number of reallocations by always doubling the memory when running out of space.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="324"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="387"/></sdl:cxts><trans-unit id="53ce8f8b-7e11-4a79-85ec-27aad6434eef"><source><g id="2897">QHash</g>&lt;Key, T&gt; is a totally different case. <g id="2900">QHash</g>&apos;s internal hash table grows by powers of two, and each time it grows, the items are relocated in a new bucket, computed as <g id="2903">qHash</g>(<g id="2906">key</g>) % <g id="2909">QHash::capacity</g>() (the number of buckets). This remark applies to <g id="2912">QSet</g>&lt;T&gt; and <g id="2915">QCache</g>&lt;Key, T&gt; as well.</source><seg-source><g id="2897">QHash</g>&lt;Key, T&gt; is a totally different case. <g id="2900">QHash</g>&apos;s internal hash table grows by powers of two, and each time it grows, the items are relocated in a new bucket, computed as <g id="2903">qHash</g>(<g id="2906">key</g>) % <g id="2909">QHash::capacity</g>() (the number of buckets). This remark applies to <g id="2912">QSet</g>&lt;T&gt; and <g id="2915">QCache</g>&lt;Key, T&gt; as well.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="325"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="388"/></sdl:cxts><trans-unit id="6b5e6cc8-682e-43fe-872e-b459a8bf81ad"><source>For most applications, the default growing algorithm provided by Qt does the trick. If you need more control, <g id="2918">QVector</g>&lt;T&gt;, <g id="2921">QHash</g>&lt;Key, T&gt;, <g id="2924">QSet</g>&lt;T&gt;, <g id="2927">QString</g>, and <g id="2930">QByteArray</g> provide a trio of functions that allow you to check and specify how much memory to use to store the items:</source><seg-source>For most applications, the default growing algorithm provided by Qt does the trick. If you need more control, <g id="2918">QVector</g>&lt;T&gt;, <g id="2921">QHash</g>&lt;Key, T&gt;, <g id="2924">QSet</g>&lt;T&gt;, <g id="2927">QString</g>, and <g id="2930">QByteArray</g> provide a trio of functions that allow you to check and specify how much memory to use to store the items:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="326"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="390"/></sdl:cxts><trans-unit id="f642331b-1e79-4ea4-8c2a-adc2b61d1477"><source><g id="2933">capacity()</g> returns the number of items for which memory is allocated (for <g id="2936">QHash</g> and <g id="2939">QSet</g>, the number of buckets in the hash table).</source><seg-source><g id="2933">capacity()</g> returns the number of items for which memory is allocated (for <g id="2936">QHash</g> and <g id="2939">QSet</g>, the number of buckets in the hash table).</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="327"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="391"/></sdl:cxts><trans-unit id="48154919-0476-485c-9520-82cc39a57c5d"><source><g id="2942">reserve</g>(<g id="2945">size</g>) explicitly preallocates memory for <g id="2948">size</g> items.</source><seg-source><g id="2942">reserve</g>(<g id="2945">size</g>) explicitly preallocates memory for <g id="2948">size</g> items.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="328"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="392"/></sdl:cxts><trans-unit id="1e113e22-d0e1-4f96-a17a-7efe85b6cb49"><source><g id="2951">squeeze()</g> frees any memory not required to store the items.</source><seg-source><g id="2951">squeeze()</g> frees any memory not required to store the items.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="329"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="393"/></sdl:cxts><trans-unit id="7def5339-c65d-4166-ad1a-bd819a8b1390"><source>If you know approximately how many items you will store in a container, you can start by calling <g id="2954">reserve()</g>, and when you are done populating the container, you can call <g id="2957">squeeze()</g> to release the extra preallocated memory.</source><seg-source>If you know approximately how many items you will store in a container, you can start by calling <g id="2954">reserve()</g>, and when you are done populating the container, you can call <g id="2957">squeeze()</g> to release the extra preallocated memory.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="330"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="21"/></sdl:cxts><trans-unit id="e81d02b8-cb26-4b90-be5b-4dbbf594e602"><source><x id="2958"/></source><seg-source><x id="2958"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="331"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="395"/></sdl:cxts><trans-unit id="8805e1f0-faeb-4ba3-beac-c298f27f9762"><source><x id="2959"/></source><seg-source><x id="2959"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="332"/><sdl:cxt id="35"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="395"/></sdl:cxts><trans-unit id="26bf0a76-e0ed-4ebd-b738-6162770edf0b"><source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="2960"/> The documentation provided herein is licensed under the terms of the <g id="2963">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="2964"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</source><seg-source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="2960"/> The documentation provided herein is licensed under the terms of the <g id="2963">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="2964"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</seg-source><target/></trans-unit></group></body></file></xliff>