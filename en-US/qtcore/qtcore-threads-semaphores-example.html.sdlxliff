<?xml version="1.0" encoding="utf-8"?><xliff xmlns:sdl="http://sdl.com/FileTypes/SdlXliff/1.0" xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2" sdl:version="1.0"><file original="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtcore\qtcore-threads-semaphores-example.html" datatype="x-sdlfilterframework2" source-language="en-US"><header><reference><internal-file form="base64">UEsDBBQAAAAIABtAgkltw2l71w0AAG0tAAARAAAAczFldXdpY2YubzFuLmh0bWzlWm1z2zYS/p5f
gWPa1LrTi51erz1bVps4Tic3uaZp3N50ep0OREISziRAA6BktZf/frsLgCIlypY7mbkP1aQ1SQCL
fcM+iwXGX94WOVsKY6VW58nJ8DhhQqU6k2p+nnx/9XLwRfLl5NH4Ty/eXFz9+O0lW7gih3f8w3KO
nYRK8IPg2eQRY+NCOA69XDkQN5VcnicXWjmh3OBqXYqEpf7tPHHi1o2QzBlLF9xY4c4rN4Pp2Ajn
GwyYFQUvF9oIO7zJdMoGA5rASZeLybu6kV3e8qLMBfsve+vYBXxinw0/H498PxyRS3XNjMjPE+vW
ubALIVzCHPAT2EitTdjCiFnoMdKzGQwSAyuR8pDaR0TLpkaWrjn4P3zJ/dcEezC2kirTq6FWueYZ
O2ezSqUO1HvU+w3EqAoQfzgX7jIX+Gifr6/4/BteiKMEGU16Q+lEcXTcG4JOnjln5LRy0Ij8JX3W
5pBY6529P0PeRp4NUN/Im2M81dka/mRyydKcW3ueYIMwCZPZeXLjgJ/wgYRr9Cu4VEGe7c8DoyuV
iSw0tzsovpRzjuJOual7oNn4FMwxdgb4cRmbjHnQ+HA4IkZGtipLbZzIBmXO3Uybwg64ygbgMjM5
rwxRtUP0mcc3bvDZ4PNkAhYnY/MJGDybtCnfuBS8YQDmELc0jPqjh7QH7PqSbxsBs/C/wDj+iVJO
K5lnYdUkG6FQqa0m8IXMLWBdHR9/nDCeyzksMiPnCxdZH56w78RMGFh0gr0I7kGSEg8b/TWZiXof
geKDjfxj0xJhpSXtr+g0SWdHhra96BxkZSa8OZtfnU5p5X+KGlfgwOFToGG9kqH50bjCmJHLmgmx
FPlJsrHU43mupzwfLLmRKKFNJl/TF/ZD/OKp5fIeQqXRWZUKM6AeyeTb8M4u8P1AIqARC4aoiVyE
9wcRcQsxoOUS138yuVoI0vJRj70MHxvERqSlXUMG7Q+iQcnNtj9O/MA4fHFSWwnDYNLp44sT6GlL
ruqZqmnoDrEEvodA/NFHHzkQimd2tInJg0z4cANCUGhuskxtyYTVjpEBKsjcImEOXUtSRbQVWxkI
eZZlHKDDaQaaY9NqBquCVcrJnEkH4ZtDqLLUJlTG9KzRrc+4Y6uFTBes1BJcmQZYx42zbGZ04fuK
uVQKgK3PNCxQnBRemLiVlh5w+iFDxqL9mRebkexEg1jkFieQNgqQMQhTUQhoARFgbpVxkzFhjDbD
8agkqRtWKPi1wM6ltlZiaIFRC74UDBwIAgRMTi6FggI7aWUwRKyBCTBXAYBwC7DIXs0YT1NhLWqm
pbgVhBQ2r4AFYG+6BqqbsEjDY0D8J76gVfo0fFv0VFd5pj5xYZ7mFKBzfLNgYOYk/I/75tqsnsSQ
/SgcEQeOQGkK5TQFkwrlRcVPtVuEzpattLnGj+BVYznJ5IyCI+gJjTkeyUnb9Dtc1LpGQ4qQGqS6
KI0kLa20d1JhT9kYEh1Rh4jxiF7JmL4lrvvQMmTPkVOpQBSwHDlWA2y8tEGtV/SGeg0uJU1a5dzU
jm3BLoBxyFpRKZly8sGpcCshFIpkRZNZ4ooE3bgQ+IJDbTuRkstzNLkPm3UgrdXxTAH+OGEUTLQk
b6sszrgRoKYcZai9FcUgr9Y5Dm3YeFD7C3yB+Qq0MNEWDcorLgGKVSYxWETq/4KPF/EjzUCKv8dL
UZswBfxbLYLpt/E+eNKgNasdBF8IFHF2Vk/fCIrAR6ZrvcX4tYtPPpAtnlI0PgS+Fk/JDq+F+8Qy
ik24Lo1YSrFCQ7gOL4lGBxfQqeSQGzXsfxpMa+q0JC1LQGRKUxtR/VqsYVFBuoa2ciGyt7tgOptM
IHLG1hcQ597JX0W7my4FZGEaIvt5JxlVFVPMJSHdgV/ocvZBGHpOCvn9LH1x8venNUOsazLchUQS
Xv17Jvop9NqwtKfjz3s14GdsLjA/78wI8XwNMHK0Id47O3Q0xhQaDROCbxhBDudDWTRoDHLSx2pe
6MphRPXYG5fUBpllnrO5UCiSgLWn2bUQpUfhEFsh6vttEj5FNOsDANUQxwlVABHdMATWhura/Fg0
cAjwW4sB0I5AN/cwBOrolKzPCsGVX1AgDfyzGqDB5wW7slFe0Z1V0OoLaURHFrEBGgiMa5UujFbI
fWuOuIBjmCS9KAHrGGN7Y4dLIOEFqp0g6qbuRrtno3Ovqyc3lXZn2Ns/YfznWyIckZHx+65tF9wi
sM9ADcDPSgK0kResBXiE2QyoQzwMAAzB4LqmlKjX5Lp2voO4xt6/m+vIMuyLu7lEsSh7AVF6DTvB
rnuBNtjCUQEjjeiYC7MVSMIMK7RvV3v9d4qiM4676dp/a5t7L9hm1JP2Wc+e5RdkiQuQBGolOPd6
DGKlAoyDveev0cp7ZOiDb6cckTuMyNdhYThpatsAQVGUbn2g7bfmh9Tg2Js3EzNe5Q4ylbyCbjPI
CxV1t6VI5UyKrLeFwdtbuxYC37fva6GvB91gjUxQHuZqabbzQaL4cLD18/rIXHNzuqd3WU1zmd4B
hXVC6fdljP22d+YWrdNYK9gludQy0mOmwk3p219eXF68/uXND5fffffqxWUY+ltdhGDsxhpw5qNO
BiH5DuSOOiE4JgR70LLf1fwhx/b2DB6GditSe6Xvk20PkdPT0O53ag5HHPV6BN51DafTXOB80QpH
d+dA8velPnUitp/Ak9ydbad+Z/s6/+VuTcRm2Wt5Dv42cepuS/D0poKQc9TSHv4Oysv2SvnxbjJ5
T+b2MIVbZyAvAG0SsD27+PrKP92tr586F8228Xs3tPB698rW6QJ/vZuFnxuZcfO3iet328uIXHC7
Za/3jzZ/37cy0lbtJ2Kb7U7nArCGDBV24GJGsOJivYVTj1j92MoZ+9ixqCyWL8iloPtO2kTj/WbY
HQCpAfj2bJsfh4ma+fnpafiIiAUmTAFaWYFVYDbNdXqN6NeVwlyL0rHKZ9slT4VH72aCsNndu5jD
9tsZRDBNradtOfdDt5ezW1uYhNmKKkKzCvOEKRUtwEUt1u0B6MFzda3sRraHw/vM55DQYyp8ojZd
tzSwhfzb9dgW8t9XrG0hv9IA+5VR0V866zwfAvFrLj4s4uPv7S9vnv/j8uLq/5IA/OEx7NCYuBfD
ZiWghJsdWZcJY+5JaO4CmI/TQ+Cl/6CaxgfEzl3BD0T/O9Hkg2rw36qlwXrC9/sXuZVzxXP7sMXl
Zw0hYSt7PrgY9vYdUbknM3nCizLKg8fTvTvKb6F0LLItaaZa57DHVtIuzjrBmzZNsFWD/esaiz8S
ETdE1Ig8fSZuUwSwsKvFAg8eEqzEDhZvwUOou5AT7MNrAHbQVmOzrctSW0gItpCj4xCuBR6HHtIF
EHkVCwC+Q71xBqFSCNbOV3+wtBOPM1AWwvvOg4LHWKOuQ/3pKb6GJAHU2axLtM5I5sJ5ZUInbycA
UsqLVliXk+5Q7NoJzyTX3V24macPWnO75dU9w/8cQ6eZL++JU/fFngZcdi0lvAPwrCxzOnZB+wbR
yvLoEPGQwTpY1Hv76PmxoU4BYoYSG2LH+/ajWHjcRMFI5WGjDpwLHe/BU7UHdccYIzDdOgzbH1Hk
3YSad9of8izALrAW4AWSTPBwyFViqJkbXnzJXsV6Vb/rADLWlrWCRBWLTLSgUmAkgxRVrSE2qflZ
OwOHIZSaY8mM+3PidpHojpJXTGspgGXsSLq6BnbHtmHJIYpO8ey9fsQAwyd4BKuo8n3cG7I3eE9k
pyBaYhEfJKPwKVXraHxrPzNska+L7/vqmgN20jgQraXeQ+VkyJ6FiE8F936IhaA/Sxr3pjxllxIr
sZ0nzo5f44ZvWRfg/dk7xkAK/MEM20aGmEgnj+E7AIcVePpHo1o1092zywL4z+G7sEI52rx4wIpH
HAWxtHVYT/tPOqsHt6qP6HG7mTvpmcKbAZsoY9F6wBd1ACZw9wTCFDwF/Yh+06XpcoHGix2+DIub
QNDjSqZ0yjLjuKMNlyHwlh3P/cyA+IMpeV0g1Ad4jh7ThCW0xRSRmA6Dd07yNayN9sl7u0Jf6/M5
DF5xAildzRd1CdviQYkSM/R9aKYLBPmKr7H26kvB4CmUBuDS2gA+vR1+Jk0nEqB864YQBEBoFCgV
tO1f4c0FOpYGN8UdKl4tcIvVQnr7ZXIpM9E8dqA9a7qo1HU4btfMBz1SSGho5B1SEY0K1jVVKfyO
ORCjkyyJByYWN8KgRNCuE+FchWoSUzyFyCkDA4OAwBWFMG9AmFHcwuyyvhBWK/0lSBC3p+Fm1WTf
IXjjwk7jEbKBoNDdiz2NxyH0a912euA0oPyDpoF+++5B4f2jr776and8uA66cxOu9bbz1HG9aqZh
oYWriqBc+sNTo9W6YHQbCq+wlutwa+9JCs+QYIceE/b0+ORvZHe6WlgAkK3Za5cNkU7rPp8/BsPL
nHThAJZlXmGEwHsxEHD8IsJwGObCJYdE4KPEOg6ei9Bq1SsljB2Op2aC0uLcWWsiUCe6dk0aD01h
VSh0K7y56QMoCF3Uy5qEDqbFy7uno9FqtRrOVTXUZj4Kw+1oluXBol9/8z17CaCyJST8XvvO8VYx
gMKn/noH4tQ0h2xV1AUfovBOzxwFkZd4sTT4epAOtBqOYaP4uZ5r69VlIMQW3FyTGB02IG8ABbyU
Kkcq8N8IIq4m7CFYNVLQlaM8W4HGICZBpu6bG8RxLtApLEa3Rot4nXUahflVGZ0t3L8d+VvT/wNQ
SwECMwAUAAAACAAbQIJJbcNpe9cNAABtLQAAEQAAAAAAAAAAAAAAAAAAAAAAczFldXdpY2YubzFu
Lmh0bWxQSwUGAAAAAAEAAQA/AAAABg4AAAAA
</internal-file></reference><sdl:ref-files><sdl:ref-file uid="0" id="Html.DependencyFileId" name="qtcore-threads-semaphores-example.html" o-path="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtcore\qtcore-threads-semaphores-example.html" date="12/02/2016 08:00:55" expected-use="Generation"/></sdl:ref-files><file-info xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><value key="SDL:FileId">6a65c486-7812-4531-bc3a-b7e1ac64dac0</value><value key="SDL:CreationDate">03/14/2019 16:18:34</value><value key="SDL:OriginalFilePath">D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qtcore\qtcore-threads-semaphores-example.html</value><value key="SDL:OriginalEncoding">utf-8</value><value key="NeedsSegmentRenumbering">True</value><value key="HtmlEntityFound">True</value><value key="HeadEntityFound">True</value><value key="MetaEntityFound">True</value><value key="BodyEntityFound">True</value><value key="HtmlVersion">html5</value><value key="OperatingSystem">Linux</value><value key="ParagraphTextDirections"></value><sniff-info><detected-encoding detection-level="Certain" encoding="utf-8"/><detected-source-lang detection-level="Likely" lang="en-US"/></sniff-info></file-info><sdl:filetype-info><sdl:filetype-id>Html 5 2.0.0.0</sdl:filetype-id></sdl:filetype-info><fmt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><fmt-def id="1"/><fmt-def id="2"><value key="TextColor">Blue</value><value key="Underline">True</value></fmt-def><fmt-def id="3"><value key="Italic">True</value></fmt-def></fmt-defs><cxt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><cxt-def id="1" type="LocationDetails" purpose="Location"><props><value key="StartsAt">-1</value><value key="EndsAt">39</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="2" type="LocationDetails" purpose="Location"><props><value key="StartsAt">81</value><value key="EndsAt">178</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="3" type="sdl:meta" color="Control"><fmt id="1"/></cxt-def><cxt-def id="4" type="sdl:html-control" color="Control"><fmt id="1"/></cxt-def><cxt-def id="5" type="LocationDetails" purpose="Location"><props><value key="StartsAt">178</value><value key="EndsAt">217</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="6" type="sdl:title" color="Control"><fmt id="1"/></cxt-def><cxt-def id="7" type="LocationDetails" purpose="Location"><props><value key="StartsAt">629</value><value key="EndsAt">714</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="8" type="x-tm-table-cell"><fmt id="1"/></cxt-def><cxt-def id="9" type="sdl:table-row" color="Control"><fmt id="1"/></cxt-def><cxt-def id="10" type="sdl:table" color="Control"><fmt id="1"/></cxt-def><cxt-def id="11" type="div" code="DIV" name="Div" descr="A div section" color=""><fmt id="1"/></cxt-def><cxt-def id="12" type="sdl:body" color="Control"><fmt id="1"/></cxt-def><cxt-def id="13" type="sdl:link" color="Control"><fmt id="1"/></cxt-def><cxt-def id="14" type="LocationDetails" purpose="Location"><props><value key="StartsAt">719</value><value key="EndsAt">763</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="15" type="LocationDetails" purpose="Location"><props><value key="StartsAt">768</value><value key="EndsAt">791</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="16" type="LocationDetails" purpose="Location"><props><value key="StartsAt">842</value><value key="EndsAt">923</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="17" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1090</value><value key="EndsAt">1120</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="18" type="x-tm-heading"><fmt id="1"/></cxt-def><cxt-def id="19" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1131</value><value key="EndsAt">1198</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="20" type="x-tm-listitem"><fmt id="1"/></cxt-def><cxt-def id="21" type="sdl:unordered-list" color="Control"><fmt id="1"/></cxt-def><cxt-def id="22" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1204</value><value key="EndsAt">1267</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="23" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1273</value><value key="EndsAt">1336</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="24" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1342</value><value key="EndsAt">1413</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="25" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1495</value><value key="EndsAt">1531</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="26" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1531</value><value key="EndsAt">1611</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="27" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1611</value><value key="EndsAt">1654</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="28" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1654</value><value key="EndsAt">1895</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="29" type="sdl:paragraph" color="Control"><fmt id="1"/></cxt-def><cxt-def id="30" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1900</value><value key="EndsAt">2259</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="31" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2264</value><value key="EndsAt">2530</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="32" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2535</value><value key="EndsAt">2842</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="33" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2842</value><value key="EndsAt">2879</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="34" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2879</value><value key="EndsAt">2921</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="35" type="LocationDetails" purpose="Location"><props><value key="StartsAt">2927</value><value key="EndsAt">3005</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="36" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3010</value><value key="EndsAt">3545</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="37" type="pre" code="PRE" name="Pre" descr="A preformated text section" color=""><fmt id="1"/></cxt-def><cxt-def id="38" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3552</value><value key="EndsAt">3900</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="39" type="LocationDetails" purpose="Location"><props><value key="StartsAt">3905</value><value key="EndsAt">4324</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="40" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4329</value><value key="EndsAt">4532</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="41" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4537</value><value key="EndsAt">4766</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="42" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4766</value><value key="EndsAt">4801</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="43" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4801</value><value key="EndsAt">4839</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="44" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4845</value><value key="EndsAt">4906</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="45" type="LocationDetails" purpose="Location"><props><value key="StartsAt">4911</value><value key="EndsAt">6251</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="46" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6258</value><value key="EndsAt">6592</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="47" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6597</value><value key="EndsAt">6808</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="48" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6808</value><value key="EndsAt">6843</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="49" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6843</value><value key="EndsAt">6881</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="50" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6887</value><value key="EndsAt">6940</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="51" type="LocationDetails" purpose="Location"><props><value key="StartsAt">6945</value><value key="EndsAt">8232</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="52" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8239</value><value key="EndsAt">8402</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="53" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8402</value><value key="EndsAt">8440</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="54" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8440</value><value key="EndsAt">8486</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="55" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8492</value><value key="EndsAt">8664</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="56" type="LocationDetails" purpose="Location"><props><value key="StartsAt">8669</value><value key="EndsAt">9363</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="57" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9370</value><value key="EndsAt">9960</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="58" type="LocationDetails" purpose="Location"><props><value key="StartsAt">9965</value><value key="EndsAt">10296</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="59" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10301</value><value key="EndsAt">10669</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="60" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10674</value><value key="EndsAt">10683</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="61" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10693</value><value key="EndsAt">10790</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="62" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10796</value><value key="EndsAt">10893</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="63" type="LocationDetails" purpose="Location"><props><value key="StartsAt">10905</value><value key="EndsAt">10951</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="64" type="LocationDetails" purpose="Location"><props><value key="StartsAt">11030</value><value key="EndsAt">11063</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="65" type="LocationDetails" purpose="Location"><props><value key="StartsAt">11063</value><value key="EndsAt">11601</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def></cxt-defs><node-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><node-def id="1" parent="2"><cxt id="3"/></node-def><node-def id="2"><cxt id="4"/></node-def><node-def id="3" parent="1"><cxt id="3"/></node-def><node-def id="4" parent="3"><cxt id="6"/></node-def><node-def id="5" parent="6"><cxt id="9"/></node-def><node-def id="6" parent="7"><cxt id="10"/></node-def><node-def id="7" parent="8"><cxt id="11"/></node-def><node-def id="8" parent="9"><cxt id="11"/></node-def><node-def id="9" parent="10"><cxt id="11"/></node-def><node-def id="10" parent="11"><cxt id="11"/></node-def><node-def id="11" parent="12"><cxt id="12"/></node-def><node-def id="12" parent="3"><cxt id="13"/></node-def><node-def id="13" parent="5"><cxt id="8"/></node-def><node-def id="14" parent="5"><cxt id="8"/></node-def><node-def id="15" parent="5"><cxt id="8"/></node-def><node-def id="16" parent="17"><cxt id="9"/></node-def><node-def id="17" parent="7"><cxt id="10"/></node-def><node-def id="18" parent="16"><cxt id="8"/></node-def><node-def id="19" parent="20"><cxt id="11"/></node-def><node-def id="20" parent="21"><cxt id="11"/></node-def><node-def id="21" parent="22"><cxt id="11"/></node-def><node-def id="22" parent="23"><cxt id="11"/></node-def><node-def id="23" parent="9"><cxt id="11"/></node-def><node-def id="24" parent="19"><cxt id="18"/></node-def><node-def id="25" parent="19"><cxt id="21"/></node-def><node-def id="26" parent="25"><cxt id="20"/></node-def><node-def id="27" parent="25"><cxt id="20"/></node-def><node-def id="28" parent="25"><cxt id="20"/></node-def><node-def id="29" parent="25"><cxt id="20"/></node-def><node-def id="30" parent="21"><cxt id="18"/></node-def><node-def id="31" parent="21"><cxt id="11"/></node-def><node-def id="32" parent="31"><cxt id="29"/></node-def><node-def id="33" parent="31"><cxt id="29"/></node-def><node-def id="34" parent="31"><cxt id="29"/></node-def><node-def id="35" parent="31"><cxt id="29"/></node-def><node-def id="36" parent="31"><cxt id="18"/></node-def><node-def id="37" parent="31"><cxt id="29"/></node-def><node-def id="38" parent="31"><cxt id="37"/></node-def><node-def id="39" parent="31"><cxt id="29"/></node-def><node-def id="40" parent="31"><cxt id="29"/></node-def><node-def id="41" parent="31"><cxt id="29"/></node-def><node-def id="42" parent="31"><cxt id="29"/></node-def><node-def id="43" parent="31"><cxt id="18"/></node-def><node-def id="44" parent="31"><cxt id="29"/></node-def><node-def id="45" parent="31"><cxt id="37"/></node-def><node-def id="46" parent="31"><cxt id="29"/></node-def><node-def id="47" parent="31"><cxt id="29"/></node-def><node-def id="48" parent="31"><cxt id="18"/></node-def><node-def id="49" parent="31"><cxt id="29"/></node-def><node-def id="50" parent="31"><cxt id="37"/></node-def><node-def id="51" parent="31"><cxt id="29"/></node-def><node-def id="52" parent="31"><cxt id="18"/></node-def><node-def id="53" parent="31"><cxt id="29"/></node-def><node-def id="54" parent="31"><cxt id="37"/></node-def><node-def id="55" parent="31"><cxt id="29"/></node-def><node-def id="56" parent="31"><cxt id="29"/></node-def><node-def id="57" parent="31"><cxt id="29"/></node-def><node-def id="58" parent="31"><cxt id="29"/></node-def><node-def id="59" parent="31"><cxt id="21"/></node-def><node-def id="60" parent="59"><cxt id="20"/></node-def><node-def id="61" parent="59"><cxt id="20"/></node-def><node-def id="62" parent="11"><cxt id="11"/></node-def><node-def id="63" parent="62"><cxt id="29"/></node-def></node-defs><tag-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><tag id="4"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdoc/supported-platforms-and-configurations.html#qt-5-7&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="7"><bpt name="a" word-end="false">&lt;a href=&quot;qtcore-index.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="10"><bpt name="a" word-end="false">&lt;a name=&quot;toc&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="13"><bpt name="a" word-end="false">&lt;a href=&quot;#global-variables&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="16"><bpt name="a" word-end="false">&lt;a href=&quot;#producer-class&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="19"><bpt name="a" word-end="false">&lt;a href=&quot;#consumer-class&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="22"><bpt name="a" word-end="false">&lt;a href=&quot;#the-main-function&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="25"><bpt name="span" word-end="false">&lt;span class=&quot;subtitle&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="29"><bpt name="a" word-end="false">&lt;a name=&quot;details&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="32"><bpt name="a" word-end="false">&lt;a href=&quot;qmutex.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="35"><bpt name="i" word-end="false">&lt;i&gt;</bpt><bpt-props><value key="FormattingItemItalic">True</value><value key="StartTag">i</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="i" word-end="false">&lt;/i&gt;</ept><fmt id="3"/></tag><tag id="38"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="41"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="44"><bpt name="a" word-end="false">&lt;a href=&quot;qthread.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="47"><bpt name="a" word-end="false">&lt;a href=&quot;qsemaphore.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="50"><bpt name="a" word-end="false">&lt;a href=&quot;qwaitcondition.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="53"><bpt name="a" word-end="false">&lt;a href=&quot;qmutex.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="56"><bpt name="a" word-end="false">&lt;a href=&quot;qtcore-threads-waitconditions-example.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="59"><bpt name="a" word-end="false">&lt;a name=&quot;global-variables&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="62"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="65"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="68"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="71"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="74"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="77"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="80"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="83"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="86"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="89"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="92"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="95"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="98"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="101"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="104"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="107"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="110"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="113"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="116"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="119"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="122"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="125"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="128"><bpt name="a" word-end="false">&lt;a name=&quot;producer-class&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="131"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="134"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="137"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="140"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="143"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="146"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="149"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="152"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="155"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="158"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="161"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="164"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="167"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="170"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="173"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="176"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="179"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="182"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="185"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="188"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="191"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="194"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="197"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="200"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="203"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="206"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="209"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="212"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="215"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="218"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="221"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="224"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="227"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="230"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="233"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="236"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="239"><bpt name="a" word-end="false">&lt;a href=&quot;qsemaphore.html#acquire&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="242"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="245"><bpt name="a" word-end="false">&lt;a name=&quot;consumer-class&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="248"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="251"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="254"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="257"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="260"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="263"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="266"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="269"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="272"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="275"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="278"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="281"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="284"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="287"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="290"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="293"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="296"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="299"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="302"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="305"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="308"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="311"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="314"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="317"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="320"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="323"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="326"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="329"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="332"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="335"><bpt name="a" word-end="false">&lt;a name=&quot;the-main-function&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="338"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="341"><bpt name="a" word-end="false">&lt;a href=&quot;qthread.html#wait&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="344"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="347"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="350"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="353"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="356"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="359"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="362"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="365"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="368"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="371"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="374"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="377"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="380"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="383"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="386"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="389"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="392"><bpt name="a" word-end="false">&lt;a href=&quot;qsemaphore.html#available&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="395"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="398"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="401"><bpt name="code" word-end="false">&lt;code&gt;</bpt><bpt-props><value key="StartTag">code</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">Protected</value></bpt-props><ept name="code" word-end="false">&lt;/code&gt;</ept><fmt id="1"/></tag><tag id="404"><bpt name="a" word-end="false">&lt;a href=&quot;qsemaphore.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="407"><bpt name="a" word-end="false">&lt;a href=&quot;qtcore-threads-semaphores-semaphores-cpp.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="410"><bpt name="a" word-end="false">&lt;a href=&quot;qtcore-threads-semaphores-semaphores-pro.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="416"><bpt name="a" word-end="false">&lt;a href=&quot;http://www.gnu.org/licenses/fdl.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="0"><ph name="xml" word-end="false">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</ph><props><value key="ProcessingInstructionTag">xml</value></props></tag><tag id="1"><ph name="Comment" word-end="false">&lt;!-- semaphores.qdoc --&gt;</ph></tag><tag id="26"><ph name="Comment" word-end="false">&lt;!-- $$$threads/semaphores-description --&gt;</ph></tag><tag id="411"><ph name="Comment" word-end="false">&lt;!-- @@@threads/semaphores --&gt;</ph></tag><tag id="412"><ph name="copy" word-end="false" seg-hint="IncludeWithText">&amp;copy;</ph><props><value key="PlaceholderForMappedEntity">true</value></props></tag><tag id="413"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="417"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag></tag-defs></header><body><group><sdl:cxts><sdl:cxt id="1"/></sdl:cxts><trans-unit id="2145c038-1670-4e87-b359-b88181ad80aa"><source><x id="0"/>
</source><seg-source><x id="0"/>
</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="2"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="3"/></sdl:cxts><trans-unit id="031dc2aa-19b6-4d67-89e9-46455a37794d"><source><x id="1"/></source><seg-source><x id="1"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="5"/><sdl:cxt id="6"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="4"/></sdl:cxts><trans-unit id="358ede48-3e59-461c-a976-237569a53c31"><source>Semaphores Example | Qt Core 5.7</source><seg-source>Semaphores Example | Qt Core 5.7</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="13"/></sdl:cxts><trans-unit id="07a13d16-fcaf-4c5f-9950-cc5e29a7edd6"><source><g id="4">Qt 5.7</g></source><seg-source><g id="4">Qt 5.7</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="14"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="14"/></sdl:cxts><trans-unit id="a20c79c3-11eb-4870-9b7e-1b77f648633d"><source><g id="7">Qt Core</g></source><seg-source><g id="7">Qt Core</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="15"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="15"/></sdl:cxts><trans-unit id="280af7a9-c48b-45d9-bea2-d57eed510bca"><source>Semaphores Example</source><seg-source>Semaphores Example</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="16"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="18"/></sdl:cxts><trans-unit id="e3968882-8085-46fe-83ff-ab14e0535ee8"><source>Qt 5.7.1 Reference Documentation</source><seg-source>Qt 5.7.1 Reference Documentation</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="17"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="24"/></sdl:cxts><trans-unit id="b3be0325-4fe5-405f-81b5-186d7f8c54c3"><source><g id="10">Contents</g></source><seg-source><g id="10">Contents</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="19"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="26"/></sdl:cxts><trans-unit id="75936a1b-acb1-4a45-858b-5887166b7c25"><source><g id="13">Global Variables</g></source><seg-source><g id="13">Global Variables</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="22"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="27"/></sdl:cxts><trans-unit id="b6a5ca8f-9040-4aab-b860-a7a5cb6bfbaf"><source><g id="16">Producer Class</g></source><seg-source><g id="16">Producer Class</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="23"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="28"/></sdl:cxts><trans-unit id="227db353-8f4c-4f65-ac81-af5207eb0715"><source><g id="19">Consumer Class</g></source><seg-source><g id="19">Consumer Class</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="24"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="29"/></sdl:cxts><trans-unit id="e4e9c2ab-4413-4736-9f54-b888a2bb664f"><source><g id="22">The main() Function</g></source><seg-source><g id="22">The main() Function</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="25"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="30"/></sdl:cxts><trans-unit id="0acd7897-6b52-42f6-b9ff-e3e61f62e6ce"><source>Semaphores Example</source><seg-source>Semaphores Example</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="26"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="21"/></sdl:cxts><trans-unit id="75ff5ed0-f2c8-4497-ab0b-f1fca375faa3"><source><g id="25"/> <x id="26"/></source><seg-source><g id="25"/> <x id="26"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="27"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="f1ec7eb0-f980-4899-a4ca-d8a76dacc2f0"><source><g id="29"/></source><seg-source><g id="29"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="28"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="32"/></sdl:cxts><trans-unit id="bb98dbde-0fe3-4bb9-8177-db3c5d0b0da0"><source>The producer writes data to the buffer until it reaches the end of the buffer, at which point it restarts from the beginning, overwriting existing data. The consumer thread reads the data as it is produced and writes it to standard error.</source><seg-source>The producer writes data to the buffer until it reaches the end of the buffer, at which point it restarts from the beginning, overwriting existing data. The consumer thread reads the data as it is produced and writes it to standard error.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="30"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="33"/></sdl:cxts><trans-unit id="97aa7ceb-812b-4f3c-b4c6-3057f690562a"><source>Semaphores make it possible to have a higher level of concurrency than mutexes. If accesses to the buffer were guarded by a <g id="32">QMutex</g>, the consumer thread couldn&apos;t access the buffer at the same time as the producer thread. Yet, there is no harm in having both threads working on <g id="35">different parts</g> of the buffer at the same time.</source><seg-source>Semaphores make it possible to have a higher level of concurrency than mutexes. If accesses to the buffer were guarded by a <g id="32">QMutex</g>, the consumer thread couldn&apos;t access the buffer at the same time as the producer thread. Yet, there is no harm in having both threads working on <g id="35">different parts</g> of the buffer at the same time.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="31"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="34"/></sdl:cxts><trans-unit id="lockTU_2a76fecf-437c-45d3-bd81-722449facb3c" translate="no" sdl:locktype="Structure"><source><g id="38">Producer</g></source></trans-unit><trans-unit id="lockTU_d5baff0a-75bc-40f4-9915-af67760e88c3" translate="no" sdl:locktype="Structure"><source><g id="41">Consumer</g></source></trans-unit><trans-unit id="lockTU_0c3224d2-7a1e-4d05-ae9d-d2f0b7ead6af" translate="no" sdl:locktype="Structure"><source><g id="38">Producer</g></source></trans-unit><trans-unit id="lockTU_b52ea752-da76-4298-a677-a2d62452fb18" translate="no" sdl:locktype="Structure"><source><g id="41">Consumer</g></source></trans-unit><trans-unit id="e1a10d46-870c-4069-a58c-42925573879d"><source>The example comprises two classes: <x id="locked1" xid="lockTU_0c3224d2-7a1e-4d05-ae9d-d2f0b7ead6af"/> and <x id="locked2" xid="lockTU_b52ea752-da76-4298-a677-a2d62452fb18"/>. Both inherit from <g id="44">QThread</g>. The circular buffer used for communicating between these two classes and the semaphores that protect it are global variables.</source><seg-source>The example comprises two classes: <x id="locked3" xid="lockTU_2a76fecf-437c-45d3-bd81-722449facb3c"/> and <x id="locked4" xid="lockTU_d5baff0a-75bc-40f4-9915-af67760e88c3"/>. Both inherit from <g id="44">QThread</g>. The circular buffer used for communicating between these two classes and the semaphores that protect it are global variables.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="32"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="35"/></sdl:cxts><trans-unit id="15295fcf-906c-4fd0-9637-8343c441287b"><source>An alternative to using <g id="47">QSemaphore</g> to solve the producer-consumer problem is to use <g id="50">QWaitCondition</g> and <g id="53">QMutex</g>. This is what the <g id="56">Wait Conditions Example</g> does.</source><seg-source>An alternative to using <g id="47">QSemaphore</g> to solve the producer-consumer problem is to use <g id="50">QWaitCondition</g> and <g id="53">QMutex</g>. This is what the <g id="56">Wait Conditions Example</g> does.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="33"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="9ceaf18c-361f-4df8-9d3b-3e0ec2c0b052"><source><g id="59"/></source><seg-source><g id="59"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="34"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="36"/></sdl:cxts><trans-unit id="8ebe4311-2c91-46ad-bd92-fcd3626f9a65"><source>Global Variables</source><seg-source>Global Variables</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="35"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="37"/></sdl:cxts><trans-unit id="73c0c393-5998-4c6d-8ad5-a6ff1a1a710a"><source>Let&apos;s start by reviewing the circular buffer and the associated semaphores:</source><seg-source>Let&apos;s start by reviewing the circular buffer and the associated semaphores:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="36"/><sdl:cxt id="37"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="38"/></sdl:cxts><trans-unit id="2421b333-2542-41bf-a9f4-9b595dd8fbed"><source><g id="62">const</g> <g id="65">int</g> DataSize <g id="68">=</g> <g id="71">100000</g>; <g id="74">const</g> <g id="77">int</g> BufferSize <g id="80">=</g> <g id="83">8192</g>; <g id="86">char</g> buffer<g id="89">[</g>BufferSize<g id="92">]</g>; <g id="95">QSemaphore</g> freeBytes(BufferSize); <g id="98">QSemaphore</g> usedBytes;</source><seg-source><g id="62">const</g> <g id="65">int</g> DataSize <g id="68">=</g> <g id="71">100000</g>; <g id="74">const</g> <g id="77">int</g> BufferSize <g id="80">=</g> <g id="83">8192</g>; <g id="86">char</g> buffer<g id="89">[</g>BufferSize<g id="92">]</g>; <g id="95">QSemaphore</g> freeBytes(BufferSize); <g id="98">QSemaphore</g> usedBytes;</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="38"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="39"/></sdl:cxts><trans-unit id="lockTU_c5ef4bdf-b404-411c-9d6b-62714e7f468e" translate="no" sdl:locktype="Structure"><source><g id="101">DataSize</g></source></trans-unit><trans-unit id="lockTU_133dac97-6b66-44d8-a5f9-23bac9f28531" translate="no" sdl:locktype="Structure"><source><g id="104">BufferSize</g></source></trans-unit><trans-unit id="lockTU_9e38b520-de8a-48bd-8d72-b28d3044bc7e" translate="no" sdl:locktype="Structure"><source><g id="107">DataSize</g></source></trans-unit><trans-unit id="lockTU_f5c488f3-b25b-46c6-8426-8cca005a9716" translate="no" sdl:locktype="Structure"><source><g id="101">DataSize</g></source></trans-unit><trans-unit id="lockTU_414c3628-2d11-4846-8cfa-5c2eb8d47dc0" translate="no" sdl:locktype="Structure"><source><g id="104">BufferSize</g></source></trans-unit><trans-unit id="lockTU_15fb1045-5c5d-4639-b3f0-cc7fd1789cfe" translate="no" sdl:locktype="Structure"><source><g id="107">DataSize</g></source></trans-unit><trans-unit id="d3045451-b0e7-439e-90b3-e830c1616f4e"><source><x id="locked5" xid="lockTU_f5c488f3-b25b-46c6-8426-8cca005a9716"/> is the amout of data that the producer will generate. To keep the example as simple as possible, we make it a constant. <x id="locked6" xid="lockTU_414c3628-2d11-4846-8cfa-5c2eb8d47dc0"/> is the size of the circular buffer. It is less than <x id="locked7" xid="lockTU_15fb1045-5c5d-4639-b3f0-cc7fd1789cfe"/>, meaning that at some point the producer will reach the end of the buffer and restart from the beginning.</source><seg-source><x id="locked8" xid="lockTU_c5ef4bdf-b404-411c-9d6b-62714e7f468e"/> is the amout of data that the producer will generate. To keep the example as simple as possible, we make it a constant. <x id="locked9" xid="lockTU_133dac97-6b66-44d8-a5f9-23bac9f28531"/> is the size of the circular buffer. It is less than <x id="locked10" xid="lockTU_9e38b520-de8a-48bd-8d72-b28d3044bc7e"/>, meaning that at some point the producer will reach the end of the buffer and restart from the beginning.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="39"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="40"/></sdl:cxts><trans-unit id="lockTU_be4f0d6b-7d4a-4d38-9ebe-44ccc572d9ac" translate="no" sdl:locktype="Structure"><source><g id="110">freeBytes</g></source></trans-unit><trans-unit id="lockTU_ee8f20bf-cede-4774-9332-5c1127c237f5" translate="no" sdl:locktype="Structure"><source><g id="113">usedBytes</g></source></trans-unit><trans-unit id="lockTU_55aeef95-0fee-4d8f-a958-83a1c3898f05" translate="no" sdl:locktype="Structure"><source><g id="110">freeBytes</g></source></trans-unit><trans-unit id="lockTU_f5c84cce-2d09-44ae-9af8-b84e39af4fae" translate="no" sdl:locktype="Structure"><source><g id="113">usedBytes</g></source></trans-unit><trans-unit id="ea927b3f-e71e-4eb9-8322-fd270115a9f8"><source>To synchronize the producer and the consumer, we need two semaphores. The <x id="locked11" xid="lockTU_55aeef95-0fee-4d8f-a958-83a1c3898f05"/> semaphore controls the &quot;free&quot; area of the buffer (the area that the producer hasn&apos;t filled with data yet or that the consumer has already read). The <x id="locked12" xid="lockTU_f5c84cce-2d09-44ae-9af8-b84e39af4fae"/> semaphore controls the &quot;used&quot; area of the buffer (the area that the producer has filled but that the consumer hasn&apos;t read yet).</source><seg-source>To synchronize the producer and the consumer, we need two semaphores. The <x id="locked13" xid="lockTU_be4f0d6b-7d4a-4d38-9ebe-44ccc572d9ac"/> semaphore controls the &quot;free&quot; area of the buffer (the area that the producer hasn&apos;t filled with data yet or that the consumer has already read). The <x id="locked14" xid="lockTU_ee8f20bf-cede-4774-9332-5c1127c237f5"/> semaphore controls the &quot;used&quot; area of the buffer (the area that the producer has filled but that the consumer hasn&apos;t read yet).</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="40"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="41"/></sdl:cxts><trans-unit id="lockTU_5daf3c7d-8999-4eda-a82a-e6bb47ba5d06" translate="no" sdl:locktype="Structure"><source><g id="116">BufferSize</g></source></trans-unit><trans-unit id="lockTU_a20cc602-e1f8-4a82-aac1-4f21a7cee423" translate="no" sdl:locktype="Structure"><source><g id="116">BufferSize</g></source></trans-unit><trans-unit id="06f3b461-fe5e-49fa-b6c5-709ded8a30e6"><source>Together, the semaphores ensure that the producer is never more than <x id="locked15" xid="lockTU_a20cc602-e1f8-4a82-aac1-4f21a7cee423"/> bytes ahead of the consumer, and that the consumer never reads data that the producer hasn&apos;t generated yet.</source><seg-source>Together, the semaphores ensure that the producer is never more than <x id="locked16" xid="lockTU_5daf3c7d-8999-4eda-a82a-e6bb47ba5d06"/> bytes ahead of the consumer, and that the consumer never reads data that the producer hasn&apos;t generated yet.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="41"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="42"/></sdl:cxts><trans-unit id="lockTU_0e76dfc9-ccb8-4edd-94bc-d7c0cc5404e1" translate="no" sdl:locktype="Structure"><source><g id="119">freeBytes</g></source></trans-unit><trans-unit id="lockTU_96371eeb-3815-4c80-ab19-071131b57cd3" translate="no" sdl:locktype="Structure"><source><g id="122">BufferSize</g></source></trans-unit><trans-unit id="lockTU_3b0070c1-0173-4da1-a7eb-d8c389fd3e3a" translate="no" sdl:locktype="Structure"><source><g id="125">usedBytes</g></source></trans-unit><trans-unit id="lockTU_6cace6b2-fea9-4924-87e5-a15c97e9e499" translate="no" sdl:locktype="Structure"><source><g id="119">freeBytes</g></source></trans-unit><trans-unit id="lockTU_d736ef54-1729-43ff-bb22-8ec860946409" translate="no" sdl:locktype="Structure"><source><g id="122">BufferSize</g></source></trans-unit><trans-unit id="lockTU_766c5fb1-5dfd-4f39-b7e9-bf3b8e33e6c9" translate="no" sdl:locktype="Structure"><source><g id="125">usedBytes</g></source></trans-unit><trans-unit id="194a6003-b816-4e48-a064-197bec89d674"><source>The <x id="locked17" xid="lockTU_6cace6b2-fea9-4924-87e5-a15c97e9e499"/> semaphore is initialized with <x id="locked18" xid="lockTU_d736ef54-1729-43ff-bb22-8ec860946409"/>, because initially the entire buffer is empty. The <x id="locked19" xid="lockTU_766c5fb1-5dfd-4f39-b7e9-bf3b8e33e6c9"/> semaphore is initialized to 0 (the default value if none is specified).</source><seg-source>The <x id="locked20" xid="lockTU_0e76dfc9-ccb8-4edd-94bc-d7c0cc5404e1"/> semaphore is initialized with <x id="locked21" xid="lockTU_96371eeb-3815-4c80-ab19-071131b57cd3"/>, because initially the entire buffer is empty. The <x id="locked22" xid="lockTU_3b0070c1-0173-4da1-a7eb-d8c389fd3e3a"/> semaphore is initialized to 0 (the default value if none is specified).</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="42"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="e76f50be-ccd8-4206-8322-439fa31bb730"><source><g id="128"/></source><seg-source><g id="128"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="43"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="43"/></sdl:cxts><trans-unit id="7a7bbc2f-48bc-4008-909a-1551f49f31d8"><source>Producer Class</source><seg-source>Producer Class</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="44"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="44"/></sdl:cxts><trans-unit id="lockTU_2f454417-6c18-4dc9-8d86-482bd6d31327" translate="no" sdl:locktype="Structure"><source><g id="131">Producer</g></source></trans-unit><trans-unit id="lockTU_80d1ea42-d467-4c8c-8a0d-b645c8ec0ec3" translate="no" sdl:locktype="Structure"><source><g id="131">Producer</g></source></trans-unit><trans-unit id="92599f09-0189-4863-8d11-a60f27b4b411"><source>Let&apos;s review the code for the <x id="locked23" xid="lockTU_80d1ea42-d467-4c8c-8a0d-b645c8ec0ec3"/> class:</source><seg-source>Let&apos;s review the code for the <x id="locked24" xid="lockTU_2f454417-6c18-4dc9-8d86-482bd6d31327"/> class:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="45"/><sdl:cxt id="37"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="45"/></sdl:cxts><trans-unit id="9b3c9398-f8d4-4bee-aa42-3424a354dda2"><source><g id="134">class</g> Producer : <g id="137">public</g> <g id="140">QThread</g> { <g id="143">public</g>: <g id="146">void</g> run() Q_DECL_OVERRIDE { qsrand(<g id="149">QTime</g>(<g id="152">0</g><g id="155">,</g><g id="158">0</g><g id="161">,</g><g id="164">0</g>)<g id="167">.</g>secsTo(<g id="170">QTime</g><g id="173">::</g>currentTime())); <g id="176">for</g> (<g id="179">int</g> i <g id="182">=</g> <g id="185">0</g>; i <g id="188">&lt;</g> DataSize; <g id="191">+</g><g id="194">+</g>i) { freeBytes<g id="197">.</g>acquire(); buffer<g id="200">[</g>i <g id="203">%</g> BufferSize<g id="206">]</g> <g id="209">=</g> <g id="212">&quot;ACGT&quot;</g><g id="215">[</g>(<g id="218">int</g>)qrand() <g id="221">%</g> <g id="224">4</g><g id="227">]</g>; usedBytes<g id="230">.</g>release(); } } };</source><seg-source><g id="134">class</g> Producer : <g id="137">public</g> <g id="140">QThread</g> { <g id="143">public</g>: <g id="146">void</g> run() Q_DECL_OVERRIDE { qsrand(<g id="149">QTime</g>(<g id="152">0</g><g id="155">,</g><g id="158">0</g><g id="161">,</g><g id="164">0</g>)<g id="167">.</g>secsTo(<g id="170">QTime</g><g id="173">::</g>currentTime())); <g id="176">for</g> (<g id="179">int</g> i <g id="182">=</g> <g id="185">0</g>; i <g id="188">&lt;</g> DataSize; <g id="191">+</g><g id="194">+</g>i) { freeBytes<g id="197">.</g>acquire(); buffer<g id="200">[</g>i <g id="203">%</g> BufferSize<g id="206">]</g> <g id="209">=</g> <g id="212">&quot;ACGT&quot;</g><g id="215">[</g>(<g id="218">int</g>)qrand() <g id="221">%</g> <g id="224">4</g><g id="227">]</g>; usedBytes<g id="230">.</g>release(); } } };</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="46"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="46"/></sdl:cxts><trans-unit id="lockTU_b16adae5-dd6a-4e30-8c6e-2deca2a84780" translate="no" sdl:locktype="Structure"><source><g id="233">DataSize</g></source></trans-unit><trans-unit id="lockTU_55a2c328-d23e-4f7a-84bd-89b0a8fb1cdf" translate="no" sdl:locktype="Structure"><source><g id="236">freeBytes</g></source></trans-unit><trans-unit id="lockTU_93aa4e92-e83b-4799-b7ce-6ffe7426feae" translate="no" sdl:locktype="Structure"><source><g id="233">DataSize</g></source></trans-unit><trans-unit id="lockTU_98a41360-10c8-40f0-924f-dbb7c65eb0a7" translate="no" sdl:locktype="Structure"><source><g id="236">freeBytes</g></source></trans-unit><trans-unit id="1ac44136-97c1-4533-a181-3bb32ef0839d"><source>The producer generates <x id="locked25" xid="lockTU_93aa4e92-e83b-4799-b7ce-6ffe7426feae"/> bytes of data. Before it writes a byte to the circular buffer, it must acquire a &quot;free&quot; byte using the <x id="locked26" xid="lockTU_98a41360-10c8-40f0-924f-dbb7c65eb0a7"/> semaphore. The <g id="239">QSemaphore::acquire</g>() call might block if the consumer hasn&apos;t kept up the pace with the producer.</source><seg-source>The producer generates <x id="locked27" xid="lockTU_b16adae5-dd6a-4e30-8c6e-2deca2a84780"/> bytes of data. Before it writes a byte to the circular buffer, it must acquire a &quot;free&quot; byte using the <x id="locked28" xid="lockTU_55a2c328-d23e-4f7a-84bd-89b0a8fb1cdf"/> semaphore. The <g id="239">QSemaphore::acquire</g>() call might block if the consumer hasn&apos;t kept up the pace with the producer.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="47"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="47"/></sdl:cxts><trans-unit id="lockTU_1d0aea74-a20c-4882-9405-aab67037f16c" translate="no" sdl:locktype="Structure"><source><g id="242">usedBytes</g></source></trans-unit><trans-unit id="lockTU_54632aa6-b039-461a-b51e-99984f6085cf" translate="no" sdl:locktype="Structure"><source><g id="242">usedBytes</g></source></trans-unit><trans-unit id="64680bed-e64e-4fcb-90a0-09f2b1945282"><source>At the end, the producer releases a byte using the <x id="locked29" xid="lockTU_54632aa6-b039-461a-b51e-99984f6085cf"/> semaphore. The &quot;free&quot; byte has successfully been transformed into a &quot;used&quot; byte, ready to be read by the consumer.</source><seg-source>At the end, the producer releases a byte using the <x id="locked30" xid="lockTU_1d0aea74-a20c-4882-9405-aab67037f16c"/> semaphore. The &quot;free&quot; byte has successfully been transformed into a &quot;used&quot; byte, ready to be read by the consumer.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="48"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="6aef8a84-8b9a-4837-a6ba-acc6ba7301e8"><source><g id="245"/></source><seg-source><g id="245"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="49"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="48"/></sdl:cxts><trans-unit id="60cb0afb-4295-4963-8ca7-2e1a22150600"><source>Consumer Class</source><seg-source>Consumer Class</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="50"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="49"/></sdl:cxts><trans-unit id="lockTU_fc69072c-c79b-44af-8733-4e2c6e613788" translate="no" sdl:locktype="Structure"><source><g id="248">Consumer</g></source></trans-unit><trans-unit id="lockTU_cd5085d5-6802-4b83-8cb3-48de0da35a2e" translate="no" sdl:locktype="Structure"><source><g id="248">Consumer</g></source></trans-unit><trans-unit id="8ba7d9d8-7530-42b4-a99d-fb6d9cd12273"><source>Let&apos;s now turn to the <x id="locked31" xid="lockTU_cd5085d5-6802-4b83-8cb3-48de0da35a2e"/> class:</source><seg-source>Let&apos;s now turn to the <x id="locked32" xid="lockTU_fc69072c-c79b-44af-8733-4e2c6e613788"/> class:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="51"/><sdl:cxt id="37"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="50"/></sdl:cxts><trans-unit id="0de93e50-c20d-43a6-9b8f-30a47f0fac35"><source><g id="251">class</g> Consumer : <g id="254">public</g> <g id="257">QThread</g> { Q_OBJECT <g id="260">public</g>: <g id="263">void</g> run() Q_DECL_OVERRIDE { <g id="266">for</g> (<g id="269">int</g> i <g id="272">=</g> <g id="275">0</g>; i <g id="278">&lt;</g> DataSize; <g id="281">+</g><g id="284">+</g>i) { usedBytes<g id="287">.</g>acquire(); fprintf(stderr<g id="290">,</g> <g id="293">&quot;%c&quot;</g><g id="296">,</g> buffer<g id="299">[</g>i <g id="302">%</g> BufferSize<g id="305">]</g>); freeBytes<g id="308">.</g>release(); } fprintf(stderr<g id="311">,</g> <g id="314">&quot;\n&quot;</g>); } <g id="317">signals</g>: <g id="320">void</g> stringConsumed(<g id="323">const</g> <g id="326">QString</g> <g id="329">&amp;</g>text); <g id="332">protected</g>: bool finish; };</source><seg-source><g id="251">class</g> Consumer : <g id="254">public</g> <g id="257">QThread</g> { Q_OBJECT <g id="260">public</g>: <g id="263">void</g> run() Q_DECL_OVERRIDE { <g id="266">for</g> (<g id="269">int</g> i <g id="272">=</g> <g id="275">0</g>; i <g id="278">&lt;</g> DataSize; <g id="281">+</g><g id="284">+</g>i) { usedBytes<g id="287">.</g>acquire(); fprintf(stderr<g id="290">,</g> <g id="293">&quot;%c&quot;</g><g id="296">,</g> buffer<g id="299">[</g>i <g id="302">%</g> BufferSize<g id="305">]</g>); freeBytes<g id="308">.</g>release(); } fprintf(stderr<g id="311">,</g> <g id="314">&quot;\n&quot;</g>); } <g id="317">signals</g>: <g id="320">void</g> stringConsumed(<g id="323">const</g> <g id="326">QString</g> <g id="329">&amp;</g>text); <g id="332">protected</g>: bool finish; };</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="52"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="51"/></sdl:cxts><trans-unit id="3f6cf234-cc6e-4c74-a59a-03a673d53519"><source>The code is very similar to the producer, except that this time we acquire a &quot;used&quot; byte and release a &quot;free&quot; byte, instead of the opposite.</source><seg-source>The code is very similar to the producer, except that this time we acquire a &quot;used&quot; byte and release a &quot;free&quot; byte, instead of the opposite.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="53"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="31"/></sdl:cxts><trans-unit id="ebe51210-e106-4de6-aaad-ca1685ca6f85"><source><g id="335"/></source><seg-source><g id="335"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="54"/><sdl:cxt id="18"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="52"/></sdl:cxts><trans-unit id="1a4e602c-ab33-44b1-9c9c-c350dbf596bd"><source>The main() Function</source><seg-source>The main() Function</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="55"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="53"/></sdl:cxts><trans-unit id="lockTU_fcbfe056-fc0e-4f08-8b0b-434ad45a1135" translate="no" sdl:locktype="Structure"><source><g id="338">main()</g></source></trans-unit><trans-unit id="lockTU_c1837f72-91fa-43fe-8676-a3c96d246f21" translate="no" sdl:locktype="Structure"><source><g id="338">main()</g></source></trans-unit><trans-unit id="15b87d9e-1d0f-4dca-abe8-bcb342e58124"><source>In <x id="locked33" xid="lockTU_c1837f72-91fa-43fe-8676-a3c96d246f21"/>, we create the two threads and call <g id="341">QThread::wait</g>() to ensure that both threads get time to finish before we exit:</source><seg-source>In <x id="locked34" xid="lockTU_fcbfe056-fc0e-4f08-8b0b-434ad45a1135"/>, we create the two threads and call <g id="341">QThread::wait</g>() to ensure that both threads get time to finish before we exit:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="56"/><sdl:cxt id="37"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="54"/></sdl:cxts><trans-unit id="77ddba43-aaa4-4b19-b5dd-10b92db19656"><source><g id="344">int</g> main(<g id="347">int</g> argc<g id="350">,</g> <g id="353">char</g> <g id="356">*</g>argv<g id="359">[</g><g id="362">]</g>) { <g id="365">QCoreApplication</g> app(argc<g id="368">,</g> argv); Producer producer; Consumer consumer; producer<g id="371">.</g>start(); consumer<g id="374">.</g>start(); producer<g id="377">.</g>wait(); consumer<g id="380">.</g>wait(); <g id="383">return</g> <g id="386">0</g>; }</source><seg-source><g id="344">int</g> main(<g id="347">int</g> argc<g id="350">,</g> <g id="353">char</g> <g id="356">*</g>argv<g id="359">[</g><g id="362">]</g>) { <g id="365">QCoreApplication</g> app(argc<g id="368">,</g> argv); Producer producer; Consumer consumer; producer<g id="371">.</g>start(); consumer<g id="374">.</g>start(); producer<g id="377">.</g>wait(); consumer<g id="380">.</g>wait(); <g id="383">return</g> <g id="386">0</g>; }</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="57"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="55"/></sdl:cxts><trans-unit id="lockTU_30839452-2b6f-44f1-b635-c2f6aa5bdc0b" translate="no" sdl:locktype="Structure"><source><g id="389">usedBytes</g></source></trans-unit><trans-unit id="lockTU_39c28743-deba-4bbe-9d81-7dd4c3b6c4b6" translate="no" sdl:locktype="Structure"><source><g id="395">freeBytes.available()</g></source></trans-unit><trans-unit id="lockTU_34dd3b6c-c783-4308-aeed-b45be052bcca" translate="no" sdl:locktype="Structure"><source><g id="398">BufferSize</g></source></trans-unit><trans-unit id="lockTU_40088027-cbb3-4006-8340-5b5da1a7424c" translate="no" sdl:locktype="Structure"><source><g id="401">usedBytes.available()</g></source></trans-unit><trans-unit id="lockTU_c49cf3cb-82fd-497d-a2d0-99a231341da9" translate="no" sdl:locktype="Structure"><source><g id="389">usedBytes</g></source></trans-unit><trans-unit id="lockTU_3766c126-581a-4d16-8ca4-0c26cc7da36e" translate="no" sdl:locktype="Structure"><source><g id="395">freeBytes.available()</g></source></trans-unit><trans-unit id="lockTU_31ca554e-0cd9-4b94-9331-8955f84f9898" translate="no" sdl:locktype="Structure"><source><g id="398">BufferSize</g></source></trans-unit><trans-unit id="lockTU_8000c235-df78-4c53-a457-6ab5e32a0a49" translate="no" sdl:locktype="Structure"><source><g id="401">usedBytes.available()</g></source></trans-unit><trans-unit id="838aea17-a084-47f5-be7d-bae3eee1710c"><source>So what happens when we run the program? Initially, the producer thread is the only one that can do anything; the consumer is blocked waiting for the <x id="locked35" xid="lockTU_c49cf3cb-82fd-497d-a2d0-99a231341da9"/> semaphore to be released (its initial <g id="392">available()</g> count is 0). Once the producer has put one byte in the buffer, <x id="locked36" xid="lockTU_3766c126-581a-4d16-8ca4-0c26cc7da36e"/> is <x id="locked37" xid="lockTU_31ca554e-0cd9-4b94-9331-8955f84f9898"/> - 1 and <x id="locked38" xid="lockTU_8000c235-df78-4c53-a457-6ab5e32a0a49"/> is 1. At that point, two things can happen: Either the consumer thread takes over and reads that byte, or the producer thread gets to produce a second byte.</source><seg-source>So what happens when we run the program? Initially, the producer thread is the only one that can do anything; the consumer is blocked waiting for the <x id="locked39" xid="lockTU_30839452-2b6f-44f1-b635-c2f6aa5bdc0b"/> semaphore to be released (its initial <g id="392">available()</g> count is 0). Once the producer has put one byte in the buffer, <x id="locked40" xid="lockTU_39c28743-deba-4bbe-9d81-7dd4c3b6c4b6"/> is <x id="locked41" xid="lockTU_34dd3b6c-c783-4308-aeed-b45be052bcca"/> - 1 and <x id="locked42" xid="lockTU_40088027-cbb3-4006-8340-5b5da1a7424c"/> is 1. At that point, two things can happen: Either the consumer thread takes over and reads that byte, or the producer thread gets to produce a second byte.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="58"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="56"/></sdl:cxts><trans-unit id="2fccd3cf-4395-4cbd-9d0b-d7a539958444"><source>The producer-consumer model presented in this example makes it possible to write highly concurrent multithreaded applications. On a multiprocessor machine, the program is potentially up to twice as fast as the equivalent mutex-based program, since the two threads can be active at the same time on different parts of the buffer.</source><seg-source>The producer-consumer model presented in this example makes it possible to write highly concurrent multithreaded applications. On a multiprocessor machine, the program is potentially up to twice as fast as the equivalent mutex-based program, since the two threads can be active at the same time on different parts of the buffer.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="59"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="57"/></sdl:cxts><trans-unit id="625bdf1b-4238-4e1f-a141-f96a50ed3152"><source>Be aware though that these benefits aren&apos;t always realized. Acquiring and releasing a <g id="404">QSemaphore</g> has a cost. In practice, it would probably be worthwhile to divide the buffer into chunks and to operate on chunks instead of individual bytes. The buffer size is also a parameter that must be selected carefully, based on experimentation.</source><seg-source>Be aware though that these benefits aren&apos;t always realized. Acquiring and releasing a <g id="404">QSemaphore</g> has a cost. In practice, it would probably be worthwhile to divide the buffer into chunks and to operate on chunks instead of individual bytes. The buffer size is also a parameter that must be selected carefully, based on experimentation.</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="60"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="58"/></sdl:cxts><trans-unit id="d8f166fa-d634-4fc1-aa7c-4f5f20c67b90"><source>Files:</source><seg-source>Files:</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="61"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="60"/></sdl:cxts><trans-unit id="bb7542a3-ca6f-43af-9388-9f20dc259297"><source><g id="407">threads/semaphores/semaphores.cpp</g></source><seg-source><g id="407">threads/semaphores/semaphores.cpp</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="62"/><sdl:cxt id="20"/><sdl:cxt id="21"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="61"/></sdl:cxts><trans-unit id="f85535d7-2fab-48e0-8b3c-c593ed7283b6"><source><g id="410">threads/semaphores/semaphores.pro</g></source><seg-source><g id="410">threads/semaphores/semaphores.pro</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="63"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="21"/></sdl:cxts><trans-unit id="2fc09c3e-5650-4a5e-9cbb-3b9be8393858"><source><x id="411"/></source><seg-source><x id="411"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="64"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="63"/></sdl:cxts><trans-unit id="e3e7cf67-bd90-4b1a-96da-9ca8f03d61b3"><source><x id="412"/></source><seg-source><x id="412"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="65"/><sdl:cxt id="29"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="13"/><sdl:cxt id="3"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:node id="63"/></sdl:cxts><trans-unit id="68692dfd-a520-469d-b749-beb0bea1fa52"><source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="413"/> The documentation provided herein is licensed under the terms of the <g id="416">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="417"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</source><seg-source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="413"/> The documentation provided herein is licensed under the terms of the <g id="416">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="417"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</seg-source><target/></trans-unit></group></body></file></xliff>