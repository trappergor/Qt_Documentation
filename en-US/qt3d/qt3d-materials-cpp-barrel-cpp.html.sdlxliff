<?xml version="1.0" encoding="utf-8"?><xliff xmlns:sdl="http://sdl.com/FileTypes/SdlXliff/1.0" xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2" sdl:version="1.0"><file original="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qt3d\qt3d-materials-cpp-barrel-cpp.html" datatype="x-sdlfilterframework2" source-language="en-US"><header><reference><internal-file form="base64">UEsDBBQAAAAIAJlAgklcivpiDgwAANI1AAARAAAAY3h0eW1peWouenZpLmh0bWztW+ty4sgV/r9P
cZZMtmDHCDuTzaZ8YZeLbKsWgweJmbhSKZeQGtCOUONWywy1mTx7Tl8kJEbYeIw3m2z8w4D69Ll8
5+vT3VLr9IeP8xDuCYsDGp1VjozDCpDIo34QTc8qI+e8/tfKD82vTr/uDjrOzbUJMz4P8bf4gNAV
QiSqiAvE9ZtfAZzOCXdRii/q5C4J7s8qHRpxEvG6s1qQCnjq11mFk4+8IdScgDdzWUz4WcInaA4a
Ug8PeEiaY5cxEhreYgHmR3e+CAmcB/jvn/CWw5sufGd8f9pQoqJTGEQfADucVWK+Ckk8I4RXgKNl
bdCL4wrMGJloiQadTLATqceBUG7IduVA7LFgwfOdf3bvXXW1IiQAlkHk06VBo5C6PpzBJIk8jkBW
a7/41EvmGKgxJdwMifgat1eOO+27c1KtCEcrNSPgZF49rBkYfYtzFowTjo3Cv8oBFD2UrtVOPp0I
3xrKDcS9oYA/HVN/hR9+cA9e6MbxWUU0EFaBwD+r3HH0R1+QweXk5m4Q6Xg2L9cZTSKf+Lq5KBC5
98HUFeFikjIJkTl3jOk45Qz94T40T12NuGE0pCONOFksKOPEry9Cl08om8d1N/LrSI5JME2Y1Bob
gh1/uOP17+rfV5qYb5lst4kJ95tFzXf8jV/HZJCPspOUftN9SHjucsICN4zryK06UdzKdz6Gq1QE
Oq9fp/Qr6txCTyXQQATwn0ZDfKTQjZMg9PWgq6yREpkqNCHBfD7DYXl4+McKuGEwxTHKgumMp3gY
RzAkE8JwzBLoas5J+KQP66TknUmT2cBs6sSrr/n06oFaKV4VTKyUCoIgTKe0Uxz4RHKk5GI9tSOj
37zYVI6l7s2O0t5yyFe24z87QvF44UaZuWSs+xQy31hrwEGF8qLW1evw6tWrbXJ1n6jRhyBDvV4M
VbZVmoBki3CgiwvcDcJYROKi6IJlJEBViJOsNDk/PTqfy8gb3+7xD63of9Chi5WkEFQ7NfjT4dGf
4afQZW5477shiWLoutz9gMMvCTm02lD9qdtq14y0M7LL48eywMfHjcZyuTTuuBHQRhh42BunjUbO
mDMLYpiIgo2fC5dxoBPgM4LVG4v3nPoJNmWXwKE0/BBwI6fh1Vvntm1eWP3bntUx+7Z53La7r1Jv
ECvmYY6gJ60TGMXulKhWfYnEMKOhmM/gHkeQD966F5pUbqPQ3F1Bghr42uVIKXI9jzLfFSNsGfCZ
dDanRGsAd8qIrPOwYPQeiexn4kqPTSd86SIBKDvAwYzsinCk3pNwdYC2Ss2gzDyWcyYOLlSYuQRL
FnAcIjmrY8KXBK+saAJYTBF7iSmChPRaGXBOGWRJUpq1skiAEvmBrLqAkJWkV8rX12JK3yRh6CZT
eoJIVHJZfDSSRLnucRAt4PISxVqinsT5tGOSy3LaKqImQv08b2LKYjn4NL+ESp0rHTfK0zCky/g4
Z/mbu4TykyHxg1hNyCIcAZEwgmmKacIwReLKOIhctpKxxQcqaYiJ+KQJV9qQ4sEk8CQomHRM/gJ9
Eqnz1zThM0RGuKjcEenJ5QM7aV2EK0exYH8LRQ9llNo1XL0RmCcxx5WQ4I1U7Y7pvWjSgz/VAxBR
jqAcKPxCVCk05c1H/oZvaBeLVYD8N7a7g2Zz8KTuYMh+4pGX8ygbIeJPCPn5OVF0bWCKqCAtZAV+
24AVf/mocuH2SSB1CBOi0AsXiwMOejijR3QtIlMU8HitW1Bf6qZM1Z8xESzD6Cguwn28KmqF8G5O
OQEFHo8B6Y0DwF8rmqCEgitOa4xmIcQL4gkGYu9AkFOXDcnCOM6CytfsS8sGe3DuvG8NTcDv18PB
O6trdqF9g40mdAbXN0Pr4tKBy0Gvaw5taPW7eLXvDK32yBkM7fxIatmoQ32Vcq3+DZh/ux6atg2D
IVhX1z0LdaOxYavvWKZ9AFa/0xt1rf7FAaA+6A8cXdGtK8tBWWdwIB35vC8MzuHKHHYu8WerbfUs
50YaPbecvjB4PhjqQgLXraFjdUa91hCuR8PrgW2CiLdr2Z1ey7oyuwb6gbbBfGf2HbAvW71eMXyl
afC+bw5FJHkAoG2it612zxQmZcxda2h2HBHc+lsHYUVHewd6grg2Oxb+QnxMDK01vDnQim3z7Qgl
sRG6ravWBUZa3QUlTF1nNDSvRAQIjT1q247ljBwTLgaDrkyAbQ7f4cxqn0BvYEsAR7apHeq2nJZ0
AfUghCiD39sj25JgWn3HHA5H14416NeQC+8RKfS2hf27EvVBX0SessocDG+EeoGLzMwBvL808fpQ
AC3RawlYbESx4+TF0CiCqsNbxw1986JnXZj9jilEBkLVe8s2a5hIyxYClnQA+YGGRxIBkUD0T6fu
vEj2A5lrsM6h1X1niSh0D2SHbWk6SRg7lzoPhmL2xoLF7HfT5cqrddP+/hrpWnVz9biQJdYjcUxx
FfqHIPLCBCcD5aRews7Ur20qPpDVEtchlSZWp5hrqaKI2BJjO+7aS5spFheXCwe+1e04B06wsHVo
iDVNbIC3yP9dy29p/scj5s7S9l/SHU5hB4C1NppWmip8RvwCDltUHqQwPapwHCZkvxrFyi7ar0qG
0/B+NcZihREi4W5jTkhY5BbAp5NfhWBilktwF/NbYtjt/sG+fQjtZ2v/D+VunMwXv5GURfRWerPn
IYJrspfQOw98PyQvoRmT55fozTjRljPJFjPHx1pcSVVL2CF2/x3KyMP+ZorKNPRxk7MjwRa4Ho54
TYd9jFsVsUEUd8LMiAd8VS0KPIIezBUy1T5ti8/du+VnwSrul3bvWShvaDgiu/dNdznV8oEckeUD
w1gkyvzImRs/K1Vs7oZdFb2tQ7lyF+n9Vd21WnsylA75yBNGqusot3StP+z+N9OM41rzU5yJZHwv
4ItS/BRXUqK8gDOp6i9PkzV3p+SLaahG7TNomPfiCyhXyPJ/dygbLPmtBpNO2HMSz6q15xOYcFve
ICudkUYsq0MlzcVHWB5OXY07NWWqh1RvbfmjF+Bgc8UTpMJv9cyoRHlx1r1j3nEDrxMeN8RT1FBt
2NT3W717o+OfC3NyrVY70ThhmY5icbdtT2B5briBVZTMx+IJ4qFx+GaSOiBXBDJPG+P92U64vl+g
aGlBycLfGKIvYP3zEpAzvjGoXsB82bBdo48Z6+f901zPPMT2bgG9EgG7aGFTYp+zCRqbBVEQ4V6m
nGNHSLIcx5QHCIq4vYoLoIjnJjfZ/mn3lemW9n8VF65pDfr02TZIFYV7GvhpcdzN7joH1d06dHNL
RtDkz5fG8qIdpLhBVffZNil8/TAgZ+WL11pmvzDslZePqdLCJzkNj1Lz076zkBJ9xzTY+fU3pOPw
SYlIOz0/E4XNwGYqCo2P5iKV3kjGI2Vg79mQ+6gdUyFlYZzuvHbGX/Z4PvjK8AboD+rOOkupDaQf
rNj7Z315xVUaJyF1szs6cSr5NI6nvZ6P8/4mmizmbIH8klPZGrgnTkmFSr9bl2yrusM9ukfTyAhS
MCqv908MpVgtd2Rntrt8iWAKVfGJ0aiCs5usujH0IiFk1WNbRSiM3x1BX4+Nl3D5Jcbwyb5rYmkF
zm8+S1b9v9+tqMLitrgD3VbtXxdmvh3u8GuWf+GN/tcP3Kj4VUAzlmS8KNucv8QG4iHGluySf7+U
VWA8lbJPfWJdnDD/z+BdNl8PUbjsXsfvl8MpGk8k8ZOfim+slP4XaXzaWDAi3ptQJ8rFWe8ff/xx
21lveb57fYY+Oy9f+PXZt5LT9BNKuX73Ak4X6sP1GI1Wc5Dn0sV7MvokJIYhTkWi71qiKY5p/6Xk
fKE4u1c89b8+U6hPYcoDQD7MCCPijDFLj+VqW+JQ4lfqqGTAgBGRf3G6FugyIiw2TsesKaJ1PjtK
mZ2Z1KrlWU15utbfdgJXBq3zLw4C63PA0ygxKJs20qPYjYkf6jcxLvojOGdk49UGoSg9HKxflYAj
441ghzjUu0jGYRDP0I/xStqVGrLT1+finRapJ4sOURWHSnPhh3RKYwUXc30yd9mHuPyMpyHZgACc
B1EotBTOmHpoDPNBYsA1cugvETEDWmGom3PK5dlgJkYRX4mMKMxKk4I8W6xZ1tCv/jTUq1n/BlBL
AQIzABQAAAAIAJlAgklcivpiDgwAANI1AAARAAAAAAAAAAAAAAAAAAAAAABjeHR5bWl5ai56dmku
aHRtbFBLBQYAAAAAAQABAD8AAAA9DAAAAAA=
</internal-file></reference><sdl:ref-files><sdl:ref-file uid="0" id="Html.DependencyFileId" name="qt3d-materials-cpp-barrel-cpp.html" o-path="D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qt3d\qt3d-materials-cpp-barrel-cpp.html" date="12/02/2016 08:04:51" expected-use="Generation"/></sdl:ref-files><file-info xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><value key="SDL:FileId">c8cd1d72-eb20-49c4-8007-55542931b9f0</value><value key="SDL:CreationDate">08/28/2019 11:15:31</value><value key="SDL:OriginalFilePath">D:\Учеба\Qt\документация\Qt-5.7_ru\en-US\qt3d\qt3d-materials-cpp-barrel-cpp.html</value><value key="SDL:OriginalEncoding">utf-8</value><value key="SDL:QuickInsertsList">qBold;qItalic;qUnderline;qSubscript;qSuperscript;qSmallCaps</value><value key="NeedsSegmentRenumbering">True</value><value key="HtmlEntityFound">True</value><value key="HeadEntityFound">True</value><value key="MetaEntityFound">True</value><value key="BodyEntityFound">True</value><value key="HtmlVersion">html5</value><value key="OperatingSystem">Linux</value><value key="ParagraphTextDirections"></value><sniff-info><detected-encoding detection-level="Certain" encoding="utf-8"/><detected-source-lang detection-level="Likely" lang="en-US"/></sniff-info></file-info><sdl:filetype-info><sdl:filetype-id>Html 5 2.0.0.0</sdl:filetype-id></sdl:filetype-info><fmt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><fmt-def id="1"/><fmt-def id="2"><value key="TextColor">Blue</value><value key="Underline">True</value></fmt-def></fmt-defs><cxt-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><cxt-def id="1" type="LocationDetails" purpose="Location"><props><value key="StartsAt">-1</value><value key="EndsAt">39</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="2" type="LocationDetails" purpose="Location"><props><value key="StartsAt">153</value><value key="EndsAt">195</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="3" type="sdl:title" color="Control"><fmt id="1"/></cxt-def><cxt-def id="4" type="sdl:meta" color="Control"><fmt id="1"/></cxt-def><cxt-def id="5" type="sdl:html-control" color="Control"><fmt id="1"/></cxt-def><cxt-def id="6" type="LocationDetails" purpose="Location"><props><value key="StartsAt">607</value><value key="EndsAt">692</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="7" type="x-tm-table-cell"><fmt id="1"/></cxt-def><cxt-def id="8" type="sdl:table-row" color="Control"><fmt id="1"/></cxt-def><cxt-def id="9" type="sdl:table" color="Control"><fmt id="1"/></cxt-def><cxt-def id="10" type="div" code="DIV" name="Div" descr="A div section" color=""><fmt id="1"/></cxt-def><cxt-def id="11" type="sdl:body" color="Control"><fmt id="1"/></cxt-def><cxt-def id="12" type="sdl:link" color="Control"><fmt id="1"/></cxt-def><cxt-def id="13" type="LocationDetails" purpose="Location"><props><value key="StartsAt">697</value><value key="EndsAt">737</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="14" type="LocationDetails" purpose="Location"><props><value key="StartsAt">742</value><value key="EndsAt">821</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="15" type="LocationDetails" purpose="Location"><props><value key="StartsAt">826</value><value key="EndsAt">854</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="16" type="LocationDetails" purpose="Location"><props><value key="StartsAt">905</value><value key="EndsAt">986</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="17" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1197</value><value key="EndsAt">1238</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="18" type="x-tm-heading"><fmt id="1"/></cxt-def><cxt-def id="19" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1238</value><value key="EndsAt">1348</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="20" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1348</value><value key="EndsAt">1391</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="21" type="LocationDetails" purpose="Location"><props><value key="StartsAt">1391</value><value key="EndsAt">13041</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="22" type="pre" code="PRE" name="Pre" descr="A preformated text section" color=""><fmt id="1"/></cxt-def><cxt-def id="23" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13048</value><value key="EndsAt">13100</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="24" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13179</value><value key="EndsAt">13212</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def><cxt-def id="25" type="sdl:paragraph" color="Control"><fmt id="1"/></cxt-def><cxt-def id="26" type="LocationDetails" purpose="Location"><props><value key="StartsAt">13212</value><value key="EndsAt">13750</value><value key="SubParagraphUnitCount">0</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value></props></cxt-def></cxt-defs><node-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><node-def id="1" parent="2"><cxt id="4"/></node-def><node-def id="2" parent="3"><cxt id="4"/></node-def><node-def id="3"><cxt id="5"/></node-def><node-def id="4" parent="1"><cxt id="3"/></node-def><node-def id="5" parent="6"><cxt id="8"/></node-def><node-def id="6" parent="7"><cxt id="9"/></node-def><node-def id="7" parent="8"><cxt id="10"/></node-def><node-def id="8" parent="9"><cxt id="10"/></node-def><node-def id="9" parent="10"><cxt id="10"/></node-def><node-def id="10" parent="11"><cxt id="10"/></node-def><node-def id="11" parent="12"><cxt id="11"/></node-def><node-def id="12" parent="1"><cxt id="12"/></node-def><node-def id="13" parent="5"><cxt id="7"/></node-def><node-def id="14" parent="5"><cxt id="7"/></node-def><node-def id="15" parent="5"><cxt id="7"/></node-def><node-def id="16" parent="5"><cxt id="7"/></node-def><node-def id="17" parent="18"><cxt id="8"/></node-def><node-def id="18" parent="7"><cxt id="9"/></node-def><node-def id="19" parent="17"><cxt id="7"/></node-def><node-def id="20" parent="21"><cxt id="10"/></node-def><node-def id="21" parent="22"><cxt id="10"/></node-def><node-def id="22" parent="9"><cxt id="10"/></node-def><node-def id="23" parent="20"><cxt id="18"/></node-def><node-def id="24" parent="20"><cxt id="10"/></node-def><node-def id="25" parent="24"><cxt id="22"/></node-def><node-def id="26" parent="11"><cxt id="10"/></node-def><node-def id="27" parent="26"><cxt id="25"/></node-def></node-defs><tag-defs xmlns="http://sdl.com/FileTypes/SdlXliff/1.0"><tag id="3"><bpt name="a" word-end="false">&lt;a href=&quot;../qtdoc/supported-platforms-and-configurations.html#qt-5-7&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="6"><bpt name="a" word-end="false">&lt;a href=&quot;qt3d-index.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="9"><bpt name="a" word-end="false">&lt;a href=&quot;qt3d-materials-cpp-example.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="12"><bpt name="span" word-end="false">&lt;span class=&quot;subtitle&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="16"><bpt name="a" word-end="false">&lt;a name=&quot;details&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="19"><bpt name="span" word-end="false">&lt;span class=&quot;comment&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="22"><bpt name="span" word-end="false">&lt;span class=&quot;preprocessor&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="25"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="28"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="31"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="34"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="37"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="40"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="43"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="46"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="49"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="52"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="55"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="58"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="61"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="64"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="67"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="70"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="73"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="76"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="79"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="82"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="85"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="88"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="91"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="94"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="97"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="100"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="103"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="106"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="109"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="112"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="115"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="118"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="121"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="124"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="127"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="130"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="133"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="136"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="139"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="142"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="145"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="148"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="151"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="154"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="157"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="160"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="163"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="166"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="169"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="172"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="175"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="178"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="181"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="184"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="187"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="190"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="193"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="196"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="199"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="202"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="205"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="208"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="211"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="214"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="217"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="220"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="223"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="226"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="229"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="232"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="235"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="238"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="241"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="244"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="247"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="250"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="253"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="256"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="259"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="263"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qstring.html#QStringLiteral&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="265"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="268"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="271"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="274"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="277"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="280"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="283"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="286"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="289"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="292"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="295"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="298"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="301"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="304"><bpt name="span" word-end="false">&lt;span class=&quot;number&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="307"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="310"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="313"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="316"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="319"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="322"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="325"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="328"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="331"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="334"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="337"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="340"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="343"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="346"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="349"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="352"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="355"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="358"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="361"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="364"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="367"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="370"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="373"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="376"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="379"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="382"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="385"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="388"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="391"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="394"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="397"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="400"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="403"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="406"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="409"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="412"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="415"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="418"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="421"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="424"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="427"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="430"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="433"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="436"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="439"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="442"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="445"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="448"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="451"><bpt name="span" word-end="false">&lt;span class=&quot;keyword&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="454"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="457"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="460"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="463"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="466"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="469"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="472"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="476"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qstring.html#QStringLiteral&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="478"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="481"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="484"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="487"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="490"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="493"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="497"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qstring.html#QStringLiteral&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="499"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="502"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="505"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="508"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="511"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="514"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="517"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="521"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qstring.html#QStringLiteral&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="523"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="526"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="529"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="532"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="535"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="538"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="542"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qstring.html#QStringLiteral&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="544"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="547"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="550"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="553"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="556"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="559"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="562"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="566"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qstring.html#QStringLiteral&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="568"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="571"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="574"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="577"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="580"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="583"><bpt name="span" word-end="false">&lt;span class=&quot;operator&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="587"><bpt name="a" word-end="false">&lt;a href=&quot;../qtcore/qstring.html#QStringLiteral&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="589"><bpt name="span" word-end="false">&lt;span class=&quot;type&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="592"><bpt name="span" word-end="false">&lt;span class=&quot;string&quot;&gt;</bpt><bpt-props><value key="StartTag">span</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="span" word-end="false">&lt;/span&gt;</ept><fmt id="1"/></tag><tag id="598"><bpt name="a" word-end="false">&lt;a href=&quot;http://www.gnu.org/licenses/fdl.html&quot;&gt;</bpt><bpt-props><value key="FormattingItemTextColor">Blue</value><value key="FormattingItemUnderline">True</value><value key="StartTag">a</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></bpt-props><ept name="a" word-end="false">&lt;/a&gt;</ept><fmt id="2"/></tag><tag id="0"><ph name="xml" word-end="false">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</ph><props><value key="ProcessingInstructionTag">xml</value></props></tag><tag id="13"><ph name="Comment" word-end="false">&lt;!-- $$$materials-cpp/barrel.cpp-description --&gt;</ph></tag><tag id="593"><ph name="Comment" word-end="false">&lt;!-- @@@materials-cpp/barrel.cpp --&gt;</ph></tag><tag id="594"><ph name="copy" word-end="false" seg-hint="IncludeWithText">&amp;copy;</ph><props><value key="PlaceholderForMappedEntity">true</value></props></tag><tag id="595"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag><tag id="599"><ph name="br" word-end="false">&lt;br&gt;</ph><props><value key="EmptyTag">br</value><value key="hasCharset">False</value><value key="hasLanguageAttribute">False</value><value key="WhitespaceHandling">NormalizeWithXmlSpaceOverride;False</value><value key="ContentProtection">InheritFromParent</value></props></tag></tag-defs></header><body><group><sdl:cxts><sdl:cxt id="1"/></sdl:cxts><trans-unit id="793ac825-3145-4af3-8ede-c05b40e49f03"><source><x id="0"/>
</source><seg-source><x id="0"/>
</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="2"/><sdl:cxt id="3"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="4"/></sdl:cxts><trans-unit id="9efccf58-a715-44a8-93ec-de67ec1fc71b"><source>barrel.cpp Example File | Qt 3D 5.7</source><seg-source>barrel.cpp Example File | Qt 3D 5.7</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="6"/><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="13"/></sdl:cxts><trans-unit id="e4e3308c-e4bf-4f7a-83c7-2db56f86a392"><source><g id="3">Qt 5.7</g></source><seg-source><g id="3">Qt 5.7</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="13"/><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="14"/></sdl:cxts><trans-unit id="cb8a5fc5-bc21-4e7f-96cb-4aae51c29c98"><source><g id="6">Qt 3D</g></source><seg-source><g id="6">Qt 3D</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="14"/><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="15"/></sdl:cxts><trans-unit id="d7685ffc-6a06-4408-9382-71f1398bb631"><source><g id="9">Qt 3D: Materials C++ Example</g></source><seg-source><g id="9">Qt 3D: Materials C++ Example</g></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="15"/><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="16"/></sdl:cxts><trans-unit id="35a4442c-dd98-49f8-9f5b-70b32a70af38"><source>barrel.cpp Example File</source><seg-source>barrel.cpp Example File</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="16"/><sdl:cxt id="7"/><sdl:cxt id="8"/><sdl:cxt id="9"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="19"/></sdl:cxts><trans-unit id="7988bec2-1e31-433e-9379-9b53aff36820"><source>Qt 5.7.1 Reference Documentation</source><seg-source>Qt 5.7.1 Reference Documentation</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="17"/><sdl:cxt id="18"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="23"/></sdl:cxts><trans-unit id="b815a887-d7d7-4a7b-ab89-ef67577195c2"><source>barrel.cpp Example File</source><seg-source>barrel.cpp Example File</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="19"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="20"/></sdl:cxts><trans-unit id="ffa93a3b-f03c-49e9-8a31-49da493a761e"><source><g id="12">materials-cpp/barrel.cpp</g> <x id="13"/></source><seg-source><g id="12">materials-cpp/barrel.cpp</g> <x id="13"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="20"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="24"/></sdl:cxts><trans-unit id="4ba3b50c-fd13-4b13-b777-672a81379032"><source><g id="16"/></source><seg-source><g id="16"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="21"/><sdl:cxt id="22"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="25"/></sdl:cxts><trans-unit id="71559e2e-e556-4852-8208-3db842ed7175"><source><g id="19">/**************************************************************************** ** ** Copyright (C) 2014 Klaralvdalens Datakonsult AB (KDAB). ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the Qt3D module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** BSD License Usage ** Alternatively, you may use this file under the terms of the BSD license ** as follows: ** ** &quot;Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: ** * Redistributions of source code must retain the above copyright ** notice, this list of conditions and the following disclaimer. ** * Redistributions in binary form must reproduce the above copyright ** notice, this list of conditions and the following disclaimer in ** the documentation and/or other materials provided with the ** distribution. ** * Neither the name of The Qt Company Ltd nor the names of its ** contributors may be used to endorse or promote products derived ** from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot; ** ** $QT_END_LICENSE$ ** ****************************************************************************/</g> <g id="22">#include &quot;barrel.h&quot;</g> <g id="25">const</g> <g id="28">char</g> <g id="31">*</g>diffuseColorsName<g id="34">[</g><g id="37">]</g> <g id="40">=</g> { <g id="43">&quot;red&quot;</g><g id="46">,</g> <g id="49">&quot;blue&quot;</g><g id="52">,</g> <g id="55">&quot;green&quot;</g><g id="58">,</g> <g id="61">&quot;rust&quot;</g><g id="64">,</g> <g id="67">&quot;stainless_steel&quot;</g> }; <g id="70">const</g> <g id="73">char</g> <g id="76">*</g>specularColorsName<g id="79">[</g><g id="82">]</g> <g id="85">=</g> { <g id="88">&quot;_rust&quot;</g><g id="91">,</g> <g id="94">&quot;_stainless_steel&quot;</g><g id="97">,</g> <g id="100">&quot;&quot;</g> }; <g id="103">const</g> <g id="106">char</g> <g id="109">*</g>bumpsName<g id="112">[</g><g id="115">]</g> <g id="118">=</g> { <g id="121">&quot;no_bumps&quot;</g><g id="124">,</g> <g id="127">&quot;soft_bumps&quot;</g><g id="130">,</g> <g id="133">&quot;middle_bumps&quot;</g><g id="136">,</g> <g id="139">&quot;hard_bumps&quot;</g> }; Barrel<g id="142">::</g>Barrel(<g id="145">Qt3DCore</g><g id="148">::</g><g id="151">QNode</g> <g id="154">*</g>parent) : RenderableEntity(parent) <g id="157">,</g> m_bumps(NoBumps) <g id="160">,</g> m_diffuseColor(Red) <g id="163">,</g> m_specularColor(None) <g id="166">,</g> m_material(<g id="169">new</g> <g id="172">Qt3DExtras</g><g id="175">::</g><g id="178">QNormalDiffuseSpecularMapMaterial</g>()) <g id="181">,</g> m_diffuseTexture(m_material<g id="184">-</g><g id="187">&gt;</g>diffuse()) <g id="190">,</g> m_normalTexture(m_material<g id="193">-</g><g id="196">&gt;</g>normal()) <g id="199">,</g> m_specularTexture(m_material<g id="202">-</g><g id="205">&gt;</g>specular()) <g id="208">,</g> m_diffuseTextureImage(<g id="211">new</g> <g id="214">Qt3DRender</g><g id="217">::</g><g id="220">QTextureImage</g>()) <g id="223">,</g> m_normalTextureImage(<g id="226">new</g> <g id="229">Qt3DRender</g><g id="232">::</g><g id="235">QTextureImage</g>()) <g id="238">,</g> m_specularTextureImage(<g id="241">new</g> <g id="244">Qt3DRender</g><g id="247">::</g><g id="250">QTextureImage</g>()) { mesh()<g id="253">-</g><g id="256">&gt;</g>setSource(<g id="259">QUrl</g>(<g id="265"><g id="263">QStringLiteral</g></g>(<g id="268">&quot;qrc:/assets/metalbarrel/metal_barrel.obj&quot;</g>))); transform()<g id="271">-</g><g id="274">&gt;</g>setScale(<g id="277">0.03f</g>); m_diffuseTexture<g id="280">-</g><g id="283">&gt;</g>addTextureImage(m_diffuseTextureImage); m_normalTexture<g id="286">-</g><g id="289">&gt;</g>addTextureImage(m_normalTextureImage); m_specularTexture<g id="292">-</g><g id="295">&gt;</g>addTextureImage(m_specularTextureImage); setNormalTextureSource(); setDiffuseTextureSource(); setSpecularTextureSource(); m_material<g id="298">-</g><g id="301">&gt;</g>setShininess(<g id="304">10.0f</g>); addComponent(m_material); } Barrel<g id="307">::</g><g id="310">~</g>Barrel() { } <g id="313">void</g> Barrel<g id="316">::</g>setDiffuse(Barrel<g id="319">::</g>DiffuseColor diffuse) { <g id="322">if</g> (diffuse <g id="325">!</g><g id="328">=</g> m_diffuseColor) { m_diffuseColor <g id="331">=</g> diffuse; setDiffuseTextureSource(); } } <g id="334">void</g> Barrel<g id="337">::</g>setSpecular(Barrel<g id="340">::</g>SpecularColor specular) { <g id="343">if</g> (specular <g id="346">!</g><g id="349">=</g> m_specularColor) { m_specularColor <g id="352">=</g> specular; setSpecularTextureSource(); } } <g id="355">void</g> Barrel<g id="358">::</g>setBumps(Barrel<g id="361">::</g>Bumps bumps) { <g id="364">if</g> (bumps <g id="367">!</g><g id="370">=</g> m_bumps) { m_bumps <g id="373">=</g> bumps; setNormalTextureSource(); } } <g id="376">void</g> Barrel<g id="379">::</g>setShininess(<g id="382">float</g> shininess) { <g id="385">if</g> (shininess <g id="388">!</g><g id="391">=</g> m_material<g id="394">-</g><g id="397">&gt;</g>shininess()) m_material<g id="400">-</g><g id="403">&gt;</g>setShininess(shininess); } Barrel<g id="406">::</g>DiffuseColor Barrel<g id="409">::</g>diffuse() <g id="412">const</g> { <g id="415">return</g> m_diffuseColor; } Barrel<g id="418">::</g>SpecularColor Barrel<g id="421">::</g>specular() <g id="424">const</g> { <g id="427">return</g> m_specularColor; } Barrel<g id="430">::</g>Bumps Barrel<g id="433">::</g>bumps() <g id="436">const</g> { <g id="439">return</g> m_bumps; } <g id="442">float</g> Barrel<g id="445">::</g>shininess() <g id="448">const</g> { <g id="451">return</g> m_material<g id="454">-</g><g id="457">&gt;</g>shininess(); } <g id="460">void</g> Barrel<g id="463">::</g>setNormalTextureSource() { m_normalTextureImage<g id="466">-</g><g id="469">&gt;</g>setSource(<g id="472">QUrl</g>(<g id="478"><g id="476">QStringLiteral</g></g>(<g id="481">&quot;qrc:/assets/metalbarrel/normal_&quot;</g>) <g id="484">+</g> bumpsName<g id="487">[</g>m_bumps<g id="490">]</g> <g id="493">+</g> <g id="499"><g id="497">QStringLiteral</g></g>(<g id="502">&quot;.webp&quot;</g>))); } <g id="505">void</g> Barrel<g id="508">::</g>setDiffuseTextureSource() { m_diffuseTextureImage<g id="511">-</g><g id="514">&gt;</g>setSource(<g id="517">QUrl</g>(<g id="523"><g id="521">QStringLiteral</g></g>(<g id="526">&quot;qrc:/assets/metalbarrel/diffus_&quot;</g>) <g id="529">+</g> diffuseColorsName<g id="532">[</g>m_diffuseColor<g id="535">]</g> <g id="538">+</g> <g id="544"><g id="542">QStringLiteral</g></g>(<g id="547">&quot;.webp&quot;</g>))); } <g id="550">void</g> Barrel<g id="553">::</g>setSpecularTextureSource() { m_specularTextureImage<g id="556">-</g><g id="559">&gt;</g>setSource(<g id="562">QUrl</g>(<g id="568"><g id="566">QStringLiteral</g></g>(<g id="571">&quot;qrc:/assets/metalbarrel/specular&quot;</g>) <g id="574">+</g> specularColorsName<g id="577">[</g>m_specularColor<g id="580">]</g> <g id="583">+</g> <g id="589"><g id="587">QStringLiteral</g></g>(<g id="592">&quot;.webp&quot;</g>))); }</source><seg-source><g id="19">/**************************************************************************** ** ** Copyright (C) 2014 Klaralvdalens Datakonsult AB (KDAB). ** Contact: https://www.qt.io/licensing/ ** ** This file is part of the Qt3D module of the Qt Toolkit. ** ** $QT_BEGIN_LICENSE:BSD$ ** Commercial License Usage ** Licensees holding valid commercial Qt licenses may use this file in ** accordance with the commercial license agreement provided with the ** Software or, alternatively, in accordance with the terms contained in ** a written agreement between you and The Qt Company. For licensing terms ** and conditions see https://www.qt.io/terms-conditions. For further ** information use the contact form at https://www.qt.io/contact-us. ** ** BSD License Usage ** Alternatively, you may use this file under the terms of the BSD license ** as follows: ** ** &quot;Redistribution and use in source and binary forms, with or without ** modification, are permitted provided that the following conditions are ** met: ** * Redistributions of source code must retain the above copyright ** notice, this list of conditions and the following disclaimer. ** * Redistributions in binary form must reproduce the above copyright ** notice, this list of conditions and the following disclaimer in ** the documentation and/or other materials provided with the ** distribution. ** * Neither the name of The Qt Company Ltd nor the names of its ** contributors may be used to endorse or promote products derived ** from this software without specific prior written permission. ** ** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT ** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT ** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT ** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, ** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY ** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT ** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot; ** ** $QT_END_LICENSE$ ** ****************************************************************************/</g> <g id="22">#include &quot;barrel.h&quot;</g> <g id="25">const</g> <g id="28">char</g> <g id="31">*</g>diffuseColorsName<g id="34">[</g><g id="37">]</g> <g id="40">=</g> { <g id="43">&quot;red&quot;</g><g id="46">,</g> <g id="49">&quot;blue&quot;</g><g id="52">,</g> <g id="55">&quot;green&quot;</g><g id="58">,</g> <g id="61">&quot;rust&quot;</g><g id="64">,</g> <g id="67">&quot;stainless_steel&quot;</g> }; <g id="70">const</g> <g id="73">char</g> <g id="76">*</g>specularColorsName<g id="79">[</g><g id="82">]</g> <g id="85">=</g> { <g id="88">&quot;_rust&quot;</g><g id="91">,</g> <g id="94">&quot;_stainless_steel&quot;</g><g id="97">,</g> <g id="100">&quot;&quot;</g> }; <g id="103">const</g> <g id="106">char</g> <g id="109">*</g>bumpsName<g id="112">[</g><g id="115">]</g> <g id="118">=</g> { <g id="121">&quot;no_bumps&quot;</g><g id="124">,</g> <g id="127">&quot;soft_bumps&quot;</g><g id="130">,</g> <g id="133">&quot;middle_bumps&quot;</g><g id="136">,</g> <g id="139">&quot;hard_bumps&quot;</g> }; Barrel<g id="142">::</g>Barrel(<g id="145">Qt3DCore</g><g id="148">::</g><g id="151">QNode</g> <g id="154">*</g>parent) : RenderableEntity(parent) <g id="157">,</g> m_bumps(NoBumps) <g id="160">,</g> m_diffuseColor(Red) <g id="163">,</g> m_specularColor(None) <g id="166">,</g> m_material(<g id="169">new</g> <g id="172">Qt3DExtras</g><g id="175">::</g><g id="178">QNormalDiffuseSpecularMapMaterial</g>()) <g id="181">,</g> m_diffuseTexture(m_material<g id="184">-</g><g id="187">&gt;</g>diffuse()) <g id="190">,</g> m_normalTexture(m_material<g id="193">-</g><g id="196">&gt;</g>normal()) <g id="199">,</g> m_specularTexture(m_material<g id="202">-</g><g id="205">&gt;</g>specular()) <g id="208">,</g> m_diffuseTextureImage(<g id="211">new</g> <g id="214">Qt3DRender</g><g id="217">::</g><g id="220">QTextureImage</g>()) <g id="223">,</g> m_normalTextureImage(<g id="226">new</g> <g id="229">Qt3DRender</g><g id="232">::</g><g id="235">QTextureImage</g>()) <g id="238">,</g> m_specularTextureImage(<g id="241">new</g> <g id="244">Qt3DRender</g><g id="247">::</g><g id="250">QTextureImage</g>()) { mesh()<g id="253">-</g><g id="256">&gt;</g>setSource(<g id="259">QUrl</g>(<g id="265"><g id="263">QStringLiteral</g></g>(<g id="268">&quot;qrc:/assets/metalbarrel/metal_barrel.obj&quot;</g>))); transform()<g id="271">-</g><g id="274">&gt;</g>setScale(<g id="277">0.03f</g>); m_diffuseTexture<g id="280">-</g><g id="283">&gt;</g>addTextureImage(m_diffuseTextureImage); m_normalTexture<g id="286">-</g><g id="289">&gt;</g>addTextureImage(m_normalTextureImage); m_specularTexture<g id="292">-</g><g id="295">&gt;</g>addTextureImage(m_specularTextureImage); setNormalTextureSource(); setDiffuseTextureSource(); setSpecularTextureSource(); m_material<g id="298">-</g><g id="301">&gt;</g>setShininess(<g id="304">10.0f</g>); addComponent(m_material); } Barrel<g id="307">::</g><g id="310">~</g>Barrel() { } <g id="313">void</g> Barrel<g id="316">::</g>setDiffuse(Barrel<g id="319">::</g>DiffuseColor diffuse) { <g id="322">if</g> (diffuse <g id="325">!</g><g id="328">=</g> m_diffuseColor) { m_diffuseColor <g id="331">=</g> diffuse; setDiffuseTextureSource(); } } <g id="334">void</g> Barrel<g id="337">::</g>setSpecular(Barrel<g id="340">::</g>SpecularColor specular) { <g id="343">if</g> (specular <g id="346">!</g><g id="349">=</g> m_specularColor) { m_specularColor <g id="352">=</g> specular; setSpecularTextureSource(); } } <g id="355">void</g> Barrel<g id="358">::</g>setBumps(Barrel<g id="361">::</g>Bumps bumps) { <g id="364">if</g> (bumps <g id="367">!</g><g id="370">=</g> m_bumps) { m_bumps <g id="373">=</g> bumps; setNormalTextureSource(); } } <g id="376">void</g> Barrel<g id="379">::</g>setShininess(<g id="382">float</g> shininess) { <g id="385">if</g> (shininess <g id="388">!</g><g id="391">=</g> m_material<g id="394">-</g><g id="397">&gt;</g>shininess()) m_material<g id="400">-</g><g id="403">&gt;</g>setShininess(shininess); } Barrel<g id="406">::</g>DiffuseColor Barrel<g id="409">::</g>diffuse() <g id="412">const</g> { <g id="415">return</g> m_diffuseColor; } Barrel<g id="418">::</g>SpecularColor Barrel<g id="421">::</g>specular() <g id="424">const</g> { <g id="427">return</g> m_specularColor; } Barrel<g id="430">::</g>Bumps Barrel<g id="433">::</g>bumps() <g id="436">const</g> { <g id="439">return</g> m_bumps; } <g id="442">float</g> Barrel<g id="445">::</g>shininess() <g id="448">const</g> { <g id="451">return</g> m_material<g id="454">-</g><g id="457">&gt;</g>shininess(); } <g id="460">void</g> Barrel<g id="463">::</g>setNormalTextureSource() { m_normalTextureImage<g id="466">-</g><g id="469">&gt;</g>setSource(<g id="472">QUrl</g>(<g id="478"><g id="476">QStringLiteral</g></g>(<g id="481">&quot;qrc:/assets/metalbarrel/normal_&quot;</g>) <g id="484">+</g> bumpsName<g id="487">[</g>m_bumps<g id="490">]</g> <g id="493">+</g> <g id="499"><g id="497">QStringLiteral</g></g>(<g id="502">&quot;.webp&quot;</g>))); } <g id="505">void</g> Barrel<g id="508">::</g>setDiffuseTextureSource() { m_diffuseTextureImage<g id="511">-</g><g id="514">&gt;</g>setSource(<g id="517">QUrl</g>(<g id="523"><g id="521">QStringLiteral</g></g>(<g id="526">&quot;qrc:/assets/metalbarrel/diffus_&quot;</g>) <g id="529">+</g> diffuseColorsName<g id="532">[</g>m_diffuseColor<g id="535">]</g> <g id="538">+</g> <g id="544"><g id="542">QStringLiteral</g></g>(<g id="547">&quot;.webp&quot;</g>))); } <g id="550">void</g> Barrel<g id="553">::</g>setSpecularTextureSource() { m_specularTextureImage<g id="556">-</g><g id="559">&gt;</g>setSource(<g id="562">QUrl</g>(<g id="568"><g id="566">QStringLiteral</g></g>(<g id="571">&quot;qrc:/assets/metalbarrel/specular&quot;</g>) <g id="574">+</g> specularColorsName<g id="577">[</g>m_specularColor<g id="580">]</g> <g id="583">+</g> <g id="589"><g id="587">QStringLiteral</g></g>(<g id="592">&quot;.webp&quot;</g>))); }</seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="23"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="20"/></sdl:cxts><trans-unit id="4bae8926-d4eb-4ed5-be5b-5175de23e085"><source><x id="593"/></source><seg-source><x id="593"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="24"/><sdl:cxt id="25"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="27"/></sdl:cxts><trans-unit id="be4378a8-eecd-47b2-a9f5-6bba9d594762"><source><x id="594"/></source><seg-source><x id="594"/></seg-source><target/></trans-unit></group><group><sdl:cxts><sdl:cxt id="26"/><sdl:cxt id="25"/><sdl:cxt id="10"/><sdl:cxt id="11"/><sdl:cxt id="12"/><sdl:cxt id="4"/><sdl:cxt id="4"/><sdl:cxt id="5"/><sdl:node id="27"/></sdl:cxts><trans-unit id="aac631af-9b9e-4712-a87e-e6f542ee9ff8"><source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="595"/> The documentation provided herein is licensed under the terms of the <g id="598">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="599"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</source><seg-source>2016 The Qt Company Ltd. Documentation contributions included herein are the copyrights of their respective owners.<x id="595"/> The documentation provided herein is licensed under the terms of the <g id="598">GNU Free Documentation License version 1.3</g> as published by the Free Software Foundation.<x id="599"/> Qt and respective logos are trademarks of The Qt Company Ltd. in Finland and/or other countries worldwide. All other trademarks are property of their respective owners.</seg-source><target/></trans-unit></group></body></file></xliff>